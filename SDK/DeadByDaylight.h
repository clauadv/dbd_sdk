
/********************************************************
*                                                       *
*   Package generated using UEDumper by Spuckwaffel.    *
*                                                       *
********************************************************/

#pragma once
/// dependency: BasicType
/// dependency: Activation
/// dependency: AIModule
/// dependency: AkAudio
/// dependency: AnimationBudgetAllocator
/// dependency: AnimationUtilities
/// dependency: Competence
/// dependency: CoreUObject
/// dependency: Customization
/// dependency: DataTableUtilities
/// dependency: DBDAnimationBudgetAllocator
/// dependency: DBDAudio
/// dependency: DBDInput
/// dependency: DBDSharedTypes
/// dependency: DBDUIViewInterfaces
/// dependency: DBDUIViewsMobile
/// dependency: Engine
/// dependency: Foliage
/// dependency: GameplayTags
/// dependency: GameplayTagUtilities
/// dependency: GameplayUtilities
/// dependency: GameSessionDS
/// dependency: GFXUtilities
/// dependency: InputCore
/// dependency: LevelSequence
/// dependency: MediaAssets
/// dependency: NavigationSystem
/// dependency: NetworkUtilities
/// dependency: Niagara
/// dependency: OnlineMessagesUtilities
/// dependency: OnlinePresence
/// dependency: OnlineSubsystemUtils
/// dependency: OnlineTransactions
/// dependency: Paper2D
/// dependency: Penalty
/// dependency: PhysicsUtilities
/// dependency: PlatformsProviders
/// dependency: Projectile
/// dependency: QueryService
/// dependency: RemoteContentCache
/// dependency: ReversibleActionSystem
/// dependency: RewardUtilities
/// dependency: ScaleformUI
/// dependency: SignificanceUtilities
/// dependency: Slate
/// dependency: SlateCore
/// dependency: SocialParty
/// dependency: StatSystem
/// dependency: SystemUtilities
/// dependency: Toasts
/// dependency: UMG
/// dependency: VFXUtilities

/// Enum /Script/DeadByDaylight.ETileSpawnPointType
/// Size: 0x10
enum class ETileSpawnPointType : uint8_t
{
	ETileSpawnPointType__Unspecified                                                 = 0,
	ETileSpawnPointType__Survivor                                                    = 1,
	ETileSpawnPointType__SurvivorItem                                                = 2,
	ETileSpawnPointType__Killer                                                      = 3,
	ETileSpawnPointType__KillerItem                                                  = 4,
	ETileSpawnPointType__InteractableObject                                          = 5,
	ETileSpawnPointType__BasementObject                                              = 6,
	ETileSpawnPointType__FinisherMori                                                = 7,
	ETileSpawnPointType__Count                                                       = 8,
	ETileSpawnPointType__ETileSpawnPointType_MAX                                     = 9
};

/// Enum /Script/DeadByDaylight.EEndGameReason
/// Size: 0x08
enum class EEndGameReason : uint8_t
{
	EEndGameReason__None                                                             = 0,
	EEndGameReason__Normal                                                           = 1,
	EEndGameReason__KillerLeft                                                       = 2,
	EEndGameReason__PlayerLeftDuringLoading                                          = 3,
	EEndGameReason__KillerLeftEarly                                                  = 4,
	EEndGameReason__InvalidPlayerRoles                                               = 5,
	EEndGameReason__LoadingTimeout                                                   = 6,
	EEndGameReason__EEndGameReason_MAX                                               = 7
};

/// Enum /Script/DeadByDaylight.EServerUseNetAsyncLoading
/// Size: 0x04
enum class EServerUseNetAsyncLoading : uint8_t
{
	EServerUseNetAsyncLoading__NotSet                                                = 0,
	EServerUseNetAsyncLoading__Yes                                                   = 1,
	EServerUseNetAsyncLoading__No                                                    = 2,
	EServerUseNetAsyncLoading__EServerUseNetAsyncLoading_MAX                         = 3
};

/// Enum /Script/DeadByDaylight.EIntroState
/// Size: 0x06
enum class EIntroState : uint8_t
{
	EIntroState__WaitingToStart                                                      = 0,
	EIntroState__RotationStarted                                                     = 1,
	EIntroState__RotationCompleted                                                   = 2,
	EIntroState__PanInStarted                                                        = 3,
	EIntroState__PanInCompleted                                                      = 4,
	EIntroState__EIntroState_MAX                                                     = 5
};

/// Enum /Script/DeadByDaylight.EDBDScoreTypes
/// Size: 0x239
enum class EDBDScoreTypes : uint8_t
{
	EDBDScoreTypes__DBDCamperScore_SurviveHealthy                                    = 0,
	EDBDScoreTypes__DBDCamperScore_SurviveWounded                                    = 1,
	EDBDScoreTypes__DBDCamperScore_SurviveKO                                         = 2,
	EDBDScoreTypes__DBDCamperScore_UnlockHatch                                       = 3,
	EDBDScoreTypes__DBDCamperScore_EscapeThroughHatch                                = 4,
	EDBDScoreTypes__DBDCamperScore_AllEscapeThroughHatch                             = 5,
	EDBDScoreTypes__DBDCamperScore_EscapeCarry                                       = 6,
	EDBDScoreTypes__DBDCamperScore_SurviveStreakSmall                                = 7,
	EDBDScoreTypes__DBDCamperScore_SurviveStreakBig                                  = 8,
	EDBDScoreTypes__DBDCamperScore_DamageStateChanged                                = 9,
	EDBDScoreTypes__DBDCamperScore_NearFriendInNeed                                  = 10,
	EDBDScoreTypes__DBDCamperScore_NearFriendInNeed_PostExit                         = 11,
	EDBDScoreTypes__DBDCamperScore_FoundCamper                                       = 12,
	EDBDScoreTypes__DBDCamperScore_CoopObjectives                                    = 13,
	EDBDScoreTypes__DBDCamperScore_OpenDoorPercent                                   = 14,
	EDBDScoreTypes__DBDCamperScore_OpenDoor                                          = 15,
	EDBDScoreTypes__DBDCamperScore_GeneratorPercent                                  = 16,
	EDBDScoreTypes__DBDCamperScore_GeneratorSkillCheckSuccess                        = 17,
	EDBDScoreTypes__DBDCamperScore_GeneratorSkillCheckBonus                          = 18,
	EDBDScoreTypes__DBDCamperScore_SearchablePercent                                 = 19,
	EDBDScoreTypes__DBDCamperScore_SearchCompleteFinalContributionPercent            = 20,
	EDBDScoreTypes__DBDCamperScore_AddItemToMap                                      = 21,
	EDBDScoreTypes__DBDCamperScore_FixGenerator                                      = 22,
	EDBDScoreTypes__DBDCamperScore_FixSpecialMapGenerator                            = 23,
	EDBDScoreTypes__DBDCamperScore_LastSurvivorFixGenerator                          = 24,
	EDBDScoreTypes__DBDCamperScore_RepairDamagedGenerator                            = 25,
	EDBDScoreTypes__DBDCamperScore_PowerExitGates                                    = 26,
	EDBDScoreTypes__DBDCamperScore_CoopAltruism                                      = 27,
	EDBDScoreTypes__DBDCamperScore_HealPercent                                       = 28,
	EDBDScoreTypes__DBDCamperScore_HealPercent_PostExit                              = 29,
	EDBDScoreTypes__DBDCamperScore_HealFromDying                                     = 30,
	EDBDScoreTypes__DBDCamperScore_HealFromDying_PostExit                            = 31,
	EDBDScoreTypes__DBDCamperScore_HealFromInjured                                   = 32,
	EDBDScoreTypes__DBDCamperScore_HealFromInjured_PostExit                          = 33,
	EDBDScoreTypes__DBDCamperScore_HealSkillCheckSuccess                             = 34,
	EDBDScoreTypes__DBDCamperScore_HealSkillCheckBonus                               = 35,
	EDBDScoreTypes__DBDCamperScore_HealSelfPercent                                   = 36,
	EDBDScoreTypes__DBDCamperScore_HealSelfSkillCheckSuccess                         = 37,
	EDBDScoreTypes__DBDCamperScore_HealSelfSkillCheckBonus                           = 38,
	EDBDScoreTypes__DBDCamperScore_HitAfterHookSave                                  = 39,
	EDBDScoreTypes__DBDCamperScore_HitNearFriendInNeed                               = 40,
	EDBDScoreTypes__DBDCamperScore_HitNearUnhookedFriendInNeed                       = 41,
	EDBDScoreTypes__DBDCamperScore_SabotageHook                                      = 42,
	EDBDScoreTypes__DBDCamperScore_SabotageHookSkillCheckSuccess                     = 43,
	EDBDScoreTypes__DBDCamperScore_SabotageHookSkillCheckBonus                       = 44,
	EDBDScoreTypes__DBDCamperScore_EscapeFromHook                                    = 45,
	EDBDScoreTypes__DBDCamperScore_HookStrugglePerSecond                             = 46,
	EDBDScoreTypes__DBDCamperScore_SaveFromHook                                      = 47,
	EDBDScoreTypes__DBDCamperScore_SaveFromHook_PostExit                             = 48,
	EDBDScoreTypes__DBDCamperScore_WasUnhooked                                       = 49,
	EDBDScoreTypes__DBDCamperScore_SabotageBearTrap                                  = 50,
	EDBDScoreTypes__DBDCamperScore_SabotageBearTrapSkillCheckSuccess                 = 51,
	EDBDScoreTypes__DBDCamperScore_SabotageBearTrapSkillCheckBonus                   = 52,
	EDBDScoreTypes__DBDCamperScore_DisableBearTrap                                   = 53,
	EDBDScoreTypes__DBDCamperScore_SaveFromBearTrap                                  = 54,
	EDBDScoreTypes__DBDCamperScore_SaveFromBearTrap_PostExit                         = 55,
	EDBDScoreTypes__DBDCamperScore_EscapeBearTrap                                    = 56,
	EDBDScoreTypes__DBDCamperScore_BasementChillingPerSecond                         = 57,
	EDBDScoreTypes__DBDCamperScore_CoopBoldness                                      = 58,
	EDBDScoreTypes__DBDCamperScore_SlasherStun                                       = 59,
	EDBDScoreTypes__DBDCamperScore_SlasherStunCarrying                               = 60,
	EDBDScoreTypes__DBDCamperScore_SlasherBlind                                      = 61,
	EDBDScoreTypes__DBDCamperScore_SlasherBurnInvisibility                           = 62,
	EDBDScoreTypes__DBDCamperScore_ChasePerSecond                                    = 63,
	EDBDScoreTypes__DBDCamperScore_ChaseEscape                                       = 64,
	EDBDScoreTypes__DBDCamperScore_ChaseSteal                                        = 65,
	EDBDScoreTypes__DBDCamperScore_ChaseBlind                                        = 66,
	EDBDScoreTypes__DBDCamperScore_VaultInChase                                      = 67,
	EDBDScoreTypes__DBDCamperScore_NoiseDistraction                                  = 68,
	EDBDScoreTypes__DBDCamperScore_SprintingNearSlasherPerSecond                     = 69,
	EDBDScoreTypes__DBDCamperScore_UnhideNearSlasher                                 = 70,
	EDBDScoreTypes__DBDCamperScore_EscapeWhileChased                                 = 71,
	EDBDScoreTypes__DBDCamperScore_DestroyPhantomTrap                                = 72,
	EDBDScoreTypes__DBDCamperScore_NewItem                                           = 73,
	EDBDScoreTypes__DBDCamperScore_StartMatchWithUltraRareItem                       = 74,
	EDBDScoreTypes__DBDCamperScore_ItemFrom                                          = 75,
	EDBDScoreTypes__DBDCamperScore_ExposerAdded                                      = 76,
	EDBDScoreTypes__DBDSlasherScore_Destroy                                          = 77,
	EDBDScoreTypes__DBDSlasherScore_Kill                                             = 78,
	EDBDScoreTypes__DBDSlasherScore_BleedOut                                         = 79,
	EDBDScoreTypes__DBDSlasherScore_BleedOutPercent                                  = 80,
	EDBDScoreTypes__DBDSlasherScore_AttackSuccess                                    = 81,
	EDBDScoreTypes__DBDSlasherScore_AttackDeviousness                                = 82,
	EDBDScoreTypes__DBDSlasherScore_InterruptGenerator                               = 83,
	EDBDScoreTypes__DBDSlasherScore_InterruptWindow                                  = 84,
	EDBDScoreTypes__DBDSlasherScore_InterruptHide                                    = 85,
	EDBDScoreTypes__DBDSlasherScore_InterruptExit                                    = 86,
	EDBDScoreTypes__DBDSlasherScore_InterruptUnhook                                  = 87,
	EDBDScoreTypes__DBDSlasherScore_InterruptChest                                   = 88,
	EDBDScoreTypes__DBDSlasherScore_InterruptOpenHatch                               = 89,
	EDBDScoreTypes__DBDSlasherScore_InterruptExitHatch                               = 90,
	EDBDScoreTypes__DBDSlasherScore_FindHiding                                       = 91,
	EDBDScoreTypes__DBDSlasherScore_PlaceTrap                                        = 92,
	EDBDScoreTypes__DBDSlasherScore_Trap                                             = 93,
	EDBDScoreTypes__DBDSlasherScore_TrapPickup                                       = 94,
	EDBDScoreTypes__DBDSlasherScore_Hook                                             = 95,
	EDBDScoreTypes__DBDSlasherScore_SacrificePercent                                 = 96,
	EDBDScoreTypes__DBDSlasherScore_SacrificeSuccess                                 = 97,
	EDBDScoreTypes__DBDSlasherScore_SacrificedCount                                  = 98,
	EDBDScoreTypes__DBDSlasherScore_NoEscape                                         = 99,
	EDBDScoreTypes__DBDSlasherScore_ChaseStart                                       = 100,
	EDBDScoreTypes__DBDSlasherScore_ChasePerSecond                                   = 101,
	EDBDScoreTypes__DBDSlasherScore_CloakStalkPerSecond                              = 102,
	EDBDScoreTypes__DBDSlasherScore_UncloakInView                                    = 103,
	EDBDScoreTypes__DBDSlasherScore_UncloakAttack                                    = 104,
	EDBDScoreTypes__DBDSlasherScore_EvadeInvisBurn                                   = 105,
	EDBDScoreTypes__DBDSlasherScore_EvadeBlind                                       = 106,
	EDBDScoreTypes__DBDSlasherScore_CamperDisconnect                                 = 107,
	EDBDScoreTypes__DBDSlasherScore_HitCamperWithChainsaw                            = 108,
	EDBDScoreTypes__DBDSlasherScore_RunningWithChainsaw                              = 109,
	EDBDScoreTypes__DBDSlasherScore_ChainBlinkAttack                                 = 110,
	EDBDScoreTypes__DBDSlasherScore_ChainBlinkInterrupt                              = 111,
	EDBDScoreTypes__DBDSlasherScore_ChainBlinkInterruptAfter3                        = 112,
	EDBDScoreTypes__DBDSlasherScore_ChainBlinkStartChase                             = 113,
	EDBDScoreTypes__DBDSlasherScore_StalkpointGained                                 = 114,
	EDBDScoreTypes__DBDSlasherScore_StalkerTierIncrement                             = 115,
	EDBDScoreTypes__DBDSlasherScore_StalkerTierFirstTime                             = 116,
	EDBDScoreTypes__DBDSlasherScore_StalkerKillAllCampers                            = 117,
	EDBDScoreTypes__DBDSlasherScore_PhantomTrapSet                                   = 118,
	EDBDScoreTypes__DBDSlasherScore_PhantomTrapTrigger                               = 119,
	EDBDScoreTypes__DBDSlasherScore_PhantomTrapTriggerAttack                         = 120,
	EDBDScoreTypes__DBDSlasherScore_PhantomTrapTeleportAttack                        = 121,
	EDBDScoreTypes__DBDSlasherScore_PhantomTrapTeleportAttackAllCampers              = 122,
	EDBDScoreTypes__DBDSlasherScore_ThrillOfTheHunt                                  = 123,
	EDBDScoreTypes__DBDPlayerScore_BloodwebLevelUp                                   = 124,
	EDBDScoreTypes__DBDPlayerScore_BloodwebPrestigeLevelUp                           = 125,
	EDBDScoreTypes__DBDPlayerScore_BloodwebPrestige3LevelUp                          = 126,
	EDBDScoreTypes__DBDPlayerScore_AwardPips                                         = 127,
	EDBDScoreTypes__DBDPlayerScore_AddBloodpoints                                    = 128,
	EDBDScoreTypes__DBDPlayerScore_BloodpointsOneCategory                            = 129,
	EDBDScoreTypes__DBDPlayerScore_MaxBloodpointsAllCategories                       = 130,
	EDBDScoreTypes__DBDPlayerScore_AddNewPerk                                        = 131,
	EDBDScoreTypes__DBDPlayerScore_PerkLevelUp                                       = 132,
	EDBDScoreTypes__DBDPlayerScore_BurnOfferingUltraRare                             = 133,
	EDBDScoreTypes__DBDPlayerScore_StartGame                                         = 134,
	EDBDScoreTypes__DBDPlayerScore_UnlockRanking                                     = 135,
	EDBDScoreTypes__DBDPlayerScore_FinishWithPerks                                   = 136,
	EDBDScoreTypes__DBDCamperScore_CheatObjectives                                   = 137,
	EDBDScoreTypes__DBDCamperScore_CheatSurvival                                     = 138,
	EDBDScoreTypes__DBDCamperScore_CheatAltruism                                     = 139,
	EDBDScoreTypes__DBDCamperScore_CheatBoldness                                     = 140,
	EDBDScoreTypes__DBDSlasherScore_CheatSacrifice                                   = 141,
	EDBDScoreTypes__DBDSlasherScore_CheatBrutality                                   = 142,
	EDBDScoreTypes__DBDSlasherScore_CheatDeviousness                                 = 143,
	EDBDScoreTypes__DBDSlasherScore_CheatHunter                                      = 144,
	EDBDScoreTypes__DBDCamperScore_CleanseDullTotem                                  = 145,
	EDBDScoreTypes__DBDCamperScore_CleanseHexTotem                                   = 146,
	EDBDScoreTypes__DBDPlayerScore_BalancedLanding                                   = 147,
	EDBDScoreTypes__DBDPlayerScore_Lithe                                             = 148,
	EDBDScoreTypes__DBDSlasherScore_DamageGenerator                                  = 149,
	EDBDScoreTypes__DBDSlasherScore_Vault                                            = 150,
	EDBDScoreTypes__DBDCamperScore_StartInjuredBleedout                              = 151,
	EDBDScoreTypes__DBDCamperScore_FullRecovery                                      = 152,
	EDBDScoreTypes__DBDCamperScore_FirstTimeDying                                    = 153,
	EDBDScoreTypes__DBDCamperScore_SecondTimeDying                                   = 154,
	EDBDScoreTypes__DBDCamperScore_FirecrackerDisturbance                            = 155,
	EDBDScoreTypes__DBDCamperScore_GeneratorSkillCheckRuinBonus                      = 156,
	EDBDScoreTypes__DBDCamperScore_SlasherBurnBlink                                  = 157,
	EDBDScoreTypes__DBDCamperScore_DieSacrificed                                     = 158,
	EDBDScoreTypes__DBDCamperScore_DieBleedOut                                       = 159,
	EDBDScoreTypes__DBDCamperScore_DieKill                                           = 160,
	EDBDScoreTypes__DBDPlayerScore_EndGame                                           = 161,
	EDBDScoreTypes__DBDPlayerScore_EnterParadise                                     = 162,
	EDBDScoreTypes__DBDSlasherScore_CamperHookedFirstTime                            = 163,
	EDBDScoreTypes__DBDSlasherScore_CamperEnterHookStrugglePhase                     = 164,
	EDBDScoreTypes__DBDSlasherScore_ElectroShockSurvivor                             = 165,
	EDBDScoreTypes__DBDSlasherScore_BringAllSurvivorsToMadnessTier3                  = 166,
	EDBDScoreTypes__DBDSlasherScore_BringSurvivorUpOneMadnessTier                    = 167,
	EDBDScoreTypes__DBDSlasherScore_HitSurvivorAfterElectroShock                     = 168,
	EDBDScoreTypes__DBDSlasherScore_PickupCamper                                     = 169,
	EDBDScoreTypes__DBDSlasherScore_Blink                                            = 170,
	EDBDScoreTypes__DBDSlasherScore_TeleportToPhantomTrap                            = 171,
	EDBDScoreTypes__DBDSlasherScore_HatchetThrow                                     = 172,
	EDBDScoreTypes__DBDSlasherScore_HatchetHit                                       = 173,
	EDBDScoreTypes__DBDSlasherScore_HatchetSkillShotHit                              = 174,
	EDBDScoreTypes__DBDSlasherScore_HatchetFarHit                                    = 175,
	EDBDScoreTypes__DBDCamperScore_QuickVault                                        = 176,
	EDBDScoreTypes__DBDCamperScore_QuickCloset                                       = 177,
	EDBDScoreTypes__DBDCamperScore_StartGeneratorRepair                              = 178,
	EDBDScoreTypes__DBDCamperScore_StartCleansingTotem                               = 179,
	EDBDScoreTypes__DBDCamperScore_FirstRepairSkillCheck                             = 180,
	EDBDScoreTypes__DBDSlasherScore_CamperDisconnectedBeforeMatchStart               = 181,
	EDBDScoreTypes__DBDSlasherScore_CamperDisconnectedDuringMatch                    = 182,
	EDBDScoreTypes__DBDCamperScore_NearFriendInNeed_GeneratorsComplete               = 183,
	EDBDScoreTypes__DBDCamperScore_HealPercent_GeneratorsComplete                    = 184,
	EDBDScoreTypes__DBDCamperScore_HealFromDying_GeneratorsComplete                  = 185,
	EDBDScoreTypes__DBDCamperScore_SaveFromHook_GeneratorsComplete                   = 186,
	EDBDScoreTypes__DBDCamperScore_SaveFromBearTrap_GeneratorsComplete               = 187,
	EDBDScoreTypes__DBDCamperScore_SnapOutOfIt                                       = 188,
	EDBDScoreTypes__DBDSlasherScore_HookInBasement                                   = 189,
	EDBDScoreTypes__DBDSlasherScore_LFChainsawHit                                    = 190,
	EDBDScoreTypes__DBDCamperScore_PalletDrop                                        = 191,
	EDBDScoreTypes__DBDCamperScore_Vault                                             = 192,
	EDBDScoreTypes__DBDSlasherScore_StartChaseWithChainsawAttack                     = 193,
	EDBDScoreTypes__DBDSlasherScore_MissedAttackInChase                              = 194,
	EDBDScoreTypes__DBDCamperScore_DodgeAndVault                                     = 195,
	EDBDScoreTypes__DBDCamperScore_BeginQuickVault                                   = 196,
	EDBDScoreTypes__DBDSlasherScore_StartChainsawAttack                              = 197,
	EDBDScoreTypes__DBDCamperScore_WakeUpBySkillCheck                                = 198,
	EDBDScoreTypes__DBDCamperScore_FallAsleep                                        = 199,
	EDBDScoreTypes__DBDCamperScore_WakeUpSelf                                        = 200,
	EDBDScoreTypes__DBDCamperScore_WakeUpOther                                       = 201,
	EDBDScoreTypes__DBDSlasherScore_RecentlyAsleepAttack                             = 202,
	EDBDScoreTypes__DBDSlasherScore_SurvivorPartyOnBasementHooks                     = 203,
	EDBDScoreTypes__DBDCamperScore_LootBasementChest                                 = 204,
	EDBDScoreTypes__DBDPlayerScore_OpenMysteryBox                                    = 205,
	EDBDScoreTypes__DBDGameEvent_SurvivorDowned                                      = 206,
	EDBDScoreTypes__DBDGameEvent_SurvivorDied                                        = 207,
	EDBDScoreTypes__DBDGameEvent_KillerCloak                                         = 208,
	EDBDScoreTypes__DBDSlasherScore_SetReverseBearTrap                               = 209,
	EDBDScoreTypes__DBDSlasherScore_AbductionDash                                    = 210,
	EDBDScoreTypes__DBDSlasherScore_DashHitSuccess                                   = 211,
	EDBDScoreTypes__DBDSlasherScore_KillWithReverseBearTrap                          = 212,
	EDBDScoreTypes__DBDCamperScore_SearchRBTKey                                      = 213,
	EDBDScoreTypes__DBDCamperScore_EscapeRBT                                         = 214,
	EDBDScoreTypes__DBDGameEvent_ReplacedGoodSkillCheckAsGreat                       = 215,
	EDBDScoreTypes__DBDCamperScore_RemoveReverseBearTrapSkillCheckSuccess            = 216,
	EDBDScoreTypes__DBDCamperScore_RemoveReverseBearTrapSkillCheckBonus              = 217,
	EDBDScoreTypes__DBDSlasherScore_DamageGeneratorWhileHooked                       = 218,
	EDBDScoreTypes__DBDGameEvent_SurvivorDamaged                                     = 219,
	EDBDScoreTypes__DBDGameEvent_SurvivorHealed                                      = 220,
	EDBDScoreTypes__DBDGameEvent_Interruption                                        = 221,
	EDBDScoreTypes__DBDGameEvent_SurvivorFailedHealSkillcheck                        = 222,
	EDBDScoreTypes__DBDGameEvent_HookedSurvivorSacrificeBegin                        = 223,
	EDBDScoreTypes__DBDGameEvent_AcquireEventKillerCoin                              = 224,
	EDBDScoreTypes__DBDGameEvent_AcquireEventSurvivorCoin                            = 225,
	EDBDScoreTypes__DBDCamperScore_EventGeneratorFixed                               = 226,
	EDBDScoreTypes__DBDSlasherScore_HookedOnEventHook                                = 227,
	EDBDScoreTypes__DBDGameEvent_GeneratorProgress                                   = 228,
	EDBDScoreTypes__DBDSlasherScore_DownSmokedCamper                                 = 229,
	EDBDScoreTypes__DBDSlasherScore_HitSmokedCamper                                  = 230,
	EDBDScoreTypes__DBDSlasherScore_SurvivorEnterGasCloud                            = 231,
	EDBDScoreTypes__DBDSlasherScore_BombDirectHit                                    = 232,
	EDBDScoreTypes__DBDSlasherScore_ThrowBomb                                        = 233,
	EDBDScoreTypes__DBDGameEvent_CoopAction                                          = 234,
	EDBDScoreTypes__DBDSlasherScore_StartActivePhaseWalk                             = 235,
	EDBDScoreTypes__DBDScore_Count                                                   = 236,
	EDBDScoreTypes__Count                                                            = 237,
	EDBDScoreTypes__EDBDScoreTypes_MAX                                               = 238
};

/// Enum /Script/DeadByDaylight.EOfferingCategory
/// Size: 0x10
enum class EOfferingCategory : uint8_t
{
	EOfferingCategory__None                                                          = 0,
	EOfferingCategory__Bloodpoints                                                   = 1,
	EOfferingCategory__Mapmods                                                       = 2,
	EOfferingCategory__Realms                                                        = 3,
	EOfferingCategory__Shrouds                                                       = 4,
	EOfferingCategory__Wards                                                         = 5,
	EOfferingCategory__CharacterXP                                                   = 6,
	EOfferingCategory__Luck                                                          = 7,
	EOfferingCategory__Moris                                                         = 8,
	EOfferingCategory__EOfferingCategory_MAX                                         = 9
};

/// Enum /Script/DeadByDaylight.EPerkCategory
/// Size: 0x17
enum class EPerkCategory : uint8_t
{
	EPerkCategory__None                                                              = 0,
	EPerkCategory__Navigation                                                        = 1,
	EPerkCategory__Perception                                                        = 2,
	EPerkCategory__Safeguard                                                         = 3,
	EPerkCategory__Concealment                                                       = 4,
	EPerkCategory__Strategy                                                          = 5,
	EPerkCategory__Support                                                           = 6,
	EPerkCategory__Adaptation                                                        = 7,
	EPerkCategory__Chasing                                                           = 8,
	EPerkCategory__Tracking                                                          = 9,
	EPerkCategory__Cruelty                                                           = 10,
	EPerkCategory__Trickery                                                          = 11,
	EPerkCategory__Obstruction                                                       = 12,
	EPerkCategory__Hinderance                                                        = 13,
	EPerkCategory__Enhancement                                                       = 14,
	EPerkCategory__Any                                                               = 15,
	EPerkCategory__EPerkCategory_MAX                                                 = 16
};

/// Enum /Script/DeadByDaylight.ETeachableStatus
/// Size: 0x05
enum class ETeachableStatus : uint8_t
{
	ETeachableStatus__Unknown                                                        = 0,
	ETeachableStatus__Locked                                                         = 1,
	ETeachableStatus__AvailableInShrine                                              = 2,
	ETeachableStatus__Checked                                                        = 3,
	ETeachableStatus__ETeachableStatus_MAX                                           = 4
};

/// Enum /Script/DeadByDaylight.EEmblemQuality
/// Size: 0x07
enum class EEmblemQuality : uint8_t
{
	EEmblemQuality__None                                                             = 0,
	EEmblemQuality__Bronze                                                           = 1,
	EEmblemQuality__Silver                                                           = 2,
	EEmblemQuality__Gold                                                             = 3,
	EEmblemQuality__Iridescent                                                       = 4,
	EEmblemQuality__Count                                                            = 5,
	EEmblemQuality__EEmblemQuality_MAX                                               = 6
};

/// Enum /Script/DeadByDaylight.ECamperDamageState
/// Size: 0x05
enum class ECamperDamageState : uint8_t
{
	ECamperDamageState__VE_Healthy                                                   = 0,
	ECamperDamageState__VE_Injured                                                   = 1,
	ECamperDamageState__VE_KO                                                        = 2,
	ECamperDamageState__VE_Dead                                                      = 3,
	ECamperDamageState__VE_MAX                                                       = 4
};

/// Enum /Script/DeadByDaylight.EHealthType
/// Size: 0x06
enum class EHealthType : uint8_t
{
	EHealthType__Alive                                                               = 0,
	EHealthType__Sacrificed                                                          = 1,
	EHealthType__Killed                                                              = 2,
	EHealthType__BledOut                                                             = 3,
	EHealthType__Left_Game                                                           = 4,
	EHealthType__EHealthType_MAX                                                     = 5
};

/// Enum /Script/DeadByDaylight.EImmobilizedState
/// Size: 0x08
enum class EImmobilizedState : uint8_t
{
	EImmobilizedState__VE_None                                                       = 0,
	EImmobilizedState__VE_Hooked                                                     = 1,
	EImmobilizedState__VE_Trapped                                                    = 2,
	EImmobilizedState__VE_Hiding                                                     = 3,
	EImmobilizedState__VE_Dead                                                       = 4,
	EImmobilizedState__VE_InDeathBed                                                 = 5,
	EImmobilizedState__VE_TwinImmobilized                                            = 6,
	EImmobilizedState__VE_MAX                                                        = 7
};

/// Enum /Script/DeadByDaylight.EAttackZoneSet
/// Size: 0x03
enum class EAttackZoneSet : uint8_t
{
	EAttackZoneSet__VE_OriginalZones                                                 = 0,
	EAttackZoneSet__VE_WedgeZones                                                    = 1,
	EAttackZoneSet__VE_MAX                                                           = 2
};

/// Enum /Script/DeadByDaylight.EKillerCarryAnimWeight
/// Size: 0x04
enum class EKillerCarryAnimWeight : uint8_t
{
	EKillerCarryAnimWeight__Regular                                                  = 0,
	EKillerCarryAnimWeight__Light                                                    = 1,
	EKillerCarryAnimWeight__Heavy                                                    = 2,
	EKillerCarryAnimWeight__EKillerCarryAnimWeight_MAX                               = 3
};

/// Enum /Script/DeadByDaylight.EOfferingAnimState
/// Size: 0x10
enum class EOfferingAnimState : uint8_t
{
	EOfferingAnimState__None                                                         = 0,
	EOfferingAnimState__Idle                                                         = 1,
	EOfferingAnimState__Init                                                         = 2,
	EOfferingAnimState__Reveal                                                       = 3,
	EOfferingAnimState__ShowInteraction                                              = 4,
	EOfferingAnimState__Burned                                                       = 5,
	EOfferingAnimState__Returned                                                     = 6,
	EOfferingAnimState__Cancel                                                       = 7,
	EOfferingAnimState__Hidden                                                       = 8,
	EOfferingAnimState__EOfferingAnimState_MAX                                       = 9
};

/// Enum /Script/DeadByDaylight.EInteractionComparisonPriority
/// Size: 0x04
enum class EInteractionComparisonPriority : uint8_t
{
	EInteractionComparisonPriority__Lower                                            = 0,
	EInteractionComparisonPriority__Equal                                            = 1,
	EInteractionComparisonPriority__Higher                                           = 2,
	EInteractionComparisonPriority__EInteractionComparisonPriority_MAX               = 3
};

/// Enum /Script/DeadByDaylight.EInteractionOwnership
/// Size: 0x04
enum class EInteractionOwnership : uint8_t
{
	EInteractionOwnership__AnyCanUse                                                 = 0,
	EInteractionOwnership__OnlyOwnerCanUse                                           = 1,
	EInteractionOwnership__OwnerCannotUse                                            = 2,
	EInteractionOwnership__EInteractionOwnership_MAX                                 = 3
};

/// Enum /Script/DeadByDaylight.ESnapBackPositionType
/// Size: 0x03
enum class ESnapBackPositionType : uint8_t
{
	ESnapBackPositionType__SnapBackToInitialPosition                                 = 0,
	ESnapBackPositionType__SnapBackToOffsetPositionFromSnap                          = 1,
	ESnapBackPositionType__ESnapBackPositionType_MAX                                 = 2
};

/// Enum /Script/DeadByDaylight.ESnapBackType
/// Size: 0x06
enum class ESnapBackType : uint8_t
{
	ESnapBackType__None                                                              = 0,
	ESnapBackType__Always                                                            = 1,
	ESnapBackType__OnInteractionCancelledOnly                                        = 2,
	ESnapBackType__OnInteractionEndOnly                                              = 3,
	ESnapBackType__OnSurvivorDownedOnly                                              = 4,
	ESnapBackType__ESnapBackType_MAX                                                 = 5
};

/// Enum /Script/DeadByDaylight.ETrapType
/// Size: 0x06
enum class ETrapType : uint8_t
{
	ETrapType__None                                                                  = 0,
	ETrapType__BlastMine                                                             = 1,
	ETrapType__Wiretap                                                               = 2,
	ETrapType__RepressedAlliance                                                     = 3,
	ETrapType__NitrogenGrenade                                                       = 4,
	ETrapType__ETrapType_MAX                                                         = 5
};

/// Enum /Script/DeadByDaylight.ETotemState
/// Size: 0x05
enum class ETotemState : uint8_t
{
	ETotemState__Cleansed                                                            = 0,
	ETotemState__Dull                                                                = 1,
	ETotemState__Hex                                                                 = 2,
	ETotemState__Boon                                                                = 3,
	ETotemState__ETotemState_MAX                                                     = 4
};

/// Enum /Script/DeadByDaylight.ETutorialStep
/// Size: 0x07
enum class ETutorialStep : uint8_t
{
	ETutorialStep__Survivor_NotStarted                                               = 0,
	ETutorialStep__Survivor_CompleteGenerator                                        = 1,
	ETutorialStep__Survivor_EvadeKiller                                              = 2,
	ETutorialStep__Survivor_OnHook                                                   = 3,
	ETutorialStep__Done                                                              = 4,
	ETutorialStep__Invalid                                                           = 5,
	ETutorialStep__ETutorialStep_MAX                                                 = 6
};

/// Enum /Script/DeadByDaylight.EInventoryType
/// Size: 0x03
enum class EInventoryType : uint8_t
{
	EInventoryType__Main                                                             = 0,
	EInventoryType__Backpack                                                         = 1,
	EInventoryType__EInventoryType_MAX                                               = 2
};

/// Enum /Script/DeadByDaylight.EItemDropType
/// Size: 0x04
enum class EItemDropType : uint8_t
{
	EItemDropType__DropManually                                                      = 0,
	EItemDropType__DropForcefully                                                    = 1,
	EItemDropType__UseItem                                                           = 2,
	EItemDropType__EItemDropType_MAX                                                 = 3
};

/// Enum /Script/DeadByDaylight.EAttachToSocketNameEnum
/// Size: 0x07
enum class EAttachToSocketNameEnum : uint8_t
{
	EAttachToSocketNameEnum__ManualAttachment                                        = 0,
	EAttachToSocketNameEnum__HandItemSocket                                          = 1,
	EAttachToSocketNameEnum__Weapon_SocketLT                                         = 2,
	EAttachToSocketNameEnum__Weapon_SocketRT                                         = 3,
	EAttachToSocketNameEnum__LanternCollectableSocket                                = 4,
	EAttachToSocketNameEnum__Tentacle_SocketLT                                       = 5,
	EAttachToSocketNameEnum__EAttachToSocketNameEnum_MAX                             = 6
};

/// Enum /Script/DeadByDaylight.ECollectableState
/// Size: 0x06
enum class ECollectableState : uint8_t
{
	ECollectableState__OnGround                                                      = 0,
	ECollectableState__Stored                                                        = 1,
	ECollectableState__Equipped                                                      = 2,
	ECollectableState__ToBeDropped                                                   = 3,
	ECollectableState__InSearchable                                                  = 4,
	ECollectableState__ECollectableState_MAX                                         = 5
};

/// Enum /Script/DeadByDaylight.ECollectableCategory
/// Size: 0x03
enum class ECollectableCategory : uint8_t
{
	ECollectableCategory__Common                                                     = 0,
	ECollectableCategory__Rare                                                       = 1,
	ECollectableCategory__ECollectableCategory_MAX                                   = 2
};

/// Enum /Script/DeadByDaylight.EItemHandPosition
/// Size: 0x11
enum class EItemHandPosition : uint8_t
{
	EItemHandPosition__None                                                          = 0,
	EItemHandPosition__HandleItem                                                    = 1,
	EItemHandPosition__AimItem                                                       = 2,
	EItemHandPosition__SmallItem                                                     = 3,
	EItemHandPosition__FirecrackerItem                                               = 4,
	EItemHandPosition__VaccineItem                                                   = 5,
	EItemHandPosition__FragileObjectItem                                             = 6,
	EItemHandPosition__SprayBottleItem                                               = 7,
	EItemHandPosition__VhsItem                                                       = 8,
	EItemHandPosition__WormholeFatherKeyCardItem                                     = 9,
	EItemHandPosition__EItemHandPosition_MAX                                         = 10
};

/// Enum /Script/DeadByDaylight.EAtlantaItemProgressionBarEnum
/// Size: 0x03
enum class EAtlantaItemProgressionBarEnum : uint8_t
{
	EAtlantaItemProgressionBarEnum__PrimaryBar                                       = 0,
	EAtlantaItemProgressionBarEnum__SecondaryBar                                     = 1,
	EAtlantaItemProgressionBarEnum__EAtlantaItemProgressionBarEnum_MAX               = 2
};

/// Enum /Script/DeadByDaylight.ELanternState
/// Size: 0x05
enum class ELanternState : uint8_t
{
	ELanternState__Collectable                                                       = 0,
	ELanternState__Collected                                                         = 1,
	ELanternState__Destroyed                                                         = 2,
	ELanternState__Destroyable                                                       = 3,
	ELanternState__ELanternState_MAX                                                 = 4
};

/// Enum /Script/DeadByDaylight.EHitValidatorConfigName
/// Size: 0x09
enum class EHitValidatorConfigName : uint8_t
{
	EHitValidatorConfigName__Default                                                 = 0,
	EHitValidatorConfigName__Hatchet                                                 = 1,
	EHitValidatorConfigName__Bomb                                                    = 2,
	EHitValidatorConfigName__Harpoon                                                 = 3,
	EHitValidatorConfigName__Oni                                                     = 4,
	EHitValidatorConfigName__Whip                                                    = 5,
	EHitValidatorConfigName__Tail                                                    = 6,
	EHitValidatorConfigName__DefaultProjectile                                       = 7,
	EHitValidatorConfigName__EHitValidatorConfigName_MAX                             = 8
};

/// Enum /Script/DeadByDaylight.EMovementCurveType
/// Size: 0x02
enum class EMovementCurveType : uint8_t
{
	EMovementCurveType__MultiplicativeSpeedCurve                                     = 0,
	EMovementCurveType__EMovementCurveType_MAX                                       = 1
};

/// Enum /Script/DeadByDaylight.EGameplayElementType
/// Size: 0x21
enum class EGameplayElementType : uint8_t
{
	EGameplayElementType__Generic                                                    = 0,
	EGameplayElementType__MeatLocker_Small                                           = 1,
	EGameplayElementType__TileLights                                                 = 2,
	EGameplayElementType__MeatLocker_Big                                             = 3,
	EGameplayElementType__Searchable                                                 = 4,
	EGameplayElementType__EdgeObjects                                                = 5,
	EGameplayElementType__LivingWorldObjects                                         = 6,
	EGameplayElementType__Hatch                                                      = 7,
	EGameplayElementType__Bookshelves                                                = 8,
	EGameplayElementType__Totems                                                     = 9,
	EGameplayElementType__QuadrantSpawn                                              = 10,
	EGameplayElementType__EdgeObjectsBlocker                                         = 11,
	EGameplayElementType__BreakableWalls                                             = 12,
	EGameplayElementType__Escape                                                     = 13,
	EGameplayElementType__ThemeSpawner                                               = 14,
	EGameplayElementType__Basement_Attachments                                       = 15,
	EGameplayElementType__SteamPipe                                                  = 16,
	EGameplayElementType__SteamPipeButton                                            = 17,
	EGameplayElementType__EventSpawner                                               = 18,
	EGameplayElementType__Count                                                      = 19,
	EGameplayElementType__EGameplayElementType_MAX                                   = 20
};

/// Enum /Script/DeadByDaylight.EActionButtonState
/// Size: 0x05
enum class EActionButtonState : uint8_t
{
	EActionButtonState__Normal                                                       = 0,
	EActionButtonState__Toggled                                                      = 1,
	EActionButtonState__Disabled                                                     = 2,
	EActionButtonState__Hidden                                                       = 3,
	EActionButtonState__EActionButtonState_MAX                                       = 4
};

/// Enum /Script/DeadByDaylight.EKnowledgeSharingType
/// Size: 0x05
enum class EKnowledgeSharingType : uint8_t
{
	EKnowledgeSharingType__Possessor                                                 = 0,
	EKnowledgeSharingType__Survivors                                                 = 1,
	EKnowledgeSharingType__Killers                                                   = 2,
	EKnowledgeSharingType__All                                                       = 3,
	EKnowledgeSharingType__EKnowledgeSharingType_MAX                                 = 4
};

/// Enum /Script/DeadByDaylight.EAIHideInLockerState
/// Size: 0x04
enum class EAIHideInLockerState : uint8_t
{
	EAIHideInLockerState__WalkToLocker                                               = 0,
	EAIHideInLockerState__GetIntoLocker                                              = 1,
	EAIHideInLockerState__HidingInLocker                                             = 2,
	EAIHideInLockerState__EAIHideInLockerState_MAX                                   = 3
};

/// Enum /Script/DeadByDaylight.EAIRepairGeneratorState
/// Size: 0x06
enum class EAIRepairGeneratorState : uint8_t
{
	EAIRepairGeneratorState__FindAvailableGeneratorPosition                          = 0,
	EAIRepairGeneratorState__WalkToGenerator                                         = 1,
	EAIRepairGeneratorState__RotateTowardsGenerator                                  = 2,
	EAIRepairGeneratorState__BeginGeneratorRepairs                                   = 3,
	EAIRepairGeneratorState__RepairingGenerator                                      = 4,
	EAIRepairGeneratorState__EAIRepairGeneratorState_MAX                             = 5
};

/// Enum /Script/DeadByDaylight.EOwnershipBehaviour
/// Size: 0x03
enum class EOwnershipBehaviour : uint8_t
{
	EOwnershipBehaviour__Personal                                                    = 0,
	EOwnershipBehaviour__Shared                                                      = 1,
	EOwnershipBehaviour__EOwnershipBehaviour_MAX                                     = 2
};

/// Enum /Script/DeadByDaylight.EStackingBehaviours
/// Size: 0x03
enum class EStackingBehaviours : uint8_t
{
	EStackingBehaviours__Stackable                                                   = 0,
	EStackingBehaviours__Override                                                    = 1,
	EStackingBehaviours__EStackingBehaviours_MAX                                     = 2
};

/// Enum /Script/DeadByDaylight.EAdditiveBehaviour
/// Size: 0x03
enum class EAdditiveBehaviour : uint8_t
{
	EAdditiveBehaviour__AddValues                                                    = 0,
	EAdditiveBehaviour__MaxValue                                                     = 1,
	EAdditiveBehaviour__EAdditiveBehaviour_MAX                                       = 2
};

/// Enum /Script/DeadByDaylight.EContextualType
/// Size: 0x14
enum class EContextualType : uint8_t
{
	EContextualType__None                                                            = 0,
	EContextualType__RedGlyph                                                        = 1,
	EContextualType__BlueGlyph                                                       = 2,
	EContextualType__YellowGlyph                                                     = 3,
	EContextualType__PurpleGlyph                                                     = 4,
	EContextualType__IceBlueGlyph                                                    = 5,
	EContextualType__GreenGlyph                                                      = 6,
	EContextualType__OrangeGlyph                                                     = 7,
	EContextualType__PinkGlyph                                                       = 8,
	EContextualType__GlyphUpperBound                                                 = 9,
	EContextualType__ToxinPlantHalloween2020                                         = 10,
	EContextualType__PumpkinHalloween2021                                            = 11,
	EContextualType__CoreMemoryPortal                                                = 12,
	EContextualType__EContextualType_MAX                                             = 13
};

/// Enum /Script/DeadByDaylight.EArchiveStoryType
/// Size: 0x05
enum class EArchiveStoryType : uint8_t
{
	EArchiveStoryType__NotSet                                                        = 0,
	EArchiveStoryType__CurrentStory                                                  = 1,
	EArchiveStoryType__PastStory                                                     = 2,
	EArchiveStoryType__EventStory                                                    = 3,
	EArchiveStoryType__EArchiveStoryType_MAX                                         = 4
};

/// Enum /Script/DeadByDaylight.EArm
/// Size: 0x03
enum class EArm : uint8_t
{
	EArm__Left                                                                       = 0,
	EArm__Right                                                                      = 1,
	EArm__EArm_MAX                                                                   = 2
};

/// Enum /Script/DeadByDaylight.EAtlantaControlTypeSetting
/// Size: 0x03
enum class EAtlantaControlTypeSetting : uint8_t
{
	EAtlantaControlTypeSetting__CameraFullScreen                                     = 0,
	EAtlantaControlTypeSetting__SnapOnJoystick                                       = 1,
	EAtlantaControlTypeSetting__EAtlantaControlTypeSetting_MAX                       = 2
};

/// Enum /Script/DeadByDaylight.EDeepLinkUid
/// Size: 0x19
enum class EDeepLinkUid : uint8_t
{
	EDeepLinkUid__NONE                                                               = 0,
	EDeepLinkUid__StorefrontSpecialOffers                                            = 1,
	EDeepLinkUid__StorefrontFeatured                                                 = 2,
	EDeepLinkUid__StorefrontPremium                                                  = 3,
	EDeepLinkUid__StorefrontSubscription                                             = 4,
	EDeepLinkUid__Calendar                                                           = 5,
	EDeepLinkUid__RitualsStarter                                                     = 6,
	EDeepLinkUid__RitualsDaily                                                       = 7,
	EDeepLinkUid__RitualsWeekly                                                      = 8,
	EDeepLinkUid__MenuCharactersSurvivors                                            = 9,
	EDeepLinkUid__MenuCharactersKillers                                              = 10,
	EDeepLinkUid__MenuCustomizations                                                 = 11,
	EDeepLinkUid__MenuEvents                                                         = 12,
	EDeepLinkUid__MenuFriends                                                        = 13,
	EDeepLinkUid__Loadout                                                            = 14,
	EDeepLinkUid__BloodmarketSurvivors                                               = 15,
	EDeepLinkUid__BloodmarketKillers                                                 = 16,
	EDeepLinkUid__External                                                           = 17,
	EDeepLinkUid__EDeepLinkUid_MAX                                                   = 18
};

/// Enum /Script/DeadByDaylight.EAtlantaDisplayStandPosition
/// Size: 0x03
enum class EAtlantaDisplayStandPosition : uint8_t
{
	EAtlantaDisplayStandPosition__Forefront                                          = 0,
	EAtlantaDisplayStandPosition__Background                                         = 1,
	EAtlantaDisplayStandPosition__EAtlantaDisplayStandPosition_MAX                   = 2
};

/// Enum /Script/DeadByDaylight.EEventsType
/// Size: 0x07
enum class EEventsType : uint8_t
{
	EEventsType__Generic                                                             = 0,
	EEventsType__Calendar                                                            = 1,
	EEventsType__BonusACEvent                                                        = 2,
	EEventsType__FirstPremiumPurchase                                                = 3,
	EEventsType__MonthlyPass                                                         = 4,
	EEventsType__Count                                                               = 5,
	EEventsType__EEventsType_MAX                                                     = 6
};

/// Enum /Script/DeadByDaylight.EFreeTicketButtonState
/// Size: 0x05
enum class EFreeTicketButtonState : uint8_t
{
	EFreeTicketButtonState__Disabled                                                 = 0,
	EFreeTicketButtonState__Enabled                                                  = 1,
	EFreeTicketButtonState__InEffect                                                 = 2,
	EFreeTicketButtonState__None                                                     = 3,
	EFreeTicketButtonState__EFreeTicketButtonState_MAX                               = 4
};

/// Enum /Script/DeadByDaylight.EQuitGameReason
/// Size: 0x06
enum class EQuitGameReason : uint8_t
{
	EQuitGameReason__None                                                            = 0,
	EQuitGameReason__Logout                                                          = 1,
	EQuitGameReason__Suspend                                                         = 2,
	EQuitGameReason__Shutdown                                                        = 3,
	EQuitGameReason__Count                                                           = 4,
	EQuitGameReason__EQuitGameReason_MAX                                             = 5
};

/// Enum /Script/DeadByDaylight.EFrameRateLimitButtonSetting
/// Size: 0x03
enum class EFrameRateLimitButtonSetting : uint8_t
{
	EFrameRateLimitButtonSetting__ThirtyFPS                                          = 0,
	EFrameRateLimitButtonSetting__SixtyFPS                                           = 1,
	EFrameRateLimitButtonSetting__EFrameRateLimitButtonSetting_MAX                   = 2
};

/// Enum /Script/DeadByDaylight.EKillerSoundComparisonType
/// Size: 0x04
enum class EKillerSoundComparisonType : uint8_t
{
	EKillerSoundComparisonType__Equal                                                = 0,
	EKillerSoundComparisonType__IsGreaterThan                                        = 1,
	EKillerSoundComparisonType__IsLesserThan                                         = 2,
	EKillerSoundComparisonType__EKillerSoundComparisonType_MAX                       = 3
};

/// Enum /Script/DeadByDaylight.EMobileLoginAuthContext
/// Size: 0x04
enum class EMobileLoginAuthContext : uint8_t
{
	EMobileLoginAuthContext__Splash                                                  = 0,
	EMobileLoginAuthContext__OverlayMenu                                             = 1,
	EMobileLoginAuthContext__ResumeFromSuspend                                       = 2,
	EMobileLoginAuthContext__EMobileLoginAuthContext_MAX                             = 3
};

/// Enum /Script/DeadByDaylight.EAtlantaRewardType
/// Size: 0x13
enum class EAtlantaRewardType : uint8_t
{
	EAtlantaRewardType__Item                                                         = 0,
	EAtlantaRewardType__AddOn                                                        = 1,
	EAtlantaRewardType__Offering                                                     = 2,
	EAtlantaRewardType__BloodPoints                                                  = 3,
	EAtlantaRewardType__IridescentShards                                             = 4,
	EAtlantaRewardType__AuricCells                                                   = 5,
	EAtlantaRewardType__Customization                                                = 6,
	EAtlantaRewardType__FreeTicket                                                   = 7,
	EAtlantaRewardType__MysteryBox                                                   = 8,
	EAtlantaRewardType__Character                                                    = 9,
	EAtlantaRewardType__DuplicatesRefundKey                                          = 10,
	EAtlantaRewardType__Count                                                        = 11,
	EAtlantaRewardType__EAtlantaRewardType_MAX                                       = 12
};

/// Enum /Script/DeadByDaylight.EAtlantaRitualRewardUIType
/// Size: 0x10
enum class EAtlantaRitualRewardUIType : uint8_t
{
	EAtlantaRitualRewardUIType__Item                                                 = 0,
	EAtlantaRitualRewardUIType__AddOn                                                = 1,
	EAtlantaRitualRewardUIType__Offering                                             = 2,
	EAtlantaRitualRewardUIType__BloodPoints                                          = 3,
	EAtlantaRitualRewardUIType__IridescentShards                                     = 4,
	EAtlantaRitualRewardUIType__AuricCells                                           = 5,
	EAtlantaRitualRewardUIType__Customization                                        = 6,
	EAtlantaRitualRewardUIType__CustoTicket                                          = 7,
	EAtlantaRitualRewardUIType__MysteryBox                                           = 8,
	EAtlantaRitualRewardUIType__EAtlantaRitualRewardUIType_MAX                       = 9
};

/// Enum /Script/DeadByDaylight.EAltantaRitualUIType
/// Size: 0x04
enum class EAltantaRitualUIType : uint8_t
{
	EAltantaRitualUIType__Single                                                     = 0,
	EAltantaRitualUIType__Master                                                     = 1,
	EAltantaRitualUIType__Special                                                    = 2,
	EAltantaRitualUIType__EAltantaRitualUIType_MAX                                   = 3
};

/// Enum /Script/DeadByDaylight.EAttackEventType
/// Size: 0x06
enum class EAttackEventType : uint8_t
{
	EAttackEventType__VE_None                                                        = 0,
	EAttackEventType__VE_BasicAttackAttempt                                          = 1,
	EAttackEventType__VE_BasicAttackHit                                              = 2,
	EAttackEventType__VE_SpecialAttackAttempt                                        = 3,
	EAttackEventType__VE_SpecialAttackHit                                            = 4,
	EAttackEventType__VE_MAX                                                         = 5
};

/// Enum /Script/DeadByDaylight.EBPBonusType
/// Size: 0x05
enum class EBPBonusType : uint8_t
{
	EBPBonusType__None                                                               = 0,
	EBPBonusType__Event                                                              = 1,
	EBPBonusType__Offerings                                                          = 2,
	EBPBonusType__Others                                                             = 3,
	EBPBonusType__EBPBonusType_MAX                                                   = 4
};

/// Enum /Script/DeadByDaylight.EBloodchestType
/// Size: 0x05
enum class EBloodchestType : uint8_t
{
	EBloodchestType__None                                                            = 0,
	EBloodchestType__Chest                                                           = 1,
	EBloodchestType__SuperChests                                                     = 2,
	EBloodchestType__EntityBox                                                       = 3,
	EBloodchestType__EBloodchestType_MAX                                             = 4
};

/// Enum /Script/DeadByDaylight.EBloodwebFillingMethod
/// Size: 0x03
enum class EBloodwebFillingMethod : uint8_t
{
	EBloodwebFillingMethod__RestrictionsBasedOnData                                  = 0,
	EBloodwebFillingMethod__FillAll                                                  = 1,
	EBloodwebFillingMethod__EBloodwebFillingMethod_MAX                               = 2
};

/// Enum /Script/DeadByDaylight.EBloodMarketRefreshMethod
/// Size: 0x03
enum class EBloodMarketRefreshMethod : uint8_t
{
	EBloodMarketRefreshMethod__Automatic                                             = 0,
	EBloodMarketRefreshMethod__Manual                                                = 1,
	EBloodMarketRefreshMethod__EBloodMarketRefreshMethod_MAX                         = 2
};

/// Enum /Script/DeadByDaylight.EBloodwebDefinitionContentType
/// Size: 0x06
enum class EBloodwebDefinitionContentType : uint8_t
{
	EBloodwebDefinitionContentType__Empty                                            = 0,
	EBloodwebDefinitionContentType__Nodes                                            = 1,
	EBloodwebDefinitionContentType__Paths                                            = 2,
	EBloodwebDefinitionContentType__NodesAndPaths                                    = 3,
	EBloodwebDefinitionContentType__NodesNoPath                                      = 1,
	EBloodwebDefinitionContentType__EBloodwebDefinitionContentType_MAX               = 4
};

/// Enum /Script/DeadByDaylight.EBloodwebDistributionType
/// Size: 0x03
enum class EBloodwebDistributionType : uint8_t
{
	EBloodwebDistributionType__PerWeb                                                = 0,
	EBloodwebDistributionType__PerRing                                               = 1,
	EBloodwebDistributionType__EBloodwebDistributionType_MAX                         = 2
};

/// Enum /Script/DeadByDaylight.EBloodwebDataSource
/// Size: 0x03
enum class EBloodwebDataSource : uint8_t
{
	EBloodwebDataSource__ByLevel                                                     = 0,
	EBloodwebDataSource__ByRing                                                      = 1,
	EBloodwebDataSource__EBloodwebDataSource_MAX                                     = 2
};

/// Enum /Script/DeadByDaylight.EBloodwebSaveReason
/// Size: 0x05
enum class EBloodwebSaveReason : uint8_t
{
	EBloodwebSaveReason__PayToRefresh                                                = 0,
	EBloodwebSaveReason__PrestigeUp                                                  = 1,
	EBloodwebSaveReason__ShouldRebuild                                               = 2,
	EBloodwebSaveReason__Cheat                                                       = 3,
	EBloodwebSaveReason__EBloodwebSaveReason_MAX                                     = 4
};

/// Enum /Script/DeadByDaylight.EBloodwebNodeGateTypes
/// Size: 0x04
enum class EBloodwebNodeGateTypes : uint8_t
{
	EBloodwebNodeGateTypes__RequiredRank                                             = 0,
	EBloodwebNodeGateTypes__RequiredItem                                             = 1,
	EBloodwebNodeGateTypes__Count                                                    = 2,
	EBloodwebNodeGateTypes__EBloodwebNodeGateTypes_MAX                               = 3
};

/// Enum /Script/DeadByDaylight.EBloodwebNodeContentType
/// Size: 0x17
enum class EBloodwebNodeContentType : uint8_t
{
	EBloodwebNodeContentType__Empty                                                  = 0,
	EBloodwebNodeContentType__Perks                                                  = 1,
	EBloodwebNodeContentType__PerkBuffs_Do_Not_Use_Deprecated                        = 2,
	EBloodwebNodeContentType__Offerings                                              = 3,
	EBloodwebNodeContentType__Items                                                  = 4,
	EBloodwebNodeContentType__AddOn                                                  = 5,
	EBloodwebNodeContentType__Chests                                                 = 6,
	EBloodwebNodeContentType__PerksPacks                                             = 7,
	EBloodwebNodeContentType__IridiscentShards                                       = 8,
	EBloodwebNodeContentType__AuricCells                                             = 9,
	EBloodwebNodeContentType__SuperChests                                            = 10,
	EBloodwebNodeContentType__CosmeticItems                                          = 11,
	EBloodwebNodeContentType__Bloodpoints                                            = 12,
	EBloodwebNodeContentType__FreeTicket                                             = 13,
	EBloodwebNodeContentType__EntityBox                                              = 14,
	EBloodwebNodeContentType__Count                                                  = 15,
	EBloodwebNodeContentType__EBloodwebNodeContentType_MAX                           = 16
};

/// Enum /Script/DeadByDaylight.EBloodwebNodeState
/// Size: 0x07
enum class EBloodwebNodeState : uint8_t
{
	EBloodwebNodeState__Inactive                                                     = 0,
	EBloodwebNodeState__Available                                                    = 1,
	EBloodwebNodeState__Locked_Do_Not_Use_Deprecated                                 = 2,
	EBloodwebNodeState__Collected                                                    = 3,
	EBloodwebNodeState__Consumed                                                     = 4,
	EBloodwebNodeState__Count                                                        = 5,
	EBloodwebNodeState__EBloodwebNodeState_MAX                                       = 6
};

/// Enum /Script/DeadByDaylight.EBloodwebRing
/// Size: 0x08
enum class EBloodwebRing : uint8_t
{
	EBloodwebRing__CenterRing                                                        = 0,
	EBloodwebRing__InnerRing                                                         = 1,
	EBloodwebRing__MiddleRing                                                        = 2,
	EBloodwebRing__OuterRing                                                         = 3,
	EBloodwebRing__EntityRing                                                        = 4,
	EBloodwebRing__RingCount                                                         = 5,
	EBloodwebRing__Count                                                             = 6,
	EBloodwebRing__EBloodwebRing_MAX                                                 = 7
};

/// Enum /Script/DeadByDaylight.EBreakableState
/// Size: 0x03
enum class EBreakableState : uint8_t
{
	EBreakableState__Unbroken                                                        = 0,
	EBreakableState__Broken                                                          = 1,
	EBreakableState__EBreakableState_MAX                                             = 2
};

/// Enum /Script/DeadByDaylight.ECameraOffsetState
/// Size: 0x06
enum class ECameraOffsetState : uint8_t
{
	ECameraOffsetState__None                                                         = 0,
	ECameraOffsetState__Default                                                      = 1,
	ECameraOffsetState__Crouching                                                    = 2,
	ECameraOffsetState__Crawling                                                     = 3,
	ECameraOffsetState__Carried                                                      = 4,
	ECameraOffsetState__ECameraOffsetState_MAX                                       = 5
};

/// Enum /Script/DeadByDaylight.ECameraFadeState
/// Size: 0x05
enum class ECameraFadeState : uint8_t
{
	ECameraFadeState__FadedIn                                                        = 0,
	ECameraFadeState__FadingOut                                                      = 1,
	ECameraFadeState__FadedOut                                                       = 2,
	ECameraFadeState__FadingIn                                                       = 3,
	ECameraFadeState__ECameraFadeState_MAX                                           = 4
};

/// Enum /Script/DeadByDaylight.EManualZoomType
/// Size: 0x04
enum class EManualZoomType : uint8_t
{
	EManualZoomType__None                                                            = 0,
	EManualZoomType__TargetZoomValue                                                 = 1,
	EManualZoomType__CurveFloatProgression                                           = 2,
	EManualZoomType__EManualZoomType_MAX                                             = 3
};

/// Enum /Script/DeadByDaylight.EDBDCameraSocketID
/// Size: 0x07
enum class EDBDCameraSocketID : uint8_t
{
	EDBDCameraSocketID__VE_None                                                      = 0,
	EDBDCameraSocketID__VE_Default                                                   = 1,
	EDBDCameraSocketID__VE_Killcam                                                   = 2,
	EDBDCameraSocketID__VE_Reaction                                                  = 3,
	EDBDCameraSocketID__VE_Struggle                                                  = 4,
	EDBDCameraSocketID__VE_Sacrifice                                                 = 5,
	EDBDCameraSocketID__VE_MAX                                                       = 6
};

/// Enum /Script/DeadByDaylight.EEscapeType
/// Size: 0x04
enum class EEscapeType : uint8_t
{
	EEscapeType__Escape_ExitGate                                                     = 0,
	EEscapeType__Escape_Hatch                                                        = 1,
	EEscapeType__Escape_KillerDisconnect                                             = 2,
	EEscapeType__Escape_MAX                                                          = 3
};

/// Enum /Script/DeadByDaylight.ECDNPatchCompleteStatus
/// Size: 0x22
enum class ECDNPatchCompleteStatus : uint8_t
{
	ECDNPatchCompleteStatus__Success                                                 = 0,
	ECDNPatchCompleteStatus__NotEnoughDiskSpace                                      = 1,
	ECDNPatchCompleteStatus__PatchInstallDownloadError                               = 2,
	ECDNPatchCompleteStatus__PatchInstallFileConstructionFail                        = 3,
	ECDNPatchCompleteStatus__PatchInstallMoveFileToInstallFail                       = 4,
	ECDNPatchCompleteStatus__PatchInstallBuildVerifyFail                             = 5,
	ECDNPatchCompleteStatus__PatchInstallApplicationClosing                          = 6,
	ECDNPatchCompleteStatus__PatchInstallApplicationError                            = 7,
	ECDNPatchCompleteStatus__PatchInstallUserCanceled                                = 8,
	ECDNPatchCompleteStatus__PatchInstallPrerequisiteError                           = 9,
	ECDNPatchCompleteStatus__PatchInstallInitializationError                         = 10,
	ECDNPatchCompleteStatus__PatchInstallPathLengthExceeded                          = 11,
	ECDNPatchCompleteStatus__PatchInstallOutOfDiskSpace                              = 12,
	ECDNPatchCompleteStatus__PatchInstallUnknownError                                = 13,
	ECDNPatchCompleteStatus__FailureToMountContent                                   = 14,
	ECDNPatchCompleteStatus__InstalledContentNotFound                                = 15,
	ECDNPatchCompleteStatus__InvalidPendingContent                                   = 16,
	ECDNPatchCompleteStatus__CantFindContentToDownload                               = 17,
	ECDNPatchCompleteStatus__NoPatchForCurrentPlatformAndVersion                     = 18,
	ECDNPatchCompleteStatus__FailureToRetrieveContent                                = 19,
	ECDNPatchCompleteStatus__CancelledByUser                                         = 20,
	ECDNPatchCompleteStatus__ECDNPatchCompleteStatus_MAX                             = 21
};

/// Enum /Script/DeadByDaylight.ECharacterToolItemType
/// Size: 0x05
enum class ECharacterToolItemType : uint8_t
{
	ECharacterToolItemType__None                                                     = 0,
	ECharacterToolItemType__Outfit                                                   = 1,
	ECharacterToolItemType__OutfitPiece                                              = 2,
	ECharacterToolItemType__Charm                                                    = 3,
	ECharacterToolItemType__ECharacterToolItemType_MAX                               = 4
};

/// Enum /Script/DeadByDaylight.ECharacterCameraViewType
/// Size: 0x04
enum class ECharacterCameraViewType : uint8_t
{
	ECharacterCameraViewType__None                                                   = 0,
	ECharacterCameraViewType__Character                                              = 1,
	ECharacterCameraViewType__Outfit                                                 = 2,
	ECharacterCameraViewType__ECharacterCameraViewType_MAX                           = 3
};

/// Enum /Script/DeadByDaylight.EChargeableInteractionPriority
/// Size: 0x05
enum class EChargeableInteractionPriority : uint8_t
{
	EChargeableInteractionPriority__VE_External                                      = 0,
	EChargeableInteractionPriority__VE_Item                                          = 1,
	EChargeableInteractionPriority__VE_Self                                          = 2,
	EChargeableInteractionPriority__VE_None                                          = 3,
	EChargeableInteractionPriority__VE_MAX                                           = 4
};

/// Enum /Script/DeadByDaylight.EChargeableInteractionBarType
/// Size: 0x03
enum class EChargeableInteractionBarType : uint8_t
{
	EChargeableInteractionBarType__VE_Normal                                         = 0,
	EChargeableInteractionBarType__VE_ProgressPips                                   = 1,
	EChargeableInteractionBarType__VE_MAX                                            = 2
};

/// Enum /Script/DeadByDaylight.ECharmCategory
/// Size: 0x11
enum class ECharmCategory : uint8_t
{
	ECharmCategory__None                                                             = 0,
	ECharmCategory__Small                                                            = 1,
	ECharmCategory__Medium                                                           = 2,
	ECharmCategory__Big                                                              = 3,
	ECharmCategory__Short                                                            = 4,
	ECharmCategory__Wide                                                             = 5,
	ECharmCategory__Chibi                                                            = 6,
	ECharmCategory__Square                                                           = 7,
	ECharmCategory__Tablet                                                           = 8,
	ECharmCategory__Perk                                                             = 9,
	ECharmCategory__ECharmCategory_MAX                                               = 10
};

/// Enum /Script/DeadByDaylight.ECommentatorContextCode
/// Size: 0x24
enum class ECommentatorContextCode : uint8_t
{
	ECommentatorContextCode__AnyRole_Start                                           = 0,
	ECommentatorContextCode__AnyRoleInvitationCollected                              = 1,
	ECommentatorContextCode__Killer_Start                                            = 64,
	ECommentatorContextCode__KillerStartOfMatch                                      = 65,
	ECommentatorContextCode__KillerDamageGenerator                                   = 66,
	ECommentatorContextCode__KillerDamagePallet                                      = 67,
	ECommentatorContextCode__KillerDamageBreakableWall                               = 68,
	ECommentatorContextCode__KillerFoundSurvivorInLocker                             = 69,
	ECommentatorContextCode__KillerLastManStanding                                   = 70,
	ECommentatorContextCode__KillerWins                                              = 71,
	ECommentatorContextCode__Survivor_Start                                          = 128,
	ECommentatorContextCode__SurvivorStartOfMatch                                    = 129,
	ECommentatorContextCode__SurvivorHexTotemCleansed                                = 130,
	ECommentatorContextCode__SurvivorHit                                             = 131,
	ECommentatorContextCode__SurvivorHooked                                          = 132,
	ECommentatorContextCode__SurvivorHideInLocker                                    = 133,
	ECommentatorContextCode__SurvivorEscapes                                         = 134,
	ECommentatorContextCode__SurvivorLastManStanding                                 = 135,
	ECommentatorContextCode__Menu_Start                                              = 192,
	ECommentatorContextCode__MenuSplashScreen                                        = 193,
	ECommentatorContextCode__MenuOpenedEventPopup                                    = 194,
	ECommentatorContextCode__MenuOnlineLobby                                         = 195,
	ECommentatorContextCode__MenuOfferingScreen                                      = 196,
	ECommentatorContextCode__ECommentatorContextCode_MAX                             = 197
};

/// Enum /Script/DeadByDaylight.EContext
/// Size: 0x69
enum class EContext : uint8_t
{
	EContext__None                                                                   = 0,
	EContext__ArchiveIntro                                                           = 1,
	EContext__ArchiveCompendium                                                      = 2,
	EContext__ArchiveRift                                                            = 3,
	EContext__ArchiveTome                                                            = 4,
	EContext__BloodWeb                                                               = 5,
	EContext__Character                                                              = 6,
	EContext__Consent                                                                = 7,
	EContext__Credits                                                                = 8,
	EContext__Customization                                                          = 9,
	EContext__GameFlowOff                                                            = 10,
	EContext__Hud                                                                    = 11,
	EContext__Inbox                                                                  = 12,
	EContext__KillerLobbySidePanel                                                   = 13,
	EContext__LightSensitivity                                                       = 14,
	EContext__Loading                                                                = 15,
	EContext__Loadout                                                                = 16,
	EContext__LobbyOff                                                               = 17,
	EContext__LobbySidePanel                                                         = 18,
	EContext__Onboarding                                                             = 19,
	EContext__RoleSelection                                                          = 20,
	EContext__SpecialEventLoading                                                    = 21,
	EContext__Spectate                                                               = 22,
	EContext__Splash                                                                 = 23,
	EContext__Store                                                                  = 24,
	EContext__StoreBundles                                                           = 25,
	EContext__StoreKillers                                                           = 26,
	EContext__StoreSurvivors                                                         = 27,
	EContext__StoreCollections                                                       = 28,
	EContext__StoreFeatured                                                          = 29,
	EContext__StoreSpecials                                                          = 30,
	EContext__Tally                                                                  = 31,
	EContext__Tutorial                                                               = 32,
	EContext__UMGMainMenu                                                            = 33,
	EContext__ArchivePassPurchasePopup                                               = 34,
	EContext__ArchiveTierPurchasePopup                                               = 35,
	EContext__DailyRewardsPopup                                                      = 36,
	EContext__FearMarketPopup                                                        = 37,
	EContext__FriendSearchPopup                                                      = 38,
	EContext__GenericRefreshingPopup                                                 = 39,
	EContext__NewContentPopup                                                        = 40,
	EContext__ReportPlayerPopup                                                      = 41,
	EContext__SeasonEndPopup                                                         = 42,
	EContext__SeasonEndRankRewardsPopup                                              = 43,
	EContext__UnlockPersonalPerksPopup                                               = 44,
	EContext__NewActiveTomePopup                                                     = 45,
	EContext__ReportFeedbackPopup                                                    = 46,
	EContext__RewardPopup                                                            = 47,
	EContext__UMGArchivePassPurchasePopup                                            = 48,
	EContext__UMGArchiveTierPurchasePopup                                            = 49,
	EContext__UMGCurrencyConversionPopup                                             = 50,
	EContext__UMGDailyRitualsPopup                                                   = 51,
	EContext__UMGFearMarketPopup                                                     = 52,
	EContext__UMGFriendSearchPopup                                                   = 53,
	EContext__UMGGenericPopup                                                        = 54,
	EContext__UMGGenericTextInputPopup                                               = 55,
	EContext__UMGProcessingPopup                                                     = 56,
	EContext__UMGProgressionSystemInfoPopup                                          = 57,
	EContext__UMGSeasonEndRankRewardsPopup                                           = 58,
	EContext__UMGUnlockPersonalPerksPopup                                            = 59,
	EContext__AuricCells                                                             = 60,
	EContext__Cinematic                                                              = 61,
	EContext__EventEntryOverlay                                                      = 62,
	EContext__LoadoutMenu                                                            = 63,
	EContext__ProfileMenu                                                            = 64,
	EContext__ShrineOfSecrets                                                        = 65,
	EContext__Alerts                                                                 = 66,
	EContext__Count                                                                  = 67,
	EContext__EContext_MAX                                                           = 68
};

/// Enum /Script/DeadByDaylight.EItemDomain
/// Size: 0x05
enum class EItemDomain : uint8_t
{
	EItemDomain__Store                                                               = 0,
	EItemDomain__EventStore                                                          = 1,
	EItemDomain__Local                                                               = 2,
	EItemDomain__Any                                                                 = 3,
	EItemDomain__EItemDomain_MAX                                                     = 4
};

/// Enum /Script/DeadByDaylight.EOwnership
/// Size: 0x04
enum class EOwnership : uint8_t
{
	EOwnership__Owned                                                                = 0,
	EOwnership__NotOwned                                                             = 1,
	EOwnership__Any                                                                  = 2,
	EOwnership__EOwnership_MAX                                                       = 3
};

/// Enum /Script/DeadByDaylight.EHudEditorDragAxisOption
/// Size: 0x04
enum class EHudEditorDragAxisOption : uint8_t
{
	EHudEditorDragAxisOption__PositiveSide                                           = 0,
	EHudEditorDragAxisOption__NegativeSide                                           = 1,
	EHudEditorDragAxisOption__BothSide                                               = 2,
	EHudEditorDragAxisOption__EHudEditorDragAxisOption_MAX                           = 3
};

/// Enum /Script/DeadByDaylight.EUMGDailyRewardWidgetState
/// Size: 0x09
enum class EUMGDailyRewardWidgetState : uint8_t
{
	EUMGDailyRewardWidgetState__Unknown                                              = 0,
	EUMGDailyRewardWidgetState__Locked                                               = 1,
	EUMGDailyRewardWidgetState__ReadyToCollect                                       = 2,
	EUMGDailyRewardWidgetState__NewlyCollected                                       = 3,
	EUMGDailyRewardWidgetState__Collected                                            = 4,
	EUMGDailyRewardWidgetState__MysteryLocked                                        = 5,
	EUMGDailyRewardWidgetState__MysteryReadyToDiscover                               = 6,
	EUMGDailyRewardWidgetState__MysteryNewlyDiscovered                               = 7,
	EUMGDailyRewardWidgetState__EUMGDailyRewardWidgetState_MAX                       = 8
};

/// Enum /Script/DeadByDaylight.DBDScalabilityLevel
/// Size: 0x06
enum class DBDScalabilityLevel : uint8_t
{
	DBDScalabilityLevel__LOW                                                         = 0,
	DBDScalabilityLevel__MEDIUM                                                      = 1,
	DBDScalabilityLevel__HIGH                                                        = 2,
	DBDScalabilityLevel__EPIC                                                        = 3,
	DBDScalabilityLevel__ULTRA                                                       = 4,
	DBDScalabilityLevel__DBDScalabilityLevel_MAX                                     = 5
};

/// Enum /Script/DeadByDaylight.EKillerAttackType
/// Size: 0x04
enum class EKillerAttackType : uint8_t
{
	EKillerAttackType__None                                                          = 0,
	EKillerAttackType__MeleeAttack                                                   = 1,
	EKillerAttackType__SpecialAttack                                                 = 2,
	EKillerAttackType__EKillerAttackType_MAX                                         = 3
};

/// Enum /Script/DeadByDaylight.EAIDodgeTechnique
/// Size: 0x02
enum class EAIDodgeTechnique : uint8_t
{
	EAIDodgeTechnique__SpecialAttack_Dodge_KeepDistance                              = 0,
	EAIDodgeTechnique__SpecialAttack_Dodge_MAX                                       = 1
};

/// Enum /Script/DeadByDaylight.EAIDodgeType
/// Size: 0x04
enum class EAIDodgeType : uint8_t
{
	EAIDodgeType__FORWARD_SIDE_STEP                                                  = 0,
	EAIDodgeType__SIDE_STEP                                                          = 1,
	EAIDodgeType__BACKWARD_SIDE_STEP                                                 = 2,
	EAIDodgeType__EAIDodgeType_MAX                                                   = 3
};

/// Enum /Script/DeadByDaylight.EInLockerSkillsContext
/// Size: 0x04
enum class EInLockerSkillsContext : uint8_t
{
	EInLockerSkillsContext__None                                                     = 0,
	EInLockerSkillsContext__Goal                                                     = 1,
	EInLockerSkillsContext__OutOfTerrorRadius                                        = 2,
	EInLockerSkillsContext__EInLockerSkillsContext_MAX                               = 3
};

/// Enum /Script/DeadByDaylight.EPawnInputPressTypes
/// Size: 0x19
enum class EPawnInputPressTypes : uint8_t
{
	EPawnInputPressTypes__None                                                       = 0,
	EPawnInputPressTypes__FastInteract                                               = 1,
	EPawnInputPressTypes__Interact                                                   = 2,
	EPawnInputPressTypes__Struggle                                                   = 3,
	EPawnInputPressTypes__Slash                                                      = 4,
	EPawnInputPressTypes__Attack                                                     = 5,
	EPawnInputPressTypes__Action                                                     = 6,
	EPawnInputPressTypes__SecondaryAction                                            = 7,
	EPawnInputPressTypes__UseItem                                                    = 8,
	EPawnInputPressTypes__DropItem                                                   = 9,
	EPawnInputPressTypes__Gesture01                                                  = 10,
	EPawnInputPressTypes__Gesture02                                                  = 11,
	EPawnInputPressTypes__Gesture03                                                  = 12,
	EPawnInputPressTypes__Gesture04                                                  = 13,
	EPawnInputPressTypes__Run                                                        = 14,
	EPawnInputPressTypes__RunningFastInteraction                                     = 15,
	EPawnInputPressTypes__AbilityTwo                                                 = 16,
	EPawnInputPressTypes__CancelMinigame                                             = 17,
	EPawnInputPressTypes__EPawnInputPressTypes_MAX                                   = 18
};

/// Enum /Script/DeadByDaylight.EAIDifficultyLevel
/// Size: 0x09
enum class EAIDifficultyLevel : uint8_t
{
	EAIDifficultyLevel__VeryEasy                                                     = 0,
	EAIDifficultyLevel__Easy                                                         = 1,
	EAIDifficultyLevel__Medium                                                       = 2,
	EAIDifficultyLevel__Hard                                                         = 3,
	EAIDifficultyLevel__Suggested                                                    = 4,
	EAIDifficultyLevel__Random                                                       = 5,
	EAIDifficultyLevel__None                                                         = 6,
	EAIDifficultyLevel__Max                                                          = 6,
	EAIDifficultyLevel__EAIDifficultyLevel_MAX                                       = 7
};

/// Enum /Script/DeadByDaylight.ECharacterMovementTypes
/// Size: 0x04
enum class ECharacterMovementTypes : uint8_t
{
	ECharacterMovementTypes__Normal                                                  = 0,
	ECharacterMovementTypes__Run                                                     = 1,
	ECharacterMovementTypes__Crouch                                                  = 2,
	ECharacterMovementTypes__ECharacterMovementTypes_MAX                             = 3
};

/// Enum /Script/DeadByDaylight.EAITerrorLevel
/// Size: 0x08
enum class EAITerrorLevel : uint8_t
{
	EAITerrorLevel__None                                                             = 0,
	EAITerrorLevel__Low                                                              = 1,
	EAITerrorLevel__Min                                                              = 1,
	EAITerrorLevel__Medium                                                           = 2,
	EAITerrorLevel__High                                                             = 3,
	EAITerrorLevel__VeryHigh                                                         = 4,
	EAITerrorLevel__Max                                                              = 4,
	EAITerrorLevel__EAITerrorLevel_MAX                                               = 5
};

/// Enum /Script/DeadByDaylight.ECustomMovementMode
/// Size: 0x03
enum class ECustomMovementMode : uint8_t
{
	ECustomMovementMode__CUSTOM_MOVE_None                                            = 0,
	ECustomMovementMode__CUSTOM_MOVE_Snapping                                        = 1,
	ECustomMovementMode__CUSTOM_MOVE_MAX                                             = 2
};

/// Enum /Script/DeadByDaylight.ESurvivorFleePathStrategy
/// Size: 0x03
enum class ESurvivorFleePathStrategy : uint8_t
{
	ESurvivorFleePathStrategy__None                                                  = 0,
	ESurvivorFleePathStrategy__HideFromLos                                           = 1,
	ESurvivorFleePathStrategy__ESurvivorFleePathStrategy_MAX                         = 2
};

/// Enum /Script/DeadByDaylight.EDangerTraverseState
/// Size: 0x06
enum class EDangerTraverseState : uint8_t
{
	EDangerTraverseState__SAFE                                                       = 0,
	EDangerTraverseState__WAIT                                                       = 1,
	EDangerTraverseState__TRAVERSE_CROUCH                                            = 2,
	EDangerTraverseState__TRAVERSE_RUN                                               = 3,
	EDangerTraverseState__UNDODGEABLE                                                = 4,
	EDangerTraverseState__EDangerTraverseState_MAX                                   = 5
};

/// Enum /Script/DeadByDaylight.EDiceRollType
/// Size: 0x07
enum class EDiceRollType : uint8_t
{
	EDiceRollType__VE_EscapeHook                                                     = 0,
	EDiceRollType__VE_EscapeTrap                                                     = 1,
	EDiceRollType__VE_TrapInflictsDying                                              = 2,
	EDiceRollType__VE_TriggerSkillCheck                                              = 3,
	EDiceRollType__VE_TriggerFootNoise                                               = 4,
	EDiceRollType__VE_TriggerCrowAlert                                               = 5,
	EDiceRollType__VE_MAX                                                            = 6
};

/// Enum /Script/DeadByDaylight.EDisconnectErrors
/// Size: 0x26
enum class EDisconnectErrors : uint8_t
{
	EDisconnectErrors__None                                                          = 0,
	EDisconnectErrors__SteamAuthFailure                                              = 1,
	EDisconnectErrors__SteamAuthFailureKickedFromServer                              = 2,
	EDisconnectErrors__EACServerValidationFailure                                    = 3,
	EDisconnectErrors__EACValidationFailureKickedFromServer                          = 4,
	EDisconnectErrors__EACClientNotRunning                                           = 5,
	EDisconnectErrors__EACClientIntegrityViolation                                   = 6,
	EDisconnectErrors__PlayerRemovedOnSuspend                                        = 7,
	EDisconnectErrors__LostConnectionToHost                                          = 8,
	EDisconnectErrors__LostConnectionToProfileService                                = 9,
	EDisconnectErrors__MirrorsUnscheduledSessionDestruction                          = 10,
	EDisconnectErrors__SessionKilledByMirrors                                        = 11,
	EDisconnectErrors__UnableToSaveProfileAfterRetries                               = 12,
	EDisconnectErrors__UnableToGetPlayerLevel                                        = 13,
	EDisconnectErrors__UnableToEarnPlayerXp                                          = 14,
	EDisconnectErrors__UnableToUpdatePips                                            = 15,
	EDisconnectErrors__UnableToUpdateRatings                                         = 16,
	EDisconnectErrors__ClientProviderAuthenticationFailed                            = 17,
	EDisconnectErrors__UnableToSyncCachedCurrency                                    = 18,
	EDisconnectErrors__OwnershipValidationFailure                                    = 19,
	EDisconnectErrors__UnableToUpdateEndOfMatchInfo                                  = 20,
	EDisconnectErrors__TravelFailure                                                 = 21,
	EDisconnectErrors__SessionKilledByServerLost                                     = 22,
	EDisconnectErrors__SessionKilledByServerTimeout                                  = 23,
	EDisconnectErrors__SessionKilledByClientLostNetwork                              = 24,
	EDisconnectErrors__EDisconnectErrors_MAX                                         = 25
};

/// Enum /Script/DeadByDaylight.EEmblemProgressionType
/// Size: 0x42
enum class EEmblemProgressionType : uint8_t
{
	EEmblemProgressionType__SurvivorLightbringerStartingValue                        = 0,
	EEmblemProgressionType__SurvivorLightbringerGeneratorRepair                      = 1,
	EEmblemProgressionType__SurvivorLightbringerTotemCleanse                         = 2,
	EEmblemProgressionType__SurvivorLightbringerKillerDiversion                      = 3,
	EEmblemProgressionType__SurvivorLightbringerExitGameOpen                         = 4,
	EEmblemProgressionType__SurvivorUnbrokenTimeAlive                                = 5,
	EEmblemProgressionType__SurvivorBenevolentStartingValue                          = 6,
	EEmblemProgressionType__SurvivorBenevolentHealing                                = 7,
	EEmblemProgressionType__SurvivorBenevolentHooked                                 = 8,
	EEmblemProgressionType__SurvivorBenevolentUnhook                                 = 9,
	EEmblemProgressionType__SurvivorBenevolentPerformUnhook                          = 10,
	EEmblemProgressionType__SurvivorBenevolentSaveFromKiller                         = 11,
	EEmblemProgressionType__SurvivorBenevolentUnsafeUnhook                           = 12,
	EEmblemProgressionType__SurvivorBenevolentHitWhileCarrying                       = 13,
	EEmblemProgressionType__SurvivorEvaderStartingValue                              = 14,
	EEmblemProgressionType__SurvivorEvaderSneaking                                   = 15,
	EEmblemProgressionType__SurvivorEvaderChaseWon                                   = 16,
	EEmblemProgressionType__SurvivorEvaderChaseLost                                  = 17,
	EEmblemProgressionType__SurvivorEvaderPalletStun                                 = 18,
	EEmblemProgressionType__KillerGatekeeperStartingValue                            = 19,
	EEmblemProgressionType__KillerGatekeeperGeneratorDefense                         = 20,
	EEmblemProgressionType__KillerGatekeeperGatesClosed                              = 21,
	EEmblemProgressionType__KillerDevoutStartingValue                                = 22,
	EEmblemProgressionType__KillerDevoutSacrifice                                    = 23,
	EEmblemProgressionType__KillerDevoutDisconnect                                   = 24,
	EEmblemProgressionType__KillerDevoutMoris                                        = 25,
	EEmblemProgressionType__KillerDevoutAllSurvivorsHooked                           = 26,
	EEmblemProgressionType__KillerDevoutHooksBonus                                   = 27,
	EEmblemProgressionType__KillerMaliciousStartingValue                             = 28,
	EEmblemProgressionType__KillerMaliciousInjuries                                  = 29,
	EEmblemProgressionType__KillerMaliciousHookStages                                = 30,
	EEmblemProgressionType__KillerMaliciousInjuriesHealed                            = 31,
	EEmblemProgressionType__KillerMaliciousEscapeGrasp                               = 32,
	EEmblemProgressionType__KillerMaliciousDisconnect                                = 33,
	EEmblemProgressionType__KillerChaserStartingValue                                = 34,
	EEmblemProgressionType__KillerChaserSurvivorFound                                = 35,
	EEmblemProgressionType__KillerChaserSurvivorLost                                 = 36,
	EEmblemProgressionType__KillerChaserHit                                          = 37,
	EEmblemProgressionType__KillerChaserChaseWon                                     = 38,
	EEmblemProgressionType__KillerChaserProximityToHookPenalty                       = 39,
	EEmblemProgressionType__Invalid                                                  = 40,
	EEmblemProgressionType__EEmblemProgressionType_MAX                               = 41
};

/// Enum /Script/DeadByDaylight.EEmblemEvaluation
/// Size: 0x03
enum class EEmblemEvaluation : uint8_t
{
	EEmblemEvaluation__Authority                                                     = 0,
	EEmblemEvaluation__Local                                                         = 1,
	EEmblemEvaluation__EEmblemEvaluation_MAX                                         = 2
};

/// Enum /Script/DeadByDaylight.EErrorCodes
/// Size: 0x44
enum class EErrorCodes : uint16_t
{
	EErrorCodes__None                                                                = 0,
	EErrorCodes__SavefileDeserializationFailure                                      = 100,
	EErrorCodes__SavefileDecryptionFailure                                           = 101,
	EErrorCodes__SavefileEmpty                                                       = 102,
	EErrorCodes__SavefileBadPlayerId                                                 = 103,
	EErrorCodes__SavefileEmptyPlayerUID                                              = 104,
	EErrorCodes__SavefileInvalidUniqueNetID                                          = 105,
	EErrorCodes__SavefileInvalidPlayerState                                          = 106,
	EErrorCodes__SavefileBackendError                                                = 107,
	EErrorCodes__KrakenRankError                                                     = 108,
	EErrorCodes__KrakenRatingsError                                                  = 109,
	EErrorCodes__SavefileKrakenPlayerForbidden                                       = 110,
	EErrorCodes__SyncCachedCurrencyError                                             = 111,
	EErrorCodes__CurrencyTransactionError                                            = 112,
	EErrorCodes__StateDownloadFailed                                                 = 113,
	EErrorCodes__StatcacheDecryptionFailed                                           = 114,
	EErrorCodes__SavefilePlayerLoadUIDMismatch                                       = 115,
	EErrorCodes__SavefilePlayerStateUIDMismatch                                      = 116,
	EErrorCodes__CharacterMigrationGetError                                          = 130,
	EErrorCodes__CharacterMigrationGetError_BadProfile                               = 131,
	EErrorCodes__SavefileEncryptionFailure                                           = 200,
	EErrorCodes__SaveFailedInvalidData                                               = 201,
	EErrorCodes__SaveFailedInvalidJSON                                               = 202,
	EErrorCodes__SaveFailedDecodeDataString                                          = 203,
	EErrorCodes__SaveFailedCompressDataString                                        = 204,
	EErrorCodes__SaveFailedEncryptString                                             = 205,
	EErrorCodes__StatcacheEncryptionFailed                                           = 206,
	EErrorCodes__SaveFailedCloudErrorTimeout                                         = 300,
	EErrorCodes__JsonToPersistenDataFailed                                           = 301,
	EErrorCodes__SaveFailedCloudErrorAfterRetries                                    = 302,
	EErrorCodes__StateUploadFailed                                                   = 303,
	EErrorCodes__GetPlayerLevelRequestError                                          = 400,
	EErrorCodes__EarnPlayerXpRequestError                                            = 401,
	EErrorCodes__EarnPlayerXpParamError                                              = 402,
	EErrorCodes__EndOfMatchError                                                     = 403,
	EErrorCodes__OnboardingFailGet                                                   = 410,
	EErrorCodes__OnboardingFailUpdate                                                = 411,
	EErrorCodes__OnboardingFailRequest                                               = 412,
	EErrorCodes__MatchCancelledPlayerLeftDuringLoading                               = 500,
	EErrorCodes__MatchCancelledInvalidPlayerRoles                                    = 501,
	EErrorCodes__MatchCancelledLoadingTimeout                                        = 502,
	EErrorCodes__PakValidationFailed                                                 = 600,
	EErrorCodes__KrakenSdkMismatch                                                   = 601,
	EErrorCodes__EErrorCodes_MAX                                                     = 602
};

/// Enum /Script/DeadByDaylight.EGameIntroSteps
/// Size: 0x04
enum class EGameIntroSteps : uint8_t
{
	EGameIntroSteps__Idling                                                          = 0,
	EGameIntroSteps__PlayingIntro                                                    = 1,
	EGameIntroSteps__LoopingCamView                                                  = 2,
	EGameIntroSteps__EGameIntroSteps_MAX                                             = 3
};

/// Enum /Script/DeadByDaylight.ELevelLoadingSteps
/// Size: 0x16
enum class ELevelLoadingSteps : uint8_t
{
	ELevelLoadingSteps__Invalid                                                      = 0,
	ELevelLoadingSteps__WaitingForProceduralLevelBuilder                             = 1,
	ELevelLoadingSteps__WaitingForPlayersToBeSpawned                                 = 2,
	ELevelLoadingSteps__WaitingForAIPawnToBeSpawned                                  = 3,
	ELevelLoadingSteps__WaitingForKillerSpecificStateComponentLogic                  = 4,
	ELevelLoadingSteps__WaitingForMapSpecificComponentLogic                          = 5,
	ELevelLoadingSteps__WaitingForAssetPreloader                                     = 6,
	ELevelLoadingSteps__WaitingForLoadoutAndTheme                                    = 7,
	ELevelLoadingSteps__WaitingForPIAToBeSpawnedAndInitialized                       = 8,
	ELevelLoadingSteps__WaitingForNavmeshComputation                                 = 9,
	ELevelLoadingSteps__SetGameLoadedAndReadyToPlay                                  = 10,
	ELevelLoadingSteps__WaitingForIntroToBeDone                                      = 11,
	ELevelLoadingSteps__LoadingCompleted                                             = 12,
	ELevelLoadingSteps__FirstLoadingStep                                             = 1,
	ELevelLoadingSteps__Count                                                        = 12,
	ELevelLoadingSteps__ELevelLoadingSteps_MAX                                       = 13
};

/// Enum /Script/DeadByDaylight.ELoadProgress
/// Size: 0x100
enum class ELoadProgress : uint8_t
{
	ELoadProgress__NotStarted                                                        = 0,
	ELoadProgress__Init                                                              = 1,
	ELoadProgress__SetupPIE                                                          = 2,
	ELoadProgress__ArtificialDelay                                                   = 3,
	ELoadProgress__DisconnectingPresencePlugin                                       = 4,
	ELoadProgress__ValidateOnlineSubsystem                                           = 5,
	ELoadProgress__CheckingPlatformService                                           = 6,
	ELoadProgress__PreMirrorsLogin                                                   = 7,
	ELoadProgress__ConnectingToMirrors                                               = 8,
	ELoadProgress__StartEAC                                                          = 9,
	ELoadProgress__LoadingAuthInfo                                                   = 10,
	ELoadProgress__LoadingBackendConfigs                                             = 11,
	ELoadProgress__SetupRichPresence                                                 = 12,
	ELoadProgress__LoadingBackendTunables                                            = 13,
	ELoadProgress__ApplyingCDNPatch                                                  = 14,
	ELoadProgress__AquiringExternalAuthentication                                    = 15,
	ELoadProgress__LoadingPlayerIndependentShopData                                  = 16,
	ELoadProgress__LicenseCache                                                      = 17,
	ELoadProgress__LoadingExperiments                                                = 18,
	ELoadProgress__LoadingEvents                                                     = 19,
	ELoadProgress__LoadingInventory                                                  = 20,
	ELoadProgress__LoadingCinematics                                                 = 21,
	ELoadProgress__SyncingOwnedCharacters                                            = 22,
	ELoadProgress__LoadingProfile                                                    = 23,
	ELoadProgress__LoadingMirrorCurrencies                                           = 24,
	ELoadProgress__LoadingWallet                                                     = 25,
	ELoadProgress__LoadingConsent                                                    = 26,
	ELoadProgress__LoadingGameConfigs                                                = 27,
	ELoadProgress__LoadingCharacterXPTables                                          = 28,
	ELoadProgress__CheckingPendingTransactions                                       = 29,
	ELoadProgress__LoadingContentSchedule                                            = 30,
	ELoadProgress__LoadingNews                                                       = 31,
	ELoadProgress__SendingAnalytics                                                  = 32,
	ELoadProgress__LoadingDailyRituals                                               = 33,
	ELoadProgress__LoadingLimitedTimeGameModes                                       = 34,
	ELoadProgress__ReconcilingEventCurrencies                                        = 35,
	ELoadProgress__CalculatingLatencies                                              = 36,
	ELoadProgress__ValidateData                                                      = 37,
	ELoadProgress__ValidatingClientVersion                                           = 38,
	ELoadProgress__CheckingNeedForCurrencyMigration                                  = 39,
	ELoadProgress__MigratingCurrenciesToMirror                                       = 40,
	ELoadProgress__SyncingFriendsList                                                = 41,
	ELoadProgress__Complete                                                          = 42,
	ELoadProgress__Locating                                                          = 43,
	ELoadProgress__InitializingRTMConnection                                         = 44,
	ELoadProgress__LoadingStreamVideoData                                            = 45,
	ELoadProgress__CollectingFreeCatalogItems                                        = 46,
	ELoadProgress__DownloadDynamicContent                                            = 47,
	ELoadProgress__CheckingMobilePendingTransactions                                 = 48,
	ELoadProgress__LoadMarketingBanners                                              = 49,
	ELoadProgress__LoadingSubscriptionStatus                                         = 50,
	ELoadProgress__RequestingTrackingAuthorization                                   = 51,
	ELoadProgress__LoadingExperimentalFeatures                                       = 52,
	ELoadProgress__LoadingMatchIncentives                                            = 53,
	ELoadProgress__LoadingLoadoutPresets                                             = 54,
	ELoadProgress__LoadingBackendCharacterData                                       = 55,
	ELoadProgress__LoadingPrestige                                                   = 56,
	ELoadProgress__UpdatingPlatformStoreContent                                      = 57,
	ELoadProgress__UpdatingOwnedContent                                              = 58,
	ELoadProgress__LoadingShrine                                                     = 59,
	ELoadProgress__LoadingReportFeedback                                             = 60,
	ELoadProgress__CheckingAutoLoginStatus                                           = 61,
	ELoadProgress__ValidatingUserLogin                                               = 62,
	ELoadProgress__ValidatingPrivileges                                              = 63,
	ELoadProgress__QueryingAchievements                                              = 64,
	ELoadProgress__UpdatingChatPrivilege                                             = 65,
	ELoadProgress__CheckingPlatformServices                                          = 66,
	ELoadProgress__RequestingOnlineContextCreation                                   = 67,
	ELoadProgress__RequestingAuthenticationCode                                      = 68,
	ELoadProgress__SetupBackendEndpoint                                              = 69,
	ELoadProgress__SettingProviderPlayerName                                         = 70,
	ELoadProgress__SettingBackendPlayerName                                          = 71,
	ELoadProgress__LoadingBlocklist                                                  = 72,
	ELoadProgress__LoadingEquippedPlayerCard                                         = 73,
	ELoadProgress__UpdatingCrossplayPrivilege                                        = 74,
	ELoadProgress__RequestingTrial                                                   = 75,
	ELoadProgress__CheckingApplication                                               = 76,
	ELoadProgress__CheckingControllerAction                                          = 77,
	ELoadProgress__ReportingAvailableContent                                         = 78,
	ELoadProgress__LoadingStatCache                                                  = 79,
	ELoadProgress__LoadingPips                                                       = 80,
	ELoadProgress__LoadingPlayerStats                                                = 81,
	ELoadProgress__SetupEnvironmentStats                                             = 82,
	ELoadProgress__ProccessingShopErrors                                             = 83,
	ELoadProgress__LoadingBackendData                                                = 84,
	ELoadProgress__LoadingOnboarding                                                 = 85,
	ELoadProgress__InitializingShaders                                               = 86,
	ELoadProgress__GrantingCrossPromoItems                                           = 87,
	ELoadProgress__UpdatingGifts                                                     = 88,
	ELoadProgress__UpdatingKeplerGiftAction                                          = 89,
	ELoadProgress__SettingNetworkInterface                                           = 90,
	ELoadProgress__ValidatingKrakenSDKVersion                                        = 91,
	ELoadProgress__LoadingCollectionsData                                            = 92,
	ELoadProgress__LoadingRecommendationsData                                        = 93,
	ELoadProgress__CheckingSoftBan                                                   = 94,
	ELoadProgress__UpdatingSpecialPacks                                              = 95,
	ELoadProgress__LoadingGameConfigsDS                                              = 96,
	ELoadProgress__LoadingCatalog                                                    = 97,
	ELoadProgress__LoadingS3PrestigeData                                             = 98,
	ELoadProgress__ELoadProgress_MAX                                                 = 99
};

/// Enum /Script/DeadByDaylight.EProceduralDebugMode
/// Size: 0x06
enum class EProceduralDebugMode : uint8_t
{
	EProceduralDebugMode__None                                                       = 0,
	EProceduralDebugMode__NoMap                                                      = 1,
	EProceduralDebugMode__TilesSmall                                                 = 2,
	EProceduralDebugMode__TilesBig                                                   = 3,
	EProceduralDebugMode__Count                                                      = 4,
	EProceduralDebugMode__EProceduralDebugMode_MAX                                   = 5
};

/// Enum /Script/DeadByDaylight.EAIEvadeLoopSides
/// Size: 0x04
enum class EAIEvadeLoopSides : uint8_t
{
	EAIEvadeLoopSides__Left                                                          = 0,
	EAIEvadeLoopSides__Right                                                         = 1,
	EAIEvadeLoopSides__Count                                                         = 2,
	EAIEvadeLoopSides__EAIEvadeLoopSides_MAX                                         = 3
};

/// Enum /Script/DeadByDaylight.EAuthoritativeMovementFlag
/// Size: 0x10
enum class EAuthoritativeMovementFlag : uint8_t
{
	EAuthoritativeMovementFlag__INTERACTION                                          = 0,
	EAuthoritativeMovementFlag__SLASHED                                              = 1,
	EAuthoritativeMovementFlag__CHEAT                                                = 2,
	EAuthoritativeMovementFlag__DROPPED                                              = 3,
	EAuthoritativeMovementFlag__NOPUSH                                               = 4,
	EAuthoritativeMovementFlag__INTERACTIONNOPUSH                                    = 5,
	EAuthoritativeMovementFlag__DREAMWORLD_NOSLASHERCOLLISION                        = 6,
	EAuthoritativeMovementFlag__NOPUSHFORCED                                         = 7,
	EAuthoritativeMovementFlag__COUNT                                                = 8,
	EAuthoritativeMovementFlag__EAuthoritativeMovementFlag_MAX                       = 9
};

/// Enum /Script/DeadByDaylight.EPlayerMovementDirection
/// Size: 0x05
enum class EPlayerMovementDirection : uint8_t
{
	EPlayerMovementDirection__Left                                                   = 0,
	EPlayerMovementDirection__Right                                                  = 1,
	EPlayerMovementDirection__Forward                                                = 2,
	EPlayerMovementDirection__Backward                                               = 3,
	EPlayerMovementDirection__EPlayerMovementDirection_MAX                           = 4
};

/// Enum /Script/DeadByDaylight.ECharacterStance
/// Size: 0x04
enum class ECharacterStance : uint8_t
{
	ECharacterStance__VE_Stand                                                       = 0,
	ECharacterStance__VE_Crouch                                                      = 1,
	ECharacterStance__VE_Crawl                                                       = 2,
	ECharacterStance__VE_MAX                                                         = 3
};

/// Enum /Script/DeadByDaylight.EPlayerGameplayEventType
/// Size: 0x04
enum class EPlayerGameplayEventType : uint8_t
{
	EPlayerGameplayEventType__VE_UnhookedOther                                       = 0,
	EPlayerGameplayEventType__VE_UntrappedOther                                      = 1,
	EPlayerGameplayEventType__VE_HealedOther                                         = 2,
	EPlayerGameplayEventType__VE_MAX                                                 = 3
};

/// Enum /Script/DeadByDaylight.EBotReplacementState
/// Size: 0x04
enum class EBotReplacementState : uint8_t
{
	EBotReplacementState__NotReplacedWithBot                                         = 0,
	EBotReplacementState__BeingReplacedWithBot                                       = 1,
	EBotReplacementState__ReplacedWithBot                                            = 2,
	EBotReplacementState__EBotReplacementState_MAX                                   = 3
};

/// Enum /Script/DeadByDaylight.EVisibleMenuActorType
/// Size: 0x05
enum class EVisibleMenuActorType : uint8_t
{
	EVisibleMenuActorType__None                                                      = 0,
	EVisibleMenuActorType__Pawn                                                      = 1,
	EVisibleMenuActorType__Hook                                                      = 2,
	EVisibleMenuActorType__Charm                                                     = 3,
	EVisibleMenuActorType__EVisibleMenuActorType_MAX                                 = 4
};

/// Enum /Script/DeadByDaylight.EToastInputType
/// Size: 0x04
enum class EToastInputType : uint8_t
{
	EToastInputType__Toast_Accept                                                    = 0,
	EToastInputType__Toast_Reject                                                    = 1,
	EToastInputType__Toast_Close                                                     = 2,
	EToastInputType__Toast_MAX                                                       = 3
};

/// Enum /Script/DeadByDaylight.EShadowSystem
/// Size: 0x03
enum class EShadowSystem : uint8_t
{
	EShadowSystem__CascadedShadowMap                                                 = 0,
	EShadowSystem__AdaptiveShadowMap                                                 = 1,
	EShadowSystem__EShadowSystem_MAX                                                 = 2
};

/// Enum /Script/DeadByDaylight.EDialogConditionSubject
/// Size: 0x04
enum class EDialogConditionSubject : uint8_t
{
	EDialogConditionSubject__Instigator                                              = 0,
	EDialogConditionSubject__Target                                                  = 1,
	EDialogConditionSubject__NoCondition                                             = 2,
	EDialogConditionSubject__EDialogConditionSubject_MAX                             = 3
};

/// Enum /Script/DeadByDaylight.EDisplayStandActorType
/// Size: 0x05
enum class EDisplayStandActorType : uint8_t
{
	EDisplayStandActorType__None                                                     = 0,
	EDisplayStandActorType__Character                                                = 1,
	EDisplayStandActorType__Hook                                                     = 2,
	EDisplayStandActorType__Charm                                                    = 3,
	EDisplayStandActorType__EDisplayStandActorType_MAX                               = 4
};

/// Enum /Script/DeadByDaylight.EDisplayStandMeatHookOverrideType
/// Size: 0x03
enum class EDisplayStandMeatHookOverrideType : uint32_t
{
	EDisplayStandMeatHookOverrideType__ForCharacter                                  = 0,
	EDisplayStandMeatHookOverrideType__ForEvent                                      = 1,
	EDisplayStandMeatHookOverrideType__EDisplayStandMeatHookOverrideType_MAX         = 2
};

/// Enum /Script/DeadByDaylight.EDoctorAbilityPhase
/// Size: 0x04
enum class EDoctorAbilityPhase : uint8_t
{
	EDoctorAbilityPhase__VE_Charging                                                 = 0,
	EDoctorAbilityPhase__VE_Firing                                                   = 1,
	EDoctorAbilityPhase__VE_None                                                     = 2,
	EDoctorAbilityPhase__VE_MAX                                                      = 3
};

/// Enum /Script/DeadByDaylight.EDoctorAbilityType
/// Size: 0x04
enum class EDoctorAbilityType : uint8_t
{
	EDoctorAbilityType__VE_ShockTherapy                                              = 0,
	EDoctorAbilityType__VE_StaticBlast                                               = 1,
	EDoctorAbilityType__VE_None                                                      = 2,
	EDoctorAbilityType__VE_MAX                                                       = 3
};

/// Enum /Script/DeadByDaylight.EEndGameScenarioTrigger
/// Size: 0x05
enum class EEndGameScenarioTrigger : uint8_t
{
	EEndGameScenarioTrigger__ClosedHatch                                             = 0,
	EEndGameScenarioTrigger__OpenedGate                                              = 1,
	EEndGameScenarioTrigger__CheatUsed                                               = 2,
	EEndGameScenarioTrigger__NotActivated                                            = 3,
	EEndGameScenarioTrigger__EEndGameScenarioTrigger_MAX                             = 4
};

/// Enum /Script/DeadByDaylight.EEnergyTypeEnum
/// Size: 0x04
enum class EEnergyTypeEnum : uint8_t
{
	EEnergyTypeEnum__EInvalid                                                        = 0,
	EEnergyTypeEnum__EBattery                                                        = 1,
	EEnergyTypeEnum__EHealth                                                         = 2,
	EEnergyTypeEnum__EEnergyTypeEnum_MAX                                             = 3
};

/// Enum /Script/DeadByDaylight.EErrorEventType
/// Size: 0x08
enum class EErrorEventType : uint8_t
{
	EErrorEventType__FailedToCalculateRankProgress                                   = 0,
	EErrorEventType__FailedToEarnPlayerXp                                            = 1,
	EErrorEventType__FailedToGrandBloodPoints                                        = 2,
	EErrorEventType__FailedToSyncWalletChanges                                       = 3,
	EErrorEventType__InvalidLobbyId                                                  = 4,
	EErrorEventType__InvalidGameState                                                = 5,
	EErrorEventType__InvalidSessionId                                                = 6,
	EErrorEventType__EErrorEventType_MAX                                             = 7
};

/// Enum /Script/DeadByDaylight.EEscapeDoorActivationMode
/// Size: 0x03
enum class EEscapeDoorActivationMode : uint8_t
{
	EEscapeDoorActivationMode__Standard                                              = 0,
	EEscapeDoorActivationMode__Tutorial                                              = 1,
	EEscapeDoorActivationMode__EEscapeDoorActivationMode_MAX                         = 2
};

/// Enum /Script/DeadByDaylight.EConditionSubject
/// Size: 0x03
enum class EConditionSubject : uint8_t
{
	EConditionSubject__Instigator                                                    = 0,
	EConditionSubject__Target                                                        = 1,
	EConditionSubject__EConditionSubject_MAX                                         = 2
};

/// Enum /Script/DeadByDaylight.EEventItemContentType
/// Size: 0x12
enum class EEventItemContentType : uint8_t
{
	EEventItemContentType__None                                                      = 0,
	EEventItemContentType__Cells                                                     = 1,
	EEventItemContentType__Character                                                 = 2,
	EEventItemContentType__Customization                                             = 3,
	EEventItemContentType__NameChangeCard                                            = 4,
	EEventItemContentType__FreeTicket                                                = 5,
	EEventItemContentType__OtherCurrency                                             = 6,
	EEventItemContentType__Item                                                      = 7,
	EEventItemContentType__Addon                                                     = 8,
	EEventItemContentType__Offering                                                  = 9,
	EEventItemContentType__Count                                                     = 10,
	EEventItemContentType__EEventItemContentType_MAX                                 = 11
};

/// Enum /Script/DeadByDaylight.EFeaturedStoreContentType
/// Size: 0x06
enum class EFeaturedStoreContentType : uint8_t
{
	EFeaturedStoreContentType__None                                                  = 0,
	EFeaturedStoreContentType__Character                                             = 1,
	EFeaturedStoreContentType__Customization                                         = 2,
	EFeaturedStoreContentType__Outfit                                                = 3,
	EFeaturedStoreContentType__Count                                                 = 4,
	EFeaturedStoreContentType__EFeaturedStoreContentType_MAX                         = 5
};

/// Enum /Script/DeadByDaylight.ELoadoutType
/// Size: 0x04
enum class ELoadoutType : uint8_t
{
	ELoadoutType__Item                                                               = 0,
	ELoadoutType__Perk                                                               = 1,
	ELoadoutType__Offering                                                           = 2,
	ELoadoutType__ELoadoutType_MAX                                                   = 3
};

/// Enum /Script/DeadByDaylight.FlickeringLightType
/// Size: 0x04
enum class FlickeringLightType : uint32_t
{
	FlickeringLightType__Point                                                       = 0,
	FlickeringLightType__Rect                                                        = 1,
	FlickeringLightType__Spot                                                        = 2,
	FlickeringLightType__FlickeringLightType_MAX                                     = 3
};

/// Enum /Script/DeadByDaylight.EFriendUIRichPresence
/// Size: 0x07
enum class EFriendUIRichPresence : uint8_t
{
	EFriendUIRichPresence__Undefined                                                 = 0,
	EFriendUIRichPresence__InMenus                                                   = 1,
	EFriendUIRichPresence__InLobby                                                   = 2,
	EFriendUIRichPresence__InMatch                                                   = 3,
	EFriendUIRichPresence__Connected                                                 = 4,
	EFriendUIRichPresence__Closing                                                   = 5,
	EFriendUIRichPresence__EFriendUIRichPresence_MAX                                 = 6
};

/// Enum /Script/DeadByDaylight.EFriendUIStatus
/// Size: 0x08
enum class EFriendUIStatus : uint8_t
{
	EFriendUIStatus__Offline                                                         = 0,
	EFriendUIStatus__Online                                                          = 1,
	EFriendUIStatus__PlayingDBD                                                      = 2,
	EFriendUIStatus__PendingSentRequest                                              = 3,
	EFriendUIStatus__PendingReceivedRequest                                          = 4,
	EFriendUIStatus__NotFriend                                                       = 5,
	EFriendUIStatus__Self                                                            = 6,
	EFriendUIStatus__EFriendUIStatus_MAX                                             = 7
};

/// Enum /Script/DeadByDaylight.ETileClassType
/// Size: 0x06
enum class ETileClassType : uint8_t
{
	ETileClassType__None                                                             = 0,
	ETileClassType__Normal                                                           = 1,
	ETileClassType__Border                                                           = 2,
	ETileClassType__Escape                                                           = 3,
	ETileClassType__Count                                                            = 4,
	ETileClassType__ETileClassType_MAX                                               = 5
};

/// Enum /Script/DeadByDaylight.EFlowTransitionType
/// Size: 0x08
enum class EFlowTransitionType : uint8_t
{
	EFlowTransitionType__Tally                                                       = 0,
	EFlowTransitionType__OnlineLobby                                                 = 1,
	EFlowTransitionType__PartyLobby                                                  = 2,
	EFlowTransitionType__OfflineLobby                                                = 3,
	EFlowTransitionType__Splash                                                      = 4,
	EFlowTransitionType__MainMenu                                                    = 5,
	EFlowTransitionType__None                                                        = 6,
	EFlowTransitionType__EFlowTransitionType_MAX                                     = 7
};

/// Enum /Script/DeadByDaylight.EUIFlowEvent
/// Size: 0x13
enum class EUIFlowEvent : uint8_t
{
	EUIFlowEvent__None                                                               = 0,
	EUIFlowEvent__AtlantaMainMenuScreenReady                                         = 1,
	EUIFlowEvent__AtlantaNavigationScreenReady                                       = 2,
	EUIFlowEvent__InGameHudReady                                                     = 3,
	EUIFlowEvent__LoadingScreenReady                                                 = 4,
	EUIFlowEvent__OfflineLobbyScreenReady                                            = 5,
	EUIFlowEvent__OnlineLobbyScreenReady                                             = 6,
	EUIFlowEvent__MainMenuScreenReady                                                = 7,
	EUIFlowEvent__SplashScreenReady                                                  = 8,
	EUIFlowEvent__TallyScreenReady                                                   = 9,
	EUIFlowEvent__PartyLobbyScreenReady                                              = 10,
	EUIFlowEvent__StoreScreenReady                                                   = 11,
	EUIFlowEvent__EUIFlowEvent_MAX                                                   = 12
};

/// Enum /Script/DeadByDaylight.EWorldFlowEvent
/// Size: 0x11
enum class EWorldFlowEvent : uint8_t
{
	EWorldFlowEvent__None                                                            = 0,
	EWorldFlowEvent__GameLevelLoaded                                                 = 1,
	EWorldFlowEvent__LoadingGameLevel                                                = 2,
	EWorldFlowEvent__LoadingOfflineParadise                                          = 3,
	EWorldFlowEvent__LoadingOnlineLobbyLevel                                         = 4,
	EWorldFlowEvent__OfflineLobbyMapLoaded                                           = 5,
	EWorldFlowEvent__OfflineParadiseLoaded                                           = 6,
	EWorldFlowEvent__OnlineLobbyMapLoaded                                            = 7,
	EWorldFlowEvent__StartScreenMapLoaded                                            = 8,
	EWorldFlowEvent__LoadingSplashScreen                                             = 9,
	EWorldFlowEvent__EWorldFlowEvent_MAX                                             = 10
};

/// Enum /Script/DeadByDaylight.EGameFlowStep
/// Size: 0x10
enum class EGameFlowStep : uint8_t
{
	EGameFlowStep__None                                                              = 0,
	EGameFlowStep__InGame                                                            = 1,
	EGameFlowStep__OfflineLobby                                                      = 2,
	EGameFlowStep__OfflineTally                                                      = 3,
	EGameFlowStep__OnlineLobby                                                       = 4,
	EGameFlowStep__SplashScreen                                                      = 5,
	EGameFlowStep__PartyLobby                                                        = 6,
	EGameFlowStep__Store                                                             = 7,
	EGameFlowStep__MainMenu                                                          = 8,
	EGameFlowStep__EGameFlowStep_MAX                                                 = 9
};

/// Enum /Script/DeadByDaylight.EGameplayModifierSource
/// Size: 0x08
enum class EGameplayModifierSource : uint8_t
{
	EGameplayModifierSource__VE_Perk                                                 = 0,
	EGameplayModifierSource__VE_StatusEffect                                         = 1,
	EGameplayModifierSource__VE_Item                                                 = 2,
	EGameplayModifierSource__VE_ItemAddon                                            = 3,
	EGameplayModifierSource__VE_All                                                  = 4,
	EGameplayModifierSource__VE_PerkOrStatusEffect                                   = 5,
	EGameplayModifierSource__VE_PerkStatusOrAddon                                    = 6,
	EGameplayModifierSource__VE_MAX                                                  = 7
};

/// Enum /Script/DeadByDaylight.EGateType
/// Size: 0x03
enum class EGateType : uint8_t
{
	EGateType__VE_AndGate                                                            = 0,
	EGateType__VE_TimerGate                                                          = 1,
	EGateType__VE_MAX                                                                = 2
};

/// Enum /Script/DeadByDaylight.EGestureID
/// Size: 0x03
enum class EGestureID : uint8_t
{
	EGestureID__POINT                                                                = 0,
	EGestureID__COME                                                                 = 1,
	EGestureID__EGestureID_MAX                                                       = 2
};

/// Enum /Script/DeadByDaylight.EHatchState
/// Size: 0x05
enum class EHatchState : uint8_t
{
	EHatchState__Hidden                                                              = 0,
	EHatchState__DefaultClose                                                        = 1,
	EHatchState__Opened                                                              = 2,
	EHatchState__ForcedClose                                                         = 3,
	EHatchState__EHatchState_MAX                                                     = 4
};

/// Enum /Script/DeadByDaylight.EHintCategory
/// Size: 0x04
enum class EHintCategory : uint8_t
{
	EHintCategory__Lore                                                              = 0,
	EHintCategory__Survivor                                                          = 1,
	EHintCategory__Killer                                                            = 2,
	EHintCategory__EHintCategory_MAX                                                 = 3
};

/// Enum /Script/DeadByDaylight.EHookType
/// Size: 0x04
enum class EHookType : uint8_t
{
	EHookType__Hook                                                                  = 0,
	EHookType__DeathBed                                                              = 1,
	EHookType__None                                                                  = 2,
	EHookType__EHookType_MAX                                                         = 3
};

/// Enum /Script/DeadByDaylight.EProgressModifier
/// Size: 0x04
enum class EProgressModifier : uint8_t
{
	EProgressModifier__Default                                                       = 0,
	EProgressModifier__Buff                                                          = 1,
	EProgressModifier__Debuff                                                        = 2,
	EProgressModifier__EProgressModifier_MAX                                         = 3
};

/// Enum /Script/DeadByDaylight.EndSessionAction
/// Size: 0x03
enum class EndSessionAction : uint8_t
{
	EndSessionAction__Restart                                                        = 0,
	EndSessionAction__Shutdown                                                       = 1,
	EndSessionAction__EndSessionAction_MAX                                           = 2
};

/// Enum /Script/DeadByDaylight.EKeyBindingsType
/// Size: 0x40
enum class EKeyBindingsType : uint8_t
{
	EKeyBindingsType__None                                                           = -1,
	EKeyBindingsType__Run                                                            = 0,
	EKeyBindingsType__Crouch                                                         = 1,
	EKeyBindingsType__UseItem                                                        = 2,
	EKeyBindingsType__DropItemSurvivor                                               = 3,
	EKeyBindingsType__PickUpItem                                                     = 4,
	EKeyBindingsType__ActionSurvivor                                                 = 5,
	EKeyBindingsType__SecondaryActionSurvivor                                        = 6,
	EKeyBindingsType__AbilitySurvivor                                                = 7,
	EKeyBindingsType__AbilityTwoSurvivor                                             = 8,
	EKeyBindingsType__EventAbilitySurvivor                                           = 9,
	EKeyBindingsType__Gesture1                                                       = 10,
	EKeyBindingsType__Gesture2                                                       = 11,
	EKeyBindingsType__WiggleRightSkillCheck                                          = 12,
	EKeyBindingsType__WiggleLeftSkillCheck                                           = 13,
	EKeyBindingsType__Attack                                                         = 14,
	EKeyBindingsType__Power                                                          = 15,
	EKeyBindingsType__SecondaryPower                                                 = 16,
	EKeyBindingsType__EventAbilityKiller                                             = 17,
	EKeyBindingsType__DropSurvivor                                                   = 18,
	EKeyBindingsType__PickUp                                                         = 19,
	EKeyBindingsType__Aim                                                            = 20,
	EKeyBindingsType__ForwardSurvivor                                                = 21,
	EKeyBindingsType__BackSurvivor                                                   = 22,
	EKeyBindingsType__LeftSurvivor                                                   = 23,
	EKeyBindingsType__RightSurvivor                                                  = 24,
	EKeyBindingsType__CameraUpSurvivor                                               = 25,
	EKeyBindingsType__CameraDownSurvivor                                             = 26,
	EKeyBindingsType__CameraLeftSurvivor                                             = 27,
	EKeyBindingsType__CameraRightSurvivor                                            = 28,
	EKeyBindingsType__ForwardKiller                                                  = 29,
	EKeyBindingsType__BackKiller                                                     = 30,
	EKeyBindingsType__LeftKiller                                                     = 31,
	EKeyBindingsType__RightKiller                                                    = 32,
	EKeyBindingsType__AimKiller                                                      = 33,
	EKeyBindingsType__CameraUpKiller                                                 = 34,
	EKeyBindingsType__CameraDownKiller                                               = 35,
	EKeyBindingsType__CameraLeftKiller                                               = 36,
	EKeyBindingsType__CameraRightKiller                                              = 37,
	EKeyBindingsType__EKeyBindingsType_MAX                                           = 38
};

/// Enum /Script/DeadByDaylight.EKeyBindingsCategories
/// Size: 0x06
enum class EKeyBindingsCategories : uint8_t
{
	EKeyBindingsCategories__None                                                     = -1,
	EKeyBindingsCategories__Movement                                                 = 0,
	EKeyBindingsCategories__Interactions                                             = 1,
	EKeyBindingsCategories__Camera                                                   = 2,
	EKeyBindingsCategories__Gestures                                                 = 3,
	EKeyBindingsCategories__EKeyBindingsCategories_MAX                               = 4
};

/// Enum /Script/DeadByDaylight.EKillerTutorialEndGameType
/// Size: 0x03
enum class EKillerTutorialEndGameType : uint8_t
{
	EKillerTutorialEndGameType__DeathByHook                                          = 0,
	EKillerTutorialEndGameType__DeathByEndGameCollapse                               = 1,
	EKillerTutorialEndGameType__EKillerTutorialEndGameType_MAX                       = 2
};

/// Enum /Script/DeadByDaylight.EKillerHeight
/// Size: 0x04
enum class EKillerHeight : uint8_t
{
	EKillerHeight__Short                                                             = 0,
	EKillerHeight__Average                                                           = 1,
	EKillerHeight__Tall                                                              = 2,
	EKillerHeight__EKillerHeight_MAX                                                 = 3
};

/// Enum /Script/DeadByDaylight.EFPVTransitionStrategy
/// Size: 0x03
enum class EFPVTransitionStrategy : uint8_t
{
	EFPVTransitionStrategy__TurnInvisible                                            = 0,
	EFPVTransitionStrategy__SquishTorsoBackward                                      = 1,
	EFPVTransitionStrategy__EFPVTransitionStrategy_MAX                               = 2
};

/// Enum /Script/DeadByDaylight.ELevelBuilderStepState
/// Size: 0x05
enum class ELevelBuilderStepState : uint8_t
{
	ELevelBuilderStepState__Failed                                                   = 0,
	ELevelBuilderStepState__Pending                                                  = 1,
	ELevelBuilderStepState__Complete                                                 = 2,
	ELevelBuilderStepState__Skipped                                                  = 3,
	ELevelBuilderStepState__ELevelBuilderStepState_MAX                               = 4
};

/// Enum /Script/DeadByDaylight.ELevelBuildingState
/// Size: 0x23
enum class ELevelBuildingState : uint8_t
{
	ELevelBuildingState__NotInitialized                                              = 0,
	ELevelBuildingState__WaitingForInitialSync                                       = 1,
	ELevelBuildingState__SyncSeeds                                                   = 2,
	ELevelBuildingState__GetAvailableItems                                           = 3,
	ELevelBuildingState__PendingGettingItems                                         = 4,
	ELevelBuildingState__GettingLevelsDone                                           = 5,
	ELevelBuildingState__PendingPremadeMapStreaming                                  = 6,
	ELevelBuildingState__GetAvailableEventSpawnables                                 = 7,
	ELevelBuildingState__GetThemedTiles                                              = 8,
	ELevelBuildingState__PendingGettingTiles                                         = 9,
	ELevelBuildingState__SpawnEscapeTiles                                            = 10,
	ELevelBuildingState__SpawnBasementTile                                           = 11,
	ELevelBuildingState__SpawnOutOfWorldTiles                                        = 12,
	ELevelBuildingState__SpawningLevelTiles                                          = 13,
	ELevelBuildingState__SpawnInterTileElements                                      = 14,
	ELevelBuildingState__PendingInterTileElementsSpawning                            = 15,
	ELevelBuildingState__SpawningActors                                              = 16,
	ELevelBuildingState__SpawningMultiPassActors                                     = 17,
	ELevelBuildingState__AttachParentActors                                          = 18,
	ELevelBuildingState__StallingForRemotes                                          = 19,
	ELevelBuildingState__BuildingDone                                                = 20,
	ELevelBuildingState__BuildingStateCount                                          = 21,
	ELevelBuildingState__ELevelBuildingState_MAX                                     = 22
};

/// Enum /Script/DeadByDaylight.EPlayerDataType
/// Size: 0x05
enum class EPlayerDataType : uint8_t
{
	EPlayerDataType__None                                                            = 0,
	EPlayerDataType__PlayerState                                                     = 1,
	EPlayerDataType__SocialPartyMember                                               = 2,
	EPlayerDataType__BotPartyMember                                                  = 3,
	EPlayerDataType__EPlayerDataType_MAX                                             = 4
};

/// Enum /Script/DeadByDaylight.ELobbyWaitStopReason
/// Size: 0x04
enum class ELobbyWaitStopReason : uint8_t
{
	ELobbyWaitStopReason__StartMatchWait                                             = 0,
	ELobbyWaitStopReason__PlayerCancelled                                            = 1,
	ELobbyWaitStopReason__Unknown                                                    = 2,
	ELobbyWaitStopReason__ELobbyWaitStopReason_MAX                                   = 3
};

/// Enum /Script/DeadByDaylight.EMainMenuButton
/// Size: 0x14
enum class EMainMenuButton : uint8_t
{
	EMainMenuButton__News                                                            = 0,
	EMainMenuButton__PlaySurvivor                                                    = 1,
	EMainMenuButton__PlayKiller                                                      = 2,
	EMainMenuButton__KillYourFriends                                                 = 3,
	EMainMenuButton__DailyRituals                                                    = 4,
	EMainMenuButton__Store                                                           = 5,
	EMainMenuButton__Settings                                                        = 6,
	EMainMenuButton__Onboarding                                                      = 7,
	EMainMenuButton__Credits                                                         = 8,
	EMainMenuButton__QuitGame                                                        = 9,
	EMainMenuButton__Friends                                                         = 10,
	EMainMenuButton__Archives                                                        = 11,
	EMainMenuButton__Count                                                           = 12,
	EMainMenuButton__EMainMenuButton_MAX                                             = 13
};

/// Enum /Script/DeadByDaylight.EMapActorCategory
/// Size: 0x07
enum class EMapActorCategory : uint8_t
{
	EMapActorCategory__None                                                          = 0,
	EMapActorCategory__Objective                                                     = 1,
	EMapActorCategory__Chest                                                         = 2,
	EMapActorCategory__BlackLock                                                     = 3,
	EMapActorCategory__KillerObject                                                  = 4,
	EMapActorCategory__ExitGate                                                      = 5,
	EMapActorCategory__EMapActorCategory_MAX                                         = 6
};

/// Enum /Script/DeadByDaylight.EQuadDirection
/// Size: 0x07
enum class EQuadDirection : uint8_t
{
	EQuadDirection__None                                                             = 0,
	EQuadDirection__Up                                                               = 1,
	EQuadDirection__Down                                                             = 2,
	EQuadDirection__Left                                                             = 3,
	EQuadDirection__Right                                                            = 4,
	EQuadDirection__Empty                                                            = 5,
	EQuadDirection__EQuadDirection_MAX                                               = 6
};

/// Enum /Script/DeadByDaylight.ETileVariation
/// Size: 0x07
enum class ETileVariation : uint8_t
{
	ETileVariation__None                                                             = 0,
	ETileVariation__BlueTag                                                          = 1,
	ETileVariation__PinkTag                                                          = 2,
	ETileVariation__YellowTag                                                        = 3,
	ETileVariation__GreenTag                                                         = 4,
	ETileVariation__Empty                                                            = 5,
	ETileVariation__ETileVariation_MAX                                               = 6
};

/// Enum /Script/DeadByDaylight.EPathType
/// Size: 0x11
enum class EPathType : uint8_t
{
	EPathType__None                                                                  = 0,
	EPathType__Straight                                                              = 1,
	EPathType__DeadEnd                                                               = 2,
	EPathType__Corner                                                                = 3,
	EPathType__Crossroads                                                            = 4,
	EPathType__TJunction                                                             = 5,
	EPathType__OrientationOnly                                                       = 6,
	EPathType__Unspecified                                                           = 7,
	EPathType__OrientedCrossroads                                                    = 8,
	EPathType__Count                                                                 = 9,
	EPathType__EPathType_MAX                                                         = 10
};

/// Enum /Script/DeadByDaylight.EDensity
/// Size: 0x07
enum class EDensity : uint8_t
{
	EDensity__Unspecified                                                            = 0,
	EDensity__Light                                                                  = 1,
	EDensity__Moderate                                                               = 2,
	EDensity__Heavy                                                                  = 3,
	EDensity__Empty                                                                  = 4,
	EDensity__Count                                                                  = 5,
	EDensity__EDensity_MAX                                                           = 6
};

/// Enum /Script/DeadByDaylight.ETileType
/// Size: 0x10
enum class ETileType : uint8_t
{
	ETileType__None                                                                  = 0,
	ETileType__Blocker                                                               = 1,
	ETileType__Any                                                                   = 2,
	ETileType__Forest                                                                = 3,
	ETileType__Building                                                              = 4,
	ETileType__Maze                                                                  = 5,
	ETileType__Landmark                                                              = 6,
	ETileType__Signature                                                             = 7,
	ETileType__Count                                                                 = 8,
	ETileType__ETileType_MAX                                                         = 9
};

/// Enum /Script/DeadByDaylight.EDirection
/// Size: 0x09
enum class EDirection : uint8_t
{
	EDirection__Up                                                                   = 0,
	EDirection__Down                                                                 = 1,
	EDirection__Left                                                                 = 2,
	EDirection__Right                                                                = 3,
	EDirection__UpLeft                                                               = 4,
	EDirection__UpRight                                                              = 5,
	EDirection__DownLeft                                                             = 6,
	EDirection__DownRight                                                            = 7,
	EDirection__EDirection_MAX                                                       = 8
};

/// Enum /Script/DeadByDaylight.EBasementType
/// Size: 0x06
enum class EBasementType : uint8_t
{
	EBasementType__None                                                              = 0,
	EBasementType__Basic                                                             = 1,
	EBasementType__MainBuilding                                                      = 2,
	EBasementType__Shack                                                             = 3,
	EBasementType__Count                                                             = 4,
	EBasementType__EBasementType_MAX                                                 = 5
};

/// Enum /Script/DeadByDaylight.EQuadrantSpawnType
/// Size: 0x08
enum class EQuadrantSpawnType : uint8_t
{
	EQuadrantSpawnType__L_Shape                                                      = 0,
	EQuadrantSpawnType__Square                                                       = 1,
	EQuadrantSpawnType__Rect_X                                                       = 2,
	EQuadrantSpawnType__Rect_Y                                                       = 3,
	EQuadrantSpawnType__Rect                                                         = 4,
	EQuadrantSpawnType__None                                                         = 5,
	EQuadrantSpawnType__Count                                                        = 6,
	EQuadrantSpawnType__EQuadrantSpawnType_MAX                                       = 7
};

/// Enum /Script/DeadByDaylight.EQuadrant
/// Size: 0x06
enum class EQuadrant : uint8_t
{
	EQuadrant__BottomRight                                                           = 0,
	EQuadrant__BottomLeft                                                            = 1,
	EQuadrant__TopLeft                                                               = 2,
	EQuadrant__TopRight                                                              = 3,
	EQuadrant__Count                                                                 = 4,
	EQuadrant__EQuadrant_MAX                                                         = 5
};

/// Enum /Script/DeadByDaylight.EQueueingState
/// Size: 0x07
enum class EQueueingState : uint8_t
{
	EQueueingState__None                                                             = 0,
	EQueueingState__Queueing                                                         = 1,
	EQueueingState__MatchCreated                                                     = 2,
	EQueueingState__MatchOpened                                                      = 3,
	EQueueingState__WaitingForTransactions                                           = 4,
	EQueueingState__Complete                                                         = 5,
	EQueueingState__EQueueingState_MAX                                               = 6
};

/// Enum /Script/DeadByDaylight.EDBDCameraViewType
/// Size: 0x18
enum class EDBDCameraViewType : uint8_t
{
	EDBDCameraViewType__None                                                         = 0,
	EDBDCameraViewType__Main                                                         = 1,
	EDBDCameraViewType__Offering                                                     = 2,
	EDBDCameraViewType__AnimationPreview                                             = 3,
	EDBDCameraViewType__ArchiveIntro                                                 = 4,
	EDBDCameraViewType__ArchiveRewards                                               = 5,
	EDBDCameraViewType__ArchiveTome                                                  = 6,
	EDBDCameraViewType__SurvivorOffline                                              = 7,
	EDBDCameraViewType__SurvivorOnline                                               = 8,
	EDBDCameraViewType__KillerOffline                                                = 9,
	EDBDCameraViewType__KillerOnline                                                 = 10,
	EDBDCameraViewType__Shop                                                         = 11,
	EDBDCameraViewType__ShopEntry                                                    = 12,
	EDBDCameraViewType__ShopStory                                                    = 13,
	EDBDCameraViewType__ShopCharacter                                                = 14,
	EDBDCameraViewType__ShopHook                                                     = 15,
	EDBDCameraViewType__Paradise                                                     = 16,
	EDBDCameraViewType__EDBDCameraViewType_MAX                                       = 17
};

/// Enum /Script/DeadByDaylight.EPlayerAnimState
/// Size: 0x05
enum class EPlayerAnimState : uint8_t
{
	EPlayerAnimState__VE_Default                                                     = 0,
	EPlayerAnimState__VE_Injured                                                     = 1,
	EPlayerAnimState__VE_InjuredCrouch                                               = 2,
	EPlayerAnimState__VE_Crouch                                                      = 3,
	EPlayerAnimState__VE_MAX                                                         = 4
};

/// Enum /Script/DeadByDaylight.EGuidedState
/// Size: 0x18
enum class EGuidedState : uint8_t
{
	EGuidedState__VE_None                                                            = 0,
	EGuidedState__VE_PrepBeingKilled                                                 = 1,
	EGuidedState__VE_BeingKilled                                                     = 2,
	EGuidedState__VE_PrepGuidedAction                                                = 3,
	EGuidedState__VE_BeingHelpedOffHookFront                                         = 4,
	EGuidedState__VE_BeingPickedUp                                                   = 5,
	EGuidedState__VE_BeingPutDown                                                    = 6,
	EGuidedState__VE_BeingCarried                                                    = 7,
	EGuidedState__VE_BeingPutOnHook                                                  = 8,
	EGuidedState__VE_BeingHealed                                                     = 9,
	EGuidedState__VE_BeingPulledFromCloset                                           = 10,
	EGuidedState__VE_BeingHelpedFromTrap                                             = 11,
	EGuidedState__VE_AttachReverseBearTrap                                           = 12,
	EGuidedState__VE_BeingMended                                                     = 13,
	EGuidedState__VE_BeingInjectedWithSerum                                          = 14,
	EGuidedState__VE_CarriedByK29Rush                                                = 15,
	EGuidedState__VE_BeingCleansedOfK29Infection                                     = 16,
	EGuidedState__VE_MAX                                                             = 17
};

/// Enum /Script/DeadByDaylight.EOfferingEffectType
/// Size: 0x61
enum class EOfferingEffectType : uint8_t
{
	EOfferingEffectType__Invalid                                                     = 0,
	EOfferingEffectType__SlasherPointsAll                                            = 1,
	EOfferingEffectType__PointsBrutality                                             = 2,
	EOfferingEffectType__PointsDeviouness                                            = 3,
	EOfferingEffectType__PointsSacrice                                               = 4,
	EOfferingEffectType__PointsHunting                                               = 5,
	EOfferingEffectType__CamperPointsAll                                             = 6,
	EOfferingEffectType__PointsObjective                                             = 7,
	EOfferingEffectType__PointsSurvival                                              = 8,
	EOfferingEffectType__PointsAltruism                                              = 9,
	EOfferingEffectType__PointsBoldness                                              = 10,
	EOfferingEffectType__SurvivorCharacterXP                                         = 11,
	EOfferingEffectType__KillerCharacterXP                                           = 12,
	EOfferingEffectType__CamperItemLostPrevention                                    = 13,
	EOfferingEffectType__KillerItemLostPrevention                                    = 14,
	EOfferingEffectType__Luck                                                        = 15,
	EOfferingEffectType__IndustrialThemeSelectionModifier                            = 16,
	EOfferingEffectType__JunkyardThemeSelectionModifier                              = 17,
	EOfferingEffectType__FarmThemeSelectionModifier                                  = 18,
	EOfferingEffectType__SwampThemeSelectionModifier                                 = 19,
	EOfferingEffectType__MapModifier                                                 = 20,
	EOfferingEffectType__ChestCountModifier                                          = 21,
	EOfferingEffectType__PortableHookCountModifier                                   = 22,
	EOfferingEffectType__LairCountModifier                                           = 23,
	EOfferingEffectType__PlayerGrouping                                              = 24,
	EOfferingEffectType__FarKiller                                                   = 25,
	EOfferingEffectType__KillAllowedModifier                                         = 26,
	EOfferingEffectType__LightingModification                                        = 27,
	EOfferingEffectType__FogModification                                             = 28,
	EOfferingEffectType__LivingWorldObjectCountModifier                              = 29,
	EOfferingEffectType__LivingWorldObjectMultModifier                               = 30,
	EOfferingEffectType__KillLastSurvivor                                            = 31,
	EOfferingEffectType__SuburbsThemeSelectionModifier                               = 32,
	EOfferingEffectType__AsylumThemeSelectionModifier                                = 33,
	EOfferingEffectType__KillerSelectionModifier                                     = 34,
	EOfferingEffectType__HospitalThemeSelectionModifier                              = 35,
	EOfferingEffectType__KillAllowedAfterStrugglePhase                               = 36,
	EOfferingEffectType__BorealThemeSelectionModifier                                = 37,
	EOfferingEffectType__SpringwoodThemeSelectionModifier                            = 38,
	EOfferingEffectType__FinlandThemeSelectionModifier                               = 39,
	EOfferingEffectType__JapaneseCountrySideSelectionModifier                        = 40,
	EOfferingEffectType__KenyaThemeSelectionModifier                                 = 41,
	EOfferingEffectType__QatarThemeSelectionModifier                                 = 42,
	EOfferingEffectType__UkraineThemeSelectionModifier                               = 43,
	EOfferingEffectType__WalesThemeSelectionModifier                                 = 44,
	EOfferingEffectType__CancelThemeSelectionModifier                                = 45,
	EOfferingEffectType__BasementMainBuildingModifier                                = 46,
	EOfferingEffectType__BasementShackModifier                                       = 47,
	EOfferingEffectType__HatchMainBuildingModifier                                   = 48,
	EOfferingEffectType__HatchShackModifier                                          = 49,
	EOfferingEffectType__EclipseThemeSelectionModifier                               = 50,
	EOfferingEffectType__IonThemeSelectionModifier                                   = 51,
	EOfferingEffectType__MeteorThemeSelectionModifier                                = 52,
	EOfferingEffectType__QuantumThemeSelectionModifier                               = 53,
	EOfferingEffectType__UmbraThemeSelectionModifier                                 = 54,
	EOfferingEffectType__WormholeThemeSelectionModifier                              = 55,
	EOfferingEffectType__SpecialEvent                                                = 56,
	EOfferingEffectType__SpecialEventTallyBonus                                      = 57,
	EOfferingEffectType__ObjectSubsitution                                           = 58,
	EOfferingEffectType__ObjectAddition                                              = 59,
	EOfferingEffectType__EOfferingEffectType_MAX                                     = 60
};

/// Enum /Script/DeadByDaylight.EOfferingType
/// Size: 0x19
enum class EOfferingType : uint8_t
{
	EOfferingType__None                                                              = 0,
	EOfferingType__Atmosphere                                                        = 1,
	EOfferingType__Lighting                                                          = 2,
	EOfferingType__Points                                                            = 3,
	EOfferingType__Zone                                                              = 4,
	EOfferingType__Position                                                          = 5,
	EOfferingType__Chest                                                             = 6,
	EOfferingType__Hook                                                              = 7,
	EOfferingType__Protection                                                        = 8,
	EOfferingType__Hatch                                                             = 9,
	EOfferingType__Odds                                                              = 10,
	EOfferingType__Killing                                                           = 11,
	EOfferingType__World                                                             = 12,
	EOfferingType__Luck                                                              = 13,
	EOfferingType__Killer                                                            = 14,
	EOfferingType__ProceduralGeneration                                              = 15,
	EOfferingType__CharacterXP                                                       = 16,
	EOfferingType__Count                                                             = 17,
	EOfferingType__EOfferingType_MAX                                                 = 18
};

/// Enum /Script/DeadByDaylight.EOfferingCombinationResult
/// Size: 0x06
enum class EOfferingCombinationResult : uint8_t
{
	EOfferingCombinationResult__None                                                 = 0,
	EOfferingCombinationResult__Stacked                                              = 1,
	EOfferingCombinationResult__CoConsummed                                          = 2,
	EOfferingCombinationResult__Overruling                                           = 3,
	EOfferingCombinationResult__Cancelled                                            = 4,
	EOfferingCombinationResult__EOfferingCombinationResult_MAX                       = 5
};

/// Enum /Script/DeadByDaylight.EOfferingSequenceState
/// Size: 0x13
enum class EOfferingSequenceState : uint8_t
{
	EOfferingSequenceState__SmokeIn                                                  = 0,
	EOfferingSequenceState__FadeOut                                                  = 1,
	EOfferingSequenceState__FadeIn                                                   = 2,
	EOfferingSequenceState__NotInitialized                                           = 3,
	EOfferingSequenceState__Idle                                                     = 4,
	EOfferingSequenceState__Init                                                     = 5,
	EOfferingSequenceState__InitDone                                                 = 6,
	EOfferingSequenceState__Reveal                                                   = 7,
	EOfferingSequenceState__RevealDone                                               = 8,
	EOfferingSequenceState__ShowInteraction                                          = 9,
	EOfferingSequenceState__Finalize                                                 = 10,
	EOfferingSequenceState__Done                                                     = 11,
	EOfferingSequenceState__EOfferingSequenceState_MAX                               = 12
};

/// Enum /Script/DeadByDaylight.EOfflineLobbyState
/// Size: 0x07
enum class EOfflineLobbyState : uint8_t
{
	EOfflineLobbyState__None                                                         = 0,
	EOfflineLobbyState__MainMenu                                                     = 1,
	EOfflineLobbyState__OfflineLobby                                                 = 2,
	EOfflineLobbyState__Store                                                        = 3,
	EOfflineLobbyState__PartyLobby                                                   = 4,
	EOfflineLobbyState__Archives                                                     = 5,
	EOfflineLobbyState__EOfflineLobbyState_MAX                                       = 6
};

/// Enum /Script/DeadByDaylight.EOniAttackType
/// Size: 0x05
enum class EOniAttackType : uint8_t
{
	EOniAttackType__VE_NotDemonMode                                                  = 0,
	EOniAttackType__VE_DemonBasicAttack                                              = 1,
	EOniAttackType__VE_DemonPowerAttack                                              = 2,
	EOniAttackType__VE_DemonDashAttack                                               = 3,
	EOniAttackType__VE_MAX                                                           = 4
};

/// Enum /Script/DeadByDaylight.EJoinSessionFailureType
/// Size: 0x10
enum class EJoinSessionFailureType : uint8_t
{
	EJoinSessionFailureType__None                                                    = 0,
	EJoinSessionFailureType__JoiningAlreadyStartedGame                               = 1,
	EJoinSessionFailureType__JoiningPrivateGame                                      = 2,
	EJoinSessionFailureType__JoiningAlreadyFullGame                                  = 3,
	EJoinSessionFailureType__JoiningInvitation                                       = 4,
	EJoinSessionFailureType__JoiningFailedOnDisconnect                               = 5,
	EJoinSessionFailureType__JoiningHostUnreachable                                  = 6,
	EJoinSessionFailureType__JoiningIncompatibleServer                               = 7,
	EJoinSessionFailureType__MatchmakingInfoExpired                                  = 8,
	EJoinSessionFailureType__EJoinSessionFailureType_MAX                             = 9
};

/// Enum /Script/DeadByDaylight.EOnlineOperation
/// Size: 0x10
enum class EOnlineOperation : uint8_t
{
	EOnlineOperation__None                                                           = 0,
	EOnlineOperation__HostGame                                                       = 1,
	EOnlineOperation__EndingSession                                                  = 2,
	EOnlineOperation__DestroyingSession                                              = 3,
	EOnlineOperation__PreparingJoinGame                                              = 4,
	EOnlineOperation__JoinGame                                                       = 5,
	EOnlineOperation__JoinCancelled                                                  = 6,
	EOnlineOperation__OnlineCheck                                                    = 7,
	EOnlineOperation__CancellingMatchmaking                                          = 8,
	EOnlineOperation__EOnlineOperation_MAX                                           = 9
};

/// Enum /Script/DeadByDaylight.EOverlayMode
/// Size: 0x05
enum class EOverlayMode : uint8_t
{
	EOverlayMode__Default                                                            = 0,
	EOverlayMode__TrialOrTally                                                       = 1,
	EOverlayMode__TutorialLevel                                                      = 2,
	EOverlayMode__TutorialBotMatch                                                   = 3,
	EOverlayMode__EOverlayMode_MAX                                                   = 4
};

/// Enum /Script/DeadByDaylight.EOverlayTabs
/// Size: 0x08
enum class EOverlayTabs : uint8_t
{
	EOverlayTabs__Settings                                                           = 0,
	EOverlayTabs__Controls                                                           = 1,
	EOverlayTabs__Help                                                               = 2,
	EOverlayTabs__Survivors                                                          = 3,
	EOverlayTabs__CoreTabCount                                                       = 4,
	EOverlayTabs__About                                                              = 5,
	EOverlayTabs__Language                                                           = 6,
	EOverlayTabs__EOverlayTabs_MAX                                                   = 7
};

/// Enum /Script/DeadByDaylight.EPalletStunZoneSideStrategy
/// Size: 0x03
enum class EPalletStunZoneSideStrategy : uint8_t
{
	EPalletStunZoneSideStrategy__OppositeSideToPlayerExecutingPulldown               = 0,
	EPalletStunZoneSideStrategy__SameSideToPlayerExecutingPulldown                   = 1,
	EPalletStunZoneSideStrategy__EPalletStunZoneSideStrategy_MAX                     = 2
};

/// Enum /Script/DeadByDaylight.EPalletPushSideStrategy
/// Size: 0x03
enum class EPalletPushSideStrategy : uint8_t
{
	EPalletPushSideStrategy__PushToClosestPalletSide                                 = 0,
	EPalletPushSideStrategy__PushOppositeToPlayerExecutingPulldown                   = 1,
	EPalletPushSideStrategy__EPalletPushSideStrategy_MAX                             = 2
};

/// Enum /Script/DeadByDaylight.EPalletSide
/// Size: 0x04
enum class EPalletSide : uint8_t
{
	EPalletSide__None                                                                = 0,
	EPalletSide__Left                                                                = 1,
	EPalletSide__Right                                                               = 2,
	EPalletSide__EPalletSide_MAX                                                     = 3
};

/// Enum /Script/DeadByDaylight.EPalletState
/// Size: 0x05
enum class EPalletState : uint8_t
{
	EPalletState__Up                                                                 = 0,
	EPalletState__Falling                                                            = 1,
	EPalletState__Fallen                                                             = 2,
	EPalletState__Destroyed                                                          = 3,
	EPalletState__EPalletState_MAX                                                   = 4
};

/// Enum /Script/DeadByDaylight.EPerkTokenSoundStrategy
/// Size: 0x04
enum class EPerkTokenSoundStrategy : uint8_t
{
	EPerkTokenSoundStrategy__NoSound                                                 = 0,
	EPerkTokenSoundStrategy__SoundOnEveryTokenChange                                 = 1,
	EPerkTokenSoundStrategy__SoundOnReachMaxTokens                                   = 2,
	EPerkTokenSoundStrategy__EPerkTokenSoundStrategy_MAX                             = 3
};

/// Enum /Script/DeadByDaylight.EPerspectiveActivationCondition
/// Size: 0x04
enum class EPerspectiveActivationCondition : uint8_t
{
	EPerspectiveActivationCondition__LocallyControlled                               = 0,
	EPerspectiveActivationCondition__LocallyObserved                                 = 1,
	EPerspectiveActivationCondition__NotLocallyObserved                              = 2,
	EPerspectiveActivationCondition__EPerspectiveActivationCondition_MAX             = 3
};

/// Enum /Script/DeadByDaylight.ESaveGameFailureType
/// Size: 0x07
enum class ESaveGameFailureType : uint8_t
{
	ESaveGameFailureType__None                                                       = 0,
	ESaveGameFailureType__InvalidPlayerID                                            = 1,
	ESaveGameFailureType__InvalidGameInstance                                        = 2,
	ESaveGameFailureType__NoServerConnection                                         = 3,
	ESaveGameFailureType__UserNotSignedIn                                            = 4,
	ESaveGameFailureType__Unknown                                                    = 5,
	ESaveGameFailureType__ESaveGameFailureType_MAX                                   = 6
};

/// Enum /Script/DeadByDaylight.ERequestState
/// Size: 0x05
enum class ERequestState : uint8_t
{
	ERequestState__VE_None                                                           = 0,
	ERequestState__VE_Pending                                                        = 1,
	ERequestState__VE_Success                                                        = 2,
	ERequestState__VE_Fail                                                           = 3,
	ERequestState__VE_MAX                                                            = 4
};

/// Enum /Script/DeadByDaylight.EInteractionValidationState
/// Size: 0x07
enum class EInteractionValidationState : uint8_t
{
	EInteractionValidationState__None                                                = 0,
	EInteractionValidationState__Predicted                                           = 1,
	EInteractionValidationState__Authorized                                          = 2,
	EInteractionValidationState__DeniedByRaceCondition                               = 3,
	EInteractionValidationState__DeniedByTimeout                                     = 4,
	EInteractionValidationState__DeniedByError                                       = 5,
	EInteractionValidationState__EInteractionValidationState_MAX                     = 6
};

/// Enum /Script/DeadByDaylight.ESecondaryActionRequestTypes
/// Size: 0x04
enum class ESecondaryActionRequestTypes : uint8_t
{
	ESecondaryActionRequestTypes__None                                               = 0,
	ESecondaryActionRequestTypes__SecondaryActionRequested                           = 1,
	ESecondaryActionRequestTypes__SecondaryActionRequestedFromCancel                 = 2,
	ESecondaryActionRequestTypes__ESecondaryActionRequestTypes_MAX                   = 3
};

/// Enum /Script/DeadByDaylight.ERadialProgressBarType
/// Size: 0x03
enum class ERadialProgressBarType : uint8_t
{
	ERadialProgressBarType__Yellow                                                   = 0,
	ERadialProgressBarType__Red                                                      = 1,
	ERadialProgressBarType__ERadialProgressBarType_MAX                               = 2
};

/// Enum /Script/DeadByDaylight.EPreLevelGenerationModifierType
/// Size: 0x03
enum class EPreLevelGenerationModifierType : uint8_t
{
	EPreLevelGenerationModifierType__None                                            = 0,
	EPreLevelGenerationModifierType__ModifyKillerObjectCount                         = 1,
	EPreLevelGenerationModifierType__EPreLevelGenerationModifierType_MAX             = 2
};

/// Enum /Script/DeadByDaylight.EPrestigeRewardType
/// Size: 0x04
enum class EPrestigeRewardType : uint8_t
{
	EPrestigeRewardType__None                                                        = 0,
	EPrestigeRewardType__Customization                                               = 1,
	EPrestigeRewardType__Perk                                                        = 2,
	EPrestigeRewardType__EPrestigeRewardType_MAX                                     = 3
};

/// Enum /Script/DeadByDaylight.ESurvivorGrouping
/// Size: 0x06
enum class ESurvivorGrouping : uint8_t
{
	ESurvivorGrouping__Invalid                                                       = 0,
	ESurvivorGrouping__Separated                                                     = 1,
	ESurvivorGrouping__Grouped2                                                      = 2,
	ESurvivorGrouping__Grouped3                                                      = 3,
	ESurvivorGrouping__Grouped4                                                      = 4,
	ESurvivorGrouping__ESurvivorGrouping_MAX                                         = 5
};

/// Enum /Script/DeadByDaylight.EscapeStrategyType
/// Size: 0x04
enum class EscapeStrategyType : uint8_t
{
	EscapeStrategyType__EscapeDoor                                                   = 0,
	EscapeStrategyType__EscapeHatch                                                  = 1,
	EscapeStrategyType__Count                                                        = 2,
	EscapeStrategyType__EscapeStrategyType_MAX                                       = 3
};

/// Enum /Script/DeadByDaylight.EPromoPackContentType
/// Size: 0x12
enum class EPromoPackContentType : uint8_t
{
	EPromoPackContentType__None                                                      = 0,
	EPromoPackContentType__Item                                                      = 1,
	EPromoPackContentType__Addon                                                     = 2,
	EPromoPackContentType__Offering                                                  = 3,
	EPromoPackContentType__Character                                                 = 4,
	EPromoPackContentType__Customization                                             = 5,
	EPromoPackContentType__Bonus                                                     = 6,
	EPromoPackContentType__BloodPoints                                               = 7,
	EPromoPackContentType__IridescentShards                                          = 8,
	EPromoPackContentType__FreeTicket                                                = 9,
	EPromoPackContentType__Count                                                     = 10,
	EPromoPackContentType__EPromoPackContentType_MAX                                 = 11
};

/// Enum /Script/DeadByDaylight.EConditionNeedsType
/// Size: 0x03
enum class EConditionNeedsType : uint8_t
{
	EConditionNeedsType__AllTrue                                                     = 0,
	EConditionNeedsType__AnyTrue                                                     = 1,
	EConditionNeedsType__EConditionNeedsType_MAX                                     = 2
};

/// Enum /Script/DeadByDaylight.ERefundSource
/// Size: 0x06
enum class ERefundSource : uint8_t
{
	ERefundSource__None                                                              = 0,
	ERefundSource__BloodMarket                                                       = 1,
	ERefundSource__DailyCalendar                                                     = 2,
	ERefundSource__PromoPack                                                         = 3,
	ERefundSource__Count                                                             = 4,
	ERefundSource__ERefundSource_MAX                                                 = 5
};

/// Enum /Script/DeadByDaylight.ESaveGameErrorCategory
/// Size: 0x06
enum class ESaveGameErrorCategory : uint8_t
{
	ESaveGameErrorCategory__EvaluateDisconnectPenalty                                = 0,
	ESaveGameErrorCategory__SaveGameSaveError                                        = 1,
	ESaveGameErrorCategory__SaveGameUnreadable                                       = 2,
	ESaveGameErrorCategory__SaveGameValidation                                       = 3,
	ESaveGameErrorCategory__SaveFailed                                               = 4,
	ESaveGameErrorCategory__ESaveGameErrorCategory_MAX                               = 5
};

/// Enum /Script/DeadByDaylight.EScreenType
/// Size: 0x04
enum class EScreenType : uint8_t
{
	EScreenType__eScaleformScreen                                                    = 0,
	EScreenType__eUMGScreen                                                          = 1,
	EScreenType__eMixedScaleformUMG                                                  = 2,
	EScreenType__EScreenType_MAX                                                     = 3
};

/// Enum /Script/DeadByDaylight.EScreenshotToolTargetSubCategory
/// Size: 0x07
enum class EScreenshotToolTargetSubCategory : uint8_t
{
	EScreenshotToolTargetSubCategory__None                                           = 0,
	EScreenshotToolTargetSubCategory__Id                                             = 1,
	EScreenshotToolTargetSubCategory__CharacterId                                    = 2,
	EScreenshotToolTargetSubCategory__OutfitId                                       = 3,
	EScreenshotToolTargetSubCategory__GenderRole                                     = 4,
	EScreenshotToolTargetSubCategory__Category                                       = 5,
	EScreenshotToolTargetSubCategory__EScreenshotToolTargetSubCategory_MAX           = 6
};

/// Enum /Script/DeadByDaylight.EScreenshotToolTargetCategory
/// Size: 0x06
enum class EScreenshotToolTargetCategory : uint8_t
{
	EScreenshotToolTargetCategory__None                                              = 0,
	EScreenshotToolTargetCategory__Piece                                             = 1,
	EScreenshotToolTargetCategory__TwoPieces                                         = 2,
	EScreenshotToolTargetCategory__Outfit                                            = 3,
	EScreenshotToolTargetCategory__Charm                                             = 4,
	EScreenshotToolTargetCategory__EScreenshotToolTargetCategory_MAX                 = 5
};

/// Enum /Script/DeadByDaylight.EScreenshotToolBatchType
/// Size: 0x14
enum class EScreenshotToolBatchType : uint8_t
{
	EScreenshotToolBatchType__SelectedItemOrOutfit                                   = 0,
	EScreenshotToolBatchType__SelectedItemOrOutfitSeparated                          = 1,
	EScreenshotToolBatchType__SelectedCharacterItems                                 = 2,
	EScreenshotToolBatchType__SelectedCharacterOutfits                               = 3,
	EScreenshotToolBatchType__SelectedCharacterAndCategory                           = 4,
	EScreenshotToolBatchType__ItemsMissingIcon                                       = 5,
	EScreenshotToolBatchType__OutfitMissingIcon                                      = 6,
	EScreenshotToolBatchType__CharmsMissingIcon                                      = 7,
	EScreenshotToolBatchType__PerkCharmsMissingIcon                                  = 8,
	EScreenshotToolBatchType__AllItems                                               = 9,
	EScreenshotToolBatchType__AllOutfits                                             = 10,
	EScreenshotToolBatchType__AllCharms                                              = 11,
	EScreenshotToolBatchType__AllPerkCharms                                          = 12,
	EScreenshotToolBatchType__EScreenshotToolBatchType_MAX                           = 13
};

/// Enum /Script/DeadByDaylight.EScreenshotToolState
/// Size: 0x10
enum class EScreenshotToolState : uint8_t
{
	EScreenshotToolState__None                                                       = 0,
	EScreenshotToolState__PrepareBatch                                               = 1,
	EScreenshotToolState__GenerateIcons                                              = 2,
	EScreenshotToolState__ShaderCompilation                                          = 3,
	EScreenshotToolState__GenerateAsset                                              = 4,
	EScreenshotToolState__SaveAndCheckout                                            = 5,
	EScreenshotToolState__FinishSuccess                                              = 6,
	EScreenshotToolState__FinishFail                                                 = 7,
	EScreenshotToolState__FinishCancel                                               = 8,
	EScreenshotToolState__EScreenshotToolState_MAX                                   = 9
};

/// Enum /Script/DeadByDaylight.SettingsId
/// Size: 0x74
enum class SettingsId : uint8_t
{
	SettingsId__None                                                                 = -1,
	SettingsId__Language                                                             = 0,
	SettingsId__RevokeConsent                                                        = 1,
	SettingsId__RevokeMarketingConsent                                               = 2,
	SettingsId__BhvrAccount                                                          = 3,
	SettingsId__AllowCrossplayGeneric                                                = 4,
	SettingsId__AllowCrossplayLive                                                   = 5,
	SettingsId__AutoDeclineFriendRequests                                            = 6,
	SettingsId__PlayerId                                                             = 7,
	SettingsId__PartyPrivacy                                                         = 8,
	SettingsId__FieldOfView                                                          = 9,
	SettingsId__Quality                                                              = 10,
	SettingsId__AutoAdjust                                                           = 11,
	SettingsId__Resolution                                                           = 12,
	SettingsId__ScreenResolution                                                     = 13,
	SettingsId__RenderSize                                                           = 14,
	SettingsId__FullScreen                                                           = 15,
	SettingsId__HUDConstrainedAspectRatio                                            = 16,
	SettingsId__VSync                                                                = 17,
	SettingsId__AntiAliasingMode                                                     = 18,
	SettingsId__EnableFSR                                                            = 19,
	SettingsId__SharpnessValue                                                       = 20,
	SettingsId__MenuScaleFactor                                                      = 21,
	SettingsId__HudScaleFactor                                                       = 22,
	SettingsId__SkillCheckScaleFactor                                                = 23,
	SettingsId__LargeText                                                            = 24,
	SettingsId__BloodwebInteractionBehaviour                                         = 25,
	SettingsId__TerrorRadiusVisualFeedback                                           = 26,
	SettingsId__HUDPlayerNamesVisibility                                             = 27,
	SettingsId__HUDKillerHookCountVisibility                                         = 28,
	SettingsId__HUDScoreEventsVisibility                                             = 29,
	SettingsId__LegacyPrestigePortraits                                              = 30,
	SettingsId__ChallengeProgression                                                 = 31,
	SettingsId__ChallengeCompletion                                                  = 32,
	SettingsId__PlayerCardAnimationBehaviour                                         = 33,
	SettingsId__MainVolume                                                           = 34,
	SettingsId__MenuMusicVolume                                                      = 35,
	SettingsId__Headphones                                                           = 36,
	SettingsId__MuteOnFocusLost                                                      = 37,
	SettingsId__InvertYAxis                                                          = 38,
	SettingsId__SurvivorMouseSensitivity                                             = 39,
	SettingsId__SurvivorControllerSensitivity                                        = 40,
	SettingsId__KillerMouseSensitivity                                               = 41,
	SettingsId__KillerControllerSensitivity                                          = 42,
	SettingsId__SurvivorToggleInteractions                                           = 43,
	SettingsId__KillerToggleInteractions                                             = 44,
	SettingsId__SprintToCancel                                                       = 45,
	SettingsId__ColorBarPalette                                                      = 46,
	SettingsId__ColorBlindMode                                                       = 47,
	SettingsId__ColorBlindModeIntensity                                              = 48,
	SettingsId__BeginnerMode                                                         = 49,
	SettingsId__Subtitles                                                            = 50,
	SettingsId__SubtitlesBackgroundOpacity                                           = 51,
	SettingsId__SubtitlesSize                                                        = 52,
	SettingsId__IsAnonymousMode                                                      = 53,
	SettingsId__HideYourName                                                         = 54,
	SettingsId__HideOtherNames                                                       = 55,
	SettingsId__HiddenMatchmakingDelay                                               = 56,
	SettingsId__SurvivorCameraSensitivity                                            = 57,
	SettingsId__KillerCameraSensitivity                                              = 58,
	SettingsId__MenuMusicVolumeOn                                                    = 59,
	SettingsId__MainVolumeOn                                                         = 60,
	SettingsId__AimAssist                                                            = 61,
	SettingsId__SurvivorQuickTurn                                                    = 62,
	SettingsId__KillerQuickTurn                                                      = 63,
	SettingsId__FPSLimit                                                             = 64,
	SettingsId__AutoQuality                                                          = 65,
	SettingsId__ControlType                                                          = 66,
	SettingsId__CustomizedControls                                                   = 67,
	SettingsId__DynamicResolution                                                    = 68,
	SettingsId__InvertYAxisSurvivor                                                  = 69,
	SettingsId__BetaWiggleSkillCheck                                                 = 70,
	SettingsId__HapticsVibrationPS5                                                  = 71,
	SettingsId__SettingsId_MAX                                                       = 72
};

/// Enum /Script/DeadByDaylight.SettingsSubCategory
/// Size: 0x18
enum class SettingsSubCategory : uint8_t
{
	SettingsSubCategory__None                                                        = -1,
	SettingsSubCategory__Language                                                    = 0,
	SettingsSubCategory__Tutorial                                                    = 1,
	SettingsSubCategory__Privacy                                                     = 2,
	SettingsSubCategory__Accessibility                                               = 3,
	SettingsSubCategory__InGameText                                                  = 4,
	SettingsSubCategory__ColorBlindMode                                              = 5,
	SettingsSubCategory__MotionSickness                                              = 6,
	SettingsSubCategory__Social                                                      = 7,
	SettingsSubCategory__GameplayPrivacy                                             = 8,
	SettingsSubCategory__Graphics                                                    = 9,
	SettingsSubCategory__UIHud                                                       = 10,
	SettingsSubCategory__Audio                                                       = 11,
	SettingsSubCategory__CommonControls                                              = 12,
	SettingsSubCategory__SurvivorControls                                            = 13,
	SettingsSubCategory__KillerControls                                              = 14,
	SettingsSubCategory__Atlanta                                                     = 15,
	SettingsSubCategory__SettingsSubCategory_MAX                                     = 16
};

/// Enum /Script/DeadByDaylight.SettingsCategory
/// Size: 0x10
enum class SettingsCategory : uint8_t
{
	SettingsCategory__None                                                           = -1,
	SettingsCategory__General                                                        = 0,
	SettingsCategory__Accessibility                                                  = 1,
	SettingsCategory__Beta                                                           = 2,
	SettingsCategory__Online                                                         = 3,
	SettingsCategory__Graphics                                                       = 4,
	SettingsCategory__Audio                                                          = 5,
	SettingsCategory__Controls                                                       = 6,
	SettingsCategory__Atlanta                                                        = 7,
	SettingsCategory__SettingsCategory_MAX                                           = 8
};

/// Enum /Script/DeadByDaylight.SettingsType
/// Size: 0x10
enum class SettingsType : uint8_t
{
	SettingsType__None                                                               = -1,
	SettingsType__Button                                                             = 0,
	SettingsType__PlayerId                                                           = 1,
	SettingsType__NumericStepper                                                     = 2,
	SettingsType__Dropdown                                                           = 3,
	SettingsType__ColorBar                                                           = 4,
	SettingsType__TextStepper                                                        = 5,
	SettingsType__BoolTextStepper                                                    = 6,
	SettingsType__Checkbox                                                           = 7,
	SettingsType__SettingsType_MAX                                                   = 8
};

/// Enum /Script/DeadByDaylight.EStoreUITag
/// Size: 0x05
enum class EStoreUITag : uint8_t
{
	EStoreUITag__None                                                                = 0,
	EStoreUITag__Sale                                                                = 1,
	EStoreUITag__New                                                                 = 2,
	EStoreUITag__LimitedTime                                                         = 3,
	EStoreUITag__EStoreUITag_MAX                                                     = 4
};

/// Enum /Script/DeadByDaylight.EDisabledItemOption
/// Size: 0x05
enum class EDisabledItemOption : uint8_t
{
	EDisabledItemOption__Available                                                   = 0,
	EDisabledItemOption__DisabledByGameType                                          = 1,
	EDisabledItemOption__KillSwitchedByGameType                                      = 2,
	EDisabledItemOption__KillSwitched                                                = 3,
	EDisabledItemOption__EDisabledItemOption_MAX                                     = 4
};

/// Enum /Script/DeadByDaylight.ECatalogStatus
/// Size: 0x04
enum class ECatalogStatus : uint8_t
{
	ECatalogStatus__NotReady                                                         = 0,
	ECatalogStatus__Updating                                                         = 1,
	ECatalogStatus__Fetched                                                          = 2,
	ECatalogStatus__ECatalogStatus_MAX                                               = 3
};

/// Enum /Script/DeadByDaylight.EShopLoadProgress
/// Size: 0x08
enum class EShopLoadProgress : uint8_t
{
	EShopLoadProgress__None                                                          = 0,
	EShopLoadProgress__LoadCatalog                                                   = 1,
	EShopLoadProgress__LoadCurrencyPacks                                             = 2,
	EShopLoadProgress__PlatformStoreCatalog                                          = 3,
	EShopLoadProgress__Inventory                                                     = 4,
	EShopLoadProgress__Wallet                                                        = 5,
	EShopLoadProgress__FeaturedPageContent                                           = 6,
	EShopLoadProgress__EShopLoadProgress_MAX                                         = 7
};

/// Enum /Script/DeadByDaylight.ESoftBanReason
/// Size: 0x07
enum class ESoftBanReason : uint8_t
{
	ESoftBanReason__Invalid                                                          = -1,
	ESoftBanReason__Harassment                                                       = 0,
	ESoftBanReason__Griefing                                                         = 1,
	ESoftBanReason__Exploits                                                         = 2,
	ESoftBanReason__Unsportsmanlike                                                  = 3,
	ESoftBanReason__Count                                                            = 4,
	ESoftBanReason__ESoftBanReason_MAX                                               = 5
};

/// Enum /Script/DeadByDaylight.ESoundIndicatorType
/// Size: 0x10
enum class ESoundIndicatorType : uint8_t
{
	ESoundIndicatorType__None                                                        = 0,
	ESoundIndicatorType__CloseNoiseIndicator                                         = 1,
	ESoundIndicatorType__ExitOpenedIndicator                                         = 2,
	ESoundIndicatorType__GeneratorIndicator                                          = 3,
	ESoundIndicatorType__HatchIndicator                                              = 4,
	ESoundIndicatorType__HookedIndicator                                             = 5,
	ESoundIndicatorType__KillerCuesIndicator                                         = 6,
	ESoundIndicatorType__GlobalSoundIndicator                                        = 7,
	ESoundIndicatorType__DirectionalTerrorRadiusIndicator                            = 8,
	ESoundIndicatorType__ESoundIndicatorType_MAX                                     = 9
};

/// Enum /Script/DeadByDaylight.ESpawnerStrategyType
/// Size: 0x04
enum class ESpawnerStrategyType : uint8_t
{
	ESpawnerStrategyType__None                                                       = 0,
	ESpawnerStrategyType__NoAccumulation                                             = 1,
	ESpawnerStrategyType__LimitAccumulation                                          = 2,
	ESpawnerStrategyType__ESpawnerStrategyType_MAX                                   = 3
};

/// Enum /Script/DeadByDaylight.EGiftSpecialAction
/// Size: 0x03
enum class EGiftSpecialAction : uint8_t
{
	EGiftSpecialAction__None                                                         = 0,
	EGiftSpecialAction__KeplerGift                                                   = 1,
	EGiftSpecialAction__EGiftSpecialAction_MAX                                       = 2
};

/// Enum /Script/DeadByDaylight.ESpecialEventBloodwebChestCondition
/// Size: 0x04
enum class ESpecialEventBloodwebChestCondition : uint8_t
{
	ESpecialEventBloodwebChestCondition__Default                                     = 0,
	ESpecialEventBloodwebChestCondition__All                                         = 1,
	ESpecialEventBloodwebChestCondition__WithEventItem                               = 2,
	ESpecialEventBloodwebChestCondition__ESpecialEventBloodwebChestCondition_MAX     = 3
};

/// Enum /Script/DeadByDaylight.ESpecialEventDependency
/// Size: 0x03
enum class ESpecialEventDependency : uint8_t
{
	ESpecialEventDependency__None                                                    = 0,
	ESpecialEventDependency__Archives                                                = 1,
	ESpecialEventDependency__ESpecialEventDependency_MAX                             = 2
};

/// Enum /Script/DeadByDaylight.ESpecialEventGameMode
/// Size: 0x04
enum class ESpecialEventGameMode : uint8_t
{
	ESpecialEventGameMode__Progression                                               = 0,
	ESpecialEventGameMode__Counter                                                   = 1,
	ESpecialEventGameMode__Collection                                                = 2,
	ESpecialEventGameMode__ESpecialEventGameMode_MAX                                 = 3
};

/// Enum /Script/DeadByDaylight.ESpecialEventStatus
/// Size: 0x04
enum class ESpecialEventStatus : uint8_t
{
	ESpecialEventStatus__Inactive                                                    = 0,
	ESpecialEventStatus__ActiveMain                                                  = 1,
	ESpecialEventStatus__ActivePost                                                  = 2,
	ESpecialEventStatus__ESpecialEventStatus_MAX                                     = 3
};

/// Enum /Script/DeadByDaylight.ELoadCompleteState
/// Size: 0x69
enum class ELoadCompleteState : uint8_t
{
	ELoadCompleteState__InProgress                                                   = 0,
	ELoadCompleteState__Success                                                      = 1,
	ELoadCompleteState__ReloginRequested                                             = 2,
	ELoadCompleteState__FailedEAC                                                    = 3,
	ELoadCompleteState__FailedRecoverable                                            = 4,
	ELoadCompleteState__FailedRecoverableProfileLoad                                 = 5,
	ELoadCompleteState__FailedRecoverableWindowsStoreAndXboxLiveAccountNotMatching   = 6,
	ELoadCompleteState__FailedUnequipedDisableditems                                 = 7,
	ELoadCompleteState__FailedBlocking                                               = 8,
	ELoadCompleteState__FailedBlockingNoDBDServer                                    = 9,
	ELoadCompleteState__FailedBlockingNotConnected                                   = 10,
	ELoadCompleteState__FailedBlockedNoNetworkConnection                             = 11,
	ELoadCompleteState__FailedBlockingSharedAuthenticationFailed                     = 12,
	ELoadCompleteState__FailedBlockingPlatformNotAuthenticated                       = 13,
	ELoadCompleteState__FailedBlockingPlatformSubsystemNotInitialized                = 14,
	ELoadCompleteState__FailedBlockingOnlinePresenceNotInitialized                   = 15,
	ELoadCompleteState__FailedBlockingPlatformNetUniqueIdInvalid                     = 16,
	ELoadCompleteState__FailedBlockingInvalidLocalPlayer                             = 17,
	ELoadCompleteState__FailedBlockingInvalidGameObjects                             = 18,
	ELoadCompleteState__FailedBlockingInvalidSDA                                     = 19,
	ELoadCompleteState__FailedBlockingInvalidClientVersion                           = 20,
	ELoadCompleteState__FailedBlockingInvalidAtlantaClientVersion                    = 21,
	ELoadCompleteState__FailedBlockingWindowsStoreAccountNotLoggedIn                 = 22,
	ELoadCompleteState__FailedBlockingSSLCACert                                      = 23,
	ELoadCompleteState__FailedBlockingUserCancelled                                  = 24,
	ELoadCompleteState__FailedBlockingCDNFailure                                     = 25,
	ELoadCompleteState__FailedBlockingCDNContentError                                = 26,
	ELoadCompleteState__FailedBlockingCDNCantFindContentToDownload                   = 27,
	ELoadCompleteState__FailedBlockingCDNNoPatchForCurrentPlatformAndVersion         = 28,
	ELoadCompleteState__FailedBlockingCDNNotEnoughDiskSpace                          = 29,
	ELoadCompleteState__FailedBlockingCDNFailureToRetrieveContent                    = 30,
	ELoadCompleteState__FailedRecoverableCDNUserCancelled                            = 31,
	ELoadCompleteState__FailedBlockingVersionFileError                               = 32,
	ELoadCompleteState__FailedBlockingRTMConnection                                  = 33,
	ELoadCompleteState__FailedBlockingMaxTrialsReached                               = 34,
	ELoadCompleteState__FailedBlockingMirrorsHealthCheckFailed                       = 35,
	ELoadCompleteState__FailedBlockingTutorialRewardsFetchFailed                     = 36,
	ELoadCompleteState__FailedBlockingUserBanned                                     = 37,
	ELoadCompleteState__FailedRetrieveStoreItem                                      = 38,
	ELoadCompleteState__FailedControllerConnnection                                  = 39,
	ELoadCompleteState__FailedProfileSignedIn                                        = 40,
	ELoadCompleteState__FailedBlockingMandatoryConsent                               = 41,
	ELoadCompleteState__FailedInvalidGamepadState                                    = 42,
	ELoadCompleteState__FailedInvalidEventService                                    = 43,
	ELoadCompleteState__FailedInvalidIdentityService                                 = 44,
	ELoadCompleteState__FailedSoftBan                                                = 45,
	ELoadCompleteState__FailedAuthenticationOnBoot                                   = 46,
	ELoadCompleteState__FailedPlatformUnexpectedError                                = 47,
	ELoadCompleteState__FailedAgeRestriction                                         = 48,
	ELoadCompleteState__FailedRequiredPatchAvailable                                 = 49,
	ELoadCompleteState__FailedRequiredSystemUpdate                                   = 50,
	ELoadCompleteState__FailedOnlinePlayRestricted                                   = 51,
	ELoadCompleteState__FailedUnknownPrivilege                                       = 52,
	ELoadCompleteState__FailedInvalidOnlineSubsystem                                 = 53,
	ELoadCompleteState__FailedSettingProviderPlayerName                              = 54,
	ELoadCompleteState__FailedSettingBackendPlayerName                               = 55,
	ELoadCompleteState__FailedSyncBlockList                                          = 56,
	ELoadCompleteState__FailedTrialApplication                                       = 57,
	ELoadCompleteState__FailedUserNotDefined                                         = 58,
	ELoadCompleteState__FailedInvalidNetId                                           = 59,
	ELoadCompleteState__FailedInvalidSessionInterface                                = 60,
	ELoadCompleteState__FailedContextRequestError                                    = 61,
	ELoadCompleteState__FailedPlatformServiceBusy                                    = 62,
	ELoadCompleteState__FailedPlatformServiceUnavailable                             = 63,
	ELoadCompleteState__FailedPlatformInvalidResources                               = 64,
	ELoadCompleteState__FailedPlatformUnknownError                                   = 65,
	ELoadCompleteState__FailedAuthenticationCode                                     = 66,
	ELoadCompleteState__FailedAccountType                                            = 67,
	ELoadCompleteState__ELoadCompleteState_MAX                                       = 68
};

/// Enum /Script/DeadByDaylight.EExternalEffectSource
/// Size: 0x05
enum class EExternalEffectSource : uint8_t
{
	EExternalEffectSource__None                                                      = 0,
	EExternalEffectSource__Perk                                                      = 1,
	EExternalEffectSource__Addon                                                     = 2,
	EExternalEffectSource__Power                                                     = 3,
	EExternalEffectSource__EExternalEffectSource_MAX                                 = 4
};

/// Enum /Script/DeadByDaylight.EStoreBannerLocation
/// Size: 0x03
enum class EStoreBannerLocation : uint8_t
{
	EStoreBannerLocation__Primary                                                    = 0,
	EStoreBannerLocation__Secondary                                                  = 1,
	EStoreBannerLocation__EStoreBannerLocation_MAX                                   = 2
};

/// Enum /Script/DeadByDaylight.EStoreCollectionsLoadResult
/// Size: 0x04
enum class EStoreCollectionsLoadResult : uint8_t
{
	EStoreCollectionsLoadResult__Loaded                                              = 0,
	EStoreCollectionsLoadResult__Cached                                              = 1,
	EStoreCollectionsLoadResult__Error                                               = 2,
	EStoreCollectionsLoadResult__EStoreCollectionsLoadResult_MAX                     = 3
};

/// Enum /Script/DeadByDaylight.EInteractionStorerRole
/// Size: 0x06
enum class EInteractionStorerRole : uint8_t
{
	EInteractionStorerRole__None                                                     = 0,
	EInteractionStorerRole__AuthorityAndAutonomousProxy                              = 1,
	EInteractionStorerRole__ClientAndAutonomousProxy                                 = 2,
	EInteractionStorerRole__AuthorityAndSimulatedProxy                               = 3,
	EInteractionStorerRole__ClientAndSimulatedProxy                                  = 4,
	EInteractionStorerRole__EInteractionStorerRole_MAX                               = 5
};

/// Enum /Script/DeadByDaylight.ETextBannerPosition
/// Size: 0x09
enum class ETextBannerPosition : uint8_t
{
	ETextBannerPosition__TopLeft                                                     = 0,
	ETextBannerPosition__MiddleLeft                                                  = 1,
	ETextBannerPosition__BottomLeft                                                  = 2,
	ETextBannerPosition__MiddleRight                                                 = 3,
	ETextBannerPosition__BottomRight                                                 = 4,
	ETextBannerPosition__TopCenter                                                   = 5,
	ETextBannerPosition__MiddleCenter                                                = 6,
	ETextBannerPosition__BottomCenter                                                = 7,
	ETextBannerPosition__ETextBannerPosition_MAX                                     = 8
};

/// Enum /Script/DeadByDaylight.EStorefrontState
/// Size: 0x11
enum class EStorefrontState : uint8_t
{
	EStorefrontState__None                                                           = 0,
	EStorefrontState__Character                                                      = 1,
	EStorefrontState__Currency                                                       = 2,
	EStorefrontState__Customization                                                  = 3,
	EStorefrontState__Featured                                                       = 4,
	EStorefrontState__PromoPacks                                                     = 5,
	EStorefrontState__ShrineOfSecrets                                                = 6,
	EStorefrontState__Subscriptions                                                  = 7,
	EStorefrontState__LandingPage                                                    = 8,
	EStorefrontState__Count                                                          = 9,
	EStorefrontState__EStorefrontState_MAX                                           = 10
};

/// Enum /Script/DeadByDaylight.EStoreRecommendationsLoadResult
/// Size: 0x04
enum class EStoreRecommendationsLoadResult : uint8_t
{
	EStoreRecommendationsLoadResult__Loaded                                          = 0,
	EStoreRecommendationsLoadResult__Cached                                          = 1,
	EStoreRecommendationsLoadResult__Error                                           = 2,
	EStoreRecommendationsLoadResult__EStoreRecommendationsLoadResult_MAX             = 3
};

/// Enum /Script/DeadByDaylight.EStoreTab
/// Size: 0x06
enum class EStoreTab : uint8_t
{
	EStoreTab__Featured                                                              = 0,
	EStoreTab__Characters                                                            = 1,
	EStoreTab__Currency                                                              = 2,
	EStoreTab__ShrineOfSecrets                                                       = 3,
	EStoreTab__TabCount                                                              = 4,
	EStoreTab__EStoreTab_MAX                                                         = 5
};

/// Enum /Script/DeadByDaylight.EStoreState
/// Size: 0x08
enum class EStoreState : uint8_t
{
	EStoreState__None                                                                = 0,
	EStoreState__Featured                                                            = 1,
	EStoreState__CharacterSelection                                                  = 2,
	EStoreState__CharacterStory                                                      = 3,
	EStoreState__CharacterCatalog                                                    = 4,
	EStoreState__BuyCurrency                                                         = 5,
	EStoreState__ShrineOfSecrets                                                     = 6,
	EStoreState__EStoreState_MAX                                                     = 7
};

/// Enum /Script/DeadByDaylight.EStoreSpecialPackActivationType
/// Size: 0x04
enum class EStoreSpecialPackActivationType : uint8_t
{
	EStoreSpecialPackActivationType__Permanent                                       = 0,
	EStoreSpecialPackActivationType__Timed                                           = 1,
	EStoreSpecialPackActivationType__Segmentation                                    = 2,
	EStoreSpecialPackActivationType__EStoreSpecialPackActivationType_MAX             = 3
};

/// Enum /Script/DeadByDaylight.EStoreSpecialPackItemType
/// Size: 0x05
enum class EStoreSpecialPackItemType : uint8_t
{
	EStoreSpecialPackItemType__Customization                                         = 0,
	EStoreSpecialPackItemType__Character                                             = 1,
	EStoreSpecialPackItemType__Currency                                              = 2,
	EStoreSpecialPackItemType__RiftPass                                              = 3,
	EStoreSpecialPackItemType__EStoreSpecialPackItemType_MAX                         = 4
};

/// Enum /Script/DeadByDaylight.EStreamVideoDataType
/// Size: 0x06
enum class EStreamVideoDataType : uint8_t
{
	EStreamVideoDataType__None                                                       = 0,
	EStreamVideoDataType__LoreCinematic                                              = 1,
	EStreamVideoDataType__SurvivorTutorial                                           = 2,
	EStreamVideoDataType__KillerTutorial                                             = 3,
	EStreamVideoDataType__Count                                                      = 4,
	EStreamVideoDataType__EStreamVideoDataType_MAX                                   = 5
};

/// Enum /Script/DeadByDaylight.ESubscriptionRewardType
/// Size: 0x11
enum class ESubscriptionRewardType : uint8_t
{
	ESubscriptionRewardType__None                                                    = 0,
	ESubscriptionRewardType__Item                                                    = 1,
	ESubscriptionRewardType__AddOn                                                   = 2,
	ESubscriptionRewardType__Offering                                                = 3,
	ESubscriptionRewardType__FreeTicket                                              = 4,
	ESubscriptionRewardType__AuricCells                                              = 5,
	ESubscriptionRewardType__BloodPoints                                             = 6,
	ESubscriptionRewardType__IridescentShards                                        = 7,
	ESubscriptionRewardType__Customization                                           = 8,
	ESubscriptionRewardType__Character                                               = 9,
	ESubscriptionRewardType__ESubscriptionRewardType_MAX                             = 10
};

/// Enum /Script/DeadByDaylight.ETrapRemovedReason
/// Size: 0x06
enum class ETrapRemovedReason : uint8_t
{
	ETrapRemovedReason__KillerInteraction                                            = 0,
	ETrapRemovedReason__LifetimeExpired                                              = 1,
	ETrapRemovedReason__EndPlay                                                      = 2,
	ETrapRemovedReason__InteractableInvalidated                                      = 3,
	ETrapRemovedReason__OwnerLeft                                                    = 4,
	ETrapRemovedReason__ETrapRemovedReason_MAX                                       = 5
};

/// Enum /Script/DeadByDaylight.ETrapBombState
/// Size: 0x05
enum class ETrapBombState : uint8_t
{
	ETrapBombState__Idle                                                             = 0,
	ETrapBombState__Activating                                                       = 1,
	ETrapBombState__ActivatedLeft                                                    = 2,
	ETrapBombState__ActivatedRight                                                   = 3,
	ETrapBombState__ETrapBombState_MAX                                               = 4
};

/// Enum /Script/DeadByDaylight.EPromptType
/// Size: 0x05
enum class EPromptType : uint8_t
{
	EPromptType__None                                                                = 0,
	EPromptType__ExitsPowered                                                        = 1,
	EPromptType__HatchSpawned                                                        = 2,
	EPromptType__HatchOpened                                                         = 3,
	EPromptType__EPromptType_MAX                                                     = 4
};

/// Enum /Script/DeadByDaylight.ENotificationStyle
/// Size: 0x04
enum class ENotificationStyle : uint8_t
{
	ENotificationStyle__None                                                         = 0,
	ENotificationStyle__Game                                                         = 1,
	ENotificationStyle__Tutorial                                                     = 2,
	ENotificationStyle__ENotificationStyle_MAX                                       = 3
};

/// Enum /Script/DeadByDaylight.EPromptPriority
/// Size: 0x05
enum class EPromptPriority : uint8_t
{
	EPromptPriority__Tutorial                                                        = 0,
	EPromptPriority__High                                                            = 1,
	EPromptPriority__Medium                                                          = 2,
	EPromptPriority__Low                                                             = 3,
	EPromptPriority__EPromptPriority_MAX                                             = 4
};

/// Enum /Script/DeadByDaylight.ELegalTermsStatus
/// Size: 0x04
enum class ELegalTermsStatus : uint8_t
{
	ELegalTermsStatus__None                                                          = 0,
	ELegalTermsStatus__Accepted                                                      = 1,
	ELegalTermsStatus__Declined                                                      = 2,
	ELegalTermsStatus__ELegalTermsStatus_MAX                                         = 3
};

/// Enum /Script/DeadByDaylight.EUIPanelTab
/// Size: 0x06
enum class EUIPanelTab : uint8_t
{
	EUIPanelTab__CHARACTERS_LIST                                                     = 0,
	EUIPanelTab__LOADOUT                                                             = 1,
	EUIPanelTab__BLOODWEB                                                            = 2,
	EUIPanelTab__CUSTOMIZE                                                           = 3,
	EUIPanelTab__LOBBY                                                               = 4,
	EUIPanelTab__EUIPanelTab_MAX                                                     = 5
};

/// Enum /Script/DeadByDaylight.EInventoryGridFormat
/// Size: 0x04
enum class EInventoryGridFormat : uint8_t
{
	EInventoryGridFormat__DEFAULT                                                    = 0,
	EInventoryGridFormat__DIAMOND                                                    = 1,
	EInventoryGridFormat__HONEYCOMB                                                  = 2,
	EInventoryGridFormat__EInventoryGridFormat_MAX                                   = 3
};

/// Enum /Script/DeadByDaylight.ENewContentType
/// Size: 0x08
enum class ENewContentType : uint8_t
{
	ENewContentType__FEATURED_CONTENT                                                = 1,
	ENewContentType__NEW_CONTENT                                                     = 2,
	ENewContentType__PATCH_NOTES                                                     = 3,
	ENewContentType__DEV_MESSAGES                                                    = 4,
	ENewContentType__EVENTS                                                          = 5,
	ENewContentType__SALE                                                            = 6,
	ENewContentType__COMMUNITY                                                       = 7,
	ENewContentType__ENewContentType_MAX                                             = 8
};

/// Enum /Script/DeadByDaylight.EOverlayButtonOptions
/// Size: 0x04
enum class EOverlayButtonOptions : uint8_t
{
	EOverlayButtonOptions__HIDDEN                                                    = 0,
	EOverlayButtonOptions__DISABLED                                                  = 1,
	EOverlayButtonOptions__ENABLED                                                   = 2,
	EOverlayButtonOptions__EOverlayButtonOptions_MAX                                 = 3
};

/// Enum /Script/DeadByDaylight.EUIControllerType
/// Size: 0x03
enum class EUIControllerType : uint8_t
{
	EUIControllerType__KeyboardMouse                                                 = 0,
	EUIControllerType__GamePad                                                       = 1,
	EUIControllerType__EUIControllerType_MAX                                         = 2
};

/// Enum /Script/DeadByDaylight.EForumLanguages
/// Size: 0x06
enum class EForumLanguages : uint8_t
{
	EForumLanguages__None                                                            = 0,
	EForumLanguages__de                                                              = 1,
	EForumLanguages__en                                                              = 2,
	EForumLanguages__ja                                                              = 3,
	EForumLanguages__ru                                                              = 4,
	EForumLanguages__EForumLanguages_MAX                                             = 5
};

/// Enum /Script/DeadByDaylight.ECustomerSupportLanguages
/// Size: 0x14
enum class ECustomerSupportLanguages : uint8_t
{
	ECustomerSupportLanguages__None                                                  = 0,
	ECustomerSupportLanguages__de                                                    = 1,
	ECustomerSupportLanguages__en                                                    = 2,
	ECustomerSupportLanguages__ja                                                    = 3,
	ECustomerSupportLanguages__ru                                                    = 4,
	ECustomerSupportLanguages__es                                                    = 5,
	ECustomerSupportLanguages__fr                                                    = 6,
	ECustomerSupportLanguages__it                                                    = 7,
	ECustomerSupportLanguages__ko                                                    = 8,
	ECustomerSupportLanguages__pl                                                    = 9,
	ECustomerSupportLanguages__pt                                                    = 10,
	ECustomerSupportLanguages__th                                                    = 11,
	ECustomerSupportLanguages__zh                                                    = 12,
	ECustomerSupportLanguages__ECustomerSupportLanguages_MAX                         = 13
};

/// Enum /Script/DeadByDaylight.ELeaveLobbyReason
/// Size: 0x11
enum class ELeaveLobbyReason : uint8_t
{
	ELeaveLobbyReason__eNone                                                         = 0,
	ELeaveLobbyReason__eNetworkDisconnect                                            = 1,
	ELeaveLobbyReason__eProfileOffline                                               = 2,
	ELeaveLobbyReason__eAppSuspended                                                 = 3,
	ELeaveLobbyReason__eInternetDisconnect                                           = 4,
	ELeaveLobbyReason__eHostDisconnect                                               = 5,
	ELeaveLobbyReason__eDLCInstalled                                                 = 6,
	ELeaveLobbyReason__eTrialExtensionExpired                                        = 7,
	ELeaveLobbyReason__ePartyManagementError                                         = 8,
	ELeaveLobbyReason__eGameTypeExpired                                              = 9,
	ELeaveLobbyReason__ELeaveLobbyReason_MAX                                         = 10
};

/// Enum /Script/DeadByDaylight.EFriendSearchPanelOption
/// Size: 0x07
enum class EFriendSearchPanelOption : uint8_t
{
	EFriendSearchPanelOption__NotFoundPanel                                          = 0,
	EFriendSearchPanelOption__NonFriendPanel                                         = 1,
	EFriendSearchPanelOption__FriendRequestReceivedPanel                             = 2,
	EFriendSearchPanelOption__FriendRequestSentPanel                                 = 3,
	EFriendSearchPanelOption__FriendPanel                                            = 4,
	EFriendSearchPanelOption__IsOwnerPanel                                           = 5,
	EFriendSearchPanelOption__EFriendSearchPanelOption_MAX                           = 6
};

/// Enum /Script/DeadByDaylight.EFriendContainerType
/// Size: 0x09
enum class EFriendContainerType : uint8_t
{
	EFriendContainerType__Connected                                                  = 0,
	EFriendContainerType__Disconnected                                               = 1,
	EFriendContainerType__PendingSentRequest                                         = 2,
	EFriendContainerType__RecentlyPlayed                                             = 3,
	EFriendContainerType__SocialSuggestions                                          = 4,
	EFriendContainerType__PendingReceivedRequest                                     = 5,
	EFriendContainerType__QueriedPlayer                                              = 6,
	EFriendContainerType__Unknown                                                    = 7,
	EFriendContainerType__EFriendContainerType_MAX                                   = 8
};

/// Enum /Script/DeadByDaylight.EPurchasePopupState
/// Size: 0x03
enum class EPurchasePopupState : uint8_t
{
	EPurchasePopupState__Information                                                 = 0,
	EPurchasePopupState__TitleOnly                                                   = 1,
	EPurchasePopupState__EPurchasePopupState_MAX                                     = 2
};

/// Enum /Script/DeadByDaylight.EAtlantaSettingMenuType
/// Size: 0x03
enum class EAtlantaSettingMenuType : uint8_t
{
	EAtlantaSettingMenuType__TabButton                                               = 0,
	EAtlantaSettingMenuType__AlwaysDisplay                                           = 1,
	EAtlantaSettingMenuType__EAtlantaSettingMenuType_MAX                             = 2
};

/// Enum /Script/DeadByDaylight.EBloodStoreRowStyle
/// Size: 0x03
enum class EBloodStoreRowStyle : uint8_t
{
	EBloodStoreRowStyle__FiveItemRow                                                 = 0,
	EBloodStoreRowStyle__ThreeItemRow                                                = 1,
	EBloodStoreRowStyle__EBloodStoreRowStyle_MAX                                     = 2
};

/// Enum /Script/DeadByDaylight.EButtonType
/// Size: 0x08
enum class EButtonType : uint8_t
{
	EButtonType__None                                                                = 0,
	EButtonType__AttackButton                                                        = 1,
	EButtonType__PowerButton                                                         = 2,
	EButtonType__CancelButton                                                        = 3,
	EButtonType__SettingsButton                                                      = 4,
	EButtonType__SecondaryActionButton                                               = 5,
	EButtonType__PowerAttackJoystick                                                 = 6,
	EButtonType__EButtonType_MAX                                                     = 7
};

/// Enum /Script/DeadByDaylight.EInboxMessageTimeUnit
/// Size: 0x04
enum class EInboxMessageTimeUnit : uint8_t
{
	EInboxMessageTimeUnit__Days                                                      = 0,
	EInboxMessageTimeUnit__Hours                                                     = 1,
	EInboxMessageTimeUnit__Minutes                                                   = 2,
	EInboxMessageTimeUnit__EInboxMessageTimeUnit_MAX                                 = 3
};

/// Enum /Script/DeadByDaylight.EInboxMessageUIState
/// Size: 0x04
enum class EInboxMessageUIState : uint8_t
{
	EInboxMessageUIState__New                                                        = 0,
	EInboxMessageUIState__Read                                                       = 1,
	EInboxMessageUIState__Archived                                                   = 2,
	EInboxMessageUIState__EInboxMessageUIState_MAX                                   = 3
};

/// Enum /Script/DeadByDaylight.EInboxMessageUIType
/// Size: 0x05
enum class EInboxMessageUIType : uint8_t
{
	EInboxMessageUIType__None                                                        = 0,
	EInboxMessageUIType__Social                                                      = 1,
	EInboxMessageUIType__Rewards                                                     = 2,
	EInboxMessageUIType__News                                                        = 3,
	EInboxMessageUIType__EInboxMessageUIType_MAX                                     = 4
};

/// Enum /Script/DeadByDaylight.EPartyPlayerSlotWidgetState
/// Size: 0x06
enum class EPartyPlayerSlotWidgetState : uint8_t
{
	EPartyPlayerSlotWidgetState__None                                                = 0,
	EPartyPlayerSlotWidgetState__Empty                                               = 1,
	EPartyPlayerSlotWidgetState__NotReady                                            = 2,
	EPartyPlayerSlotWidgetState__Ready                                               = 3,
	EPartyPlayerSlotWidgetState__Hidden                                              = 4,
	EPartyPlayerSlotWidgetState__EPartyPlayerSlotWidgetState_MAX                     = 5
};

/// Enum /Script/DeadByDaylight.ERewardLayoutBox
/// Size: 0x03
enum class ERewardLayoutBox : uint8_t
{
	ERewardLayoutBox__Top                                                            = 0,
	ERewardLayoutBox__Bottom                                                         = 1,
	ERewardLayoutBox__ERewardLayoutBox_MAX                                           = 2
};

/// Enum /Script/DeadByDaylight.ESettingScreenButtonData
/// Size: 0x13
enum class ESettingScreenButtonData : uint8_t
{
	ESettingScreenButtonData__PRIVACY                                                = 0,
	ESettingScreenButtonData__EULA                                                   = 1,
	ESettingScreenButtonData__CREDITS                                                = 2,
	ESettingScreenButtonData__SURVIVORTUTORIAL                                       = 3,
	ESettingScreenButtonData__KILLERTUTORIAL                                         = 4,
	ESettingScreenButtonData__SURVIVORCINEMATIC                                      = 5,
	ESettingScreenButtonData__KILLERCINEMATIC                                        = 6,
	ESettingScreenButtonData__LORECINEMATIC                                          = 7,
	ESettingScreenButtonData__COMMUNITY                                              = 8,
	ESettingScreenButtonData__PLAYERCLOUDID                                          = 9,
	ESettingScreenButtonData__SUBSCRIBE                                              = 10,
	ESettingScreenButtonData__TERMSOFUSE                                             = 11,
	ESettingScreenButtonData__ESettingScreenButtonData_MAX                           = 12
};

/// Enum /Script/DeadByDaylight.ENavigationState
/// Size: 0x07
enum class ENavigationState : uint8_t
{
	ENavigationState__RoleSelection                                                  = 0,
	ENavigationState__Customization                                                  = 1,
	ENavigationState__CharacterSelection                                             = 2,
	ENavigationState__Lobby                                                          = 3,
	ENavigationState__BloodStore                                                     = 4,
	ENavigationState__None                                                           = 5,
	ENavigationState__ENavigationState_MAX                                           = 6
};

/// Enum /Script/DeadByDaylight.EInventoryButtonState
/// Size: 0x08
enum class EInventoryButtonState : uint8_t
{
	EInventoryButtonState__StateDisabled                                             = 0,
	EInventoryButtonState__StateEmpty                                                = 1,
	EInventoryButtonState__StateLocked                                               = 2,
	EInventoryButtonState__StateWithItem                                             = 3,
	EInventoryButtonState__StateWithItemDisabled                                     = 4,
	EInventoryButtonState__StateWithItemLocked                                       = 5,
	EInventoryButtonState__StatePrivate                                              = 6,
	EInventoryButtonState__EInventoryButtonState_MAX                                 = 7
};

/// Enum /Script/DeadByDaylight.EFogScreenButton
/// Size: 0x04
enum class EFogScreenButton : uint8_t
{
	EFogScreenButton__AddCurrency                                                    = 0,
	EFogScreenButton__Setting                                                        = 1,
	EFogScreenButton__Chat                                                           = 2,
	EFogScreenButton__EFogScreenButton_MAX                                           = 3
};

/// Enum /Script/DeadByDaylight.ERoleSelectionScreenButton
/// Size: 0x07
enum class ERoleSelectionScreenButton : uint8_t
{
	ERoleSelectionScreenButton__DailyRitual                                          = 0,
	ERoleSelectionScreenButton__Inbox                                                = 1,
	ERoleSelectionScreenButton__InviteFriend                                         = 2,
	ERoleSelectionScreenButton__Setting                                              = 3,
	ERoleSelectionScreenButton__Marketing                                            = 4,
	ERoleSelectionScreenButton__Events                                               = 5,
	ERoleSelectionScreenButton__ERoleSelectionScreenButton_MAX                       = 6
};

/// Enum /Script/DeadByDaylight.ENavigationScreenButton
/// Size: 0x13
enum class ENavigationScreenButton : uint8_t
{
	ENavigationScreenButton__AddCurrency                                             = 0,
	ENavigationScreenButton__Back                                                    = 1,
	ENavigationScreenButton__Bloodweb                                                = 2,
	ENavigationScreenButton__ChangeRole                                              = 3,
	ENavigationScreenButton__CharacterSelection                                      = 4,
	ENavigationScreenButton__Customization                                           = 5,
	ENavigationScreenButton__InviteFriend                                            = 6,
	ENavigationScreenButton__Loadout                                                 = 7,
	ENavigationScreenButton__Start                                                   = 8,
	ENavigationScreenButton__Subscriptions                                           = 9,
	ENavigationScreenButton__EditCustomGame                                          = 10,
	ENavigationScreenButton__CustomGameRequestRole                                   = 11,
	ENavigationScreenButton__ENavigationScreenButton_MAX                             = 12
};

/// Enum /Script/DeadByDaylight.EInboxScreenButton
/// Size: 0x05
enum class EInboxScreenButton : uint8_t
{
	EInboxScreenButton__Rewards                                                      = 0,
	EInboxScreenButton__Social                                                       = 1,
	EInboxScreenButton__News                                                         = 2,
	EInboxScreenButton__Back                                                         = 3,
	EInboxScreenButton__EInboxScreenButton_MAX                                       = 4
};

/// Enum /Script/DeadByDaylight.ETallyListPageID
/// Size: 0x07
enum class ETallyListPageID : uint8_t
{
	ETallyListPageID__Scoreboard                                                     = 0,
	ETallyListPageID__Bloodpoints                                                    = 1,
	ETallyListPageID__Rank                                                           = 2,
	ETallyListPageID__PlayerLevel                                                    = 3,
	ETallyListPageID__CharacterLevel                                                 = 4,
	ETallyListPageID__NumberOfPages                                                  = 5,
	ETallyListPageID__ETallyListPageID_MAX                                           = 6
};

/// Enum /Script/DeadByDaylight.EToastWidgetType
/// Size: 0x03
enum class EToastWidgetType : uint8_t
{
	EToastWidgetType__Simple                                                         = 0,
	EToastWidgetType__Interactable                                                   = 1,
	EToastWidgetType__EToastWidgetType_MAX                                           = 2
};

/// Enum /Script/DeadByDaylight.ELinkedVomitState
/// Size: 0x04
enum class ELinkedVomitState : uint8_t
{
	ELinkedVomitState__Idle                                                          = 0,
	ELinkedVomitState__Charging                                                      = 1,
	ELinkedVomitState__Vomiting                                                      = 2,
	ELinkedVomitState__ELinkedVomitState_MAX                                         = 3
};

/// Struct /Script/DeadByDaylight.SecondaryInteractionProperties
/// Size: 0x0038 (0x000000 - 0x000038)
struct FSecondaryInteractionProperties
{ 
	SDK_UNDEFINED(16,1758) /* FString */               __um(SecondaryInteractionID);                               // 0x0000   (0x0010)  
	EInputInteractionType                              SecondaryInteractionInputType;                              // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	SDK_UNDEFINED(24,1759) /* FText */                 __um(SecondaryInteractionDescriptionText);                  // 0x0018   (0x0018)  
	bool                                               ShouldShow;                                                 // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/DeadByDaylight.InteractionDefinition
/// Size: 0x0430 (0x000220 - 0x000650)
class UInteractionDefinition : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0220   (0x0038)  MISSED
	SDK_UNDEFINED(16,1760) /* FString */               __um(InteractionID);                                        // 0x0258   (0x0010)  
	float                                              SnapTime;                                                   // 0x0268   (0x0004)  
	bool                                               ResetCameraDuringSnap;                                      // 0x026C   (0x0001)  
	bool                                               IsInteractionCancelled;                                     // 0x026D   (0x0001)  
	bool                                               AllowStartInteractionFromHeldInput;                         // 0x026E   (0x0001)  
	bool                                               StopInteractionOnMontageComplete;                           // 0x026F   (0x0001)  
	bool                                               StopInteractionOnMontageBlendingOut;                        // 0x0270   (0x0001)  
	bool                                               StopInteractionOnTimerExpire;                               // 0x0271   (0x0001)  
	bool                                               StopInteractionOnHeightDelta;                               // 0x0272   (0x0001)  
	bool                                               StopEnterMontageOnExit;                                     // 0x0273   (0x0001)  
	bool                                               StopUpdateMontageOnExit;                                    // 0x0274   (0x0001)  
	bool                                               IgnoreStrafeAnimFix;                                        // 0x0275   (0x0001)  
	EInteractionAnimation                              InteractionAnimation;                                       // 0x0276   (0x0001)  
	bool                                               CamperCanInteract;                                          // 0x0277   (0x0001)  
	bool                                               SlasherCanInteract;                                         // 0x0278   (0x0001)  
	bool                                               AllowInputPersistence;                                      // 0x0279   (0x0001)  
	bool                                               snapPosition;                                               // 0x027A   (0x0001)  
	bool                                               snapRotation;                                               // 0x027B   (0x0001)  
	float                                              SnapStopDistance;                                           // 0x027C   (0x0004)  
	bool                                               TestClearPathDuringSnap;                                    // 0x0280   (0x0001)  
	bool                                               MustBeClosestPlayerToSnapPoint;                             // 0x0281   (0x0001)  
	bool                                               CheckInteractableIsInPlayerView;                            // 0x0282   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0283   (0x0001)  MISSED
	float                                              CheckInteractableInViewSphereSweepRadius;                   // 0x0284   (0x0004)  
	FVector                                            CheckInteractableInViewOffset;                              // 0x0288   (0x000C)  
	float                                              CheckInteractableInViewOffsetDistanceToHitPoint;            // 0x0294   (0x0004)  
	bool                                               IsInterruptibleIfTestClearPathDuringSnapFails;              // 0x0298   (0x0001)  
	bool                                               TestPlayerOrientationOnSnap;                                // 0x0299   (0x0001)  
	bool                                               ScaleEnterAnimationToTime;                                  // 0x029A   (0x0001)  
	bool                                               ScaleMainAnimationToTime;                                   // 0x029B   (0x0001)  
	bool                                               ScaleExitAnimationToTime;                                   // 0x029C   (0x0001)  
	ESnapBackType                                      SnapBackType;                                               // 0x029D   (0x0001)  
	ESnapBackPositionType                              SnapBackPositionType;                                       // 0x029E   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x029F   (0x0001)  MISSED
	FVector2D                                          SnapBackPositionOffset;                                     // 0x02A0   (0x0008)  
	bool                                               SnapToInitialRotationDuringSnapBack;                        // 0x02A8   (0x0001)  
	bool                                               UseStartSnapTimeForSnapExitTime;                            // 0x02A9   (0x0001)  
	bool                                               CanInteractWhileIncapacitated;                              // 0x02AA   (0x0001)  
	bool                                               CanInteractWhileCloaked;                                    // 0x02AB   (0x0001)  
	bool                                               CanInteractWhileAttacking;                                  // 0x02AC   (0x0001)  
	bool                                               CanInteractWhileChainLinked;                                // 0x02AD   (0x0001)  
	bool                                               CanInteractWhileShocked;                                    // 0x02AE   (0x0001)  
	bool                                               CanInteractWhileUnhookingSelf;                              // 0x02AF   (0x0001)  
	bool                                               CanInteractWhileCarrying;                                   // 0x02B0   (0x0001)  
	bool                                               AllowNavigation;                                            // 0x02B1   (0x0001)  
	bool                                               AllowNavigationInput;                                       // 0x02B2   (0x0001)  
	bool                                               AllowRotation;                                              // 0x02B3   (0x0001)  
	bool                                               UseCameraMontageMode;                                       // 0x02B4   (0x0001)  
	bool                                               OwnerBlocksAttack;                                          // 0x02B5   (0x0001)  
	bool                                               IsHighPriority;                                             // 0x02B6   (0x0001)  
	bool                                               AllowOverridingWhenNotForced;                               // 0x02B7   (0x0001)  
	bool                                               IgnoreOverlapOnInteractable;                                // 0x02B8   (0x0001)  
	bool                                               UseAuthoritativeMovement;                                   // 0x02B9   (0x0001)  
	bool                                               CanBeAuthoritativePushedDuringEnter;                        // 0x02BA   (0x0001)  
	bool                                               CanBeAuthoritativePushedDuringUpdate;                       // 0x02BB   (0x0001)  
	bool                                               CanBeAuthoritativePushedDuringExit;                         // 0x02BC   (0x0001)  
	bool                                               CanAuthoritativePush;                                       // 0x02BD   (0x0001)  
	bool                                               CancelOnHit;                                                // 0x02BE   (0x0001)  
	bool                                               CancelOnAttack;                                             // 0x02BF   (0x0001)  
	bool                                               HideItem;                                                   // 0x02C0   (0x0001)  
	bool                                               ContinueCachingLastSafeItemDropLocation;                    // 0x02C1   (0x0001)  
	bool                                               AutoBindToParentInteractor;                                 // 0x02C2   (0x0001)  
	bool                                               AutoBindToParentZone;                                       // 0x02C3   (0x0001)  
	float                                              CancelOnMoveInitialDelay;                                   // 0x02C4   (0x0004)  
	float                                              CancelOnMoveInput;                                          // 0x02C8   (0x0004)  
	bool                                               CancelOnMoveInputOnlyWhenRunning;                           // 0x02CC   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x02CD   (0x0003)  MISSED
	TArray<float>                                      ProgressBasedSkillChecks;                                   // 0x02D0   (0x0010)  
	bool                                               CanCrouch;                                                  // 0x02E0   (0x0001)  
	bool                                               AffectsStillness;                                           // 0x02E1   (0x0001)  
	bool                                               ConsideredIdle;                                             // 0x02E2   (0x0001)  
	bool                                               BlockSelfInteract;                                          // 0x02E3   (0x0001)  
	float                                              InteractionTime;                                            // 0x02E4   (0x0004)  
	EInputInteractionType                              interactionInputType;                                       // 0x02E8   (0x0001)  
	bool                                               NoInputInteraction;                                         // 0x02E9   (0x0001)  
	bool                                               StopInteractionOnInputRelease;                              // 0x02EA   (0x0001)  
	bool                                               AllowHitMontageWhenInteracting;                             // 0x02EB   (0x0001)  
	bool                                               ShowBasicInteractionIcon;                                   // 0x02EC   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x02ED   (0x0003)  MISSED
	TArray<class UInterruptionDefinition*>             _interruptionDefinitions;                                   // 0x02F0   (0x0010)  
	SDK_UNDEFINED(16,1761) /* FMulticastInlineDelegate */ __um(OnInteractionEnteredDelegate);                      // 0x0300   (0x0010)  
	unsigned char                                      UnknownData05_5[0x30];                                      // 0x0310   (0x0030)  MISSED
	SDK_UNDEFINED(16,1762) /* FMulticastInlineDelegate */ __um(OnInteractionFinishedDelegate);                     // 0x0340   (0x0010)  
	unsigned char                                      UnknownData06_5[0x18];                                      // 0x0350   (0x0018)  MISSED
	SDK_UNDEFINED(16,1763) /* FMulticastInlineDelegate */ __um(OnInteractionInterruptedStartDelegate);             // 0x0368   (0x0010)  
	SDK_UNDEFINED(16,1764) /* FMulticastInlineDelegate */ __um(OnInteractionInterruptedStartedDelegate);           // 0x0378   (0x0010)  
	SDK_UNDEFINED(16,1765) /* FMulticastInlineDelegate */ __um(OnInteractionInterruptedEndDelegate);               // 0x0388   (0x0010)  
	SDK_UNDEFINED(16,1766) /* FMulticastInlineDelegate */ __um(OnInteractionAnimNotify);                           // 0x0398   (0x0010)  
	bool                                               DebugUnavailability;                                        // 0x03A8   (0x0001)  
	EInputInteractionType                              SecondaryActionInputType;                                   // 0x03A9   (0x0001)  
	unsigned char                                      UnknownData07_5[0x1E];                                      // 0x03AA   (0x001E)  MISSED
	class UCurveFloat*                                 NavigationSpeedCurveEnter;                                  // 0x03C8   (0x0008)  
	class UCurveFloat*                                 NavigationSpeedCurve;                                       // 0x03D0   (0x0008)  
	class UCurveFloat*                                 NavigationSpeedCurveExit;                                   // 0x03D8   (0x0008)  
	bool                                               _shouldCheckInteractedUpon;                                 // 0x03E0   (0x0001)  
	EInteractionOwnership                              OwnershipUsability;                                         // 0x03E1   (0x0001)  
	unsigned char                                      UnknownData08_5[0x2];                                       // 0x03E2   (0x0002)  MISSED
	float                                              ExitInteractionTime;                                        // 0x03E4   (0x0004)  
	bool                                               ApplyModifiersToExitTime;                                   // 0x03E8   (0x0001)  
	unsigned char                                      UnknownData09_5[0x7];                                       // 0x03E9   (0x0007)  MISSED
	SDK_UNDEFINED(24,1767) /* FText */                 __um(InteractionDescriptionText);                           // 0x03F0   (0x0018)  
	bool                                               InteractionCanBeToggled;                                    // 0x0408   (0x0001)  
	bool                                               IsOverridingInputToggleReleasePromptMessage;                // 0x0409   (0x0001)  
	unsigned char                                      UnknownData10_5[0x6];                                       // 0x040A   (0x0006)  MISSED
	SDK_UNDEFINED(16,1768) /* FString */               __um(InputToggleReleasePromptMessage);                      // 0x0410   (0x0010)  
	bool                                               IgnoreSprintToCancelSetting;                                // 0x0420   (0x0001)  
	bool                                               ForceWithSprintToCancelSetting;                             // 0x0421   (0x0001)  
	unsigned char                                      UnknownData11_5[0x2];                                       // 0x0422   (0x0002)  MISSED
	float                                              InteractionHeightDeltaMax;                                  // 0x0424   (0x0004)  
	float                                              MaximumVelocity;                                            // 0x0428   (0x0004)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x042C   (0x0004)  MISSED
	FAnimationMontageDescriptor                        EnterMontage;                                               // 0x0430   (0x0020)  
	FAnimationMontageDescriptor                        UpdateMontage;                                              // 0x0450   (0x0020)  
	FAnimationMontageDescriptor                        ExitMontage;                                                // 0x0470   (0x0020)  
	TArray<FName>                                      EnterMontageVariantCycle;                                   // 0x0490   (0x0010)  
	TArray<FName>                                      UpdateMontageVariantCycle;                                  // 0x04A0   (0x0010)  
	TArray<FName>                                      ExitMontageVariantCycle;                                    // 0x04B0   (0x0010)  
	FName                                              SnapSocketName;                                             // 0x04C0   (0x000C)  
	bool                                               _canBeAttachedToAnyZone;                                    // 0x04CC   (0x0001)  
	bool                                               _isInterruptibleBySacrifice;                                // 0x04CD   (0x0001)  
	bool                                               IgnoreStun;                                                 // 0x04CE   (0x0001)  
	unsigned char                                      UnknownData13_5[0x1];                                       // 0x04CF   (0x0001)  MISSED
	FGameplayTagContainer                              _tags;                                                      // 0x04D0   (0x0020)  
	FGameplayTag                                       _objectStateTag;                                            // 0x04F0   (0x000C)  
	unsigned char                                      UnknownData14_5[0x4];                                       // 0x04FC   (0x0004)  MISSED
	SDK_UNDEFINED(80,1769) /* TMap<FName, FSecondaryInteractionProperties> */ __um(_secondaryInteractions);        // 0x0500   (0x0050)  
	bool                                               _useHoldPrompt;                                             // 0x0550   (0x0001)  
	bool                                               _allowInteractionInNarrowSpaces;                            // 0x0551   (0x0001)  
	bool                                               _allowIKSensorDuringInteraction;                            // 0x0552   (0x0001)  
	bool                                               _overrideSlashableRelativeLocation;                         // 0x0553   (0x0001)  
	FVector                                            _slashableRelativeLocation;                                 // 0x0554   (0x000C)  
	bool                                               _startUpdateMontageDuringEnter;                             // 0x0560   (0x0001)  
	unsigned char                                      UnknownData15_5[0x7];                                       // 0x0561   (0x0007)  MISSED
	class UInteractor*                                 _interactor;                                                // 0x0568   (0x0008)  
	TArray<class UInteractionDefinition*>              _mutuallyExclusiveInteractionsClient;                       // 0x0570   (0x0010)  
	FActivationDefinition                              _activationDefinition;                                      // 0x0580   (0x0028)  
	class UPrimitiveComponent*                         _zone;                                                      // 0x05A8   (0x0008)  
	EInputInteractionType                              _cancelInputType;                                           // 0x05B0   (0x0001)  
	unsigned char                                      UnknownData16_5[0x7];                                       // 0x05B1   (0x0007)  MISSED
	FGameplayTagContainer                              _preventingTags;                                            // 0x05B8   (0x0020)  
	FGameplayTagContainer                              _disablingTags;                                             // 0x05D8   (0x0020)  
	TArray<class UPlayerInteractionHandler*>           _evaluatingInteractionHandlers;                             // 0x05F8   (0x0010)  
	FSecondaryInteractionProperties                    DEPRECATED_SecondaryInteractionProperties;                  // 0x0608   (0x0038)  
	unsigned char                                      UnknownData17_6[0x10];                                      // 0x0640   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.InteractionDefinition.UpdateSlashableLocation
	// void UpdateSlashableLocation(class ADBDPlayer* Player);                                                               // [0x5897e30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.InteractionDefinition.ShouldStartUpdateMontageDuringEnter
	// bool ShouldStartUpdateMontageDuringEnter(class ADBDPlayer* Character);                                                // [0x5897d90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.SetSecondaryActionInputType
	// void SetSecondaryActionInputType(EInputInteractionType inputType);                                                    // [0x5897d10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.InteractionDefinition.ResetSlashableLocation
	// void ResetSlashableLocation(class ADBDPlayer* Player);                                                                // [0x5897c80] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.InteractionDefinition.RemoveExclusiveInteraction
	// void RemoveExclusiveInteraction(class UInteractionDefinition* Interaction);                                           // [0x5897bf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.InteractionDefinition.RemoveDisablingTags
	// void RemoveDisablingTags(FGameplayTag tagToRemove);                                                                   // [0x5897b50] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnUpdateMontageStart
	// void OnUpdateMontageStart(class ADBDPlayer* Player);                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInterruptorUpdateStart
	// void OnInterruptorUpdateStart(class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptor, class ADBDPlayer* interruptee); // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionUpdateTick
	// void OnInteractionUpdateTick(class ADBDPlayer* Player, float DeltaTime);                                              // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionUpdateStart
	// void OnInteractionUpdateStart(class ADBDPlayer* Player);                                                              // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionUpdateMontageReachedMiddle
	// void OnInteractionUpdateMontageReachedMiddle(class ADBDPlayer* Player);                                               // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionUpdateEnd
	// void OnInteractionUpdateEnd(class ADBDPlayer* Player);                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionInterruptStarted
	// void OnInteractionInterruptStarted(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer); // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionInterruptStart
	// void OnInteractionInterruptStart(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer); // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionInterruptEnd
	// void OnInteractionInterruptEnd(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer); // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionInit
	// void OnInteractionInit(class ADBDPlayer* Player);                                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionFinished
	// void OnInteractionFinished(class ADBDPlayer* Player, bool hasInteractionStarted);                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionExitTick
	// void OnInteractionExitTick(class ADBDPlayer* Player, float DeltaTime);                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionExitStart
	// void OnInteractionExitStart(class ADBDPlayer* Player);                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionExitEnd
	// void OnInteractionExitEnd(class ADBDPlayer* Player);                                                                  // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionEnterTick
	// void OnInteractionEnterTick(class ADBDPlayer* Player, float DeltaTime);                                               // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionEnterStart
	// void OnInteractionEnterStart(class ADBDPlayer* Player, float actualSnapTime);                                         // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionEnterEnd
	// void OnInteractionEnterEnd(class ADBDPlayer* Player);                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionCancelled
	// void OnInteractionCancelled(class ADBDPlayer* Player);                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.OnInteractionAnimNotifyEvent
	// void OnInteractionAnimNotifyEvent(FName NotifyId, class ADBDPlayer* Player);                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.IsSupportedCharacterType
	// bool IsSupportedCharacterType(class ADBDPlayer* Player);                                                              // [0x5897ab0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.IsInterruptionPossible
	// bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInterruptionDefinition* interruption); // [0x5897990] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.IsInteractionUsingOffering
	// bool IsInteractionUsingOffering(class ADBDPlayer* Player);                                                            // [0x58978f0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.IsInteractionPossibleClient
	// bool IsInteractionPossibleClient(class ADBDPlayer* Player, EInputInteractionType interactionType);                    // [0x5897820] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.IsInteractionPossibleBP
	// bool IsInteractionPossibleBP(class ADBDPlayer* Player, EInputInteractionType interactionType);                        // [0x5897750] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.IsInteractionPossible
	// bool IsInteractionPossible(class ADBDPlayer* Player, EInputInteractionType interactionType, bool performClientCheck, bool performHeightCheck, bool isBotPredictionCheck); // [0x5897580] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.IsInteractionDone
	// bool IsInteractionDone(class ADBDPlayer* Player, EInputInteractionType interactionType);                              // [0x58974b0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.IsInteractableInPlayerView
	// bool IsInteractableInPlayerView(class ADBDPlayer* Player);                                                            // [0x5897410] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.IsInputPressed
	// bool IsInputPressed(class ADBDPlayer* Player);                                                                        // [0x5897370] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.IsCharacterFacingInteractorDirection
	// bool IsCharacterFacingInteractorDirection(class ADBDPlayer* Player);                                                  // [0x58972d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.IsCancelable
	// bool IsCancelable(class ADBDPlayer* Player);                                                                          // [0x5897230] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.InteractionInterruptedDelegate__DelegateSignature
	// void InteractionInterruptedDelegate__DelegateSignature();                                                             // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.InteractionDefinition.InteractionFinishedDelegate__DelegateSignature
	// void InteractionFinishedDelegate__DelegateSignature();                                                                // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.InteractionDefinition.InteractionEnteredDelegate__DelegateSignature
	// void InteractionEnteredDelegate__DelegateSignature(class ADBDPlayer* Player);                                         // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetUpdateMontage
	// FAnimationMontageDescriptor GetUpdateMontage(class ADBDPlayer* Player);                                               // [0x5897170] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetUpdateAnimationPlayRate
	// float GetUpdateAnimationPlayRate(class ADBDPlayer* Player);                                                           // [0x58970d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetUpdateAnimationPlayBackDefinition
	// FMontagePlaybackDefinition GetUpdateAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower);             // [0x5896fc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetSnapTimeAtStart
	// float GetSnapTimeAtStart(class ADBDPlayer* Player);                                                                   // [0x5896f20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetSnapTime
	// float GetSnapTime(class ADBDPlayer* Player);                                                                          // [0x5896e80] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetSnapSocketName
	// FName GetSnapSocketName(class ADBDPlayer* Player);                                                                    // [0x5896dd0] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetSnapPointPositionAtStart
	// FVector GetSnapPointPositionAtStart(class ADBDPlayer* Player);                                                        // [0x5896d20] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetSnapPointPosition
	// FVector GetSnapPointPosition(class ADBDPlayer* Player);                                                               // [0x5896c70] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetSnapDistanceAtStart
	// float GetSnapDistanceAtStart(class ADBDPlayer* Player);                                                               // [0x5896bd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetSnapDistance
	// float GetSnapDistance(class ADBDPlayer* Player);                                                                      // [0x5896b30] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetSlashableRelativeLocation
	// FVector GetSlashableRelativeLocation();                                                                               // [0x5896af0] Native|Event|Public|HasDefaults|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetSecondaryActionInputType
	// EInputInteractionType GetSecondaryActionInputType(class UObject* WorldContextObject);                                 // [0x5896a50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetRotationToSnapPointAtStart
	// FRotator GetRotationToSnapPointAtStart(class ADBDPlayer* Player);                                                     // [0x58969a0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetRotationToSnapPoint
	// FRotator GetRotationToSnapPoint(class ADBDPlayer* Player);                                                            // [0x58968f0] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetPlayerDependency
	// class ADBDPlayer* GetPlayerDependency(class ADBDPlayer* interactingPlayer);                                           // [0x5896850] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetInterruptionDefinitions
	// TArray<UInterruptionDefinition*> GetInterruptionDefinitions();                                                        // [0x58967c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetInteractor
	// class UInteractor* GetInteractor();                                                                                   // [0x5896790] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetInteractionTimeMultiplier
	// float GetInteractionTimeMultiplier(class ADBDPlayer* Character);                                                      // [0x58966f0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetInteractionTime
	// float GetInteractionTime(class ADBDPlayer* Character);                                                                // [0x5896650] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetInteractionText
	// FString GetInteractionText(class ADBDPlayer* Player);                                                                 // [0x5896570] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetInteractionExitTime
	// float GetInteractionExitTime(class ADBDPlayer* Character);                                                            // [0x58964d0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetInteractionDescriptionText
	// FText GetInteractionDescriptionText();                                                                                // [0x58964a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetInteractable
	// class AInteractable* GetInteractable();                                                                               // [0x5896470] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetFocalPointPosition
	// FVector GetFocalPointPosition(class ADBDPlayer* Player);                                                              // [0x58963c0] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetExitMontage
	// FAnimationMontageDescriptor GetExitMontage(class ADBDPlayer* Player);                                                 // [0x5896300] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetExitAnimationPlayRate
	// float GetExitAnimationPlayRate(class ADBDPlayer* Player);                                                             // [0x5896260] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetExitAnimationPlayBackDefinition
	// FMontagePlaybackDefinition GetExitAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower);               // [0x5896150] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetEnterMontage
	// FAnimationMontageDescriptor GetEnterMontage(class ADBDPlayer* Player);                                                // [0x5896090] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetEnterAnimationPlayBackDefinition
	// FMontagePlaybackDefinition GetEnterAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower);              // [0x5895f80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetChargePercent
	// float GetChargePercent();                                                                                             // [0x5895f40] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetAllowNavigation
	// bool GetAllowNavigation(class ADBDPlayer* Player);                                                                    // [0x5895ea0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetActualSnapPointPositionAtStart
	// FVector GetActualSnapPointPositionAtStart(class ADBDPlayer* Player);                                                  // [0x5895df0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetActualSnapPointPosition
	// FVector GetActualSnapPointPosition(class ADBDPlayer* Player);                                                         // [0x5895d40] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetActorsToIgnoreOverlap
	// TArray<AActor*> GetActorsToIgnoreOverlap();                                                                           // [0x5895cc0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetActorHeightDelta
	// float GetActorHeightDelta(class ADBDPlayer* Player);                                                                  // [0x5895c20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.GetActionSpeedMultiplier
	// float GetActionSpeedMultiplier(class ADBDPlayer* Character);                                                          // [0x5895b80] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.DoesPlayerHaveClearPath
	// bool DoesPlayerHaveClearPath(class ADBDPlayer* Player);                                                               // [0x5895ae0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.CompleteCharge
	// void CompleteCharge(class ADBDPlayer* Character);                                                                     // [0x5895a50] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.InteractionDefinition.ComparePriorityToInteraction
	// EInteractionComparisonPriority ComparePriorityToInteraction(class UInteractionDefinition* Interaction);               // [0x58959b0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.CanOverrideInteraction
	// bool CanOverrideInteraction(class UInteractionDefinition* Interaction);                                               // [0x5895910] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.CalculateSnapTimeForConstantSpeed
	// float CalculateSnapTimeForConstantSpeed(class ADBDPlayer* Player, float Speed);                                       // [0x5895840] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.CalculateSnapTimeForConstantMaxNormalMovementSpeed
	// float CalculateSnapTimeForConstantMaxNormalMovementSpeed(class ADBDPlayer* Player, float speedBoost);                 // [0x5895770] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDefinition.Authority_OnInteractionAuthorized
	// void Authority_OnInteractionAuthorized(class ADBDPlayer* Player);                                                     // [0x61d2f50] BlueprintAuthorityOnly|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InteractionDefinition.AttachToZone
	// void AttachToZone(class UPrimitiveComponent* zone);                                                                   // [0x58956e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.InteractionDefinition.AttachToInteractor
	// void AttachToInteractor(class UInteractor* Interactor);                                                               // [0x5895650] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.InteractionDefinition.AddMutuallyExclusiveInteraction
	// void AddMutuallyExclusiveInteraction(class UInteractionDefinition* Interaction);                                      // [0x58955c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.InteractionDefinition.AddDisablingTags
	// void AddDisablingTags(FGameplayTag tagToAdd);                                                                         // [0x5895520] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ChargeableInteractionDefinition
/// Size: 0x0140 (0x000650 - 0x000790)
class UChargeableInteractionDefinition : public UInteractionDefinition
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x0650   (0x0028)  MISSED
	SDK_UNDEFINED(16,1770) /* FMulticastInlineDelegate */ __um(SkillCheckResponseAestheticDelegate);               // 0x0678   (0x0010)  
	SDK_UNDEFINED(16,1771) /* FMulticastInlineDelegate */ __um(SkillCheckResponseAuthorityDelegate);               // 0x0688   (0x0010)  
	bool                                               StopInteractionOnChargeComplete;                            // 0x0698   (0x0001)  
	bool                                               HasProgressivelyHarderSkillChecks;                          // 0x0699   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x069A   (0x0002)  MISSED
	float                                              ProgressiveDifficultyModifier;                              // 0x069C   (0x0004)  
	EChargeableInteractionBarType                      ProgressBarType;                                            // 0x06A0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x06A1   (0x0007)  MISSED
	TArray<float>                                      ProgressPips;                                               // 0x06A8   (0x0010)  
	bool                                               HideProgressBar;                                            // 0x06B8   (0x0001)  
	bool                                               ShowItemIcon;                                               // 0x06B9   (0x0001)  
	bool                                               AddChargeOnInteractionUpdateTick;                           // 0x06BA   (0x0001)  
	bool                                               ResetChargeOnInteractionFinished;                           // 0x06BB   (0x0001)  
	bool                                               ResetChargeOnInteractionChargeCompleted;                    // 0x06BC   (0x0001)  
	bool                                               ToggleCrouchSlashableCapsule;                               // 0x06BD   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x06BE   (0x0002)  MISSED
	class UChargeableComponent*                        _chargeableComponent;                                       // 0x06C0   (0x0008)  
	float                                              _tutorialChargeableMultiplier;                              // 0x06C8   (0x0004)  
	unsigned char                                      UnknownData04_5[0x54];                                      // 0x06CC   (0x0054)  MISSED
	bool                                               ShowSpeedProficiencyForMultipleInteractors;                 // 0x0720   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x0721   (0x0007)  MISSED
	FGameplayTagContainer                              _interactionSpecificActionSpeedTags;                        // 0x0728   (0x0020)  
	FGameplayTagContainer                              _interactionSpecificActionSpeedMultiplicativeTags;          // 0x0748   (0x0020)  
	FGameplayTagContainer                              _interactionSpecificActionDurationAdditiveTags;             // 0x0768   (0x0020)  
	unsigned char                                      UnknownData06_6[0x8];                                       // 0x0788   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.ShouldShowSpeedProficiencyForMultipleInteractors
	// bool ShouldShowSpeedProficiencyForMultipleInteractors();                                                              // [0x57f9bf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.SetTutorialChargeableMultiplier
	// void SetTutorialChargeableMultiplier(float multiplierValue);                                                          // [0x57f9b70] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.SetSpeedBase
	// void SetSpeedBase(float speedBase);                                                                                   // [0x57f9af0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.SetSecondsToCharge
	// void SetSecondsToCharge(float SecondsToCharge);                                                                       // [0x57f9a70] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.SetChargeableComponent
	// void SetChargeableComponent(class UChargeableComponent* ChargeableComponent, bool isNullAllowed);                     // [0x57f98a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAuthorityBP
	// void OnSkillCheckResponseAuthorityBP(class ADBDPlayer* Player, bool success, bool Bonus, bool hadInput, ESkillCheckCustomType Type); // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAuthority
	// void OnSkillCheckResponseAuthority(bool success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, ESkillCheckCustomType Type); // [0x57f96a0] Native|Protected     
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAestheticBP
	// void OnSkillCheckResponseAestheticBP(class ADBDPlayer* Player, bool success, bool Bonus, bool hadInput, ESkillCheckCustomType Type); // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAesthetic
	// void OnSkillCheckResponseAesthetic(bool success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, ESkillCheckCustomType Type); // [0x57f94a0] Native|Protected     
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.OnInteractionCompletionStateChanged
	// void OnInteractionCompletionStateChanged(class ADBDPlayer* Player, bool complete);                                    // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.IsChargeComplete
	// bool IsChargeComplete();                                                                                              // [0x57f9330] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.HasSkillCheckHappened
	// bool HasSkillCheckHappened(class ADBDPlayer* Character);                                                              // [0x57f91e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetTunableValue
	// float GetTunableValue(FName tunableValueID, float defaultValue);                                                      // [0x57f9040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetSuccessProbability
	// float GetSuccessProbability();                                                                                        // [0x57f8f50] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckProbability
	// float GetSkillCheckProbability(class ADBDPlayer* interactingPlayer);                                                  // [0x57f8eb0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckFailureTimePenalty
	// float GetSkillCheckFailureTimePenalty();                                                                              // [0x57f8e70] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckFailurePercentPenalty
	// float GetSkillCheckFailurePercentPenalty(class ADBDPlayer* Player);                                                   // [0x57f8dd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckDifficulityModifier
	// float GetSkillCheckDifficulityModifier(class ADBDPlayer* Character);                                                  // [0x57f8d30] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckCharge
	// float GetSkillCheckCharge(class ADBDPlayer* Player, bool success, bool Bonus, ESkillCheckCustomType Type);            // [0x57f8ba0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetPipsPassed
	// int32_t GetPipsPassed();                                                                                              // [0x57f8ad0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetPerkMultiplier
	// float GetPerkMultiplier(class ADBDPlayer* Character);                                                                 // [0x57f8a00] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetMultiplicativeLuckBonus
	// float GetMultiplicativeLuckBonus(class ADBDPlayer* Character);                                                        // [0x57f8930] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetMaxCharge
	// float GetMaxCharge();                                                                                                 // [0x57f8900] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetItemEfficiencyModifier
	// float GetItemEfficiencyModifier(class ADBDPlayer* Character);                                                         // [0x57f8830] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetInteractionChargeSpeedMultiplier
	// float GetInteractionChargeSpeedMultiplier(class ADBDPlayer* Character);                                               // [0x5092390] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetGoodSkillCheckSuccessPercentReward
	// float GetGoodSkillCheckSuccessPercentReward(class ADBDPlayer* Player);                                                // [0x57f8790] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetChargeSpeedModifier
	// float GetChargeSpeedModifier(class ADBDPlayer* Character);                                                            // [0x57f84e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetChargeAmountForTime
	// float GetChargeAmountForTime(float DeltaSeconds, class ADBDPlayer* Character);                                        // [0x57f83e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetChargeableComponent
	// class UChargeableComponent* GetChargeableComponent();                                                                 // [0x57f8580] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetBonusSkillCheckZoneSizeModifier
	// float GetBonusSkillCheckZoneSizeModifier(class ADBDPlayer* Character);                                                // [0x57f8340] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetBonusSkillCheckSuccessPercentReward
	// float GetBonusSkillCheckSuccessPercentReward(class ADBDPlayer* Player);                                               // [0x57f82a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetAdditiveLuckBonus
	// float GetAdditiveLuckBonus(class ADBDPlayer* Character);                                                              // [0x57f8200] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.GetAdditiveChargeTimeReductionAsMultiplier
	// float GetAdditiveChargeTimeReductionAsMultiplier(class ADBDPlayer* Character);                                        // [0x57f8160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.Authority_ResetCharge
	// void Authority_ResetCharge(class ADBDPlayer* Character);                                                              // [0x57f7ed0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.Authority_ChargeWithItem
	// void Authority_ChargeWithItem(float DeltaSeconds, class ACollectable* Item, class ADBDPlayer* Character);             // [0x57f7d90] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableInteractionDefinition.Authority_AddCharge
	// void Authority_AddCharge(float DeltaSeconds, class ADBDPlayer* Character, bool isChargeFromItem);                     // [0x57f7a90] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.Interactable
/// Size: 0x0108 (0x000230 - 0x000338)
class AInteractable : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x68];                                      // 0x0230   (0x0068)  MISSED
	class UPrimitiveComponent*                         _singleZone;                                                // 0x0298   (0x0008)  
	bool                                               _useSingleZone;                                             // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x02A1   (0x0007)  MISSED
	TArray<class UInteractor*>                         _interactors;                                               // 0x02A8   (0x0010)  
	class UInteractableTransformOptimizer*             _transformOptimizer;                                        // 0x02B8   (0x0008)  
	unsigned char                                      UnknownData02_5[0x20];                                      // 0x02C0   (0x0020)  MISSED
	SDK_UNDEFINED(80,1772) /* TMap<UPrimitiveComponent*, FInteractionArray> */ __um(_zoneToInteractions);          // 0x02E0   (0x0050)  
	class UGameplayTagContainerComponent*              _interactableObjectState;                                   // 0x0330   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.Interactable.SetSingleZone
	// void SetSingleZone(class UPrimitiveComponent* zone);                                                                  // [0x5892380] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.Interactable.SetInteractorsUsable
	// void SetInteractorsUsable(bool usable, class UInteractor* exception);                                                 // [0x58922b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Interactable.PreInterruptionEvent
	// void PreInterruptionEvent(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInterruptionDefinition* interruption); // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.Interactable.OnLevelReadyToPlay_Native
	// void OnLevelReadyToPlay_Native();                                                                                     // [0x5892000] Native|Protected     
	// Function /Script/DeadByDaylight.Interactable.OnLevelReadyToPlay
	// void OnLevelReadyToPlay();                                                                                            // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.Interactable.OnInteractorLockChanged
	// void OnInteractorLockChanged(bool locked, class ADBDPlayer* interactingPlayer);                                       // [0x5891f30] Final|Native|Private 
	// Function /Script/DeadByDaylight.Interactable.IsInterruptionPossible
	// bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInteractor* Interactor, class UInteractionDefinition* definition, class UInterruptionDefinition* interruption); // [0x5891990] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.Interactable.IsInteractionDone
	// bool IsInteractionDone(class ADBDPlayer* Player, class UInteractor* Interactor, class UInteractionDefinition* definition, EInputInteractionType interactionType); // [0x5891830] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.Interactable.IsInteractingWith
	// bool IsInteractingWith(class ADBDPlayer* Player);                                                                     // [0x5891790] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactable.HasAnOngoingInteraction
	// bool HasAnOngoingInteraction();                                                                                       // [0x58913d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactable.GetPlayerOwner
	// class ADBDPlayer* GetPlayerOwner();                                                                                   // [0x5891370] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactable.GetObjectState
	// class UGameplayTagContainerComponent* GetObjectState();                                                               // [0x5891300] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactable.GetInteractors
	// TArray<UInteractor*> GetInteractors();                                                                                // [0x5891280] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactable.GetInteractingPlayersRaw
	// TArray<ADBDPlayer*> GetInteractingPlayersRaw();                                                                       // [0x5891200] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactable.GetFocalPointPosition
	// FVector GetFocalPointPosition(class ADBDPlayer* Player, class UInteractionDefinition* definition);                    // [0x5890fd0] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactable.AuthorityRequestCancelOngoingInteractions
	// void AuthorityRequestCancelOngoingInteractions(bool onlyOnHitCancelableInteractions);                                 // [0x5890d10] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Interactable.Authority_GetInteractingPlayers
	// TArray<ADBDPlayer*> Authority_GetInteractingPlayers();                                                                // [0x5890dd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactable.AttachEveryInteractionToZone
	// void AttachEveryInteractionToZone(class UPrimitiveComponent* zone);                                                   // [0x5890c80] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.OutlineUpdateStrategy
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UOutlineUpdateStrategy : public UActorComponent
{ 
public:
	TArray<FGameplayTag>                               _requiredPlayerStateTags;                                   // 0x00B8   (0x0010)  
	TArray<FGameplayTag>                               _preventativePlayerStateTags;                               // 0x00C8   (0x0010)  
	class UDBDOutlineComponent*                        _outlineComponent;                                          // 0x00D8   (0x0008)  
};

/// Struct /Script/DeadByDaylight.ModifierTickableConditionReplicatedData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FModifierTickableConditionReplicatedData
{ 
	TArray<class UBaseModifierCondition*>              Conditions;                                                 // 0x0000   (0x0010)  
	bool                                               HasCondition;                                               // 0x0010   (0x0001)  
	bool                                               AuthorityDataSet;                                           // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0012   (0x0006)  MISSED
};

/// Class /Script/DeadByDaylight.GameplayModifierContainer
/// Size: 0x0120 (0x0000F8 - 0x000218)
class UGameplayModifierContainer : public UBaseModifierContainer
{ 
public:
	unsigned char                                      UnknownData00_2[0x90];                                      // 0x00F8   (0x0090)  MISSED
	FModifierTickableConditionReplicatedData           _tickableConditionsData;                                    // 0x0188   (0x0018)  
	TArray<FName>                                      _tags;                                                      // 0x01A0   (0x0010)  
	bool                                               UseApplyFunction;                                           // 0x01B0   (0x0001)  
	bool                                               BroadcastStatusView;                                        // 0x01B1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x01B2   (0x0002)  MISSED
	FName                                              StatusViewID;                                               // 0x01B4   (0x000C)  
	bool                                               _autoInitializeOnBeginPlay;                                 // 0x01C0   (0x0001)  
	bool                                               _canOptimizeTickActivation;                                 // 0x01C1   (0x0001)  
	unsigned char                                      UnknownData02_5[0x46];                                      // 0x01C2   (0x0046)  MISSED
	class UTimerObject*                                _activationTimer;                                           // 0x0208   (0x0008)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x0210   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.GameplayModifierContainer.UpdateIsApplicable
	// void UpdateIsApplicable();                                                                                            // [0x5882b10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.UnlistenToDispatcherGameEvent
	// void UnlistenToDispatcherGameEvent(FGameplayTag EventType);                                                           // [0x5882920] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.UnlistenToAllDispatcherGameEvents
	// void UnlistenToAllDispatcherGameEvents();                                                                             // [0x58828e0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.SetUseApplyFunction
	// void SetUseApplyFunction(bool Use);                                                                                   // [0x5882850] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.SetModifierValue
	// void SetModifierValue(FGameplayTag Type, float GameplayModifierValue);                                                // [0x58826d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.SetFlag
	// void SetFlag(FGameplayTag flag, bool flagValue);                                                                      // [0x58825e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.RemoveModifier
	// void RemoveModifier(FGameplayTag Type);                                                                               // [0x5882540] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.RemoveAllModifiers
	// void RemoveAllModifiers();                                                                                            // [0x5882520] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.RemoveAllFlags
	// void RemoveAllFlags();                                                                                                // [0x5882500] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.OnRep_TickableConditionsData
	// void OnRep_TickableConditionsData(FModifierTickableConditionReplicatedData& oldTickableConditionsData);               // [0x58823a0] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.OnRep_ModifierData
	// void OnRep_ModifierData();                                                                                            // [0x4b96770] Native|Protected     
	// Function /Script/DeadByDaylight.GameplayModifierContainer.OnRep_ActivationTimer
	// void OnRep_ActivationTimer();                                                                                         // [0x5882380] Final|Native|Private 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.OnLevelReadyToPlay
	// void OnLevelReadyToPlay();                                                                                            // [0x5882360] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.OnInitialized_Internal
	// void OnInitialized_Internal();                                                                                        // [0x5882340] Native|Public        
	// Function /Script/DeadByDaylight.GameplayModifierContainer.OnInitialized
	// void OnInitialized();                                                                                                 // [0x5882320] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.OnGameEventDispatched
	// void OnGameEventDispatched(FGameplayTag gameEventType, FGameEventData& GameEventData);                                // [0x5882210] Native|Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.OnApplyEnd
	// void OnApplyEnd();                                                                                                    // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.OnApplyBegin
	// void OnApplyBegin();                                                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.ListenToDispatcherGameEvent
	// void ListenToDispatcherGameEvent(FGameplayTag EventType);                                                             // [0x5881f50] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.IsStatusViewActive
	// bool IsStatusViewActive();                                                                                            // [0x5881f20] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.IsActivationTimerDone
	// bool IsActivationTimerDone();                                                                                         // [0x5881ec0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.IsActivationTimerActive
	// bool IsActivationTimerActive();                                                                                       // [0x5881e90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.HasModifierOfType
	// bool HasModifierOfType(FGameplayTag Type);                                                                            // [0x5881de0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.HasFlag
	// bool HasFlag(FGameplayTag flag);                                                                                      // [0x5881d30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetRemainingLifetime
	// float GetRemainingLifetime();                                                                                         // [0x5881cf0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetPercentageFill
	// float GetPercentageFill();                                                                                            // [0x5881cb0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetOwningPlayer
	// class ADBDPlayer* GetOwningPlayer();                                                                                  // [0x5881c80] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetOriginatingEffect
	// class UGameplayModifierContainer* GetOriginatingEffect();                                                             // [0x5881bf0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetModifierValue
	// float GetModifierValue(FGameplayTag Type);                                                                            // [0x5881b40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetLevelToDisplay
	// int32_t GetLevelToDisplay();                                                                                          // [0x5881b10] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetInventoryItemType
	// EInventoryItemType GetInventoryItemType();                                                                            // [0x4b5fe10] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetIconFilePathIndex
	// int32_t GetIconFilePathIndex();                                                                                       // [0x5881ae0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetActivationTimerRemainingTime
	// float GetActivationTimerRemainingTime();                                                                              // [0x5881ab0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetActivationTimerPercentRemaining
	// float GetActivationTimerPercentRemaining();                                                                           // [0x5881a80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetActivationTimerElapsedTimePercent
	// float GetActivationTimerElapsedTimePercent();                                                                         // [0x5881a50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetActivationTimerElapsedTime
	// float GetActivationTimerElapsedTime();                                                                                // [0x5881a20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.GetActivationTimerDuration
	// float GetActivationTimerDuration();                                                                                   // [0x58819f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.FireActiveStatusViewEvent
	// void FireActiveStatusViewEvent(FName StatusViewID, FName uniqueSourceID, FStatusViewSource StatusViewSource);         // [0x5881590] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.Authority_TriggerActivationTimer
	// void Authority_TriggerActivationTimer(float activationTime);                                                          // [0x5881510] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.Authority_SetActivationTimerPaused
	// void Authority_SetActivationTimerPaused(bool paused);                                                                 // [0x5881280] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.Authority_InstantiateGameplayModifierConditions
	// void Authority_InstantiateGameplayModifierConditions();                                                               // [0x5881150] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.Authority_ClearActivationTimer
	// void Authority_ClearActivationTimer();                                                                                // [0x5880e70] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.Apply
	// void Apply(float DeltaTime);                                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.GameplayModifierContainer.AddCondition
	// class UBaseModifierCondition* AddCondition(class UClass* conditionType);                                              // [0x5880bd0] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.StatusEffectInitializationData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FStatusEffectInitializationData
{ 
	class ADBDPlayer*                                  OriginatingPlayer;                                          // 0x0000   (0x0008)  
	bool                                               HasOriginatingPlayer;                                       // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UGameplayModifierContainer*                  OriginatingEffect;                                          // 0x0010   (0x0008)  
	bool                                               HasOriginatingEffect;                                       // 0x0018   (0x0001)  
	EStatusEffectType                                  StatusEffectType;                                           // 0x0019   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x001A   (0x0002)  MISSED
	float                                              CustomParam;                                                // 0x001C   (0x0004)  
	float                                              InitializationLifeTime;                                     // 0x0020   (0x0004)  
	bool                                               AuthorityDataSet;                                           // 0x0024   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0025   (0x0003)  MISSED
};

/// Class /Script/DeadByDaylight.StatusEffect
/// Size: 0x0138 (0x000218 - 0x000350)
class UStatusEffect : public UGameplayModifierContainer
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0218   (0x0048)  MISSED
	FGameplayModifierData                              ModifierData;                                               // 0x0260   (0x0030)  
	bool                                               ShouldDisplay;                                              // 0x0290   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0291   (0x0003)  MISSED
	float                                              CustomParam;                                                // 0x0294   (0x0004)  
	bool                                               _removeOnRemainingLifetimeEnded;                            // 0x0298   (0x0001)  
	bool                                               BroadcastAsStatusEffectWhenApplicable;                      // 0x0299   (0x0001)  
	bool                                               BroadcastAsStatusEffectByActivationTimer;                   // 0x029A   (0x0001)  
	bool                                               BroadcastAsStatusEffectWhenLifeRemains;                     // 0x029B   (0x0001)  
	bool                                               BroadcastAsStatusEffectByFunction;                          // 0x029C   (0x0001)  
	bool                                               BroadcastAsStatusEffectAlways;                              // 0x029D   (0x0001)  
	bool                                               BroadcastOriginatorGameEventNotificationWhenFirstApplicable; // 0x029E   (0x0001)  
	bool                                               ShouldHideStatusEffectIconForOriginatingPlayer;             // 0x029F   (0x0001)  
	bool                                               _forceActivationTimerDisplay;                               // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x02A1   (0x0007)  MISSED
	FStatusEffectInitializationData                    _statusInitializationData;                                  // 0x02A8   (0x0028)  
	unsigned char                                      UnknownData03_5[0x38];                                      // 0x02D0   (0x0038)  MISSED
	SDK_UNDEFINED(16,1773) /* TArray<TWeakObjectPtr<UClass*>> */ __um(_nonStackingEffects);                        // 0x0308   (0x0010)  
	unsigned char                                      UnknownData04_6[0x38];                                      // 0x0318   (0x0038)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.StatusEffect.ShouldDisplayStatusEffectIcon
	// bool ShouldDisplayStatusEffectIcon();                                                                                 // [0x590cb50] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.StatusEffect.SetStatusEffectIconPercentage
	// void SetStatusEffectIconPercentage(float value);                                                                      // [0x590ca30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.StatusEffect.SetShouldDisplay
	// void SetShouldDisplay(bool On);                                                                                       // [0x590c9a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.StatusEffect.OnShouldOriginatingPlayerChange
	// void OnShouldOriginatingPlayerChange();                                                                               // [0x590c6f0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.StatusEffect.OnShouldDisplayChanged
	// void OnShouldDisplayChanged(bool CurrentValue);                                                                       // [0x590c660] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.StatusEffect.OnRep_StatusInitializationData
	// void OnRep_StatusInitializationData();                                                                                // [0x590c640] Final|Native|Private 
	// Function /Script/DeadByDaylight.StatusEffect.OnRep_ShouldOriginatingPlayerChange
	// void OnRep_ShouldOriginatingPlayerChange();                                                                           // [0x590c620] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StatusEffect.OnRep_ShouldDisplay
	// void OnRep_ShouldDisplay();                                                                                           // [0x590c600] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StatusEffect.Multicast_SetRemainingLifetimeInitialized
	// void Multicast_SetRemainingLifetimeInitialized(bool remainingLifetimeInitialized);                                    // [0x590c3c0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.StatusEffect.Multicast_SetRemainingLifetime
	// void Multicast_SetRemainingLifetime(float Lifetime);                                                                  // [0x590c330] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.StatusEffect.IsOriginatorHooked
	// bool IsOriginatorHooked();                                                                                            // [0x590c2d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StatusEffect.IsOriginatorAlive
	// bool IsOriginatorAlive();                                                                                             // [0x590c2a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StatusEffect.IsKillerInOriginatorRange
	// bool IsKillerInOriginatorRange(float AdditiveRangeModifier);                                                          // [0x590c210] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StatusEffect.IsInOriginatorRange
	// bool IsInOriginatorRange();                                                                                           // [0x590c1e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StatusEffect.InitializeLifetime
	// void InitializeLifetime(float Lifetime);                                                                              // [0x590c080] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.StatusEffect.GetStatusEffectType
	// EStatusEffectType GetStatusEffectType();                                                                              // [0x589b3b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StatusEffect.GetStatusEffectCooldownRate
	// float GetStatusEffectCooldownRate();                                                                                  // [0x590bd70] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StatusEffect.GetShouldDisplay
	// bool GetShouldDisplay();                                                                                              // [0x589bfe0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.StatusEffect.GetOriginatingPlayer
	// class ADBDPlayer* GetOriginatingPlayer();                                                                             // [0x590bcf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StatusEffect.GetLifetimeDuration
	// float GetLifetimeDuration();                                                                                          // [0x590bc80] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StatusEffect.GetCustomParam
	// float GetCustomParam();                                                                                               // [0x590bc60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StatusEffect.FireActiveStatusEffectEvent
	// void FireActiveStatusEffectEvent(float Percentage, int32_t levelToDisplay);                                           // [0x590bb90] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/DeadByDaylight.StatusEffect.BroadcastOriginatorGameEventNotification
	// void BroadcastOriginatorGameEventNotification();                                                                      // [0x590b960] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.StatusEffect.BroadcastGameEventNotification
	// void BroadcastGameEventNotification(FGameplayNotificationData notificationData, bool addToHistory);                   // [0x590b770] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.StatusEffect.Authority_SetRemainingLifetime
	// void Authority_SetRemainingLifetime(float Lifetime);                                                                  // [0x590b6e0] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.StatusEffect.Authority_RemoveSelf
	// void Authority_RemoveSelf();                                                                                          // [0x590b6c0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.StatusEffect.Authority_OnOriginatingPlayerEndPlay
	// void Authority_OnOriginatingPlayerEndPlay(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);            // [0x590b5f0] Final|Native|Private 
	// Function /Script/DeadByDaylight.StatusEffect.Authority_EndSelf
	// void Authority_EndSelf();                                                                                             // [0x590b5d0] BlueprintAuthorityOnly|Native|Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.QuestEventEvaluatorBase
/// Size: 0x0088 (0x000030 - 0x0000B8)
class UQuestEventEvaluatorBase : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0030   (0x0020)  MISSED
	class ADBDPlayer*                                  _dbdPlayer;                                                 // 0x0050   (0x0008)  
	unsigned char                                      UnknownData01_5[0xA];                                       // 0x0058   (0x000A)  MISSED
	EConditionNeedsType                                _conditionNeedsType;                                        // 0x0062   (0x0001)  
	unsigned char                                      UnknownData02_5[0x5];                                       // 0x0063   (0x0005)  MISSED
	TArray<class UClass*>                              _evaluatorConditionsClass;                                  // 0x0068   (0x0010)  
	TArray<class UEvaluatorCondition*>                 _evaluatorConditions;                                       // 0x0078   (0x0010)  
	unsigned char                                      UnknownData03_6[0x30];                                      // 0x0088   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.QuestEventEvaluatorBase.OnGameEvent
	// void OnGameEvent(FGameplayTag gameEventType, FGameEventData& GameEventData);                                          // [0x58e1210] Native|Protected|HasOutParms 
};

/// Class /Script/DeadByDaylight.EvaluatorCondition
/// Size: 0x0018 (0x000030 - 0x000048)
class UEvaluatorCondition : public UObject
{ 
public:
	EConditionSubject                                  _conditionSubject;                                          // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x17];                                      // 0x0031   (0x0017)  MISSED
};

/// Class /Script/DeadByDaylight.SpecialBehaviourInteractable
/// Size: 0x0040 (0x000338 - 0x000378)
class ASpecialBehaviourInteractable : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0338   (0x0030)  MISSED
	SDK_UNDEFINED(8,1774) /* TWeakObjectPtr<ADBDPlayerState*> */ __um(_specialBehaviourOwner);                     // 0x0368   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0370   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SpecialBehaviourInteractable.OnRep_SpecialBehaviourOwner
	// void OnRep_SpecialBehaviourOwner();                                                                                   // [0x5905950] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.SourceBasedOutlineUpdateStrategy
/// Size: 0x0078 (0x0000E0 - 0x000158)
class USourceBasedOutlineUpdateStrategy : public UOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       _defaultColorForSurvivor;                                   // 0x00E0   (0x0010)  
	FLinearColor                                       _defaultColorForSlasher;                                    // 0x00F0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x58];                                      // 0x0100   (0x0058)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SourceBasedOutlineUpdateStrategy.ResetReveal
	// void ResetReveal();                                                                                                   // [0x5905a00] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SourceBasedOutlineUpdateStrategy.RemoveRevealSource
	// void RemoveRevealSource(class UObject* Source);                                                                       // [0x5905970] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SourceBasedOutlineUpdateStrategy.ChangeDefaultColorForSurvivor
	// void ChangeDefaultColorForSurvivor(FLinearColor NewColor);                                                            // [0x5904450] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.SourceBasedOutlineUpdateStrategy.ChangeDefaultColorForSlasher
	// void ChangeDefaultColorForSlasher(FLinearColor NewColor);                                                             // [0x59043c0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.SourceBasedOutlineUpdateStrategy.AddTimedReveal
	// void AddTimedReveal(class UObject* Source, FLinearColor HighlightColor, int32_t Priority, TArray<ADBDPlayer*>& affectedCharacters, float Duration); // [0x5904200] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.SourceBasedOutlineUpdateStrategy.AddTimedAndRangedReveal
	// void AddTimedAndRangedReveal(class UObject* Source, class AActor* SourceActor, FLinearColor HighlightColor, int32_t Priority, TArray<ADBDPlayer*>& affectedCharacters, float Duration, float Range); // [0x5903fb0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.SourceBasedOutlineUpdateStrategy.AddRevealWithOptions
	// void AddRevealWithOptions(class UObject* Source, FLinearColor HighlightColor, int32_t Priority, TArray<ADBDPlayer*>& affectedCharacters, FRevealOptions Options); // [0x5903da0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.SourceBasedOutlineUpdateStrategy.AddReveal
	// void AddReveal(class UObject* Source, FLinearColor HighlightColor, int32_t Priority, TArray<ADBDPlayer*>& affectedCharacters); // [0x5903c10] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.SourceBasedOutlineUpdateStrategy.AddRangedReveal
	// void AddRangedReveal(class UObject* Source, class AActor* SourceActor, FLinearColor HighlightColor, int32_t Priority, TArray<ADBDPlayer*>& affectedCharacters, float Range); // [0x5903a00] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.SpecialBehaviourIterativeWeightAdjustmentStrategy
/// Size: 0x0000 (0x000030 - 0x000030)
class USpecialBehaviourIterativeWeightAdjustmentStrategy : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.DefaultOutlineUpdateStrategy
/// Size: 0x0020 (0x0000E0 - 0x000100)
class UDefaultOutlineUpdateStrategy : public UOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       _revealedColorToSurvivor;                                   // 0x00E0   (0x0010)  
	FLinearColor                                       _revealedColorToKiller;                                     // 0x00F0   (0x0010)  
};

/// Class /Script/DeadByDaylight.ActorNavMovementComponent
/// Size: 0x0028 (0x000140 - 0x000168)
class UActorNavMovementComponent : public UNavMovementComponent
{ 
public:
	class AActor*                                      _owningActor;                                               // 0x0140   (0x0008)  
	class UPathFollowingComponent*                     _pathFollowingComponent;                                    // 0x0148   (0x0008)  
	bool                                               bPositionCorrected : 1;                                     // 0x0150:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0151   (0x0003)  MISSED
	float                                              _maxSpeed;                                                  // 0x0154   (0x0004)  
	float                                              _acceleration;                                              // 0x0158   (0x0004)  
	float                                              _deceleration;                                              // 0x015C   (0x0004)  
	float                                              _brakingDeceleration;                                       // 0x0160   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0164   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ActorNavMovementComponent.SetMaxSpeed
	// void SetMaxSpeed(float MaxSpeed);                                                                                     // [0x57b0ea0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorNavMovementComponent.SetDeceleration
	// void SetDeceleration(float Deceleration);                                                                             // [0x57b0c90] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorNavMovementComponent.SetAcceleration
	// void SetAcceleration(float Acceleration);                                                                             // [0x57b0c10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorNavMovementComponent.GetOwningActor
	// class AActor* GetOwningActor();                                                                                       // [0x57afca0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.AbstractAnalyticsManager
/// Size: 0x0000 (0x000038 - 0x000038)
class UAbstractAnalyticsManager : public UGameInstanceSubsystem
{ 
public:
};

/// Class /Script/DeadByDaylight.ArmIKSensorComponent
/// Size: 0x0080 (0x0000B8 - 0x000138)
class UArmIKSensorComponent : public UActorComponent
{ 
public:
	class USkeletalMeshComponent*                      _mesh;                                                      // 0x00B8   (0x0008)  
	SDK_UNDEFINED(80,1775) /* TMap<EArm, FArmIKSensorDatum> */ __um(_arms);                                        // 0x00C0   (0x0050)  
	float                                              _capsuleRadius;                                             // 0x0110   (0x0004)  
	float                                              _capsuleHalfHeight;                                         // 0x0114   (0x0004)  
	float                                              _traceLength;                                               // 0x0118   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x011C   (0x0004)  MISSED
	class UCameraComponent*                            _owningCamera;                                              // 0x0120   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0128   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.DBDAttackTargetTracker
/// Size: 0x00B8 (0x000000 - 0x0000B8)
struct FDBDAttackTargetTracker
{ 
	bool                                               _useTargetTracking;                                         // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FStatProperty                                      _targetSnapDistance;                                        // 0x0008   (0x0088)  
	FName                                              _ownerEyeSocketName;                                        // 0x0090   (0x000C)  
	FName                                              _targetBoneName;                                            // 0x009C   (0x000C)  
	SDK_UNDEFINED(8,1776) /* TWeakObjectPtr<ACharacter*> */ __um(_trackedTarget);                                  // 0x00A8   (0x0008)  
	SDK_UNDEFINED(8,1777) /* TWeakObjectPtr<ADBDPlayer*> */ __um(_owningPlayer);                                   // 0x00B0   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDAttack
/// Size: 0x02D8 (0x0000B8 - 0x000390)
class UDBDAttack : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	EAttackType                                        _attackType;                                                // 0x00D0   (0x0001)  
	bool                                               _useMontage;                                                // 0x00D1   (0x0001)  
	EDetectionZone                                     _damageZone;                                                // 0x00D2   (0x0001)  
	EDetectionZone                                     _lockZone;                                                  // 0x00D3   (0x0001)  
	EDetectionZone                                     _obstructionZone;                                           // 0x00D4   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x00D5   (0x0003)  MISSED
	FStatProperty                                      _maxAccelerationMultiplier;                                 // 0x00D8   (0x0088)  
	bool                                               _onlyApplyAccelerationMultiplierWhenWalking;                // 0x0160   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0161   (0x0007)  MISSED
	FDBDAttackTargetTracker                            _targetTracker;                                             // 0x0168   (0x00B8)  
	SDK_UNDEFINED(80,1778) /* TMap<EAttackSubstate, UClass*> */ __um(_stateClasses);                               // 0x0220   (0x0050)  
	TArray<class ACharacter*>                          _localAlreadyHitTargets;                                    // 0x0270   (0x0010)  
	TArray<class ADBDPlayer*>                          _hitTargets;                                                // 0x0280   (0x0010)  
	SDK_UNDEFINED(80,1779) /* TSet<ADBDPlayer*> */     __um(_targetsAwaitingServerValidation);                     // 0x0290   (0x0050)  
	unsigned char                                      UnknownData03_5[0x30];                                      // 0x02E0   (0x0030)  MISSED
	SDK_UNDEFINED(80,1780) /* TMap<EAttackSubstate, UDBDAttackSubstate*> */ __um(_states);                         // 0x0310   (0x0050)  
	unsigned char                                      UnknownData04_5[0x27];                                      // 0x0360   (0x0027)  MISSED
	EHitValidatorConfigName                            _hitValidationConfigName;                                   // 0x0387   (0x0001)  
	unsigned char                                      UnknownData05_6[0x8];                                       // 0x0388   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDAttack.Server_RequestStateChange
	// void Server_RequestStateChange(EAttackSubstate State);                                                                // [0x5817e00] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDAttack.Server_HitTarget
	// void Server_HitTarget(class ADBDPlayer* Target, float TargetLocationTimestamp, FActionPredictionKey PredictionKey);   // [0x5817cf0] Net|NetReliableNative|Event|Protected|NetServer 
	// Function /Script/DeadByDaylight.DBDAttack.Server_HitDestroyableActorAttackableComponent
	// void Server_HitDestroyableActorAttackableComponent(class UAttackableComponent* AttackableComponent);                  // [0x5817c60] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDAttack.Server_ClearTargets
	// void Server_ClearTargets();                                                                                           // [0x4d82970] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDAttack.Multicast_SendPostHitTargetData
	// void Multicast_SendPostHitTargetData(class ADBDPlayer* owningKiller, class ADBDPlayer* Target, FPostAttackData attackData); // [0x58179a0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDAttack.Multicast_RequestStateChange
	// void Multicast_RequestStateChange(EAttackSubstate State);                                                             // [0x5817920] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDAttack.Multicast_HitTarget
	// void Multicast_HitTarget(class ADBDPlayer* Target, bool hitCosmeticOnly);                                             // [0x5817850] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDAttack.Multicast_HitAttackableComponent
	// void Multicast_HitAttackableComponent(class UAttackableComponent* AttackableComponent);                               // [0x58177c0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDAttack.Multicast_ClearTargets
	// void Multicast_ClearTargets();                                                                                        // [0x4dd4860] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDAttack.Local_OnMovementChanged
	// void Local_OnMovementChanged(class ACharacter* Character, TEnumAsByte<EMovementMode> PrevMovementMode, char PreviousCustomMode); // [0x58175e0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.DBDAttack.GetAttackSubstate
	// class UDBDAttackSubstate* GetAttackSubstate(EAttackSubstate State);                                                   // [0x58173a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDAttack.Client_ReceiveHitResult
	// void Client_ReceiveHitResult(class ADBDPlayer* Target, bool IsValid, FActionPredictionKey PredictionKey);             // [0x5817060] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.DBDAttack.Client_ReceiveAttackSubstateRequestResult
	// void Client_ReceiveAttackSubstateRequestResult(FAttackSubstateRequestResult Result);                                  // [0x5816fc0] Final|Net|NetReliableNative|Event|Private|NetClient 
};

/// Class /Script/DeadByDaylight.DBDAttackSubstate
/// Size: 0x00E8 (0x000030 - 0x000118)
class UDBDAttackSubstate : public UObject
{ 
public:
	FStatProperty                                      _duration;                                                  // 0x0030   (0x0088)  
	class UCurveFloat*                                 _speedCurve;                                                // 0x00B8   (0x0008)  
	FName                                              _montage;                                                   // 0x00C0   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	class UCurveFloat*                                 _currentCurve;                                              // 0x00D0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x40];                                      // 0x00D8   (0x0040)  MISSED
};

/// Class /Script/DeadByDaylight.DBDAttackOpenSubstate
/// Size: 0x0000 (0x000118 - 0x000118)
class UDBDAttackOpenSubstate : public UDBDAttackSubstate
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDAttackHittingSubstate
/// Size: 0x0088 (0x000118 - 0x0001A0)
class UDBDAttackHittingSubstate : public UDBDAttackSubstate
{ 
public:
	FStatProperty                                      _hittingPercentDamageBegin;                                 // 0x0118   (0x0088)  
};

/// Class /Script/DeadByDaylight.DBDAttackSuccessSubstate
/// Size: 0x0000 (0x000118 - 0x000118)
class UDBDAttackSuccessSubstate : public UDBDAttackSubstate
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDAttackMissSubstate
/// Size: 0x0000 (0x000118 - 0x000118)
class UDBDAttackMissSubstate : public UDBDAttackSubstate
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDAttackObstructSubstate
/// Size: 0x0000 (0x000118 - 0x000118)
class UDBDAttackObstructSubstate : public UDBDAttackSubstate
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDAIController
/// Size: 0x02E0 (0x000340 - 0x000620)
class ADBDAIController : public AAIController
{ 
public:
	float                                              DefaultSightRange;                                          // 0x0340   (0x0004)  
	float                                              CloakedTargetSightRange;                                    // 0x0344   (0x0004)  
	SDK_UNDEFINED(80,1781) /* TMap<EAIDifficultyLevel, int32_t> */ __um(AIDifficultyMaxPlayerRanks);               // 0x0348   (0x0050)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x0398   (0x0020)  MISSED
	class APawn*                                       _aiPawn;                                                    // 0x03B8   (0x0008)  
	class APawn*                                       _lastAiPawn;                                                // 0x03C0   (0x0008)  
	SDK_UNDEFINED(80,1782) /* TMap<UObject*, float> */ __um(_contextualPathSpeedFactors);                          // 0x03C8   (0x0050)  
	class UObject*                                     _objOverridingDefaultNavigationFilter;                      // 0x0418   (0x0008)  
	class UClass*                                      _originalDefaultNavigationFilter;                           // 0x0420   (0x0008)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0428   (0x0018)  MISSED
	SDK_UNDEFINED(80,1783) /* TMap<EPawnInputPressTypes, UObject*> */ __um(_inputLocks);                           // 0x0440   (0x0050)  
	class UObject*                                     _movementLock;                                              // 0x0490   (0x0008)  
	unsigned char                                      UnknownData02_6[0x188];                                     // 0x0498   (0x0188)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDAIController.UseItemRequest
	// void UseItemRequest(class UObject* requester);                                                                        // [0x5812ac0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.StruggleRequest
	// void StruggleRequest(class UObject* requester, float Input);                                                          // [0x58129d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.SetCharacterMovement
	// bool SetCharacterMovement(ECharacterMovementTypes movementTypes, class UObject* requester);                           // [0x58128e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.Server_SetAIPlayerRank
	// void Server_SetAIPlayerRank(int32_t PlayerRank);                                                                      // [0x5812820] Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDAIController.SecondAttackRequest
	// void SecondAttackRequest(class UObject* requester);                                                                   // [0x5812700] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.SecondaryActionRequest
	// void SecondaryActionRequest(class UObject* requester);                                                                // [0x5812790] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.RunRequest
	// void RunRequest(class UObject* requester);                                                                            // [0x5812670] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.InteractRequestRelease
	// void InteractRequestRelease(class UObject* requester);                                                                // [0x5811980] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.InteractRequest
	// void InteractRequest(class UObject* requester);                                                                       // [0x5811fd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.Gesture04Request
	// void Gesture04Request(class UObject* requester);                                                                      // [0x5811e40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.Gesture03Request
	// void Gesture03Request(class UObject* requester);                                                                      // [0x5811db0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.Gesture02Request
	// void Gesture02Request(class UObject* requester);                                                                      // [0x5811d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.Gesture01Request
	// void Gesture01Request(class UObject* requester);                                                                      // [0x5811c90] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.FastInteractRequest
	// void FastInteractRequest(class UObject* requester);                                                                   // [0x5811bc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.EndUseItemRequest
	// void EndUseItemRequest(class UObject* requester);                                                                     // [0x5811b30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.EndSecondAttackRequest
	// void EndSecondAttackRequest(class UObject* requester);                                                                // [0x5811aa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.EndRunRequest
	// void EndRunRequest(class UObject* requester);                                                                         // [0x5811a10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.EndInteractRequest
	// void EndInteractRequest(class UObject* requester);                                                                    // [0x5811980] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.EndFastInteractRequest
	// void EndFastInteractRequest(class UObject* requester);                                                                // [0x58118f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.EndDropItemRequest
	// void EndDropItemRequest(class UObject* requester);                                                                    // [0x5811860] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.EndActionRequest
	// void EndActionRequest(class UObject* requester);                                                                      // [0x58117d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.EndAbilityTwoRequest
	// void EndAbilityTwoRequest(class UObject* requester);                                                                  // [0x5811740] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.DropItemRequest
	// void DropItemRequest(class UObject* requester);                                                                       // [0x58116b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.CancelMinigameRequest
	// void CancelMinigameRequest(class UObject* requester);                                                                 // [0x5811600] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.AttackRequest
	// void AttackRequest(class UObject* requester);                                                                         // [0x58114f0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.ActionRequest
	// void ActionRequest(class UObject* requester);                                                                         // [0x5811110] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIController.AbilityTwoRequest
	// void AbilityTwoRequest(class UObject* requester);                                                                     // [0x5811080] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDAIUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDAIUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDAIUtilities.SetCanEverAffectNavigation
	// void SetCanEverAffectNavigation(class UActorComponent* Component, bool affectNavigation);                             // [0x5817e80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIUtilities.FindPathWithAgentRadiusToActorSynchronously
	// class UNavigationPath* FindPathWithAgentRadiusToActorSynchronously(class UObject* WorldContextObject, FVector& pathStart, class AActor* GoalActor, float AgentRadius, float tetherDistance, class AActor* pathfindingContext, class UClass* FilterClass); // [0x5817180] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIUtilities.DrawDebugAIPerception
	// bool DrawDebugAIPerception();                                                                                         // [0x4aa0b70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIUtilities.DrawDebugAINavigationFilter
	// bool DrawDebugAINavigationFilter();                                                                                   // [0x4aa0b70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIUtilities.DrawDebugAINavigation
	// bool DrawDebugAINavigation();                                                                                         // [0x4aa0b70] Final|Native|Static|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.PerkInitializationData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPerkInitializationData
{ 
	int32_t                                            PerkLevel;                                                  // 0x0000   (0x0004)  
	EInputInteractionType                              ActivatableInteractionInputType;                            // 0x0004   (0x0001)  
	bool                                               AuthorityDataSet;                                           // 0x0005   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0006   (0x0002)  MISSED
};

/// Class /Script/DeadByDaylight.Perk
/// Size: 0x01B0 (0x000218 - 0x0003C8)
class UPerk : public UGameplayModifierContainer
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0218   (0x0060)  MISSED
	FGameplayModifierData                              PerkLevelData;                                              // 0x0278   (0x0090)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x0308   (0x0030)  MISSED
	class UClass*                                      PerkIconStrategyClass;                                      // 0x0338   (0x0008)  
	SDK_UNDEFINED(16,1784) /* FMulticastInlineDelegate */ __um(OnTokenCountChangedBP);                             // 0x0340   (0x0010)  
	unsigned char                                      UnknownData02_5[0x30];                                      // 0x0350   (0x0030)  MISSED
	bool                                               _isUsable;                                                  // 0x0380   (0x0001)  
	bool                                               _keepImposedStatusEffectsOnEndPlay;                         // 0x0381   (0x0001)  
	bool                                               BroadcastWhenApplicable;                                    // 0x0382   (0x0001)  
	bool                                               BroadcastOnTimer;                                           // 0x0383   (0x0001)  
	bool                                               BroadcastCooldownTimer;                                     // 0x0384   (0x0001)  
	bool                                               BroadcastInactiveCooldownTimer;                             // 0x0385   (0x0001)  
	bool                                               BroadcastAlways;                                            // 0x0386   (0x0001)  
	bool                                               SetInactiveDuringCooldown;                                  // 0x0387   (0x0001)  
	class UBasePerkIconStrategy*                       _perkIconStrategy;                                          // 0x0388   (0x0008)  
	FPerkInitializationData                            _perkInitializationData;                                    // 0x0390   (0x0008)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0398   (0x0004)  MISSED
	int32_t                                            _tokenCount;                                                // 0x039C   (0x0004)  
	int32_t                                            _maxTokenCount;                                             // 0x03A0   (0x0004)  
	EPerkTokenSoundStrategy                            _tokenSoundStrategy;                                        // 0x03A4   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x03A5   (0x0003)  MISSED
	class UTimerObject*                                _cooldownTimer;                                             // 0x03A8   (0x0008)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x03B0   (0x0008)  MISSED
	class UTimerObject*                                _hudIconTimer;                                              // 0x03B8   (0x0008)  
	class UInteractionDefinition*                      _activatableInteraction;                                    // 0x03C0   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.Perk.SetIsUsable
	// void SetIsUsable(bool value);                                                                                         // [0x58ccf40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Perk.OnRep_TokenCount
	// void OnRep_TokenCount(int32_t oldCount);                                                                              // [0x58cc6a0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Perk.OnRep_PerkInitializationData
	// void OnRep_PerkInitializationData();                                                                                  // [0x58cc680] Final|Native|Private 
	// Function /Script/DeadByDaylight.Perk.OnRep_IsUsable
	// void OnRep_IsUsable();                                                                                                // [0x58cc5d0] Final|Native|Private|Const 
	// Function /Script/DeadByDaylight.Perk.OnRep_CooldownTimer
	// void OnRep_CooldownTimer();                                                                                           // [0x58cc520] Final|Native|Private|Const 
	// Function /Script/DeadByDaylight.Perk.IsHudIconTimerDone
	// bool IsHudIconTimerDone();                                                                                            // [0x58cbd30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Perk.IsCooldownTimerDone
	// bool IsCooldownTimerDone();                                                                                           // [0x58cbd00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Perk.GetTokenCount
	// int32_t GetTokenCount();                                                                                              // [0x58cbc40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Perk.GetPerkLevel
	// int32_t GetPerkLevel();                                                                                               // [0x58cbc20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Perk.GetPerkIconStrategy
	// class UBasePerkIconStrategy* GetPerkIconStrategy();                                                                   // [0x58cbbf0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Perk.GetMaxTokenCount
	// int32_t GetMaxTokenCount();                                                                                           // [0x58cbb00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Perk.GetIsUsable
	// bool GetIsUsable();                                                                                                   // [0x58cbad0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Perk.GetHudIconTimerElapsedTimePercent
	// float GetHudIconTimerElapsedTimePercent();                                                                            // [0x58cb9e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Perk.GetGameplayModifierData
	// FGameplayModifierData GetGameplayModifierData();                                                                      // [0x58cb8b0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Perk.GetCooldownTimer
	// class UTimerObject* GetCooldownTimer();                                                                               // [0x58cb7c0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Perk.FireActivePerkEvent
	// void FireActivePerkEvent(float Percentage, int32_t chargeCount);                                                      // [0x58cb650] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Perk.Authority_TriggerHudIconTimer
	// void Authority_TriggerHudIconTimer(float Duration);                                                                   // [0x58cb5a0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Perk.Authority_TriggerCooldownTimer
	// void Authority_TriggerCooldownTimer(float cooldownTime);                                                              // [0x58cb520] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Perk.Authority_SetTokenCount
	// void Authority_SetTokenCount(int32_t value);                                                                          // [0x58cb490] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Perk.Authority_SetMaxTokenCount
	// void Authority_SetMaxTokenCount(int32_t value);                                                                       // [0x58cb400] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Perk.Authority_SetIsUsable
	// void Authority_SetIsUsable(bool value);                                                                               // [0x58cb370] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Perk.Authority_IncrementToken
	// void Authority_IncrementToken();                                                                                      // [0x58cb350] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Perk.Authority_DecrementToken
	// void Authority_DecrementToken();                                                                                      // [0x58cb330] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.TotemBoundPerk
/// Size: 0x0058 (0x0003C8 - 0x000420)
class UTotemBoundPerk : public UPerk
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x03C8   (0x0018)  MISSED
	ETotemState                                        TotemBoundState;                                            // 0x03E0   (0x0001)  
	bool                                               _doNotBindToTotemOnInit;                                    // 0x03E1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x03E2   (0x0006)  MISSED
	TArray<class ATotem*>                              _boundTotems;                                               // 0x03E8   (0x0010)  
	TArray<class ATotem*>                              _local_boundTotems;                                         // 0x03F8   (0x0010)  
	TArray<class ATotem*>                              _authorityPrevTotemActors;                                  // 0x0408   (0x0010)  
	int32_t                                            _numTotemsToBind;                                           // 0x0418   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x041C   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TotemBoundPerk.OnRep_BoundTotems
	// void OnRep_BoundTotems();                                                                                             // [0x5926410] Final|Native|Private 
	// Function /Script/DeadByDaylight.TotemBoundPerk.GetTotems
	// TArray<ATotem*> GetTotems();                                                                                          // [0x5925f60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TotemBoundPerk.GetSquaredDistanceToOwner
	// float GetSquaredDistanceToOwner(class AActor* Survivor);                                                              // [0x5925e60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TotemBoundPerk.GetBoundTotems
	// TArray<ATotem*> GetBoundTotems();                                                                                     // [0x5925c10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TotemBoundPerk.Authority_UnbindFromTotem
	// void Authority_UnbindFromTotem(class ATotem* aTotemActor);                                                            // [0x4ff91d0] Native|Public        
	// Function /Script/DeadByDaylight.TotemBoundPerk.Authority_BindToDullTotems
	// bool Authority_BindToDullTotems(bool allowAdditionalBoundTotems);                                                     // [0x5925010] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.GameplayModifierCondition
/// Size: 0x0000 (0x0000D0 - 0x0000D0)
class UGameplayModifierCondition : public UBaseModifierCondition
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.GameplayModifierCondition.SetOwningGameplayModifier
	// void SetOwningGameplayModifier(class UGameplayModifierContainer* OwningGameplayModifier);                             // [0x58827c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierCondition.OnOwningGameplayModifierSet
	// void OnOwningGameplayModifierSet();                                                                                   // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.GameplayModifierCondition.IsApplicable
	// bool IsApplicable();                                                                                                  // [0x5881ef0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierCondition.GetOwningPlayer
	// class ADBDPlayer* GetOwningPlayer();                                                                                  // [0x5881c50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GameplayModifierCondition.GetOwningGameplayModifier
	// class UGameplayModifierContainer* GetOwningGameplayModifier();                                                        // [0x5881c20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.ItemModifier
/// Size: 0x0060 (0x000218 - 0x000278)
class UItemModifier : public UGameplayModifierContainer
{ 
public:
	FGameplayModifierData                              ModifierData;                                               // 0x0218   (0x0030)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x0248   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ItemModifier.HandleIncreaseMaxCharge
	// void HandleIncreaseMaxCharge();                                                                                       // [0x58a0e60] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemModifier.HandleIncreaseItemCount
	// void HandleIncreaseItemCount();                                                                                       // [0x58a0e40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemModifier.HandleIncreaseCharge
	// void HandleIncreaseCharge();                                                                                          // [0x58a0e20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemModifier.GetItemMaxEnergy
	// float GetItemMaxEnergy();                                                                                             // [0x58a0df0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ItemModifier.GetItemEnergy
	// float GetItemEnergy();                                                                                                // [0x58a0dc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ItemModifier.GetItemCount
	// int32_t GetItemCount();                                                                                               // [0x58a0d90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ItemModifier.GetBaseItem
	// class ACollectable* GetBaseItem();                                                                                    // [0x58a0d60] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ItemModifier.AuthoritySetItemMaxEnergy
	// void AuthoritySetItemMaxEnergy(float energy);                                                                         // [0x58a0ca0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemModifier.AuthoritySetItemEnergy
	// void AuthoritySetItemEnergy(float energy);                                                                            // [0x58a0c20] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemModifier.AuthoritySetItemCount
	// void AuthoritySetItemCount(int32_t itemCount);                                                                        // [0x58a0b90] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.ItemAddonInitializationData
/// Size: 0x0002 (0x000000 - 0x000002)
struct FItemAddonInitializationData
{ 
	EInventoryItemType                                 InventoryItemType;                                          // 0x0000   (0x0001)  
	bool                                               AuthorityDataSet;                                           // 0x0001   (0x0001)  
};

/// Class /Script/DeadByDaylight.ItemAddon
/// Size: 0x0040 (0x000278 - 0x0002B8)
class UItemAddon : public UItemModifier
{ 
public:
	class UClass*                                      BaseItemType;                                               // 0x0278   (0x0008)  
	bool                                               _needsSetup;                                                // 0x0280   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1F];                                      // 0x0281   (0x001F)  MISSED
	int32_t                                            _tokenCount;                                                // 0x02A0   (0x0004)  
	int32_t                                            _maxTokenCount;                                             // 0x02A4   (0x0004)  
	FItemAddonInitializationData                       _addonInitializationData;                                   // 0x02A8   (0x0002)  
	unsigned char                                      UnknownData01_6[0xE];                                       // 0x02AA   (0x000E)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ItemAddon.SetUpAddon
	// void SetUpAddon();                                                                                                    // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.ItemAddon.OnRep_TokenCount
	// void OnRep_TokenCount(int32_t oldCount);                                                                              // [0x589c420] Final|Native|Private 
	// Function /Script/DeadByDaylight.ItemAddon.OnRep_AddonInitializationData
	// void OnRep_AddonInitializationData();                                                                                 // [0x589c400] Final|Native|Private 
	// Function /Script/DeadByDaylight.ItemAddon.OnPostItemAddonsCreation
	// void OnPostItemAddonsCreation(class ADBDPlayer* Player, class ACollectable* Item);                                    // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ItemAddon.Multicast_SetBaseItem
	// void Multicast_SetBaseItem(class ACollectable* baseItem);                                                             // [0x589c2b0] Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate 
	// Function /Script/DeadByDaylight.ItemAddon.Multicast_AddAddonToItem
	// void Multicast_AddAddonToItem(class ACollectable* Item);                                                              // [0x586e260] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.ItemAddon.IsSecondaryAction
	// bool IsSecondaryAction();                                                                                             // [0x589c010] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ItemAddon.IsReadyForSetUp
	// bool IsReadyForSetUp();                                                                                               // [0x589bfe0] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.ItemAddon.GetTokenCount
	// int32_t GetTokenCount();                                                                                              // [0x589bb10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ItemAddon.GetMaxTokenCount
	// int32_t GetMaxTokenCount();                                                                                           // [0x589bae0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ItemAddon.DebugPrintStats
	// void DebugPrintStats();                                                                                               // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ItemAddon.Authority_SetTokenCount
	// void Authority_SetTokenCount(int32_t value);                                                                          // [0x589b100] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemAddon.Authority_SetMaxTokenCount
	// void Authority_SetMaxTokenCount(int32_t value);                                                                       // [0x589b070] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemAddon.Authority_OnCollectablePickedUp
	// void Authority_OnCollectablePickedUp(class ADBDPlayer* Player);                                                       // [0x589afe0] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ItemAddon.Authority_OnCollectableDropped
	// void Authority_OnCollectableDropped(class ADBDPlayer* Player);                                                        // [0x589af50] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ItemAddon.Authority_IncrementToken
	// void Authority_IncrementToken();                                                                                      // [0x589af30] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemAddon.Authority_DecrementToken
	// void Authority_DecrementToken();                                                                                      // [0x589aee0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemAddon.Authority_ApplyMetaModifiers
	// void Authority_ApplyMetaModifiers();                                                                                  // [0x589aec0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.Collectable
/// Size: 0x0190 (0x000338 - 0x0004C8)
class ACollectable : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0338   (0x0048)  MISSED
	bool                                               DisplayUsePercent;                                          // 0x0380   (0x0001)  
	EAtlantaItemProgressionBarEnum                     ProgressBar;                                                // 0x0381   (0x0001)  
	bool                                               OverrideItemIndex;                                          // 0x0382   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0383   (0x0001)  MISSED
	int32_t                                            OverridenItemIndex;                                         // 0x0384   (0x0004)  
	bool                                               StrafeOnUse;                                                // 0x0388   (0x0001)  
	bool                                               VisibleWhenEquipped;                                        // 0x0389   (0x0001)  
	bool                                               StopRunningOnUse;                                           // 0x038A   (0x0001)  
	EItemHandPosition                                  HandPosition;                                               // 0x038B   (0x0001)  
	bool                                               DisableArmOverrideDuringInteractions;                       // 0x038C   (0x0001)  
	bool                                               HasUseInteraction;                                          // 0x038D   (0x0001)  
	bool                                               RemoveInteractionsOnInteractorChange;                       // 0x038E   (0x0001)  
	ECollectableCategory                               category;                                                   // 0x038F   (0x0001)  
	FName                                              ItemId;                                                     // 0x0390   (0x000C)  
	bool                                               FromPlayerSpawn;                                            // 0x039C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x039D   (0x0003)  MISSED
	class UItemModifier*                               BaseItemModifier;                                           // 0x03A0   (0x0008)  
	class UItemModifier*                               ItemModifier1;                                              // 0x03A8   (0x0008)  
	class UItemModifier*                               ItemModifier2;                                              // 0x03B0   (0x0008)  
	bool                                               ShouldRegisterToOnSurvivorAdded;                            // 0x03B8   (0x0001)  
	unsigned char                                      UnknownData03_5[0x67];                                      // 0x03B9   (0x0067)  MISSED
	bool                                               BeingCollected;                                             // 0x0420   (0x0001)  
	bool                                               BeingDropped;                                               // 0x0421   (0x0001)  
	bool                                               _beingConsumedByEntity;                                     // 0x0422   (0x0001)  
	unsigned char                                      UnknownData04_5[0x5];                                       // 0x0423   (0x0005)  MISSED
	class UInteractor*                                 _itemInteractor;                                            // 0x0428   (0x0008)  
	class UDBDSkeletalMeshComponentBudgeted*           _mesh;                                                      // 0x0430   (0x0008)  
	EInputInteractionType                              _displayedInputType;                                        // 0x0438   (0x0001)  
	bool                                               _isKeyPromptForceDisabled;                                  // 0x0439   (0x0001)  
	bool                                               _isBoundToFirstCollector;                                   // 0x043A   (0x0001)  
	bool                                               _isCursedItem;                                              // 0x043B   (0x0001)  
	bool                                               _isSpecialItem;                                             // 0x043C   (0x0001)  
	bool                                               _useInventoryCount;                                         // 0x043D   (0x0001)  
	unsigned char                                      UnknownData05_5[0x1A];                                      // 0x043E   (0x001A)  MISSED
	class USceneComponent*                             _placementOrigin;                                           // 0x0458   (0x0008)  
	unsigned char                                      UnknownData06_5[0x10];                                      // 0x0460   (0x0010)  MISSED
	class ADBDPlayer*                                  _collector;                                                 // 0x0470   (0x0008)  
	class ADBDPlayer*                                  _firstCollector;                                            // 0x0478   (0x0008)  
	ECollectableState                                  _state;                                                     // 0x0480   (0x0001)  
	unsigned char                                      UnknownData07_5[0x7];                                       // 0x0481   (0x0007)  MISSED
	TArray<class UItemAddon*>                          _itemAddons;                                                // 0x0488   (0x0010)  
	TArray<class UItemModifier*>                       _itemModifiers;                                             // 0x0498   (0x0010)  
	int32_t                                            _itemCount;                                                 // 0x04A8   (0x0004)  
	EAttachToSocketNameEnum                            _attachToSocketName;                                        // 0x04AC   (0x0001)  
	EInventoryType                                     _collectInInventoryType;                                    // 0x04AD   (0x0001)  
	unsigned char                                      UnknownData08_5[0x2];                                       // 0x04AE   (0x0002)  MISSED
	FGameplayTag                                       _stateTagForCollector;                                      // 0x04B0   (0x000C)  
	ELoadoutItemType                                   _itemType;                                                  // 0x04BC   (0x0001)  
	bool                                               _discardOnDrop;                                             // 0x04BD   (0x0001)  
	bool                                               _discardWhenConsumed;                                       // 0x04BE   (0x0001)  
	bool                                               _disableAttachmentReplication;                              // 0x04BF   (0x0001)  
	unsigned char                                      UnknownData09_5[0x2];                                       // 0x04C0   (0x0002)  MISSED
	bool                                               _isInUse;                                                   // 0x04C2   (0x0001)  
	bool                                               _aimOnUse;                                                  // 0x04C3   (0x0001)  
	unsigned char                                      UnknownData10_6[0x4];                                       // 0x04C4   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.Collectable.SetVisibilityEvent
	// void SetVisibilityEvent(bool Visibility);                                                                             // [0x58012e0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.SetItemInteractor
	// void SetItemInteractor(class UInteractor* Interactor);                                                                // [0x5800fd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Collectable.SetIsKeyPromptForceDisabled
	// void SetIsKeyPromptForceDisabled(bool IsKeyPromptForceDisabled);                                                      // [0x5800f40] Final|Native|Public  
	// Function /Script/DeadByDaylight.Collectable.SetDisplayedInputType
	// void SetDisplayedInputType(EInputInteractionType displayedInputType);                                                 // [0x5800da0] Final|Native|Public  
	// Function /Script/DeadByDaylight.Collectable.SetCount
	// void SetCount(int32_t Count);                                                                                         // [0x5800d10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Collectable.OnUseReleased
	// void OnUseReleased(class ADBDPlayer* collector);                                                                      // [0x57d4170] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.OnUse
	// void OnUse();                                                                                                         // [0x42c4540] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.OnRep_State
	// void OnRep_State();                                                                                                   // [0x5800940] Final|Native|Private 
	// Function /Script/DeadByDaylight.Collectable.OnRep_Collector
	// void OnRep_Collector(class ADBDPlayer* oldCollector);                                                                 // [0x5800830] Final|Native|Private 
	// Function /Script/DeadByDaylight.Collectable.OnPostItemAddonsCreation
	// void OnPostItemAddonsCreation(class ADBDPlayer* Player);                                                              // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.OnDropped
	// void OnDropped(class ADBDPlayer* droppingPlayer);                                                                     // [0x5800710] Native|Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.OnCustomizationChanged
	// void OnCustomizationChanged();                                                                                        // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.OnCollectorSetBPDelegate__DelegateSignature
	// void OnCollectorSetBPDelegate__DelegateSignature(class ADBDPlayer* Player);                                           // [0x61d2f50] Public|Delegate      
	// Function /Script/DeadByDaylight.Collectable.OnCollectorSetBP__DelegateSignature
	// void OnCollectorSetBP__DelegateSignature(class ADBDPlayer* Player);                                                   // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.Collectable.OnCollectorSet
	// void OnCollectorSet(class ADBDPlayer* collector);                                                                     // [0x5800680] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.OnAddonsRemoved
	// void OnAddonsRemoved(TArray<UItemAddon*>& addons);                                                                    // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.OnAddonsAdded
	// void OnAddonsAdded(TArray<UItemAddon*>& addons);                                                                      // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.OnActivateDissolveItem
	// void OnActivateDissolveItem();                                                                                        // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.Multicast_UseReleased
	// void Multicast_UseReleased(class ADBDPlayer* collector);                                                              // [0x58005f0] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.Collectable.Multicast_Use
	// void Multicast_Use();                                                                                                 // [0x435f180] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.Collectable.Multicast_RemoveItemAddon
	// void Multicast_RemoveItemAddon(class UItemAddon* addon);                                                              // [0x5800560] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.Collectable.Multicast_RemoveAllAddons
	// void Multicast_RemoveAllAddons();                                                                                     // [0x5800540] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.Collectable.Multicast_Dropped
	// void Multicast_Dropped(class ADBDPlayer* droppedBy, FVector Location, FRotator Rotation, EItemDropType itemDropType); // [0x5800200] Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults 
	// Function /Script/DeadByDaylight.Collectable.Multicast_Collected
	// void Multicast_Collected(class ADBDPlayer* collector, EInventoryType inventoryType);                                  // [0x57fffa0] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.Collectable.Local_Dropped_Location
	// void Local_Dropped_Location(class ADBDPlayer* droppedBy, FVector& Location, FRotator& Rotation);                      // [0x57ffe70] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.Collectable.IsStored
	// bool IsStored();                                                                                                      // [0x57ffe40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.IsSpecialItem
	// bool IsSpecialItem();                                                                                                 // [0x57ffe10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.IsRechargeable
	// bool IsRechargeable();                                                                                                // [0x57ffde0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.Collectable.IsPickable
	// bool IsPickable();                                                                                                    // [0x57ffdb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.IsOnGround
	// bool IsOnGround();                                                                                                    // [0x57ffd80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.IsLocallyControlled
	// bool IsLocallyControlled();                                                                                           // [0x57ffd50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.IsKeyPromptForceDisabled
	// bool IsKeyPromptForceDisabled();                                                                                      // [0x57ffd20] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.Collectable.IsInSearchable
	// bool IsInSearchable();                                                                                                // [0x57ffcf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.IsEquipped
	// bool IsEquipped();                                                                                                    // [0x57ffc90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.IsCursedItem
	// bool IsCursedItem();                                                                                                  // [0x57ffc60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.IsCountDisplayForced
	// bool IsCountDisplayForced();                                                                                          // [0x57ffc30] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.Collectable.IsCollected
	// bool IsCollected();                                                                                                   // [0x57ffc00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.HasGameplayModifierFlag
	// bool HasGameplayModifierFlag(FGameplayTag modifierFlag);                                                              // [0x57ffb50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.GetUsePercentLeft
	// float GetUsePercentLeft();                                                                                            // [0x57ffab0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.GetModifierSum
	// float GetModifierSum(FGameplayTag modifierType, float defaultValue);                                                  // [0x57ff870] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.GetModifierMax
	// float GetModifierMax(FGameplayTag modifierType, float defaultValue);                                                  // [0x57ff770] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.GetItemInteractor
	// class UInteractor* GetItemInteractor();                                                                               // [0x57ff700] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.GetItemIconIndex
	// char GetItemIconIndex();                                                                                              // [0x57ff6d0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.Collectable.GetItemAddons
	// TArray<UItemAddon*> GetItemAddons();                                                                                  // [0x57ff690] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.Collectable.GetIconFilePath
	// FString GetIconFilePath();                                                                                            // [0x57ff630] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.GetDisplayedInputType
	// EInputInteractionType GetDisplayedInputType();                                                                        // [0x57ff5c0] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.Collectable.GetCount
	// int32_t GetCount();                                                                                                   // [0x57ff590] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.GetCollector
	// class ADBDPlayer* GetCollector();                                                                                     // [0x57ff560] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.DebugPrintStats
	// void DebugPrintStats();                                                                                               // [0x57ff460] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.CanUse
	// bool CanUse(class ADBDPlayer* Player);                                                                                // [0x57ff3a0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.CanBeDropped
	// bool CanBeDropped(class ADBDPlayer* dropper);                                                                         // [0x57ff300] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.CanBeCollected
	// bool CanBeCollected(class ADBDPlayer* collector, bool assumeWillDropItem);                                            // [0x57ff220] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Collectable.CallOnCollectorSetBP
	// void CallOnCollectorSetBP(FDelegateProperty Callback);                                                                // [0x57ff170] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Collectable.BP_OnSurvivorAdded
	// void BP_OnSurvivorAdded(class ACamperPlayer* Survivor);                                                               // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Collectable.Authority_UseReleased
	// void Authority_UseReleased();                                                                                         // [0x57ff110] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Collectable.Authority_Use
	// void Authority_Use();                                                                                                 // [0x57ff0f0] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Collectable.Authority_RemoveItemAddon
	// void Authority_RemoveItemAddon(class UItemAddon* addon);                                                              // [0x57ff060] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Collectable.Authority_OnConsumed
	// void Authority_OnConsumed(bool forceDiscard);                                                                         // [0x57feea0] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Collectable.Authority_OnCollectorEndPlay
	// void Authority_OnCollectorEndPlay(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);                    // [0x57fedd0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Collectable.Authority_Discard
	// void Authority_Discard();                                                                                             // [0x57fed20] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Collectable.Authority_AddItemAddon
	// bool Authority_AddItemAddon(class UItemAddon* addon);                                                                 // [0x57fec80] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.Dependency
/// Size: 0x0088 (0x000000 - 0x000088)
struct FDependency
{ 
	ETileSpawnPointType                                Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FSoftObjectPath                                    AssetReference;                                             // 0x0008   (0x0020)  
	class UClass*                                      Object;                                                     // 0x0028   (0x0008)  
	bool                                               Unique;                                                     // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	int32_t                                            Count;                                                      // 0x0034   (0x0004)  
	FName                                              _spawnConditionsName;                                       // 0x0038   (0x000C)  
	FGameplayTag                                       _elementTag;                                                // 0x0044   (0x000C)  
	bool                                               _allowFallback;                                             // 0x0050   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0051   (0x0003)  MISSED
	int32_t                                            _spawnOrder;                                                // 0x0054   (0x0004)  
	SDK_UNDEFINED(48,1785) /* TWeakObjectPtr<UClass*> */ __um(_iterativeWeightAdjustmentStrategyClass);            // 0x0058   (0x0030)  
};

/// Struct /Script/DeadByDaylight.BuiltLevelData
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FBuiltLevelData
{ 
	FName                                              ThemeName;                                                  // 0x0000   (0x000C)  
	FName                                              ThemeWeather;                                               // 0x000C   (0x000C)  
	FName                                              AudioStateThemes;                                           // 0x0018   (0x000C)  
	FName                                              AudioStateWeather;                                          // 0x0024   (0x000C)  
	FName                                              AudioThemeEvent;                                            // 0x0030   (0x000C)  
	FName                                              AudioLimitPointEvent;                                       // 0x003C   (0x000C)  
	SDK_UNDEFINED(48,1786) /* TWeakObjectPtr<UAkAudioBank*> */ __um(AudioThemeSoundBank);                          // 0x0048   (0x0030)  
	SDK_UNDEFINED(16,1787) /* FString */               __um(MapName);                                              // 0x0078   (0x0010)  
	int32_t                                            TileCount;                                                  // 0x0088   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x008C   (0x0004)  MISSED
	TArray<FDependency>                                Dependencies;                                               // 0x0090   (0x0010)  
	FName                                              SpecialEventId;                                             // 0x00A0   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00AC   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.SelectedOffering
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSelectedOffering
{ 
	int32_t                                            ownerId;                                                    // 0x0000   (0x0004)  
	FName                                              OfferingName;                                               // 0x0004   (0x000C)  
};

/// Struct /Script/DeadByDaylight.OfferingData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FOfferingData
{ 
	bool                                               OfferingReady;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<FSelectedOffering>                          offerings;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.GamePresetData
/// Size: 0x0090 (0x000000 - 0x000090)
struct FGamePresetData
{ 
	TArray<char>                                       _mapAvailabilities;                                         // 0x0000   (0x0010)  
	TArray<char>                                       _perkAvailabilities;                                        // 0x0010   (0x0010)  
	TArray<char>                                       _offeringAvailabilities;                                    // 0x0020   (0x0010)  
	TArray<char>                                       _itemAvailabilities;                                        // 0x0030   (0x0010)  
	TArray<char>                                       _itemAddonAvailabilities;                                   // 0x0040   (0x0010)  
	TArray<char>                                       _customizationItemAvailabilities;                           // 0x0050   (0x0010)  
	TArray<char>                                       _characterAvailabilities;                                   // 0x0060   (0x0010)  
	bool                                               _allowDlcContent;                                           // 0x0070   (0x0001)  
	bool                                               _privateMatch;                                              // 0x0071   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0072   (0x0006)  MISSED
	FCustomGameBotsData                                _botsData;                                                  // 0x0078   (0x0018)  
};

/// Class /Script/DeadByDaylight.DBDGameState
/// Size: 0x06A0 (0x0002A8 - 0x000948)
class ADBDGameState : public AGameState
{ 
public:
	unsigned char                                      UnknownData00_2[0x80];                                      // 0x02A8   (0x0080)  MISSED
	SDK_UNDEFINED(16,1788) /* FMulticastInlineDelegate */ __um(OnEscapeDoorActivated);                             // 0x0328   (0x0010)  
	unsigned char                                      UnknownData01_5[0xA8];                                      // 0x0338   (0x00A8)  MISSED
	EIntroState                                        IntroState;                                                 // 0x03E0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x03E1   (0x0007)  MISSED
	SDK_UNDEFINED(16,1789) /* FMulticastInlineDelegate */ __um(OnKillerIntroCompletePercentChanged);               // 0x03E8   (0x0010)  
	SDK_UNDEFINED(16,1790) /* FMulticastInlineDelegate */ __um(OnLightingGenerated);                               // 0x03F8   (0x0010)  
	unsigned char                                      UnknownData03_5[0x30];                                      // 0x0408   (0x0030)  MISSED
	class USpecialEventGameplaySpawnerComponent*       _specialEventGameplaySpawnerComponent;                      // 0x0438   (0x0008)  
	class USpecialBehaviourGameplaySpawnerComponent*   _specialBehaviourGameplaySpawnerComponent;                  // 0x0440   (0x0008)  
	class UMutatorGameplaySpawnerComponent*            _mutatorGameplaySpawnerComponent;                           // 0x0448   (0x0008)  
	SDK_UNDEFINED(16,1791) /* FMulticastInlineDelegate */ __um(AuthorityOnAllPlayerLoaded);                        // 0x0450   (0x0010)  
	unsigned char                                      UnknownData04_5[0x18];                                      // 0x0460   (0x0018)  MISSED
	SDK_UNDEFINED(16,1792) /* FMulticastInlineDelegate */ __um(OnActivatedGeneratorCountChangedDynamic);           // 0x0478   (0x0010)  
	SDK_UNDEFINED(16,1793) /* FMulticastInlineDelegate */ __um(OnSlasherSet);                                      // 0x0488   (0x0010)  
	unsigned char                                      UnknownData05_5[0x18];                                      // 0x0498   (0x0018)  MISSED
	SDK_UNDEFINED(16,1794) /* FMulticastInlineDelegate */ __um(OnObsessionChanged);                                // 0x04B0   (0x0010)  
	int32_t                                            SecondsLeftInLobby;                                         // 0x04C0   (0x0004)  
	unsigned char                                      UnknownData06_5[0x34];                                      // 0x04C4   (0x0034)  MISSED
	class ASlasherPlayer*                              Slasher;                                                    // 0x04F8   (0x0008)  
	class URenderingFeaturesSequencer*                 _renderingSequencer;                                        // 0x0500   (0x0008)  
	unsigned char                                      UnknownData07_5[0x48];                                      // 0x0508   (0x0048)  MISSED
	int32_t                                            _camperHookedInBasementCount;                               // 0x0550   (0x0004)  
	unsigned char                                      UnknownData08_5[0x8];                                       // 0x0554   (0x0008)  MISSED
	EServerUseNetAsyncLoading                          _useNetAsyncLoading;                                        // 0x055C   (0x0001)  
	bool                                               _gameLevelLoadingStarted;                                   // 0x055D   (0x0001)  
	unsigned char                                      UnknownData09_5[0x2];                                       // 0x055E   (0x0002)  MISSED
	FBuiltLevelData                                    _builtLevelData;                                            // 0x0560   (0x00B0)  
	FOfferingData                                      _levelOfferings;                                            // 0x0610   (0x0018)  
	class AClipManager*                                _clipManager;                                               // 0x0628   (0x0008)  
	class AFadeManager*                                _fadeManager;                                               // 0x0630   (0x0008)  
	FGuid                                              _sessionId;                                                 // 0x0638   (0x0010)  
	FGuid                                              _lobbyId;                                                   // 0x0648   (0x0010)  
	int32_t                                            _activatedGeneratorCount;                                   // 0x0658   (0x0004)  
	int32_t                                            _requiredActivatedGeneratorCount;                           // 0x065C   (0x0004)  
	bool                                               _escapeDoorActivated;                                       // 0x0660   (0x0001)  
	bool                                               _escapeDoorOpened;                                          // 0x0661   (0x0001)  
	bool                                               _isHatchOpen;                                               // 0x0662   (0x0001)  
	bool                                               _levelReadyToPlay;                                          // 0x0663   (0x0001)  
	bool                                               _playerDistributionReady;                                   // 0x0664   (0x0001)  
	bool                                               _usingWeakenedMechanic;                                     // 0x0665   (0x0001)  
	unsigned char                                      UnknownData10_5[0x2];                                       // 0x0666   (0x0002)  MISSED
	int32_t                                            _survivorLeft;                                              // 0x0668   (0x0004)  
	unsigned char                                      UnknownData11_5[0x4];                                       // 0x066C   (0x0004)  MISSED
	TArray<class AMeatHook*>                           _meatHooks;                                                 // 0x0670   (0x0010)  
	TArray<class ASearchable*>                         _searchables;                                               // 0x0680   (0x0010)  
	TArray<class AGenerator*>                          _generators;                                                // 0x0690   (0x0010)  
	TArray<class AEscapeDoor*>                         _escapeDoors;                                               // 0x06A0   (0x0010)  
	TArray<class AHatch*>                              _hatches;                                                   // 0x06B0   (0x0010)  
	TArray<class AReverseBearTrapRemover*>             _reverseBearTrapRemovers;                                   // 0x06C0   (0x0010)  
	TArray<class ABaseTrap*>                           _baseTraps;                                                 // 0x06D0   (0x0010)  
	TArray<class APallet*>                             _pallets;                                                   // 0x06E0   (0x0010)  
	TArray<class AWindow*>                             _windows;                                                   // 0x06F0   (0x0010)  
	TArray<class ALocker*>                             _lockers;                                                   // 0x0700   (0x0010)  
	TArray<class ABreakableBase*>                      _breakableWalls;                                            // 0x0710   (0x0010)  
	TArray<class ATotem*>                              _totems;                                                    // 0x0720   (0x0010)  
	FBoxSphereBounds                                   _mapBoxSphereBounds;                                        // 0x0730   (0x001C)  
	FBoxSphereBounds                                   _basementBoxSphereBounds;                                   // 0x074C   (0x001C)  
	unsigned char                                      UnknownData12_5[0x1C];                                      // 0x0768   (0x001C)  MISSED
	int32_t                                            _camperEscapedThroughHatch;                                 // 0x0784   (0x0004)  
	class ACamperPlayer*                               _obsessionTarget;                                           // 0x0788   (0x0008)  
	bool                                               _cachedObsessionEscaped;                                    // 0x0790   (0x0001)  
	unsigned char                                      UnknownData13_5[0x7];                                       // 0x0791   (0x0007)  MISSED
	int8_t                                             _numberOfSurvivorsKilledOrSacrificed;                       // 0x0798   (0x0001)  
	unsigned char                                      UnknownData14_5[0x7];                                       // 0x0799   (0x0007)  MISSED
	TArray<class AInteractable*>                       _traps;                                                     // 0x07A0   (0x0010)  
	TArray<class UDBDDangerPredictionComponent*>       _dangerPredictionObjects;                                   // 0x07B0   (0x0010)  
	unsigned char                                      UnknownData15_5[0x8];                                       // 0x07C0   (0x0008)  MISSED
	FGamePresetData                                    _gamePresetData;                                            // 0x07C8   (0x0090)  
	bool                                               _gameLevelLoaded;                                           // 0x0858   (0x0001)  
	bool                                               _gameLevelCreated;                                          // 0x0859   (0x0001)  
	bool                                               _gameLevelEnded;                                            // 0x085A   (0x0001)  
	bool                                               _gameTimedOut;                                              // 0x085B   (0x0001)  
	EEndGameReason                                     _gameEndedReason;                                           // 0x085C   (0x0001)  
	bool                                               _isLoadoutFrozen;                                           // 0x085D   (0x0001)  
	unsigned char                                      UnknownData16_5[0x2];                                       // 0x085E   (0x0002)  MISSED
	class UEndGameStateComponent*                      _endGameState;                                              // 0x0860   (0x0008)  
	class UScourgeHookManagerComponent*                _scourgeHookManager;                                        // 0x0868   (0x0008)  
	class UActorPairQueryEvaluatorComponent*           _actorPairQueryEvaluatorComponent;                          // 0x0870   (0x0008)  
	class UHudStateComponent*                          _hudStateComponent;                                         // 0x0878   (0x0008)  
	unsigned char                                      UnknownData17_5[0x8];                                       // 0x0880   (0x0008)  MISSED
	class UCharacterCollection*                        _characterCollection;                                       // 0x0888   (0x0008)  
	class UCollectableCollection*                      _collectableCollection;                                     // 0x0890   (0x0008)  
	class UServerTimeProviderComponent*                _serverTimeProvider;                                        // 0x0898   (0x0008)  
	class UInGameAssetPreloaderComponent*              _inGameAssetPreloaderComponent;                             // 0x08A0   (0x0008)  
	class UOnScreenDebugComponent*                     _onScreenDebugComponent;                                    // 0x08A8   (0x0008)  
	unsigned char                                      UnknownData18_5[0x28];                                      // 0x08B0   (0x0028)  MISSED
	FDateTime                                          _matchStartTime;                                            // 0x08D8   (0x0008)  
	bool                                               _isServerDedicated;                                         // 0x08E0   (0x0001)  
	unsigned char                                      UnknownData19_5[0x3];                                       // 0x08E1   (0x0003)  MISSED
	int32_t                                            _maxSurvivorCount;                                          // 0x08E4   (0x0004)  
	SDK_UNDEFINED(16,1795) /* FString */               __um(_serverBuildVersion);                                  // 0x08E8   (0x0010)  
	SDK_UNDEFINED(16,1796) /* FString */               __um(_serverContentVersion);                                // 0x08F8   (0x0010)  
	SDK_UNDEFINED(16,1797) /* FString */               __um(_serverSessionId);                                     // 0x0908   (0x0010)  
	SDK_UNDEFINED(16,1798) /* FString */               __um(_serverRegion);                                        // 0x0918   (0x0010)  
	SDK_UNDEFINED(16,1799) /* FString */               __um(_serverMatchId);                                       // 0x0928   (0x0010)  
	float                                              _introDuration;                                             // 0x0938   (0x0004)  
	bool                                               _leaveSpectateRequested;                                    // 0x093C   (0x0001)  
	unsigned char                                      UnknownData20_6[0xB];                                       // 0x093D   (0x000B)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDGameState.UpdateInGamePallets
	// void UpdateInGamePallets();                                                                                           // [0x5834d60] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/DeadByDaylight.DBDGameState.UnregisterFromIntroCompleteAndLevelReadyToPlay
	// void UnregisterFromIntroCompleteAndLevelReadyToPlay(class UObject* inObject);                                         // [0x5834cd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.SortOfferings
	// void SortOfferings();                                                                                                 // [0x5834cb0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.SetPlayersReadyToStart
	// void SetPlayersReadyToStart(bool playersReadyToStart);                                                                // [0x5834c20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.SetKillerIntroCompletedNormalized
	// void SetKillerIntroCompletedNormalized(float completedAmount);                                                        // [0x5834ba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.SetGameLevelEnded
	// void SetGameLevelEnded(EEndGameReason endGameReason);                                                                 // [0x5834b20] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.SetDisplayMapName
	// void SetDisplayMapName(bool Display);                                                                                 // [0x5834a90] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.Server_UpdateGameRole
	// void Server_UpdateGameRole();                                                                                         // [0x5834a70] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.ResetGameLevelStatus
	// void ResetGameLevelStatus();                                                                                          // [0x5834a50] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.RemoveTrap
	// void RemoveTrap(class AInteractable* toRemove);                                                                       // [0x58349c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.RemoveDangerPredictionObject
	// void RemoveDangerPredictionObject(class UDBDDangerPredictionComponent* toRemove);                                     // [0x5834930] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.OnSlasherSetMultiDelegate__DelegateSignature
	// void OnSlasherSetMultiDelegate__DelegateSignature(class ASlasherPlayer* SlasherPlayer);                               // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_UseNetAsyncLoading
	// void OnRep_UseNetAsyncLoading();                                                                                      // [0x5834910] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_SurvivorLeft
	// void OnRep_SurvivorLeft(int32_t oldValue);                                                                            // [0x5834880] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_SessionId
	// void OnRep_SessionId();                                                                                               // [0x5834860] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_SecondsLeftInLobby
	// void OnRep_SecondsLeftInLobby(int32_t oldValue);                                                                      // [0x58347d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_RequiredActivatedGeneratorCount
	// void OnRep_RequiredActivatedGeneratorCount(int32_t oldRequiredActivatedGeneratorCount);                               // [0x5834740] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_OnLevelReadyToPlay
	// void OnRep_OnLevelReadyToPlay();                                                                                      // [0x5834720] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_OnGameLevelCreated
	// void OnRep_OnGameLevelCreated();                                                                                      // [0x5834700] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_ObsessionTarget
	// void OnRep_ObsessionTarget(class ACamperPlayer* previousObsessionTarget);                                             // [0x5834670] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_NumberOfSurvivorsKilledOrSacrificed
	// void OnRep_NumberOfSurvivorsKilledOrSacrificed(int8_t oldValue);                                                      // [0x58345f0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_LobbyId
	// void OnRep_LobbyId();                                                                                                 // [0x58345d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_HatchOpened
	// void OnRep_HatchOpened(bool oldValue);                                                                                // [0x5834540] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_GamePresetData
	// void OnRep_GamePresetData();                                                                                          // [0x5834520] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_GameLevelLoadingStarted
	// void OnRep_GameLevelLoadingStarted(bool oldValue);                                                                    // [0x5834490] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_EscapeDoorActivated
	// void OnRep_EscapeDoorActivated(bool oldValue);                                                                        // [0x5834400] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_BuildLevelData
	// void OnRep_BuildLevelData();                                                                                          // [0x58343e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnRep_ActivatedGeneratorCount
	// void OnRep_ActivatedGeneratorCount(int32_t oldValue);                                                                 // [0x5834350] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnPlayerGameStateChangedAddIfKilled
	// void OnPlayerGameStateChangedAddIfKilled(class ADBDPlayerState* PlayerState, EGameState GameState);                   // [0x5834280] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDGameState.OnLevelReadyToPlayDelegate__DelegateSignature
	// void OnLevelReadyToPlayDelegate__DelegateSignature();                                                                 // [0x61d2f50] Public|Delegate      
	// Function /Script/DeadByDaylight.DBDGameState.OnIntroCompleteDelegate__DelegateSignature
	// void OnIntroCompleteDelegate__DelegateSignature();                                                                    // [0x61d2f50] Public|Delegate      
	// Function /Script/DeadByDaylight.DBDGameState.Multicast_UpdateCharacterFromGamePreset
	// void Multicast_UpdateCharacterFromGamePreset(class ADBDPlayerState_Menu* playerState_Menu, FGamePresetData GamePresetData); // [0x5834090] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDGameState.Multicast_SetServerLeftGame
	// void Multicast_SetServerLeftGame(bool hasServerLeftGame);                                                             // [0x5834000] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDGameState.Multicast_SetLostServerConnection
	// void Multicast_SetLostServerConnection(bool hasLostServerConnection);                                                 // [0x5833f70] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDGameState.Multicast_SetGameLevelLoaded
	// void Multicast_SetGameLevelLoaded(bool gameLevelLoaded);                                                              // [0x5833ee0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDGameState.Multicast_SetGameLevelEnded
	// void Multicast_SetGameLevelEnded(EEndGameReason endGameReason);                                                       // [0x5833e60] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDGameState.Multicast_SetGameEnded
	// void Multicast_SetGameEnded(bool hasServerLeftGame);                                                                  // [0x5833dd0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDGameState.Multicast_SetBuiltLevelData
	// void Multicast_SetBuiltLevelData(FBuiltLevelData BuiltLevelData);                                                     // [0x5833d10] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDGameState.Multicast_SendHVSPlusState
	// void Multicast_SendHVSPlusState(bool Enabled);                                                                        // [0x5833c80] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDGameState.Multicast_SendEnsureToClients
	// void Multicast_SendEnsureToClients(FString ensure);                                                                   // [0x5833be0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDGameState.Multicast_OnGameStarted
	// void Multicast_OnGameStarted();                                                                                       // [0x5833bc0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDGameState.Multicast_BroadcastOnLevelLoadingTimeOutClientEvent
	// void Multicast_BroadcastOnLevelLoadingTimeOutClientEvent();                                                           // [0x5833ba0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDGameState.IsPlayerDistributionReady
	// bool IsPlayerDistributionReady();                                                                                     // [0x5833b80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.IsOnePlayerLeft
	// bool IsOnePlayerLeft();                                                                                               // [0x5833b50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.IsOfferingReceived
	// bool IsOfferingReceived();                                                                                            // [0x5833b20] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameState.IsObsessionTargetAliveInLevel
	// bool IsObsessionTargetAliveInLevel();                                                                                 // [0x5833af0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.IsObsessionTargetAlive
	// bool IsObsessionTargetAlive();                                                                                        // [0x5833ac0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.IsLightingGenerated
	// bool IsLightingGenerated();                                                                                           // [0x5833aa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.IsLevelSetupDone
	// bool IsLevelSetupDone();                                                                                              // [0x5833a70] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameState.IsLevelReadyToPlay
	// bool IsLevelReadyToPlay();                                                                                            // [0x5833a50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.IsIntroCompleted
	// bool IsIntroCompleted();                                                                                              // [0x5833a20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.IsHatchVisible
	// bool IsHatchVisible();                                                                                                // [0x58339f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.IsEscapeRequirementCompleted
	// bool IsEscapeRequirementCompleted();                                                                                  // [0x58339c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.IsEscapeDoorOpen
	// bool IsEscapeDoorOpen();                                                                                              // [0x5833990] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.IsEscapeDoorActivated
	// bool IsEscapeDoorActivated();                                                                                         // [0x5833960] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.IntroCompleted
	// void IntroCompleted();                                                                                                // [0x5833940] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.GetTraps
	// TArray<AInteractable*> GetTraps();                                                                                    // [0x58338b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetTotems
	// TArray<ATotem*> GetTotems();                                                                                          // [0x5833820] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetSurvivorLeft
	// int32_t GetSurvivorLeft();                                                                                            // [0x5833800] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetSpecialEventGameplaySpawnerComponent
	// class USpecialEventGameplaySpawnerComponent* GetSpecialEventGameplaySpawnerComponent();                               // [0x58337d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetSelectedOfferings
	// TArray<FSelectedOffering> GetSelectedOfferings();                                                                     // [0x58337a0] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetSelectedOffering
	// bool GetSelectedOffering(int32_t index, FSelectedOffering& SelectedOffering);                                         // [0x58336b0] Final|Native|Public|HasOutParms|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetRequiredActivatedGeneratorCount
	// int32_t GetRequiredActivatedGeneratorCount();                                                                         // [0x5833680] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetRemainingGeneratorsNeeded
	// int32_t GetRemainingGeneratorsNeeded();                                                                               // [0x5833650] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetPlayerStateByMirrorsID
	// class ADBDPlayerState* GetPlayerStateByMirrorsID(FString ID);                                                         // [0x58335a0] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetPlayerStateByIDString
	// class ADBDPlayerState* GetPlayerStateByIDString(FString ID, bool isReplacementBot);                                   // [0x58334b0] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetPlayersReadyToStart
	// bool GetPlayersReadyToStart();                                                                                        // [0x5832b90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetPlayerRoleCounts
	// void GetPlayerRoleCounts(int32_t& survivorCount, int32_t& killerCount, int32_t& spectatorCount);                      // [0x5833370] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetObsessionTarget
	// class ACamperPlayer* GetObsessionTarget();                                                                            // [0x5833350] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetNumberOfOtherActiveSurvivors
	// int32_t GetNumberOfOtherActiveSurvivors(class ADBDPlayer* exception);                                                 // [0x58332b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetNumberOfActiveSurvivors
	// int32_t GetNumberOfActiveSurvivors();                                                                                 // [0x5833280] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetMapThemeName
	// FName GetMapThemeName();                                                                                              // [0x5833240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetLocalPlayerPawn
	// class ADBDPlayer* GetLocalPlayerPawn();                                                                               // [0x5833210] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetLocalPlayerBasePawn
	// class APawn* GetLocalPlayerBasePawn();                                                                                // [0x58331e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetLevelThemeAudioSoundBankAssetPtr
	// TWeakObjectPtr<UAkAudioBank*> GetLevelThemeAudioSoundBankAssetPtr();                                                  // [0x5833170] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetLevelData
	// FBuiltLevelData GetLevelData();                                                                                       // [0x5833140] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetKillerIntroCompletedNormalized
	// float GetKillerIntroCompletedNormalized();                                                                            // [0x5833120] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetKiller
	// class ASlasherPlayer* GetKiller();                                                                                    // [0x58330f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetIsGameEnded
	// bool GetIsGameEnded();                                                                                                // [0x58330c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetInGameWindows
	// TArray<AWindow*> GetInGameWindows();                                                                                  // [0x5833030] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetInGameSearchables
	// TArray<ASearchable*> GetInGameSearchables();                                                                          // [0x5832fa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetInGameReverseBearTrapRemovers
	// TArray<AReverseBearTrapRemover*> GetInGameReverseBearTrapRemovers();                                                  // [0x5832f10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetInGamePallets
	// TArray<APallet*> GetInGamePallets();                                                                                  // [0x5832e80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetInGameMeatHooks
	// TArray<AMeatHook*> GetInGameMeatHooks();                                                                              // [0x5832df0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetInGameHatches
	// TArray<AHatch*> GetInGameHatches();                                                                                   // [0x5832d60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetInGameGenerators
	// TArray<AGenerator*> GetInGameGenerators();                                                                            // [0x5832cd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetInGameEscapeDoors
	// TArray<AEscapeDoor*> GetInGameEscapeDoors();                                                                          // [0x5832c40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetInGameBaseTraps
	// TArray<ABaseTrap*> GetInGameBaseTraps();                                                                              // [0x5832bb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetGameLevelLoadingStarted
	// bool GetGameLevelLoadingStarted();                                                                                    // [0x5832b90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetGameLevelLoaded
	// bool GetGameLevelLoaded();                                                                                            // [0x5832b70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetEndGameStateComponent
	// class UEndGameStateComponent* GetEndGameStateComponent();                                                             // [0x5832b40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetDangerPredictionObjects
	// TArray<UDBDDangerPredictionComponent*> GetDangerPredictionObjects(bool isObjectDynamic);                              // [0x5832a80] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.GetCollectableCollection
	// class UCollectableCollection* GetCollectableCollection();                                                             // [0x5832a50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetCharacterCollection
	// class UCharacterCollection* GetCharacterCollection();                                                                 // [0x5832a20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.GetAllDangerPredictionObjects
	// TArray<UDBDDangerPredictionComponent*> GetAllDangerPredictionObjects();                                               // [0x58329f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameState.CallOnSlasherSet
	// void CallOnSlasherSet(FDelegateProperty Callback);                                                                    // [0x5832940] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.CallOnLevelReadyToPlay
	// void CallOnLevelReadyToPlay(FDelegateProperty Callback);                                                              // [0x5832890] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.CallOnIntroComplete
	// void CallOnIntroComplete(FDelegateProperty Callback);                                                                 // [0x58327e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.BroadcastOnSetBuildLevelData
	// void BroadcastOnSetBuildLevelData();                                                                                  // [0x58327c0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.Authority_UnsetLevelReadyToPlay
	// void Authority_UnsetLevelReadyToPlay();                                                                               // [0x58327a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SignalEscapeDoorActivated
	// void Authority_SignalEscapeDoorActivated(bool newEscapeDoorActivated);                                                // [0x5832710] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetSurvivorLeft
	// void Authority_SetSurvivorLeft(int32_t survivorRemaining);                                                            // [0x5832680] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetObsessionTarget
	// void Authority_SetObsessionTarget(class ACamperPlayer* obsessionTarget);                                              // [0x58325f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetLevelReadyToPlay
	// void Authority_SetLevelReadyToPlay();                                                                                 // [0x58325d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetHatchOpen
	// void Authority_SetHatchOpen(bool OPENED);                                                                             // [0x5832540] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetGameStarted
	// void Authority_SetGameStarted();                                                                                      // [0x5832520] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetGameSelectedOffering
	// void Authority_SetGameSelectedOffering(TArray<FSelectedOffering>& offerings);                                         // [0x5832470] Final|Native|Public|HasOutParms 
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetGameLevelLoaded
	// void Authority_SetGameLevelLoaded();                                                                                  // [0x5832450] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetGameLevelEnded
	// void Authority_SetGameLevelEnded(EEndGameReason endGameReason);                                                       // [0x58323d0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetGameLevelCreated
	// void Authority_SetGameLevelCreated();                                                                                 // [0x58323b0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetEscapeDoorOpened
	// void Authority_SetEscapeDoorOpened(bool OPENED);                                                                      // [0x5832320] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetBuiltLevelData
	// void Authority_SetBuiltLevelData(FBuiltLevelData& BuiltLevelData);                                                    // [0x5832250] Final|Native|Public|HasOutParms 
	// Function /Script/DeadByDaylight.DBDGameState.Authority_SetAllPlayerLoaded
	// void Authority_SetAllPlayerLoaded();                                                                                  // [0x5832230] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.Authority_EvaluateObsessionTarget
	// void Authority_EvaluateObsessionTarget(class ADBDPlayer* potentialTarget);                                            // [0x58321a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.Authority_EscapeThroughHatch
	// void Authority_EscapeThroughHatch();                                                                                  // [0x5832180] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.Authority_EnableObsession
	// void Authority_EnableObsession();                                                                                     // [0x5832160] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.Authority_DeactivateAI
	// void Authority_DeactivateAI();                                                                                        // [0x5832140] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameState.AddTrap
	// void AddTrap(class AInteractable* toAdd);                                                                             // [0x58320b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameState.AddDangerPredictionObject
	// void AddDangerPredictionObject(class UDBDDangerPredictionComponent* toAdd);                                           // [0x5832020] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AttackableComponent
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UAttackableComponent : public UActorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.PresentationItemProgressComponent
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPresentationItemProgressComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00B8   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.ScreenIndicatorWorldMarkerComponent
/// Size: 0x0010 (0x000220 - 0x000230)
class UScreenIndicatorWorldMarkerComponent : public USceneComponent
{ 
public:
	EHudScreenIndicatorType                            HudScreenIndicatorType;                                     // 0x0218   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0219   (0x0003)  MISSED
	FFloatRange                                        VisibleDistanceRange;                                       // 0x021C   (0x0010)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x022C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.ProgressionPoints
/// Size: 0x0008 (0x000000 - 0x000008)
struct FProgressionPoints
{ 
	EEmblemProgressionType                             Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Points;                                                     // 0x0004   (0x0004)  
};

/// Class /Script/DeadByDaylight.DBDEmblem
/// Size: 0x0050 (0x0000B8 - 0x000108)
class UDBDEmblem : public UActorComponent
{ 
public:
	float                                              _points;                                                    // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00BC   (0x0004)  MISSED
	TArray<FProgressionPoints>                         _progressionPoints;                                         // 0x00C0   (0x0010)  
	FDataTableRowHandle                                _definition;                                                // 0x00D0   (0x0018)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x00E8   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDEmblem.Client_FinalizeReplication
	// void Client_FinalizeReplication(float Points, TArray<FProgressionPoints> ProgressionPoints);                          // [0x582a650] Final|Net|NetReliableNative|Event|Private|NetClient 
};

/// Class /Script/DeadByDaylight.AbstractGameFlowHandler
/// Size: 0x0000 (0x000038 - 0x000038)
class UAbstractGameFlowHandler : public UGameInstanceSubsystem
{ 
public:
};

/// Class /Script/DeadByDaylight.AchievementHelper
/// Size: 0x0000 (0x000030 - 0x000030)
class UAchievementHelper : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.ActionButton
/// Size: 0x0270 (0x000338 - 0x0005A8)
class UActionButton : public UMobileBaseUserWidget
{ 
public:
	FSlateBrush                                        DefaultImage;                                               // 0x0338   (0x0090)  
	class UImage*                                      IconImage;                                                  // 0x03C8   (0x0008)  
	class UImage*                                      ToggleSmokeImage;                                           // 0x03D0   (0x0008)  
	class UButton*                                     Button;                                                     // 0x03D8   (0x0008)  
	float                                              DefaultOpacity;                                             // 0x03E0   (0x0004)  
	float                                              ToggledOpacity;                                             // 0x03E4   (0x0004)  
	float                                              DisabledOpacity;                                            // 0x03E8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x03EC   (0x0004)  MISSED
	FSlateBrush                                        Normal;                                                     // 0x03F0   (0x0090)  
	FSlateBrush                                        Toggled;                                                    // 0x0480   (0x0090)  
	FSlateBrush                                        Disabled;                                                   // 0x0510   (0x0090)  
	EActionButtonState                                 _currentState;                                              // 0x05A0   (0x0001)  
	EActionButtonState                                 _previousState;                                             // 0x05A1   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x05A2   (0x0006)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ActionButton.SetState
	// void SetState(EActionButtonState State);                                                                              // [0x57b10e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActionButton.SetSlateBrush
	// void SetSlateBrush(FSlateBrush& InBrush);                                                                             // [0x57b0fd0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActionButton.SetPreviousState
	// void SetPreviousState();                                                                                              // [0x57b0f20] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActionButton.SetIcon
	// void SetIcon(FSlateBrush SlateBrush);                                                                                 // [0x57b0da0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActionButton.PlayBecameAvailableAnimation
	// void PlayBecameAvailableAnimation();                                                                                  // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.BasePerkIconStrategy
/// Size: 0x0008 (0x000030 - 0x000038)
class UBasePerkIconStrategy : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.BasePerkIconStrategy.GetIsRechargeableActive
	// bool GetIsRechargeableActive(class UPerk* Perk);                                                                      // [0x57d3e00] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.BasePerkIconStrategy.GetIsRechargeable
	// bool GetIsRechargeable(class UPerk* Perk);                                                                            // [0x57d3d60] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.BasePerkIconStrategy.GetDisplayPercent
	// float GetDisplayPercent(class UPerk* Perk);                                                                           // [0x57d3c90] Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.ActivationAndTimerIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActivationAndTimerIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActivationTimerElapsedCooldownElapsedIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActivationTimerElapsedCooldownElapsedIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActivationTimerElapsedCooldownRemainingIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActivationTimerElapsedCooldownRemainingIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActivationTimerElapsedIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActivationTimerIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActivationTimerIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActivationTimerRemainingCooldownElapsedIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActivationTimerRemainingPercentIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActivationTimerRemainingPercentIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActiveOnTimerOrApplicablePerkIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActiveOnTimerOrApplicablePerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActiveOnTimerPerkIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActiveOnTimerPerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActiveWhenApplicableAndEnabledPerkIconStrategy
/// Size: 0x0008 (0x000038 - 0x000040)
class UActiveWhenApplicableAndEnabledPerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.ActiveWhenApplicableAndNotCampingPerkIconStrategy
/// Size: 0x0008 (0x000038 - 0x000040)
class UActiveWhenApplicableAndNotCampingPerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.ActiveWhenApplicablePerkIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActiveWhenApplicablePerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActiveWhenKOdAndCooldownTimerPerkIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UActiveWhenKOdAndCooldownTimerPerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ActorClipperComponent
/// Size: 0x0080 (0x0000B8 - 0x000138)
class UActorClipperComponent : public UActorComponent
{ 
public:
	class USphereComponent*                            Shape;                                                      // 0x00B8   (0x0008)  
	SDK_UNDEFINED(80,1800) /* TMap<AActor*, FClippedActor> */ __um(_clippedActors);                                // 0x00C0   (0x0050)  
	SDK_UNDEFINED(8,1801) /* TWeakObjectPtr<UPrimitiveCollection*> */ __um(_clippables);                           // 0x0110   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0118   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ActorClipperComponent.SetPrimitiveCollection
	// void SetPrimitiveCollection(class UPrimitiveCollection* clippables);                                                  // [0x57b0f40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorClipperComponent.OnOwnerLocallyObservedChanged
	// void OnOwnerLocallyObservedChanged(bool locallyObserved);                                                             // [0x57b0b60] Final|Native|Private 
	// Function /Script/DeadByDaylight.ActorClipperComponent.OnCameraChanged
	// void OnCameraChanged(EDBDCameraSocketID socketId);                                                                    // [0x57b08c0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.ActorComponentExt
/// Size: 0x0000 (0x000030 - 0x000030)
class UActorComponentExt : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.ActorComponentExt.IsLocallyObserved
	// bool IsLocallyObserved(class UActorComponent* ActorComponent, bool recursiveSearch);                                  // [0x57b0760] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.IsLocallyControlled
	// bool IsLocallyControlled(class UActorComponent* ActorComponent, bool recursiveSearch);                                // [0x57b0690] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.HasAuthority
	// bool HasAuthority(class UActorComponent* ActorComponent);                                                             // [0x57b0540] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.GetValidatedOwner
	// class AActor* GetValidatedOwner(class UActorComponent* ActorComponent);                                               // [0x57b04b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.GetOwningSurvivorChecked
	// class ACamperPlayer* GetOwningSurvivorChecked(class UActorComponent* ActorComponent, bool recursiveSearch);           // [0x57b03e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.GetOwningSurvivor
	// class ACamperPlayer* GetOwningSurvivor(class UActorComponent* ActorComponent, bool recursiveSearch);                  // [0x57b0310] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.GetOwningPlayerInHierarchy
	// class ADBDPlayer* GetOwningPlayerInHierarchy(class UActorComponent* ActorComponent);                                  // [0x57b0280] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.GetOwningPlayerChecked
	// class ADBDPlayer* GetOwningPlayerChecked(class UActorComponent* ActorComponent, bool recursiveSearch);                // [0x57b01b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.GetOwningPlayer
	// class ADBDPlayer* GetOwningPlayer(class UActorComponent* ActorComponent, bool recursiveSearch);                       // [0x57b00e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.GetOwningPawnChecked
	// class APawn* GetOwningPawnChecked(class UActorComponent* ActorComponent, bool recursiveSearch);                       // [0x57b0010] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.GetOwningPawn
	// class APawn* GetOwningPawn(class UActorComponent* ActorComponent, bool recursiveSearch);                              // [0x57aff40] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.GetOwningKiller
	// class ASlasherPlayer* GetOwningKiller(class UActorComponent* ActorComponent, bool recursiveSearch);                   // [0x57afe70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.GetOwningCharacterChecked
	// class ACharacter* GetOwningCharacterChecked(class UActorComponent* ActorComponent, bool recursiveSearch);             // [0x57afda0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ActorComponentExt.GetOwningCharacter
	// class ACharacter* GetOwningCharacter(class UActorComponent* ActorComponent, bool recursiveSearch);                    // [0x57afcd0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.ActorDependency
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UActorDependency : public UActorComponent
{ 
public:
	TArray<FDependency>                                Dependencies;                                               // 0x00B8   (0x0010)  
};

/// Class /Script/DeadByDaylight.ActorDetectorComponent
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UActorDetectorComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1802) /* FMulticastInlineDelegate */ __um(OnActorDetected);                                   // 0x00B8   (0x0010)  
	TArray<class UClass*>                              CollectedTypes;                                             // 0x00C8   (0x0010)  
	class UPrimitiveComponent*                         _primitive;                                                 // 0x00D8   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.ActorDetectorComponent.SetDetectionPrimitive
	// void SetDetectionPrimitive(class UPrimitiveComponent* Primitive);                                                     // [0x57b0d10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorDetectorComponent.OnOverlapEnter
	// void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x57b0940] Final|Native|Protected|HasOutParms 
};

/// Class /Script/DeadByDaylight.ActorKnowledgeCollection
/// Size: 0x0050 (0x0000B8 - 0x000108)
class UActorKnowledgeCollection : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	TArray<class AActor*>                              _actors;                                                    // 0x00D0   (0x0010)  
	TArray<class AActor*>                              _previousActors;                                            // 0x00E0   (0x0010)  
	bool                                               _available;                                                 // 0x00F0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x00F1   (0x0007)  MISSED
	class ACharacter*                                  _possessor;                                                 // 0x00F8   (0x0008)  
	EKnowledgeSharingType                              _sharing;                                                   // 0x0100   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0101   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ActorKnowledgeCollection.OnRep_Actors
	// void OnRep_Actors();                                                                                                  // [0x57b0bf0] Final|Native|Private 
	// Function /Script/DeadByDaylight.ActorKnowledgeCollection.Local_SetAvailable
	// void Local_SetAvailable(bool value);                                                                                  // [0x57b0830] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorKnowledgeCollection.IsAvailable
	// bool IsAvailable(class ACharacter* Character);                                                                        // [0x57b05d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ActorKnowledgeCollection.Contains
	// bool Contains(class AActor* Actor);                                                                                   // [0x57afbe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ActorKnowledgeCollection.Authority_SetSharingType
	// void Authority_SetSharingType(EKnowledgeSharingType value);                                                           // [0x57afb40] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorKnowledgeCollection.Authority_SetPossessor
	// void Authority_SetPossessor(class ACharacter* possessor);                                                             // [0x57afab0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorKnowledgeCollection.Authority_SetAvailable
	// void Authority_SetAvailable(bool value);                                                                              // [0x57afa20] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorKnowledgeCollection.Authority_Remove
	// void Authority_Remove(class AActor* Actor);                                                                           // [0x57af990] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorKnowledgeCollection.Authority_Empty
	// void Authority_Empty();                                                                                               // [0x57af970] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorKnowledgeCollection.Authority_Append
	// void Authority_Append(TArray<AActor*>& Actors);                                                                       // [0x57af8c0] Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorKnowledgeCollection.Authority_Add
	// bool Authority_Add(class AActor* Actor);                                                                              // [0x57af820] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.ActorSpawnerProperties
/// Size: 0x0038 (0x000000 - 0x000038)
struct FActorSpawnerProperties
{ 
	SDK_UNDEFINED(48,1803) /* TWeakObjectPtr<UClass*> */ __um(SceneElement);                                       // 0x0000   (0x0030)  
	float                                              Weight;                                                     // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.DataTableDropdown
/// Size: 0x0030 (0x000000 - 0x000030)
struct FDataTableDropdown
{ 
	FName                                              RowValue;                                                   // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(16,1804) /* FString */               __um(DataTableName);                                        // 0x0010   (0x0010)  
	FName                                              ColumnName;                                                 // 0x0020   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.EventSpawnablePositionDropdown
/// Size: 0x0000 (0x000030 - 0x000030)
struct FEventSpawnablePositionDropdown : FDataTableDropdown
{ 
};

/// Class /Script/DeadByDaylight.ActorSpawner
/// Size: 0x0170 (0x000220 - 0x000390)
class UActorSpawner : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	EGameplayElementType                               Type;                                                       // 0x0228   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0229   (0x0007)  MISSED
	SDK_UNDEFINED(48,1805) /* TWeakObjectPtr<UClass*> */ __um(Visualization);                                      // 0x0230   (0x0030)  
	bool                                               ActivatedByDefault;                                         // 0x0260   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0261   (0x0007)  MISSED
	TArray<FActorSpawnerProperties>                    ActivatedSceneElement;                                      // 0x0268   (0x0010)  
	TArray<FActorSpawnerProperties>                    DeactivatedSceneElement;                                    // 0x0278   (0x0010)  
	float                                              Weight;                                                     // 0x0288   (0x0004)  
	int32_t                                            SpawnCountMax;                                              // 0x028C   (0x0004)  
	int32_t                                            SpawnPriorityTier;                                          // 0x0290   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0294   (0x0004)  MISSED
	FEventSpawnablePositionDropdown                    EventSpawnablePosition;                                     // 0x0298   (0x0030)  
	FDataTableDropdown                                 EventSpawnableShapePreset;                                  // 0x02C8   (0x0030)  
	FVector                                            MinBoundOverride;                                           // 0x02F8   (0x000C)  
	FVector                                            MaxBoundOverride;                                           // 0x0304   (0x000C)  
	TArray<FName>                                      TagsToBePassedOverToActor;                                  // 0x0310   (0x0010)  
	bool                                               AttachSpawnedActorToAttachedSocket;                         // 0x0320   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x0321   (0x0007)  MISSED
	SDK_UNDEFINED(16,1806) /* FMulticastInlineDelegate */ __um(OnAsyncActorSpawned);                               // 0x0328   (0x0010)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x0338   (0x0008)  MISSED
	bool                                               WeightInfluenceable;                                        // 0x0340   (0x0001)  
	bool                                               WeightInfluencer;                                           // 0x0341   (0x0001)  
	unsigned char                                      UnknownData06_5[0x2];                                       // 0x0342   (0x0002)  MISSED
	float                                              Cost;                                                       // 0x0344   (0x0004)  
	class UClass*                                      _toSpawn;                                                   // 0x0348   (0x0008)  
	unsigned char                                      UnknownData07_5[0x8];                                       // 0x0350   (0x0008)  MISSED
	SDK_UNDEFINED(8,1807) /* TWeakObjectPtr<AActor*> */ __um(_spawnedActorOnAuthority);                            // 0x0358   (0x0008)  
	class UBoxComponent*                               _minBoundBox;                                               // 0x0360   (0x0008)  
	class UBoxComponent*                               _maxBoundBox;                                               // 0x0368   (0x0008)  
	unsigned char                                      UnknownData08_6[0x20];                                      // 0x0370   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ActorSpawner.UseActivatedElement
	// bool UseActivatedElement();                                                                                           // [0x57b1160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ActorSpawner.IsEnabled
	// bool IsEnabled();                                                                                                     // [0x57b0670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ActorSpawner.EditorForceSpawnVisualization
	// void EditorForceSpawnVisualization();                                                                                 // [0x57afc80] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorSpawner.AuthoritySelect
	// void AuthoritySelect(bool Selected);                                                                                  // [0x57af790] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ActorSpawner.AuthorityGetSpawnedActor
	// class AActor* AuthorityGetSpawnedActor();                                                                             // [0x57af760] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ActorSpawner.Authority_SpawnActorAsyncEvent
	// void Authority_SpawnActorAsyncEvent();                                                                                // [0x57afbc0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ObjectRandomizer
/// Size: 0x0010 (0x000220 - 0x000230)
class UObjectRandomizer : public USceneComponent
{ 
public:
	TArray<class UActorSpawner*>                       Spawners;                                                   // 0x0218   (0x0010)  
	int32_t                                            MinPopulation;                                              // 0x0228   (0x0004)  
	int32_t                                            MaxPopulation;                                              // 0x022C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.SpawnerElement
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSpawnerElement
{ 
	TArray<FActorSpawnerProperties>                    ObjectsToBeSpawned;                                         // 0x0000   (0x0010)  
};

/// Class /Script/DeadByDaylight.ActorSpawnerRandomizer
/// Size: 0x0020 (0x000230 - 0x000250)
class UActorSpawnerRandomizer : public UObjectRandomizer
{ 
public:
	TArray<FSpawnerElement>                            ActivatedSpawnerContentLists;                               // 0x0230   (0x0010)  
	TArray<FSpawnerElement>                            DeactivatedSpawnerContentLists;                             // 0x0240   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ActorVariationElements
/// Size: 0x0038 (0x000000 - 0x000038)
struct FActorVariationElements
{ 
	ETileVariation                                     Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(48,1808) /* TWeakObjectPtr<UClass*> */ __um(Element);                                            // 0x0008   (0x0030)  
};

/// Class /Script/DeadByDaylight.ActorVariationSpawner
/// Size: 0x0050 (0x000220 - 0x000270)
class UActorVariationSpawner : public USceneComponent
{ 
public:
	SDK_UNDEFINED(48,1809) /* TWeakObjectPtr<UClass*> */ __um(Visualization);                                      // 0x0218   (0x0030)  
	TArray<FActorVariationElements>                    Variations;                                                 // 0x0248   (0x0010)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0258   (0x0008)  MISSED
	class UClass*                                      _toSpawn;                                                   // 0x0260   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0268   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.GameplayMutator
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UGameplayMutator : public UActorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.AddGeneratorProgressionGameplayMutator
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UAddGeneratorProgressionGameplayMutator : public UGameplayMutator
{ 
public:
};

/// Class /Script/DeadByDaylight.AddPlayerStatusEffectGameplayMutator
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UAddPlayerStatusEffectGameplayMutator : public UGameplayMutator
{ 
public:
	class UClass*                                      _statusEffectClass;                                         // 0x00B8   (0x0008)  
	bool                                               _shouldDisplay;                                             // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00C1   (0x0003)  MISSED
	float                                              _lifetime;                                                  // 0x00C4   (0x0004)  
};

/// Class /Script/DeadByDaylight.AIBotsManager
/// Size: 0x0038 (0x000038 - 0x000070)
class UAIBotsManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/DeadByDaylight.AICharacterBehaviourData
/// Size: 0x0000 (0x000030 - 0x000030)
class UAICharacterBehaviourData : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.AICharacterBehaviour
/// Size: 0x0028 (0x000030 - 0x000058)
class UAICharacterBehaviour : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0030   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AICharacterBehaviour.Update
	// void Update(float DeltaTime);                                                                                         // [0x57b64a0] Native|Public        
	// Function /Script/DeadByDaylight.AICharacterBehaviour.Stop
	// void Stop();                                                                                                          // [0x488ef80] Native|Public        
	// Function /Script/DeadByDaylight.AICharacterBehaviour.Start
	// void Start();                                                                                                         // [0x57b62e0] Native|Public        
	// Function /Script/DeadByDaylight.AICharacterBehaviour.SetEnable
	// void SetEnable(bool enable);                                                                                          // [0x57b6250] Final|Native|Public  
	// Function /Script/DeadByDaylight.AICharacterBehaviour.Resume
	// void Resume();                                                                                                        // [0x57b6160] Native|Public        
	// Function /Script/DeadByDaylight.AICharacterBehaviour.Pause
	// void Pause();                                                                                                         // [0x57b5f90] Native|Public        
	// Function /Script/DeadByDaylight.AICharacterBehaviour.IsEnabled
	// bool IsEnabled();                                                                                                     // [0x48cb6a0] Final|Native|Public|Const 
};

/// Class /Script/DeadByDaylight.AICharacterBehaviourInteractWithActor
/// Size: 0x0038 (0x000058 - 0x000090)
class UAICharacterBehaviourInteractWithActor : public UAICharacterBehaviour
{ 
public:
	class ADBDPlayer*                                  _aiPlayer;                                                  // 0x0058   (0x0008)  
	class ADBDAIPlayerController*                      _aiPlayerController;                                        // 0x0060   (0x0008)  
	class UAICharacterBehaviourInteractWithActorData*  _behaviourData;                                             // 0x0068   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0070   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AICharacterBehaviourInteractWithActor.OnMovementFinished
	// void OnMovementFinished(FAIRequestID RequestID, TEnumAsByte<EPathFollowingResult> Result);                            // [0x57b5d20] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.AICharacterBehaviourDropPallet
/// Size: 0x0008 (0x000090 - 0x000098)
class UAICharacterBehaviourDropPallet : public UAICharacterBehaviourInteractWithActor
{ 
public:
	class APallet*                                     _targetPallet;                                              // 0x0090   (0x0008)  
};

/// Class /Script/DeadByDaylight.AICharacterBehaviourInteractWithActorData
/// Size: 0x0020 (0x000030 - 0x000050)
class UAICharacterBehaviourInteractWithActorData : public UAICharacterBehaviourData
{ 
public:
	class AActor*                                      TargetActor;                                                // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0038   (0x0010)  MISSED
	ECharacterMovementTypes                            characterMovementType;                                      // 0x0048   (0x0001)  
	bool                                               usePathfinding;                                             // 0x0049   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x004A   (0x0006)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AICharacterBehaviourInteractWithActorData.WatchGameEventTypes
	// void WatchGameEventTypes(TArray<FGameplayTag> gameEventTypes);                                                        // [0x57b65d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AICharacterBehaviourInteractWithActorData.WatchGameEventType
	// void WatchGameEventType(FGameplayTag gameEventType);                                                                  // [0x57b6530] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AICharacterBehaviourInteractWithActorData.Init
	// void Init(class AActor* Actor, ECharacterMovementTypes characterMovementType, bool usePathfinding);                   // [0x57b5240] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AICharacterBehaviourInteractWithHook
/// Size: 0x0008 (0x000090 - 0x000098)
class UAICharacterBehaviourInteractWithHook : public UAICharacterBehaviourInteractWithActor
{ 
public:
	class AMeatHook*                                   _targetHook;                                                // 0x0090   (0x0008)  
};

/// Class /Script/DeadByDaylight.AICharacterEscapeCarriedData
/// Size: 0x0008 (0x000030 - 0x000038)
class UAICharacterEscapeCarriedData : public UAICharacterBehaviourData
{ 
public:
	bool                                               _preventWiggleSuccess;                                      // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AICharacterEscapeCarriedData.Init
	// void Init(bool preventWiggleSuccess);                                                                                 // [0x57b5360] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AICharacterEscapeCarried
/// Size: 0x0010 (0x000058 - 0x000068)
class UAICharacterEscapeCarried : public UAICharacterBehaviour
{ 
public:
	class ACamperPlayer*                               _camperPlayer;                                              // 0x0058   (0x0008)  
	class UAICharacterEscapeCarriedData*               _behaviourData;                                             // 0x0060   (0x0008)  
};

/// Class /Script/DeadByDaylight.CharacterEvasionBehaviourData
/// Size: 0x0020 (0x000030 - 0x000050)
class UCharacterEvasionBehaviourData : public UAICharacterBehaviourData
{ 
public:
	class AActor*                                      _hunter;                                                    // 0x0030   (0x0008)  
	TArray<class AActor*>                              _escapePoints;                                              // 0x0038   (0x0010)  
	float                                              _minEscapeDist;                                             // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CharacterEvasionBehaviourData.Init
	// void Init(class AActor* Hunter, TArray<AActor*> escapePoints, float minEscapeDist);                                   // [0x57b5920] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AICharacterEvasionBehaviour
/// Size: 0x0028 (0x000058 - 0x000080)
class UAICharacterEvasionBehaviour : public UAICharacterBehaviour
{ 
public:
	class ADBDPlayer*                                  _prey;                                                      // 0x0058   (0x0008)  
	class ADBDAIPlayerController*                      _preyAIController;                                          // 0x0060   (0x0008)  
	class AActor*                                      _currentEscapePoint;                                        // 0x0068   (0x0008)  
	class UCharacterEvasionBehaviourData*              _characterEvasionData;                                      // 0x0070   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0078   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AICharacterEvasionBehaviour.EscapeDestinationReached
	// void EscapeDestinationReached(FAIRequestID RequestID, TEnumAsByte<EPathFollowingResult> Result);                      // [0x57b5170] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.AICharacterHideInLockerBehaviourData
/// Size: 0x0010 (0x000030 - 0x000040)
class UAICharacterHideInLockerBehaviourData : public UAICharacterBehaviourData
{ 
public:
	class ALocker*                                     TargetLocker;                                               // 0x0030   (0x0008)  
	ECharacterMovementTypes                            characterMovementType;                                      // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AICharacterHideInLockerBehaviourData.Init
	// void Init(class ALocker* Locker, ECharacterMovementTypes characterMovementType);                                      // [0x57b53f0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AICharacterHideInLockerBehaviour
/// Size: 0x0038 (0x000058 - 0x000090)
class UAICharacterHideInLockerBehaviour : public UAICharacterBehaviour
{ 
public:
	class ADBDPlayer*                                  _aiPlayer;                                                  // 0x0058   (0x0008)  
	class ADBDAIPlayerController*                      _aiPlayerController;                                        // 0x0060   (0x0008)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x0068   (0x0018)  MISSED
	class UAICharacterHideInLockerBehaviourData*       _characterHideInLockerData;                                 // 0x0080   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0088   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AICharacterHideInLockerBehaviour.OnMovementFinished
	// void OnMovementFinished(FAIRequestID RequestID, TEnumAsByte<EPathFollowingResult> Result);                            // [0x57b5df0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.AICharacterRepairGeneratorBehaviourData
/// Size: 0x0010 (0x000030 - 0x000040)
class UAICharacterRepairGeneratorBehaviourData : public UAICharacterBehaviourData
{ 
public:
	class AGenerator*                                  _generator;                                                 // 0x0030   (0x0008)  
	ECharacterMovementTypes                            _characterMovementType;                                     // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AICharacterRepairGeneratorBehaviourData.Init
	// void Init(class AGenerator* Generator, ECharacterMovementTypes characterMovementType);                                // [0x57b54c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AICharacterRepairGeneratorBehaviour
/// Size: 0x0040 (0x000058 - 0x000098)
class UAICharacterRepairGeneratorBehaviour : public UAICharacterBehaviour
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0058   (0x0010)  MISSED
	class ADBDPlayer*                                  _aiPlayer;                                                  // 0x0068   (0x0008)  
	class ADBDAIPlayerController*                      _aiPlayerController;                                        // 0x0070   (0x0008)  
	class UInteractor*                                 _targetInteractor;                                          // 0x0078   (0x0008)  
	class UAICharacterRepairGeneratorBehaviourData*    _characterRepairGeneratorData;                              // 0x0080   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0088   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AICharacterRepairGeneratorBehaviour.OnMovementFinished
	// void OnMovementFinished(FAIRequestID RequestID, TEnumAsByte<EPathFollowingResult> Result);                            // [0x57b5ec0] Final|Native|Private 
	// Function /Script/DeadByDaylight.AICharacterRepairGeneratorBehaviour.OnGeneratorRepairedEventHandler
	// void OnGeneratorRepairedEventHandler(bool isAutoCompleted);                                                           // [0x57b5c90] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.AIHealAllyBehaviourData
/// Size: 0x0008 (0x000030 - 0x000038)
class UAIHealAllyBehaviourData : public UAICharacterBehaviourData
{ 
public:
	class ACamperPlayer*                               _targetAlly;                                                // 0x0030   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.AIHealAllyBehaviourData.Init
	// void Init(class ACamperPlayer* allyToHealTarget);                                                                     // [0x57b5660] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AIHealAllyBehaviour
/// Size: 0x0028 (0x000058 - 0x000080)
class UAIHealAllyBehaviour : public UAICharacterBehaviour
{ 
public:
	class UAIHealAllyBehaviourData*                    _behaviourData;                                             // 0x0058   (0x0008)  
	class ADBDAIPlayerController*                      _aiController;                                              // 0x0060   (0x0008)  
	class ADBDPlayer*                                  _aiPlayer;                                                  // 0x0068   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0070   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AIHealAllyBehaviour.TargetPositionReached
	// void TargetPositionReached(FAIRequestID RequestID, TEnumAsByte<EPathFollowingResult> Result);                         // [0x57b6300] Final|Native|Private 
	// Function /Script/DeadByDaylight.AIHealAllyBehaviour.Init
	// void Init(class ADBDPlayer* Character, class UAICharacterBehaviourData* behaviourData);                               // [0x57b5590] Native|Public        
};

/// Class /Script/DeadByDaylight.AimableInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UAimableInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.AimAssistComponent
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class UAimAssistComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x00B8   (0x0030)  MISSED
};

/// Class /Script/DeadByDaylight.AimingCrosshairComponent
/// Size: 0x0048 (0x0000B8 - 0x000100)
class UAimingCrosshairComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x00B8   (0x0048)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AimingCrosshairComponent.Server_SetCosmetics
	// void Server_SetCosmetics(EAimingCrosshairState aimingCrosshairState, float progress);                                 // [0x57b6180] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.AimingCrosshairComponent.Multicast_SetCosmetics
	// void Multicast_SetCosmetics(EAimingCrosshairState aimingCrosshairState, float progress);                              // [0x57b5bc0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/DeadByDaylight.AIMoveToInteractData
/// Size: 0x0018 (0x000030 - 0x000048)
class UAIMoveToInteractData : public UAICharacterBehaviourData
{ 
public:
	class AActor*                                      _interactActor;                                             // 0x0030   (0x0008)  
	class AActor*                                      _targetPositionActor;                                       // 0x0038   (0x0008)  
	ECharacterMovementTypes                            _characterMovementTypes;                                    // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0041   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AIMoveToInteractData.Init
	// void Init(class AActor* interactActor, ECharacterMovementTypes characterMovementTypes, class AActor* targetPositionActor); // [0x57b56f0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AIMoveToInteract
/// Size: 0x0018 (0x000058 - 0x000070)
class UAIMoveToInteract : public UAICharacterBehaviour
{ 
public:
	class UAIMoveToInteractData*                       _aiMoveToInteractData;                                      // 0x0058   (0x0008)  
	class ADBDAIPlayerController*                      _aiController;                                              // 0x0060   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0068   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AIMoveToInteract.InteractionPointReached
	// void InteractionPointReached(FAIRequestID RequestID, TEnumAsByte<EPathFollowingResult> Result);                       // [0x57b5af0] Final|Native|Private 
	// Function /Script/DeadByDaylight.AIMoveToInteract.Init
	// void Init(class ADBDPlayer* Character, class UAICharacterBehaviourData* behaviourData);                               // [0x57b5590] Native|Public        
};

/// Class /Script/DeadByDaylight.AIMoveToPositionData
/// Size: 0x0010 (0x000030 - 0x000040)
class UAIMoveToPositionData : public UAICharacterBehaviourData
{ 
public:
	class AActor*                                      _positionActor;                                             // 0x0030   (0x0008)  
	ECharacterMovementTypes                            _movementType;                                              // 0x0038   (0x0001)  
	bool                                               _usePathfinding;                                            // 0x0039   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x003A   (0x0006)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AIMoveToPositionData.Init
	// void Init(class AActor* positionActor, ECharacterMovementTypes movementType, bool usePathfinding);                    // [0x57b5800] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AIMoveToPosition
/// Size: 0x0018 (0x000058 - 0x000070)
class UAIMoveToPosition : public UAICharacterBehaviour
{ 
public:
	class UAIMoveToPositionData*                       _aiBehaviourData;                                           // 0x0058   (0x0008)  
	class ADBDAIPlayerController*                      _aiController;                                              // 0x0060   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0068   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AIMoveToPosition.TargetPositionReached
	// void TargetPositionReached(FAIRequestID RequestID, TEnumAsByte<EPathFollowingResult> Result);                         // [0x57b63d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.AIMoveToPosition.Init
	// void Init(class ADBDPlayer* Character, class UAICharacterBehaviourData* behaviourData);                               // [0x57b5590] Native|Public        
};

/// Class /Script/DeadByDaylight.AIPointOfInterestTargetInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UAIPointOfInterestTargetInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.AISenseConfig_PointOfInterest
/// Size: 0x0010 (0x000050 - 0x000060)
class UAISenseConfig_PointOfInterest : public UAISenseConfig
{ 
public:
	class UClass*                                      Implementation;                                             // 0x0050   (0x0008)  
	float                                              MinGeneratorRepairSoundRange;                               // 0x0058   (0x0004)  
	float                                              MaxGeneratorRepairSoundRange;                               // 0x005C   (0x0004)  
};

/// Class /Script/DeadByDaylight.AISense_PointOfInterest
/// Size: 0x0010 (0x000090 - 0x0000A0)
class UAISense_PointOfInterest : public UAISense
{ 
public:
	TArray<class AActor*>                              _sources;                                                   // 0x0090   (0x0010)  
};

/// Class /Script/DeadByDaylight.AISenseConfig_Trail
/// Size: 0x0018 (0x000050 - 0x000068)
class UAISenseConfig_Trail : public UAISenseConfig
{ 
public:
	class UClass*                                      Implementation;                                             // 0x0050   (0x0008)  
	float                                              MaxRange;                                                   // 0x0058   (0x0004)  
	float                                              PeripheralVisionAngleDegrees;                               // 0x005C   (0x0004)  
	FAISenseAffiliationFilter                          DetectionByAffiliation;                                     // 0x0060   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.AITrailEvent
/// Size: 0x0030 (0x000000 - 0x000030)
struct FAITrailEvent
{ 
	FVector                                            Location;                                                   // 0x0000   (0x000C)  
	float                                              starttime;                                                  // 0x000C   (0x0004)  
	float                                              EndTime;                                                    // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	class AActor*                                      Instigator;                                                 // 0x0018   (0x0008)  
	FGameplayTag                                       IgnoreOnPerkTag;                                            // 0x0020   (0x000C)  
	FGenericTeamId                                     TeamIdentifier;                                             // 0x002C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x002D   (0x0003)  MISSED
};

/// Class /Script/DeadByDaylight.AISenseEvent_Trail
/// Size: 0x0030 (0x000030 - 0x000060)
class UAISenseEvent_Trail : public UAISenseEvent
{ 
public:
	FAITrailEvent                                      Event;                                                      // 0x0030   (0x0030)  
};

/// Class /Script/DeadByDaylight.AISense_Trail
/// Size: 0x0060 (0x000090 - 0x0000F0)
class UAISense_Trail : public UAISense
{ 
public:
	TArray<FAITrailEvent>                              Events;                                                     // 0x0090   (0x0010)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x00A0   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AISense_Trail.ReportTrailEvent
	// void ReportTrailEvent(class UObject* worldContextObj, FVector Location, class AActor* Instigator, FGameplayTag IgnoreOnPerkTag, float Lifetime); // [0x57b5fb0] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.AITunableParameter
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAITunableParameter
{ 
	float                                              defaultValue;                                               // 0x0000   (0x0004)  
	FName                                              TunableName;                                                // 0x0004   (0x000C)  
};

/// Class /Script/DeadByDaylight.AISenseConfig_UnclearHearing
/// Size: 0x0030 (0x000050 - 0x000080)
class UAISenseConfig_UnclearHearing : public UAISenseConfig
{ 
public:
	class UClass*                                      Implementation;                                             // 0x0050   (0x0008)  
	float                                              HearingRange;                                               // 0x0058   (0x0004)  
	FAITunableParameter                                NoiseRangeMultiplier;                                       // 0x005C   (0x0010)  
	FAITunableParameter                                ReactionTime;                                               // 0x006C   (0x0010)  
	FAISenseAffiliationFilter                          DetectionByAffiliation;                                     // 0x007C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.AIUnclearNoiseEvent
/// Size: 0x0030 (0x000000 - 0x000030)
struct FAIUnclearNoiseEvent
{ 
	unsigned char                                      UnknownData00_2[0x4];                                       // 0x0000   (0x0004)  MISSED
	FVector                                            NoiseLocation;                                              // 0x0004   (0x000C)  
	float                                              Loudness;                                                   // 0x0010   (0x0004)  
	float                                              MaxRange;                                                   // 0x0014   (0x0004)  
	class AActor*                                      Instigator;                                                 // 0x0018   (0x0008)  
	FName                                              Tag;                                                        // 0x0020   (0x000C)  
	FGenericTeamId                                     TeamIdentifier;                                             // 0x002C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x002D   (0x0003)  MISSED
};

/// Class /Script/DeadByDaylight.AISenseEvent_UnclearHearing
/// Size: 0x0030 (0x000030 - 0x000060)
class UAISenseEvent_UnclearHearing : public UAISenseEvent
{ 
public:
	FAIUnclearNoiseEvent                               Event;                                                      // 0x0030   (0x0030)  
};

/// Class /Script/DeadByDaylight.AISense_UnclearHearing
/// Size: 0x0060 (0x000090 - 0x0000F0)
class UAISense_UnclearHearing : public UAISense
{ 
public:
	TArray<FAIUnclearNoiseEvent>                       NoiseEvents;                                                // 0x0090   (0x0010)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x00A0   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AISense_UnclearHearing.ReportUnclearNoiseEvent
	// void ReportUnclearNoiseEvent(class UObject* WorldContextObject, FVector NoiseLocation, float Loudness, class AActor* Instigator, float MaxRange, FName Tag); // [0x57bc670] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AISlasherChaseAndAttackBehaviourData
/// Size: 0x0010 (0x000030 - 0x000040)
class UAISlasherChaseAndAttackBehaviourData : public UAICharacterBehaviourData
{ 
public:
	class ACamperPlayer*                               _targetSurvivor;                                            // 0x0030   (0x0008)  
	float                                              _sqrtAttackRangeDistance;                                   // 0x0038   (0x0004)  
	float                                              _sqrtMaxTargetPositionDiff;                                 // 0x003C   (0x0004)  


	/// Functions
	// Function /Script/DeadByDaylight.AISlasherChaseAndAttackBehaviourData.Init
	// void Init(class ACamperPlayer* TargetSurvivor, float attackRangeDistance, float locationDistance);                    // [0x57bbb10] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AISlasherChaseAndAttackBehaviour
/// Size: 0x0028 (0x000058 - 0x000080)
class UAISlasherChaseAndAttackBehaviour : public UAICharacterBehaviour
{ 
public:
	class UAISlasherChaseAndAttackBehaviourData*       _behaviourData;                                             // 0x0058   (0x0008)  
	class ASlasherPlayer*                              _slasherPlayer;                                             // 0x0060   (0x0008)  
	class ADBDAIPlayerController*                      _slasherAIPlayerController;                                 // 0x0068   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0070   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviourData
/// Size: 0x0008 (0x000030 - 0x000038)
class UAISlasherMoveToGrabSurvivorBehaviourData : public UAICharacterBehaviourData
{ 
public:
	class ACamperPlayer*                               _targetSurvivor;                                            // 0x0030   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviourData.Init
	// void Init(class ACamperPlayer* TargetSurvivor);                                                                       // [0x57b5660] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviour
/// Size: 0x0028 (0x000058 - 0x000080)
class UAISlasherMoveToGrabSurvivorBehaviour : public UAICharacterBehaviour
{ 
public:
	class UAISlasherMoveToGrabSurvivorBehaviourData*   _behaviourData;                                             // 0x0058   (0x0008)  
	class ASlasherPlayer*                              _slasherPlayer;                                             // 0x0060   (0x0008)  
	class ADBDAIPlayerController*                      _slasherAIPlayerController;                                 // 0x0068   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0070   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.ScreenBase
/// Size: 0x00F0 (0x000030 - 0x000120)
class UScreenBase : public UObject
{ 
public:
	bool                                               isAnimationDone;                                            // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	class UGFxObject*                                  ScreenObject;                                               // 0x0038   (0x0008)  
	class UScreenController*                           _screenController;                                          // 0x0040   (0x0008)  
	unsigned char                                      UnknownData01_6[0xD8];                                      // 0x0048   (0x00D8)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ScreenBase.SetFadesOut
	// void SetFadesOut(bool fadesOut);                                                                                      // [0x58ee310] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.ScreenBase.OnTextInputMouseClicked
	// void OnTextInputMouseClicked(bool IsPassword);                                                                        // [0x581c030] Final|Native|Public  
	// Function /Script/DeadByDaylight.ScreenBase.OnStart
	// void OnStart();                                                                                                       // [0x58ee2f0] Final|Native|Public  
	// Function /Script/DeadByDaylight.ScreenBase.OnNavKey
	// void OnNavKey(FString navKey);                                                                                        // [0x58ee230] Final|Native|Public  
	// Function /Script/DeadByDaylight.ScreenBase.OnHideVirtualKeyboardRequested
	// void OnHideVirtualKeyboardRequested();                                                                                // [0x4592da0] Final|Native|Public  
	// Function /Script/DeadByDaylight.ScreenBase.OnEscape
	// void OnEscape();                                                                                                      // [0x58ee210] Final|Native|Public  
	// Function /Script/DeadByDaylight.ScreenBase.OnBack
	// void OnBack();                                                                                                        // [0x58ee120] Final|Native|Public  
	// Function /Script/DeadByDaylight.ScreenBase.OnAnyKey
	// void OnAnyKey(float Code);                                                                                            // [0x58ee0a0] Final|Native|Public  
	// Function /Script/DeadByDaylight.ScreenBase.OnAnimationUpdate
	// void OnAnimationUpdate(int32_t isAnimationDone);                                                                      // [0x58ee010] Final|Native|Public  
	// Function /Script/DeadByDaylight.ScreenBase.BroadcastOnHighlightedElementClickedEvent
	// void BroadcastOnHighlightedElementClickedEvent(FName onBoardingID);                                                   // [0x58edf40] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.AlertsScreen
/// Size: 0x0018 (0x000120 - 0x000138)
class UAlertsScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0120   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AlertsScreen.RewardAlertSequenceCompleted
	// void RewardAlertSequenceCompleted();                                                                                  // [0x57bc860] Final|Native|Private|Const 
};

/// Class /Script/DeadByDaylight.AlwaysVisiblePerkIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UAlwaysVisiblePerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.Gate
/// Size: 0x0018 (0x000230 - 0x000248)
class AGate : public AActor
{ 
public:
	TArray<float>                                      InteractionInputs;                                          // 0x0230   (0x0010)  
	float                                              InteractionOutput;                                          // 0x0240   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0244   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.AndGate
/// Size: 0x0000 (0x000248 - 0x000248)
class AAndGate : public AGate
{ 
public:
};

/// Class /Script/DeadByDaylight.AnimationFollowerActor
/// Size: 0x0068 (0x000230 - 0x000298)
class AAnimationFollowerActor : public AActor
{ 
public:
	class UDBDSkeletalMeshComponentBudgeted*           _skeletalMeshComponent;                                     // 0x0230   (0x0008)  
	class UAnimationMontageSlave*                      _montageFollower;                                           // 0x0238   (0x0008)  
	class UMontagePlayer*                              _montagePlayer;                                             // 0x0240   (0x0008)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x0248   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AnimationFollowerActor.OnMontageStopped
	// void OnMontageStopped(FAnimationMontageDescriptor ID);                                                                // [0x57bc430] Final|Native|Private 
	// Function /Script/DeadByDaylight.AnimationFollowerActor.OnMontageStarted
	// void OnMontageStarted(FAnimationMontageDescriptor ID, float Rate);                                                    // [0x57bc1b0] Final|Native|Private 
	// Function /Script/DeadByDaylight.AnimationFollowerActor.OnMontageEnd
	// void OnMontageEnd(FAnimationMontageDescriptor Montage, bool interrupted);                                             // [0x57bc060] Final|Native|Private 
	// Function /Script/DeadByDaylight.AnimationFollowerActor.NativeOnMontageStopped
	// void NativeOnMontageStopped(FAnimationMontageDescriptor ID);                                                          // [0x57bbed0] Native|Protected     
	// Function /Script/DeadByDaylight.AnimationFollowerActor.NativeOnMontageStarted
	// void NativeOnMontageStarted(FAnimationMontageDescriptor ID, float Rate);                                              // [0x57bbd90] Native|Protected     
	// Function /Script/DeadByDaylight.AnimationFollowerActor.NativeOnMontageEnded
	// void NativeOnMontageEnded(FAnimationMontageDescriptor Montage, bool interrupted);                                     // [0x57bbc40] Native|Protected     
	// Function /Script/DeadByDaylight.AnimationFollowerActor.Cosmetic_OnMontageStopped
	// void Cosmetic_OnMontageStopped();                                                                                     // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.AnimationFollowerActor.Cosmetic_OnMontageStarted
	// void Cosmetic_OnMontageStarted();                                                                                     // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.AnimationMontageSlave
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UAnimationMontageSlave : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B8   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AnimationMontageSlave.SetMontagePlayer
	// void SetMontagePlayer(class UMontagePlayer* MontagePlayer);                                                           // [0x57bc910] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AnimationMontageSlave.SetLeader
	// void SetLeader(class UMontagePlayer* Leader);                                                                         // [0x57bc880] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AnimationMontageSlave.OnMontageStopped
	// void OnMontageStopped(FAnimationMontageDescriptor ID);                                                                // [0x57bc540] Final|Native|Private 
	// Function /Script/DeadByDaylight.AnimationMontageSlave.OnMontageStarted
	// void OnMontageStarted(FAnimationMontageDescriptor ID, float Rate);                                                    // [0x57bc2f0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.AnimationPreviewSubsystem
/// Size: 0x0198 (0x000038 - 0x0001D0)
class UAnimationPreviewSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0038   (0x0050)  MISSED
	class ASlasherPlayer*                              _killer;                                                    // 0x0088   (0x0008)  
	unsigned char                                      UnknownData01_5[0x90];                                      // 0x0090   (0x0090)  MISSED
	class ACamperPlayer*                               _survivor;                                                  // 0x0120   (0x0008)  
	unsigned char                                      UnknownData02_5[0x98];                                      // 0x0128   (0x0098)  MISSED
	class UKillInteractionDefinition*                  _moriKillInteraction;                                       // 0x01C0   (0x0008)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x01C8   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AnimationPreviewSubsystem.OnPawnClassesLoaded
	// void OnPawnClassesLoaded();                                                                                           // [0x57bc650] Final|Native|Private 
	// Function /Script/DeadByDaylight.AnimationPreviewSubsystem.OnInteractionFinished
	// void OnInteractionFinished();                                                                                         // [0x57bc040] Final|Native|Private 
	// Function /Script/DeadByDaylight.AnimationPreviewSubsystem.OnFadeOutForClosureComplete
	// void OnFadeOutForClosureComplete();                                                                                   // [0x57bc020] Final|Native|Private 
	// Function /Script/DeadByDaylight.AnimationPreviewSubsystem.OnFadeOutComplete
	// void OnFadeOutComplete();                                                                                             // [0x57bc000] Final|Native|Private 
	// Function /Script/DeadByDaylight.AnimationPreviewSubsystem.OnFadeInComplete
	// void OnFadeInComplete();                                                                                              // [0x57bbfe0] Final|Native|Private 
	// Function /Script/DeadByDaylight.AnimationPreviewSubsystem.IsPreviewingAnimation
	// bool IsPreviewingAnimation();                                                                                         // [0x57bbc20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.AnimNotifyState_HideCustomizationAttachments
/// Size: 0x0008 (0x000038 - 0x000040)
class UAnimNotifyState_HideCustomizationAttachments : public UAnimNotifyState
{ 
public:
	ECustomizationCategory                             category;                                                   // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/DeadByDaylight.AnimTagProvider
/// Size: 0x0000 (0x000030 - 0x000030)
class UAnimTagProvider : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.AntiCampSelfUnhookMeterComponent
/// Size: 0x0048 (0x0000B8 - 0x000100)
class UAntiCampSelfUnhookMeterComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x00B8   (0x0048)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AntiCampSelfUnhookMeterComponent.Server_SetCosmetics
	// void Server_SetCosmetics(EAntiCampSelfUnhookMeterState aimingCrosshairState, float progress);                         // [0x57b6180] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.AntiCampSelfUnhookMeterComponent.Multicast_SetCosmetics
	// void Multicast_SetCosmetics(EAntiCampSelfUnhookMeterState aimingCrosshairState, float progress);                      // [0x57b5bc0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.AntiCampSelfUnhookMeterComponent.GetProgress
	// float GetProgress();                                                                                                  // [0x57bbae0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.ApplicableActivationTimerElapsedIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UApplicableActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ApplicableActivationTimerRemainingCooldownElapsedIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UApplicableActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ApplicableActivationTimerRemainingIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UApplicableActivationTimerRemainingIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ApplicableAndStealthRatioIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UApplicableAndStealthRatioIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ApplicableCooldownPerkIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UApplicableCooldownPerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.BasePopupScreen
/// Size: 0x0000 (0x000120 - 0x000120)
class UBasePopupScreen : public UScreenBase
{ 
public:
};

/// Class /Script/DeadByDaylight.GenericPopupScreen
/// Size: 0x0020 (0x000120 - 0x000140)
class UGenericPopupScreen : public UBasePopupScreen
{ 
public:
	class UUMGGenericPopup*                            _popup;                                                     // 0x0120   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0128   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.GenericPopupScreen.OnChoiceSelected
	// void OnChoiceSelected(int32_t selectedButtonType);                                                                    // [0x588b400] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.ArchivePassPurchasePopupScreen
/// Size: 0x0000 (0x000140 - 0x000140)
class UArchivePassPurchasePopupScreen : public UGenericPopupScreen
{ 
public:
};

/// Class /Script/DeadByDaylight.ArchivesHelper
/// Size: 0x0000 (0x000030 - 0x000030)
class UArchivesHelper : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.ArchivesManager
/// Size: 0x0038 (0x000038 - 0x000070)
class UArchivesManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0038   (0x0020)  MISSED
	class UArchiveStoriesContainer*                    _storiesContainer;                                          // 0x0058   (0x0008)  
	class UArchiveVignettesContainer*                  _vignettesContainer;                                        // 0x0060   (0x0008)  
	class URewardTrackContainer*                       _rewardTrackContainer;                                      // 0x0068   (0x0008)  
};

/// Class /Script/DeadByDaylight.ArchivesSpecialBehavioursHelper
/// Size: 0x0000 (0x000030 - 0x000030)
class UArchivesSpecialBehavioursHelper : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.ArchiveStoriesContainer
/// Size: 0x0418 (0x000030 - 0x000448)
class UArchiveStoriesContainer : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x2B8];                                     // 0x0030   (0x02B8)  MISSED
	class URewardTrackContainer*                       _rewardTrackContainer;                                      // 0x02E8   (0x0008)  
	unsigned char                                      UnknownData01_5[0xC8];                                      // 0x02F0   (0x00C8)  MISSED
	class UWalletHandler*                              _wallet;                                                    // 0x03B8   (0x0008)  
	class UArchiveVignettesContainer*                  _vignettesContainer;                                        // 0x03C0   (0x0008)  
	unsigned char                                      UnknownData02_6[0x80];                                      // 0x03C8   (0x0080)  MISSED
};

/// Class /Script/DeadByDaylight.ArchiveVignettesContainer
/// Size: 0x00D8 (0x000030 - 0x000108)
class UArchiveVignettesContainer : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xD8];                                      // 0x0030   (0x00D8)  MISSED
};

/// Class /Script/DeadByDaylight.ArchiveWidgetScreen
/// Size: 0x0030 (0x000120 - 0x000150)
class UArchiveWidgetScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0120   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ArchiveWidgetScreen.OnRewardsButtonClick
	// void OnRewardsButtonClick();                                                                                          // [0x57c42c0] Final|Native|Private 
	// Function /Script/DeadByDaylight.ArchiveWidgetScreen.OnQuestsButtonClick
	// void OnQuestsButtonClick();                                                                                           // [0x57bc860] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.AspectRatioComponentUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UAspectRatioComponentUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.AssetLibrary
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UAssetLibrary : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0030   (0x0008)  MISSED
	class UObjectLibrary*                              _objectLibrary;                                             // 0x0038   (0x0008)  
	unsigned char                                      UnknownData01_5[0x64];                                      // 0x0040   (0x0064)  MISSED
	float                                              SecondsDelayBetweenBatch;                                   // 0x00A4   (0x0004)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.AssetLibraryLoader
/// Size: 0x0028 (0x000000 - 0x000028)
struct FAssetLibraryLoader
{ 
	class UAssetLibrary*                               AssetLibrary;                                               // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0008   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.AssetLibraryManager
/// Size: 0x00D0 (0x000030 - 0x000100)
class UAssetLibraryManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0030   (0x0010)  MISSED
	class UObject*                                     _worldContextObject;                                        // 0x0040   (0x0008)  
	SDK_UNDEFINED(80,1810) /* TMap<int32_t, UCharacterItemsAssetLibrary*> */ __um(_characterItemsAssetLibrary);    // 0x0048   (0x0050)  
	class UIniAssetLibrary*                            _globalAssetLibrary;                                        // 0x0098   (0x0008)  
	class UMenuAssetLibrary*                           _menuAssetLibrary;                                          // 0x00A0   (0x0008)  
	class UGameAssetLibrary*                           _gameAssetLibrary;                                          // 0x00A8   (0x0008)  
	class UTutorialAssetLibrary*                       _tutorialAssetLibrary;                                      // 0x00B0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x00B8   (0x0008)  MISSED
	class Ushopmanager*                                _shopManager;                                               // 0x00C0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x00C8   (0x0010)  MISSED
	TArray<FAssetLibraryLoader>                        _loadingList;                                               // 0x00D8   (0x0010)  
	int32_t                                            CharacterItemsAssetLoadCountPerChunk;                       // 0x00E8   (0x0004)  
	int32_t                                            BlindPackAssetLoadCountPerChunk;                            // 0x00EC   (0x0004)  
	int32_t                                            MenuAssetLoadCountPerChunk;                                 // 0x00F0   (0x0004)  
	int32_t                                            GlobalAssetLoadCountPerChunk;                               // 0x00F4   (0x0004)  
	int32_t                                            GameAssetLoadCountPerChunk;                                 // 0x00F8   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x00FC   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.AssetUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UAssetUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.AtlantaCustomGameUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UAtlantaCustomGameUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaCustomGameUtilities.IsInCustomGameLobby
	// bool IsInCustomGameLobby(class UDBDGameInstance* GameInstance);                                                       // [0x57c4230] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaCustomGameUtilities.IsCustomGameEnabled
	// bool IsCustomGameEnabled();                                                                                           // [0x57c4200] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.BaseTooltipWidget
/// Size: 0x0038 (0x000338 - 0x000370)
class UBaseTooltipWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  TitleLabel;                                                 // 0x0338   (0x0008)  
	class UCanvasPanel*                                TooltipContainer;                                           // 0x0340   (0x0008)  
	class UUMGHtmlRichText*                            DescriptionLabel;                                           // 0x0348   (0x0008)  
	class UButton*                                     CloseButton;                                                // 0x0350   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0358   (0x0010)  MISSED
	class UAkAudioEvent*                               TooltipOpeningSound;                                        // 0x0368   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.BaseTooltipWidget.OnQuitButtonClicked
	// void OnQuitButtonClicked();                                                                                           // [0x4b50720] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.AtlantaCustomizationTooltipWidget
/// Size: 0x0018 (0x000370 - 0x000388)
class UAtlantaCustomizationTooltipWidget : public UBaseTooltipWidget
{ 
public:
	class UImage*                                      SmokeImage;                                                 // 0x0370   (0x0008)  
	class UUMGCustomizationTooltipHeaderWidget*        Header;                                                     // 0x0378   (0x0008)  
	class UUMGCustomizationTooltipContentWidget*       Content;                                                    // 0x0380   (0x0008)  
};

/// Class /Script/DeadByDaylight.AtlantaDeepLinkSubsystem
/// Size: 0x0028 (0x000038 - 0x000060)
class UAtlantaDeepLinkSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Struct /Script/DeadByDaylight.RoleDropdown
/// Size: 0x0002 (0x000000 - 0x000002)
struct FRoleDropdown
{ 
	bool                                               ShowRoleSelection;                                          // 0x0000   (0x0001)  
	EPlayerRole                                        Role;                                                       // 0x0001   (0x0001)  
};

/// Struct /Script/DeadByDaylight.CharacterDropdown
/// Size: 0x0006 (0x000002 - 0x000008)
struct FCharacterDropdown : FRoleDropdown
{ 
	unsigned char                                      UnknownData00_2[0x2];                                       // 0x0002   (0x0002)  MISSED
	int32_t                                            characterId;                                                // 0x0004   (0x0004)  
};

/// Class /Script/DeadByDaylight.DisplayStand
/// Size: 0x0180 (0x000230 - 0x0003B0)
class ADisplayStand : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0230   (0x0018)  MISSED
	class AActor*                                      _currentActorDisplayed;                                     // 0x0248   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0250   (0x0008)  MISSED
	class UClass*                                      _currentActorDisplayedClass;                                // 0x0258   (0x0008)  
	class UClass*                                      _nextActorToDisplayClass;                                   // 0x0260   (0x0008)  
	unsigned char                                      UnknownData02_5[0x28];                                      // 0x0268   (0x0028)  MISSED
	SDK_UNDEFINED(80,1811) /* TMap<UClass*, FTransform> */ __um(_offsetByClass);                                   // 0x0290   (0x0050)  
	SDK_UNDEFINED(80,1812) /* TMap<UClass*, bool> */   __um(_enableRotationByClass);                               // 0x02E0   (0x0050)  
	SDK_UNDEFINED(48,1813) /* TWeakObjectPtr<UClass*> */ __um(_defaultCharmClassDisplayable);                      // 0x0330   (0x0030)  
	unsigned char                                      UnknownData03_5[0x39];                                      // 0x0360   (0x0039)  MISSED
	bool                                               _useOffsetMenuAnimations;                                   // 0x0399   (0x0001)  
	bool                                               _displayDummyCharacter;                                     // 0x039A   (0x0001)  
	unsigned char                                      UnknownData04_5[0x1];                                       // 0x039B   (0x0001)  MISSED
	FCharacterDropdown                                 _characterDropdown;                                         // 0x039C   (0x0008)  
	unsigned char                                      UnknownData05_6[0xC];                                       // 0x03A4   (0x000C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DisplayStand.OnCurrentActorDestroyed
	// void OnCurrentActorDestroyed(class AActor* DestroyedActor);                                                           // [0x586e450] Final|Native|Private 
	// Function /Script/DeadByDaylight.DisplayStand.BlockRotation
	// void BlockRotation(bool shouldBlockRotation);                                                                         // [0x586df90] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.AtlantaDisplayStand
/// Size: 0x0010 (0x0003B0 - 0x0003C0)
class AAtlantaDisplayStand : public ADisplayStand
{ 
public:
	EAtlantaDisplayStandPosition                       StandPosition;                                              // 0x03A8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x03A9   (0x0007)  MISSED
	class USceneComponent*                             SurvivorPositionMarker;                                     // 0x03B0   (0x0008)  
	class USceneComponent*                             KillerPositionMarker;                                       // 0x03B8   (0x0008)  
};

/// Class /Script/DeadByDaylight.AtlantaEventsTemplateDataAsset
/// Size: 0x0050 (0x000038 - 0x000088)
class UAtlantaEventsTemplateDataAsset : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,1814) /* TMap<EEventsType, UClass*> */ __um(Data);                                            // 0x0038   (0x0050)  
};

/// Class /Script/DeadByDaylight.AtlantaFriendsListScreenUMG
/// Size: 0x0080 (0x000120 - 0x0001A0)
class UAtlantaFriendsListScreenUMG : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_2[0x78];                                      // 0x0120   (0x0078)  MISSED
	class UUMGAtlantaFriendListScreen*                 _atlantaFriendListScreen;                                   // 0x0198   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaFriendsListScreenUMG.HandleResearchButtonClicked
	// void HandleResearchButtonClicked(FText& searchInput);                                                                 // [0x57c4130] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.AtlantaFriendsListScreenUMG.HandleClosedButtonClicked
	// void HandleClosedButtonClicked();                                                                                     // [0x57c4110] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.AtlantaHudDirectionalStick
/// Size: 0x0048 (0x000338 - 0x000380)
class UAtlantaHudDirectionalStick : public UMobileBaseUserWidget
{ 
public:
	class UCanvasPanel*                                JoystickAnimationPanel;                                     // 0x0338   (0x0008)  
	class UCanvasPanel*                                ContainerToRotate;                                          // 0x0340   (0x0008)  
	class UCanvasPanel*                                ArrowsContainer;                                            // 0x0348   (0x0008)  
	class UImage*                                      JoystickLockImage;                                          // 0x0350   (0x0008)  
	class UImage*                                      JoystickOn;                                                 // 0x0358   (0x0008)  
	class UCanvasPanel*                                AutoRunContainer;                                           // 0x0360   (0x0008)  
	bool                                               _isMovementLockAnimationActive;                             // 0x0368   (0x0001)  
	unsigned char                                      UnknownData00_6[0x17];                                      // 0x0369   (0x0017)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaHudDirectionalStick.SetMovementLockAnimationStatus
	// void SetMovementLockAnimationStatus(bool value);                                                                      // [0x57c42e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AtlantaHudLookBackJoystick
/// Size: 0x0008 (0x000338 - 0x000340)
class UAtlantaHudLookBackJoystick : public UMobileBaseUserWidget
{ 
public:
	class UGridPanel*                                  TutorialAnimContainer;                                      // 0x0338   (0x0008)  
};

/// Class /Script/DeadByDaylight.AtlantaHudPowerAttackJoystick
/// Size: 0x0050 (0x000338 - 0x000388)
class UAtlantaHudPowerAttackJoystick : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	class UCanvasPanel*                                AnimationContainer;                                         // 0x0340   (0x0008)  
	FName                                              _availableAnimationName;                                    // 0x0348   (0x000C)  
	FName                                              _fadeOutAnimationName;                                      // 0x0354   (0x000C)  
	FName                                              _tutoStartAnimationName;                                    // 0x0360   (0x000C)  
	FName                                              _tutoLoopAnimationName;                                     // 0x036C   (0x000C)  
	class UImage*                                      Icon;                                                       // 0x0378   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0380   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaHudPowerAttackJoystick.OnFinishedTutorialAnimationIn
	// void OnFinishedTutorialAnimationIn();                                                                                 // [0x57c9520] Final|Native|Protected 
	// Function /Script/DeadByDaylight.AtlantaHudPowerAttackJoystick.OnFinishedAvailableAnimation
	// void OnFinishedAvailableAnimation();                                                                                  // [0x57c9500] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.LobbyLevel
/// Size: 0x0088 (0x000238 - 0x0002C0)
class ALobbyLevel : public ALevelScriptActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0238   (0x0048)  MISSED
	TArray<class ADisplayStand*>                       _registeredDisplayStands;                                   // 0x0280   (0x0010)  
	EWorldFlowEvent                                    LobbyLoadedEvent;                                           // 0x0290   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2F];                                      // 0x0291   (0x002F)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.LobbyLevel.OnShopSubLevelLoaded
	// void OnShopSubLevelLoaded();                                                                                          // [0x58add10] Final|Native|Private 
	// Function /Script/DeadByDaylight.LobbyLevel.OnLobbySubLevelLoaded
	// void OnLobbySubLevelLoaded();                                                                                         // [0x58adcd0] Final|Native|Private 
	// Function /Script/DeadByDaylight.LobbyLevel.OnAdditionalSubLevelsLoaded
	// void OnAdditionalSubLevelsLoaded();                                                                                   // [0x58adcb0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.AtlantaLobbyLevel
/// Size: 0x0040 (0x0002C0 - 0x000300)
class AAtlantaLobbyLevel : public ALobbyLevel
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x02C0   (0x0010)  MISSED
	FLightingChannels                                  ForefrontLightingChannel;                                   // 0x02D0   (0x0001)  
	FLightingChannels                                  BackgroundLightingChannel;                                  // 0x02D1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x02D2   (0x0006)  MISSED
	class AAtlantaOfflineLobbyCamera*                  _offlineLobbyCamera;                                        // 0x02D8   (0x0008)  
	class AActor*                                      _roleSelectionLobbyCameraPosition;                          // 0x02E0   (0x0008)  
	class AActor*                                      _characterSelectionLobbyCameraPosition;                     // 0x02E8   (0x0008)  
	class AActor*                                      _loadoutSelectionLobbyCameraPosition;                       // 0x02F0   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x02F8   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaLobbyLevel.OnFrontPawnSpawned
	// void OnFrontPawnSpawned(class AActor* forefrontPawn);                                                                 // [0x57c9540] Final|Native|Private 
	// Function /Script/DeadByDaylight.AtlantaLobbyLevel.OnBackPawnSpawned
	// void OnBackPawnSpawned(class AActor* backgroundPawn);                                                                 // [0x57c93c0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.AtlantaNavigationScreen
/// Size: 0x0008 (0x000120 - 0x000128)
class UAtlantaNavigationScreen : public UScreenBase
{ 
public:
	class UUMGAtlantaNavigationScreen*                 _umgScreen;                                                 // 0x0120   (0x0008)  
};

/// Class /Script/DeadByDaylight.AtlantaObjectiveWidget
/// Size: 0x0068 (0x000338 - 0x0003A0)
class UAtlantaObjectiveWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  ObjectiveLabel;                                             // 0x0338   (0x0008)  
	unsigned char                                      UnknownData00_5[0x54];                                      // 0x0340   (0x0054)  MISSED
	float                                              _totalFadeOutTime;                                          // 0x0394   (0x0004)  
	int32_t                                            _polynomialOrder;                                           // 0x0398   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x039C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.AtlantaOfflineLobbyCamera
/// Size: 0x0010 (0x0007C0 - 0x0007D0)
class AAtlantaOfflineLobbyCamera : public ACameraActor
{ 
public:
	float                                              ZCameraPositionOffsetMultiplier;                            // 0x07C0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x07C4   (0x0004)  MISSED
	float                                              _kDefaultAspectRatio;                                       // 0x07C8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x07CC   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaOfflineLobbyCamera.SetCameraRotation
	// void SetCameraRotation(FRotator rotationVector);                                                                      // [0x61d2f50] Event|Public|HasDefaults|BlueprintEvent 
	// Function /Script/DeadByDaylight.AtlantaOfflineLobbyCamera.SetCameraPosition
	// void SetCameraPosition(FVector positionVector);                                                                       // [0x61d2f50] Event|Public|HasDefaults|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.AtlantaPartyFlowHandler
/// Size: 0x0248 (0x000030 - 0x000278)
class UAtlantaPartyFlowHandler : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x248];                                     // 0x0030   (0x0248)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaPartyFlowHandler.DisplayPartyFlowHandlerInfo
	// void DisplayPartyFlowHandlerInfo();                                                                                   // [0x57c8de0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.AtlantaPartyFlowUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UAtlantaPartyFlowUtilities : public UObject
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaPartyFlowUtilities.IsCurrentPlayerInParty
	// bool IsCurrentPlayerInParty();                                                                                        // [0x57c92a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaPartyFlowUtilities.IsCurrentPlayerAloneInParty
	// bool IsCurrentPlayerAloneInParty();                                                                                   // [0x57c9270] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AtlantaInstalledContent
/// Size: 0x0020 (0x000030 - 0x000050)
class UAtlantaInstalledContent : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0030   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaInstalledContent.Mount
	// bool Mount(int32_t PakOrder, FString MountPoint);                                                                     // [0x57c92d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaInstalledContent.GetInstalledContentSize
	// float GetInstalledContentSize();                                                                                      // [0x57c90e0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaInstalledContent.GetFreeDiskSpace
	// float GetFreeDiskSpace();                                                                                             // [0x57c8f80] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.AtlantaPendingContent
/// Size: 0x0040 (0x000050 - 0x000090)
class UAtlantaPendingContent : public UAtlantaInstalledContent
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x0050   (0x0040)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaPendingContent.StartInstall
	// void StartInstall(FDelegateProperty OnSucceeded, FDelegateProperty OnFailed);                                         // [0x57c9970] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaPendingContent.GetTotalDownloadedSize
	// float GetTotalDownloadedSize();                                                                                       // [0x57c91f0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaPendingContent.GetRequiredDiskSpace
	// float GetRequiredDiskSpace();                                                                                         // [0x57c9140] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaPendingContent.GetIsDownloading
	// bool GetIsDownloading();                                                                                              // [0x57c9110] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaPendingContent.GetInstallProgress
	// float GetInstallProgress();                                                                                           // [0x57c8fb0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaPendingContent.GetDownloadStatusText
	// FText GetDownloadStatusText();                                                                                        // [0x57c8ee0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaPendingContent.GetDownloadSpeed
	// float GetDownloadSpeed();                                                                                             // [0x57c8eb0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaPendingContent.GetDownloadSize
	// float GetDownloadSize();                                                                                              // [0x57c8e80] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.AtlantaPatchingLibrary
/// Size: 0x0000 (0x000030 - 0x000030)
class UAtlantaPatchingLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaPatchingLibrary.RequestContent
	// void RequestContent(FString RemoteManifestURL, FString CloudURL, FString InstallDirectory, FDelegateProperty OnSucceeded, FDelegateProperty OnFailed, class UAtlantaPendingContent* MobilePendingContent); // [0x57c9610] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaPatchingLibrary.PrintPakLocations
	// void PrintPakLocations();                                                                                             // [0x57c95f0] Final|Native|Static|Public 
	// Function /Script/DeadByDaylight.AtlantaPatchingLibrary.HasActiveWiFiConnection
	// bool HasActiveWiFiConnection();                                                                                       // [0x57c9220] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaPatchingLibrary.GetSupportedPlatformNames
	// TArray<FString> GetSupportedPlatformNames();                                                                          // [0x57c9170] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaPatchingLibrary.GetInstalledContent
	// class UAtlantaInstalledContent* GetInstalledContent(FString InstallDirectory, FString ManifestFilename);              // [0x57c8fe0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaPatchingLibrary.GetActiveDeviceProfileName
	// FString GetActiveDeviceProfileName();                                                                                 // [0x57c8e00] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.AtlantaPromptWidget
/// Size: 0x0068 (0x000338 - 0x0003A0)
class UAtlantaPromptWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  PromptLabel;                                                // 0x0338   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0340   (0x0010)  MISSED
	SDK_UNDEFINED(80,1815) /* TMap<EPromptType, FString> */ __um(AudioCues);                                       // 0x0350   (0x0050)  
};

/// Class /Script/DeadByDaylight.AtlantaRitualsManager
/// Size: 0x0098 (0x000030 - 0x0000C8)
class UAtlantaRitualsManager : public UObject
{ 
public:
	SDK_UNDEFINED(8,1816) /* TWeakObjectPtr<UDBDGameInstance*> */ __um(_gameInstance);                             // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_6[0x90];                                      // 0x0038   (0x0090)  MISSED
};

/// Class /Script/DeadByDaylight.AtlantaRitualsScreen
/// Size: 0x0068 (0x000120 - 0x000188)
class UAtlantaRitualsScreen : public UScreenBase
{ 
public:
	class UUMGAtlantaRitualsScreen*                    _umgScreen;                                                 // 0x0120   (0x0008)  
	unsigned char                                      UnknownData00_6[0x60];                                      // 0x0128   (0x0060)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaRitualsScreen.OnRefreshRitual
	// void OnRefreshRitual();                                                                                               // [0x57c95d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.AtlantaRitualsScreen.OnExitRequested
	// void OnExitRequested();                                                                                               // [0x57c94e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.AtlantaRitualsScreen.OnClaimRewards
	// void OnClaimRewards(int32_t ritualId);                                                                                // [0x57c9450] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.AtlantaRoleSelectionScreen
/// Size: 0x0008 (0x000120 - 0x000128)
class UAtlantaRoleSelectionScreen : public UScreenBase
{ 
public:
	class UUMGRoleSelectionScreen*                     _umgScreen;                                                 // 0x0120   (0x0008)  
};

/// Class /Script/DeadByDaylight.AtlantaSaveGame
/// Size: 0x0030 (0x000030 - 0x000060)
class UAtlantaSaveGame : public USaveGame
{ 
public:
	SDK_UNDEFINED(16,1817) /* FString */               __um(SaveSlotName);                                         // 0x0030   (0x0010)  
	uint32_t                                           UserIndex;                                                  // 0x0040   (0x0004)  
	FName                                              LastGenericLoadingImageId;                                  // 0x0044   (0x000C)  
	FName                                              LastSpecificLoadingImageId;                                 // 0x0050   (0x000C)  
	bool                                               IsLastSpecificImage;                                        // 0x005C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x005D   (0x0003)  MISSED
};

/// Class /Script/DeadByDaylight.AtlantaSkillCheckWidget
/// Size: 0x0090 (0x000338 - 0x0003C8)
class UAtlantaSkillCheckWidget : public UMobileBaseUserWidget
{ 
public:
	class UCanvasPanel*                                SkillCheckArea;                                             // 0x0338   (0x0008)  
	class UImage*                                      HitArea;                                                    // 0x0340   (0x0008)  
	class UImage*                                      Hit;                                                        // 0x0348   (0x0008)  
	class UImage*                                      OrangeSmoke;                                                // 0x0350   (0x0008)  
	class UImage*                                      BonusArea;                                                  // 0x0358   (0x0008)  
	class UImage*                                      StartMarker;                                                // 0x0360   (0x0008)  
	class UImage*                                      EndMarker;                                                  // 0x0368   (0x0008)  
	class UCanvasPanel*                                HitAreaContainer;                                           // 0x0370   (0x0008)  
	class UCanvasPanel*                                BonusAreaContainer;                                         // 0x0378   (0x0008)  
	class UCanvasPanel*                                HitAreaStartMarkerContainer;                                // 0x0380   (0x0008)  
	class UCanvasPanel*                                HitAreaEndMarkerContainer;                                  // 0x0388   (0x0008)  
	class UCanvasPanel*                                MarkerContainer;                                            // 0x0390   (0x0008)  
	FLinearColor                                       HexColor;                                                   // 0x0398   (0x0010)  
	FLinearColor                                       DefaultColor;                                               // 0x03A8   (0x0010)  
	bool                                               _isPlayAnimation;                                           // 0x03B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x03B9   (0x0003)  MISSED
	float                                              PathCoveredAngle;                                           // 0x03BC   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x03C0   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaSkillCheckWidget.SetHexed
	// void SetHexed(bool IsHexed);                                                                                          // [0x57c98e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaSkillCheckWidget.SetActive
	// void SetActive(bool Active);                                                                                          // [0x57c9850] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaSkillCheckWidget.OnIsActiveChanged
	// void OnIsActiveChanged(bool IsActive);                                                                                // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.AtlantaSkillCheckWidget.IsActive
	// bool IsActive();                                                                                                      // [0x57c9250] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.AtlantaTooltipManager
/// Size: 0x0038 (0x000030 - 0x000068)
class UAtlantaTooltipManager : public UObject
{ 
public:
	class UBaseTooltipWidget*                          _activeTooltip;                                             // 0x0030   (0x0008)  
	class UUMGCloseTooltipWidget*                      _closeTooltipWidget;                                        // 0x0038   (0x0008)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0040   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaTooltipManager.TryCloseActiveTooltipWithWidget
	// void TryCloseActiveTooltipWithWidget();                                                                               // [0x57cec50] Final|Native|Private 
	// Function /Script/DeadByDaylight.AtlantaTooltipManager.TryCloseActiveTooltip
	// bool TryCloseActiveTooltip();                                                                                         // [0x57cebf0] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.AtlantaTooltipUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UAtlantaTooltipUtilities : public UObject
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaTooltipUtilities.TryCloseActiveTooltip
	// bool TryCloseActiveTooltip();                                                                                         // [0x57cec20] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.TutorialLevel
/// Size: 0x0040 (0x000238 - 0x000278)
class ATutorialLevel : public ALevelScriptActor
{ 
public:
	bool                                               _tutorialStarted;                                           // 0x0238   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3F];                                      // 0x0239   (0x003F)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TutorialLevel.StartTutorial
	// void StartTutorial();                                                                                                 // [0x592b820] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialLevel.SetHandledTutorialStep
	// void SetHandledTutorialStep(ETutorialStep tutorialStep);                                                              // [0x592b420] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialLevel.RemoveObjective
	// void RemoveObjective(FName ObjectiveId);                                                                              // [0x592aee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialLevel.OnTutorialStepUpdated
	// void OnTutorialStepUpdated(ETutorialStep tutorialStep);                                                               // [0x592ae40] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TutorialLevel.OnNotificationDismissed
	// void OnNotificationDismissed(FName notificationId);                                                                   // [0x592ada0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TutorialLevel.HandleTutorialStepReached
	// void HandleTutorialStepReached();                                                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.TutorialLevel.HandleNotificationDismissed
	// void HandleNotificationDismissed(FName notificationId);                                                               // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.TutorialLevel.DisplayNotification
	// void DisplayNotification(FName notificationId, float Time);                                                           // [0x592a6e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialLevel.DisplayBlockingNotification
	// void DisplayBlockingNotification(FName notificationId);                                                               // [0x592a640] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialLevel.CompleteObjective
	// void CompleteObjective(FName ObjectiveId);                                                                            // [0x592a430] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialLevel.AddObjective
	// void AddObjective(FName ObjectiveId);                                                                                 // [0x592a2d0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AtlantaTutorialLevel
/// Size: 0x00B0 (0x000278 - 0x000328)
class AAtlantaTutorialLevel : public ATutorialLevel
{ 
public:
	unsigned char                                      UnknownData00_1[0xB0];                                      // 0x0278   (0x00B0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaTutorialLevel.StartCameraFadeIn
	// void StartCameraFadeIn();                                                                                             // [0x57cebd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaTutorialLevel.SetTutorialElements
	// void SetTutorialElements();                                                                                           // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.AtlantaTutorialLevel.SetTutorialElement
	// void SetTutorialElement(FString elementKey, class AActor* elementToSet);                                              // [0x57ce3c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaTutorialLevel.SetLocallyControlledPlayer
	// void SetLocallyControlledPlayer(class ADBDPlayer* locallyControllerPlayer);                                           // [0x57ce330] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaTutorialLevel.SetAIEscapePoints
	// void SetAIEscapePoints(TArray<AActor*> escapePoints);                                                                 // [0x57cdc50] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaTutorialLevel.OnTutorialStarted
	// void OnTutorialStarted();                                                                                             // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.AtlantaTutorialLevel.OnTriggerBeginOverlapActor
	// void OnTriggerBeginOverlapActor(FString triggerID, class AActor* overlappingActor);                                   // [0x57cda50] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaTutorialLevel.IsActorInLineOfSight
	// bool IsActorInLineOfSight(class ADBDAIPlayerController* aiPlayerController, class APlayerController* PlayerController); // [0x57cd4f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaTutorialLevel.HandleCanStartTutorialChanged
	// void HandleCanStartTutorialChanged(bool canStartTutorial);                                                            // [0x57cd3e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.AtlantaTutorialLevel.GetTutorialElement
	// class AActor* GetTutorialElement(FString elementKey);                                                                 // [0x57cd330] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.AtlantaTutorialObjectiveManager
/// Size: 0x0020 (0x000030 - 0x000050)
class UAtlantaTutorialObjectiveManager : public UObject
{ 
public:
	TArray<class UAtlantaObjectiveWidget*>             _objectivesList;                                            // 0x0030   (0x0010)  
	class UVerticalBox*                                _objectivesContainer;                                       // 0x0040   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0048   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.AtlantaTutorialPlayerHudController
/// Size: 0x0048 (0x000030 - 0x000078)
class UAtlantaTutorialPlayerHudController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0030   (0x0048)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaTutorialPlayerHudController.ShowHudComponent
	// void ShowHudComponent(EHudComponent hudComponentToShow);                                                              // [0x57ceb50] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaTutorialPlayerHudController.SetVirtualJoystickInputEnabled
	// void SetVirtualJoystickInputEnabled(bool enable);                                                                     // [0x57ce4f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaTutorialPlayerHudController.HideHudComponent
	// void HideHudComponent(EHudComponent hudComponentToHide);                                                              // [0x57cd470] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.StateMachine
/// Size: 0x0078 (0x0000B8 - 0x000130)
class UStateMachine : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x9];                                       // 0x00B8   (0x0009)  MISSED
	bool                                               _enableJoinInProgress;                                      // 0x00C1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x56];                                      // 0x00C2   (0x0056)  MISSED
	TArray<uint16_t>                                   _netStateIDStackInitial;                                    // 0x0118   (0x0010)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0128   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.StateMachine.Server_SetStateStack
	// void Server_SetStateStack(TArray<uint16_t> netStateIDStack);                                                          // [0x590c8e0] Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.StateMachine.NetIDStackChanged
	// void NetIDStackChanged();                                                                                             // [0x590c510] Final|Native|Private 
	// Function /Script/DeadByDaylight.StateMachine.Multicast_SetStateStack
	// void Multicast_SetStateStack(TArray<uint16_t> netStateIDStack);                                                       // [0x590c450] Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate 
};

/// Class /Script/DeadByDaylight.AtlantaTutorialStateMachine
/// Size: 0x0000 (0x000130 - 0x000130)
class UAtlantaTutorialStateMachine : public UStateMachine
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaTutorialStateMachine.OnBlockingNotificationDismissed
	// void OnBlockingNotificationDismissed(FName blockingNotificationID);                                                   // [0x57cd9b0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.AtlantaUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UAtlantaUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseQuickRoleSwitch
	// bool ShouldUseQuickRoleSwitch();                                                                                      // [0x57ceb20] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseOfflineMatchHistory
	// bool ShouldUseOfflineMatchHistory();                                                                                  // [0x57ceaf0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaUI
	// bool ShouldUseAtlantaUI();                                                                                            // [0x57ceac0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaStreamVideo
	// bool ShouldUseAtlantaStreamVideo();                                                                                   // [0x57cea90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaRituals
	// bool ShouldUseAtlantaRituals();                                                                                       // [0x57cea60] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaRank
	// bool ShouldUseAtlantaRank();                                                                                          // [0x57cea30] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaQualitySettings
	// bool ShouldUseAtlantaQualitySettings();                                                                               // [0x57cea00] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaPurchasableOperations
	// bool ShouldUseAtlantaPurchasableOperations();                                                                         // [0x57ce9d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaOutlines
	// bool ShouldUseAtlantaOutlines();                                                                                      // [0x57ce9a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaMatchmaking
	// bool ShouldUseAtlantaMatchmaking();                                                                                   // [0x57ce970] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaLighting
	// bool ShouldUseAtlantaLighting();                                                                                      // [0x57ce940] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaKrakenContentVersion
	// bool ShouldUseAtlantaKrakenContentVersion();                                                                          // [0x57ce910] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaItemAvailability
	// bool ShouldUseAtlantaItemAvailability();                                                                              // [0x57ce8e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaHudEditor
	// bool ShouldUseAtlantaHudEditor();                                                                                     // [0x4aa0b70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaHudAttackJoystick
	// bool ShouldUseAtlantaHudAttackJoystick();                                                                             // [0x4aa0b70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaGameplayValues
	// bool ShouldUseAtlantaGameplayValues();                                                                                // [0x57ce8b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaFriendList
	// bool ShouldUseAtlantaFriendList();                                                                                    // [0x57ce880] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaFreeTickets
	// bool ShouldUseAtlantaFreeTickets();                                                                                   // [0x57ce850] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaFixedMaps
	// bool ShouldUseAtlantaFixedMaps();                                                                                     // [0x57ce820] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaFearMarket
	// bool ShouldUseAtlantaFearMarket();                                                                                    // [0x57ce7f0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaEntity
	// bool ShouldUseAtlantaEntity();                                                                                        // [0x57ce7c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaDreamworldFX
	// bool ShouldUseAtlantaDreamworldFX();                                                                                  // [0x57ce790] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaDailyRewards
	// bool ShouldUseAtlantaDailyRewards();                                                                                  // [0x57ce760] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCustomizedHudSettings
	// bool ShouldUseAtlantaCustomizedHudSettings();                                                                         // [0x57ce730] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCurrencies
	// bool ShouldUseAtlantaCurrencies();                                                                                    // [0x57ce700] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaContent
	// bool ShouldUseAtlantaContent();                                                                                       // [0x57ce6d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCharacterProgression
	// bool ShouldUseAtlantaCharacterProgression();                                                                          // [0x57ce6a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCDNPatching
	// bool ShouldUseAtlantaCDNPatching();                                                                                   // [0x57ce640] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCDNBucketChangelist
	// bool ShouldUseAtlantaCDNBucketChangelist();                                                                           // [0x57ce610] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCatalog
	// bool ShouldUseAtlantaCatalog();                                                                                       // [0x57ce670] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaBundleFilterRules
	// bool ShouldUseAtlantaBundleFilterRules();                                                                             // [0x4aa0b70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaBloodweb
	// bool ShouldUseAtlantaBloodweb();                                                                                      // [0x57ce5e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaBackendBloodMarketData
	// bool ShouldUseAtlantaBackendBloodMarketData();                                                                        // [0x57ce5b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.ShouldSupportMultipleActiveActivatablePerks
	// bool ShouldSupportMultipleActiveActivatablePerks();                                                                   // [0x57ce580] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.SetImageSlateBrush
	// bool SetImageSlateBrush(class UImage* Image, FSlateBrush& Brush, bool bMatchSize);                                    // [0x57ce180] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaUtilities.SetImageBrushFromSpritePath
	// void SetImageBrushFromSpritePath(class UImage* Image, FString Path);                                                  // [0x57ce0b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaUtilities.SetImageBrushFromPath
	// void SetImageBrushFromPath(class UImage* Image, FString Path, bool bMatchSize);                                       // [0x57cdf90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaUtilities.SetImageBrush
	// void SetImageBrush(class UImage* Image, class UTexture2D* Asset, bool bMatchSize);                                    // [0x57cde90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaUtilities.SetButtonStyle
	// void SetButtonStyle(class UButton* Button, FSlateBrush& Brush);                                                       // [0x57cdd40] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaUtilities.SecondsToStringWithoutDecimals
	// FString SecondsToStringWithoutDecimals(int32_t Seconds);                                                              // [0x57cdb80] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.MakeBrushFromTexture
	// FSlateBrush MakeBrushFromTexture(class UTexture2D* Texture);                                                          // [0x57cd8a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaUtilities.MakeBrushFromSprite
	// FSlateBrush MakeBrushFromSprite(class UPaperSprite* Sprite);                                                          // [0x57cd790] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaUtilities.LoadTextureByAsset
	// class UTexture2D* LoadTextureByAsset(FString Path);                                                                   // [0x57cd6f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaUtilities.IsTutorialEditorDebuggingEnabled
	// bool IsTutorialEditorDebuggingEnabled();                                                                              // [0x57cd6c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.IsPlayerInteractingWithActor
	// bool IsPlayerInteractingWithActor(class ADBDPlayer* Player, class AActor* Actor);                                     // [0x57cd5f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaUtilities.IsInAtlantaTutorialLevel
	// bool IsInAtlantaTutorialLevel();                                                                                      // [0x57cd5c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetStoreVersion
	// FString GetStoreVersion();                                                                                            // [0x57cd2b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetSpriteFromPath
	// class UPaperSprite* GetSpriteFromPath(FString fullDbPathToImage, FString constantDbPathToImageFolder, FString constantPathToSpriteFolder); // [0x57cd160] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetSpriteFromFullPath
	// class UPaperSprite* GetSpriteFromFullPath(FString fullSpritePath);                                                    // [0x57cd0c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetPlayerRoleTextUppercase
	// FText GetPlayerRoleTextUppercase(EPlayerRole PlayerRole);                                                             // [0x57ccfe0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetPlayerRoleText
	// FText GetPlayerRoleText(EPlayerRole PlayerRole);                                                                      // [0x57ccf00] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetPaintColorByRarity
	// FColor GetPaintColorByRarity(EItemRarity Rarity);                                                                     // [0x57cce70] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetOfferingCategoryText
	// FText GetOfferingCategoryText(EOfferingCategory OfferingCategory);                                                    // [0x57ccd90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetMapSpriteFromPath
	// class UPaperSprite* GetMapSpriteFromPath(FString mapSpritePath);                                                      // [0x57cccf0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetItemRarityText
	// FText GetItemRarityText(EItemRarity Rarity);                                                                          // [0x57ccc10] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetItemAvailabilityText
	// FText GetItemAvailabilityText(EItemAvailability Availability);                                                        // [0x57ccb30] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetIconImageByPath
	// class UTexture2D* GetIconImageByPath(FString IconPath);                                                               // [0x57cca90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetEmblemQualityText
	// FText GetEmblemQualityText(EEmblemQuality EmblemQuality);                                                             // [0x57cc9b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetEmblemColorByQuality
	// FColor GetEmblemColorByQuality(EEmblemQuality EmblemQuality);                                                         // [0x57cc920] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetDifficultyLevelText
	// FText GetDifficultyLevelText(EAIDifficultyLevel difficultyLevel);                                                     // [0x57cc840] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetCurrentOrAvailableInteractionOfType
	// class UInteractionDefinition* GetCurrentOrAvailableInteractionOfType(class ADBDPlayer* Player, EInputInteractionType interactionInputType); // [0x57cc770] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetCurrentInteractionOfType
	// class UInteractionDefinition* GetCurrentInteractionOfType(class ADBDPlayer* Player, EInputInteractionType interactionInputType); // [0x57cc6a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetCurrentInteraction
	// class UInteractionDefinition* GetCurrentInteraction(class ADBDPlayer* Player);                                        // [0x57cc610] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetCurrencyUITexturePath
	// FString GetCurrencyUITexturePath(ECurrencyType CurrencyType);                                                         // [0x57cc540] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetCurrencyColor
	// FSlateColor GetCurrencyColor(ECurrencyType CurrencyType);                                                             // [0x57cc480] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetControlsTunableByRole
	// float GetControlsTunableByRole(EPlayerRole PlayerRole, FName tunableValueName);                                       // [0x57cc390] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetControlsTunable
	// float GetControlsTunable(FName tunableValueName);                                                                     // [0x57cc2f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetBackgroundColorByRarity
	// FColor GetBackgroundColorByRarity(EItemRarity Rarity);                                                                // [0x57cc260] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetAvailableInteractionOfType
	// class UInteractionDefinition* GetAvailableInteractionOfType(class ADBDPlayer* Player, EInputInteractionType interactionInputType); // [0x57cc190] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.AtlantaUtilities.GetAlantaInteractionDescriptionText
	// FText GetAlantaInteractionDescriptionText(class UInteractionDefinition* Interaction);                                 // [0x57cc0a0] Final|Native|Static|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.AtlCookedMapDescription
/// Size: 0x0040 (0x000000 - 0x000040)
struct FAtlCookedMapDescription
{ 
	FName                                              ThemeName;                                                  // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(48,1818) /* TWeakObjectPtr<UWorld*> */ __um(MapAsset);                                           // 0x0010   (0x0030)  
};

/// Class /Script/DeadByDaylight.AtlCookedMaps
/// Size: 0x0010 (0x000038 - 0x000048)
class UAtlCookedMaps : public UPrimaryDataAsset
{ 
public:
	TArray<FAtlCookedMapDescription>                   Descriptions;                                               // 0x0038   (0x0010)  
};

/// Class /Script/DeadByDaylight.AttackTypeEventComponent
/// Size: 0x0018 (0x0000B8 - 0x0000D0)
class UAttackTypeEventComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00B8   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.AudioFXComponent
/// Size: 0x0070 (0x0000B8 - 0x000128)
class UAudioFXComponent : public UActorComponent
{ 
public:
	class UPrimitiveComponent*                         _audioAmbientDetector;                                      // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x68];                                      // 0x00C0   (0x0068)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AudioFXComponent.SetAudioAmbientDetector
	// void SetAudioAmbientDetector(class UPrimitiveComponent* audioAmbientDetector);                                        // [0x57d4740] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AudioFXComponent.OnLocallyObservedChanged
	// void OnLocallyObservedChanged(bool locallyObserved);                                                                  // [0x57d4220] Final|Native|Private 
	// Function /Script/DeadByDaylight.AudioFXComponent.OnDeafenCompleted
	// void OnDeafenCompleted();                                                                                             // [0x57d4200] Final|Native|Private 
	// Function /Script/DeadByDaylight.AudioFXComponent.Multicast_Deafen
	// void Multicast_Deafen(float Duration);                                                                                // [0x57d3f50] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.AudioFXComponent.Authority_Deafen
	// void Authority_Deafen(float Duration);                                                                                // [0x57d3bc0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AudioMultipleEmitterActor
/// Size: 0x0018 (0x000230 - 0x000248)
class AAudioMultipleEmitterActor : public AActor
{ 
public:
	class UAudioMultipleEmitterComponent*              AudioMultiEmitter;                                          // 0x0230   (0x0008)  
	TArray<class AActor*>                              EmitterActors;                                              // 0x0238   (0x0010)  
};

/// Class /Script/DeadByDaylight.AudioMultipleEmitterComponent
/// Size: 0x0010 (0x000480 - 0x000490)
class UAudioMultipleEmitterComponent : public UAkComponent
{ 
public:
	TArray<class UActorComponent*>                     EmitterActorsComponents;                                    // 0x0478   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0488   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.AuthoritativeMovementComponent
/// Size: 0x0060 (0x0000B8 - 0x000118)
class UAuthoritativeMovementComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x00B8   (0x0010)  MISSED
	TArray<class ACharacter*>                          _charactersToPush;                                          // 0x00C8   (0x0010)  
	TArray<class ACharacter*>                          _stopIgnoreCharacterOnEndOverlap;                           // 0x00D8   (0x0010)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x00E8   (0x0008)  MISSED
	class UCapsuleComponent*                           _pawnDetector;                                              // 0x00F0   (0x0008)  
	TArray<class ACharacter*>                          _authoritativeIgnoreOverlapCharacters;                      // 0x00F8   (0x0010)  
	TArray<class ACharacter*>                          _previousAuthoritativeIgnoreOverlapCharacters;              // 0x0108   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.AuthoritativeMovementComponent.SetPawnDetector
	// void SetPawnDetector(class UCapsuleComponent* pawnDetector);                                                          // [0x57d47d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AuthoritativeMovementComponent.OnRep_AuthoritativeIgnoreOverlapCharacters
	// void OnRep_AuthoritativeIgnoreOverlapCharacters();                                                                    // [0x57d4630] Final|Native|Private 
	// Function /Script/DeadByDaylight.AuthoritativeMovementComponent.OnPawnDetectorOverlapExit
	// void OnPawnDetectorOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x57d44d0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.AuthoritativeMovementComponent.OnPawnDetectorOverlapEnter
	// void OnPawnDetectorOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x57d42b0] Final|Native|Protected|HasOutParms 
};

/// Class /Script/DeadByDaylight.AutomaticLeanComponent
/// Size: 0x02B8 (0x0000B8 - 0x000370)
class UAutomaticLeanComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1819) /* FMulticastInlineDelegate */ __um(OnLeanStateChanged);                                // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,1820) /* FMulticastInlineDelegate */ __um(OnPotentialLeanStateChanged);                       // 0x00C8   (0x0010)  
	SDK_UNDEFINED(16,1821) /* FMulticastInlineDelegate */ __um(OnCanInitiateLeanChanged);                          // 0x00D8   (0x0010)  
	FSocketOrBoneCache                                 _cameraIdleLocation;                                        // 0x00E8   (0x0060)  
	FSocketOrBoneCache                                 _cameraLeftLeanLocation;                                    // 0x0148   (0x0060)  
	FSocketOrBoneCache                                 _cameraRightLeanLocation;                                   // 0x01A8   (0x0060)  
	FSocketOrBoneCache                                 _cameraCrouchLocation;                                      // 0x0208   (0x0060)  
	FSocketOrBoneCache                                 _cameraCrouchLeftLeanLocation;                              // 0x0268   (0x0060)  
	FSocketOrBoneCache                                 _cameraCrouchRightLeanLocation;                             // 0x02C8   (0x0060)  
	float                                              _middleSphereTraceLength;                                   // 0x0328   (0x0004)  
	float                                              _sideSphereTraceLength;                                     // 0x032C   (0x0004)  
	float                                              _sphereTraceRadius;                                         // 0x0330   (0x0004)  
	float                                              _standingTraceHeightOffset;                                 // 0x0334   (0x0004)  
	float                                              _crouchingTraceHeightOffset;                                // 0x0338   (0x0004)  
	float                                              _sideTraceOffset;                                           // 0x033C   (0x0004)  
	float                                              _maxCameraDistance;                                         // 0x0340   (0x0004)  
	float                                              _maxCameraAngle;                                            // 0x0344   (0x0004)  
	bool                                               _debugMode;                                                 // 0x0348   (0x0001)  
	ELeanState                                         _leanState;                                                 // 0x0349   (0x0001)  
	unsigned char                                      UnknownData00_6[0x26];                                      // 0x034A   (0x0026)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.Server_SetLeanState
	// void Server_SetLeanState(ELeanState leanState);                                                                       // [0x57d4690] Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.OnRep_LeanState
	// void OnRep_LeanState();                                                                                               // [0x57d4650] Final|Native|Private 
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.OnPotentialLeanStateChanged__DelegateSignature
	// void OnPotentialLeanStateChanged__DelegateSignature(ELeanState leanState);                                            // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.OnLeanStateChanged__DelegateSignature
	// void OnLeanStateChanged__DelegateSignature(ELeanState leanState);                                                     // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.OnCanInitiateLeanChanged__DelegateSignature
	// void OnCanInitiateLeanChanged__DelegateSignature(bool canInitiate);                                                   // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.Local_Unlean
	// void Local_Unlean();                                                                                                  // [0x57d3f30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.Local_Lean
	// void Local_Lean();                                                                                                    // [0x57d3f10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.IsLeaning
	// bool IsLeaning();                                                                                                     // [0x57d3ee0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.GetPotentialLeanState
	// ELeanState GetPotentialLeanState();                                                                                   // [0x57d3ec0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.GetLeanState
	// ELeanState GetLeanState();                                                                                            // [0x57d3ea0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.GetAvailableDistanceInFrontOfCamera
	// float GetAvailableDistanceInFrontOfCamera();                                                                          // [0x57d3c70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.AutomaticLeanComponent.CanInitiateLean
	// bool CanInitiateLean();                                                                                               // [0x57d3c40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.AutoQualityAdjuster
/// Size: 0x0028 (0x000230 - 0x000258)
class AAutoQualityAdjuster : public AActor
{ 
public:
	float                                              TargetResolutionScale;                                      // 0x0230   (0x0004)  
	float                                              MinimumMS;                                                  // 0x0234   (0x0004)  
	float                                              MaximumMS;                                                  // 0x0238   (0x0004)  
	float                                              ScaleIncreaseRate;                                          // 0x023C   (0x0004)  
	float                                              ScaleDecreaseRate;                                          // 0x0240   (0x0004)  
	float                                              MinimumAllowableScale;                                      // 0x0244   (0x0004)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0248   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.BaseBloodwebContentAdapter
/// Size: 0x0030 (0x000030 - 0x000060)
class UBaseBloodwebContentAdapter : public UObject
{ 
public:
	class UBloodwebTunables*                           _bloodwebTunables;                                          // 0x0030   (0x0008)  
	class UBloodwebEntity*                             _entity;                                                    // 0x0038   (0x0008)  
	SDK_UNDEFINED(16,1822) /* TScriptInterface<Class> */ __um(_bloodwebDefinition);                                // 0x0040   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0050   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.BackendBloodwebContentAdapter
/// Size: 0x00B8 (0x000060 - 0x000118)
class UBackendBloodwebContentAdapter : public UBaseBloodwebContentAdapter
{ 
public:
	unsigned char                                      UnknownData00_2[0xB0];                                      // 0x0060   (0x00B0)  MISSED
	class UBloodwebGenerator*                          _bloodwebBuilder;                                           // 0x0110   (0x0008)  
};

/// Class /Script/DeadByDaylight.BackendCinematicContainer
/// Size: 0x00C0 (0x000030 - 0x0000F0)
class UBackendCinematicContainer : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xC0];                                      // 0x0030   (0x00C0)  MISSED
};

/// Class /Script/DeadByDaylight.BackendInventory
/// Size: 0x00F0 (0x000038 - 0x000128)
class UBackendInventory : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0xF0];                                      // 0x0038   (0x00F0)  MISSED
};

/// Class /Script/DeadByDaylight.BackendLoadoutManager
/// Size: 0x00A0 (0x000038 - 0x0000D8)
class UBackendLoadoutManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x0038   (0x00A0)  MISSED
};

/// Class /Script/DeadByDaylight.BannerDataProcessor
/// Size: 0x0050 (0x000030 - 0x000080)
class UBannerDataProcessor : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0030   (0x0050)  MISSED
};

/// Class /Script/DeadByDaylight.BaseCameraTargetingStrategy
/// Size: 0x0020 (0x000030 - 0x000050)
class UBaseCameraTargetingStrategy : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0030   (0x0008)  MISSED
	float                                              _maxFreeAngle;                                              // 0x0038   (0x0004)  
	float                                              _maxInputRotation;                                          // 0x003C   (0x0004)  
	float                                              _interpolationSpeed;                                        // 0x0040   (0x0004)  
	float                                              _interpolationSpeedOutsideFreeMoveZone;                     // 0x0044   (0x0004)  
	class AActor*                                      _target;                                                    // 0x0048   (0x0008)  
};

/// Class /Script/DeadByDaylight.BaseEscapeThroughHatch
/// Size: 0x0000 (0x000650 - 0x000650)
class UBaseEscapeThroughHatch : public UInteractionDefinition
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.BaseEscapeThroughHatch.GetHatch
	// class AHatch* GetHatch();                                                                                             // [0x57d3d30] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.BaseHitValidationConfigurator
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UBaseHitValidationConfigurator : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00B8   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.BaseIndicatorWidget
/// Size: 0x0048 (0x000338 - 0x000380)
class UBaseIndicatorWidget : public UMobileBaseUserWidget
{ 
public:
	class UCanvasPanel*                                _safeZonePanel;                                             // 0x0338   (0x0008)  
	class UCanvasPanelSlot*                            _canvasPanelSlot;                                           // 0x0340   (0x0008)  
	float                                              RadiusMultiplier;                                           // 0x0348   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x034C   (0x0004)  MISSED
	class UCanvasPanel*                                IndicatorPanel;                                             // 0x0350   (0x0008)  
	class UCanvasPanel*                                Indicator;                                                  // 0x0358   (0x0008)  
	class UImage*                                      ArrowImage;                                                 // 0x0360   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0368   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.BaseIndicatorWidget.OnOutAnimationFinished
	// void OnOutAnimationFinished();                                                                                        // [0x4b94bd0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.KillerProjectile
/// Size: 0x0080 (0x0002B8 - 0x000338)
class AKillerProjectile : public APhysicsBasedProjectile
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x02B8   (0x0048)  MISSED
	FGameplayTag                                       _killerProjectileAttemptGameEventTag;                       // 0x0300   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x030C   (0x0004)  MISSED
	class UHitValidatorConfigurator*                   _hitValidatorConfigurator;                                  // 0x0310   (0x0008)  
	class UHitValidatorComponent*                      _hitValidatorComponent;                                     // 0x0318   (0x0008)  
	EHitValidatorConfigName                            _hitValidationConfigName;                                   // 0x0320   (0x0001)  
	unsigned char                                      UnknownData02_6[0x17];                                      // 0x0321   (0x0017)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.KillerProjectile.SetActiveSlashable
	// void SetActiveSlashable(bool Active);                                                                                 // [0x58a6670] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.KillerProjectile.GetPlayerPrimitiveComponent
	// class UPrimitiveComponent* GetPlayerPrimitiveComponent();                                                             // [0x58a6010] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.KillerProjectile.GetLaunchingKiller
	// class ASlasherPlayer* GetLaunchingKiller();                                                                           // [0x58a5f80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.BaseLinkedVomitProjectile
/// Size: 0x0070 (0x000338 - 0x0003A8)
class ABaseLinkedVomitProjectile : public AKillerProjectile
{ 
public:
	bool                                               _useSplashDamage;                                           // 0x0338   (0x0001)  
	bool                                               _passThroughSurvivors;                                      // 0x0339   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x033A   (0x0006)  MISSED
	class UPoolableProjectileComponent*                _poolableProjectile;                                        // 0x0340   (0x0008)  
	SDK_UNDEFINED(16,1823) /* FMulticastInlineDelegate */ __um(OnDeactivateOrLaunch);                              // 0x0348   (0x0010)  
	class UParticleSystemComponent*                    _vomitTrail;                                                // 0x0358   (0x0008)  
	class USplineMeshComponent*                        _splineMesh;                                                // 0x0360   (0x0008)  
	class USphereComponent*                            _splashDamageSphere;                                        // 0x0368   (0x0008)  
	class UAkComponent*                                _akAudioVomitProjectile;                                    // 0x0370   (0x0008)  
	class UParticleSystem*                             _vomitSplashCamper;                                         // 0x0378   (0x0008)  
	class UParticleSystem*                             _vomitSplash;                                               // 0x0380   (0x0008)  
	class UAkAudioEvent*                               _akAudioEventAudioEventVomitSplash;                         // 0x0388   (0x0008)  
	FVector2D                                          _minDecalSize;                                              // 0x0390   (0x0008)  
	FVector2D                                          _maxDecalSize;                                              // 0x0398   (0x0008)  
	bool                                               _isSuperVomit;                                              // 0x03A0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x03A1   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.BaseLinkedVomitProjectile.OnLinkedVomitProjectileDeactivate__DelegateSignature
	// void OnLinkedVomitProjectileDeactivate__DelegateSignature();                                                          // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.BaseLinkedVomitProjectile.OnAffectSurvivor
	// void OnAffectSurvivor(class ACamperPlayer* CamperPlayer);                                                             // [0x57d4170] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.BaseLinkedVomitProjectile.OnAffectInteractable
	// void OnAffectInteractable(class AInteractable* Interactable, class USceneComponent* HitComponent);                    // [0x57d40a0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.BaseLinkedVomitProjectile.NativeExplode
	// void NativeExplode(FImpactInfo& ImpactInfo);                                                                          // [0x57d3fe0] Final|Native|Protected|HasOutParms|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.BaseLockerItem
/// Size: 0x0018 (0x000230 - 0x000248)
class ABaseLockerItem : public AActor
{ 
public:
	class ALocker*                                     _owningLocker;                                              // 0x0230   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0238   (0x0004)  MISSED
	FVector                                            _adjustedRelativePosition;                                  // 0x023C   (0x000C)  


	/// Functions
	// Function /Script/DeadByDaylight.BaseLockerItem.OnRep_OwningLocker
	// void OnRep_OwningLocker();                                                                                            // [0x57d4670] Final|Native|Protected 
	// Function /Script/DeadByDaylight.BaseLockerItem.AdjustPositionOnLocker
	// void AdjustPositionOnLocker();                                                                                        // [0x57d3ba0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.BaseSky
/// Size: 0x0168 (0x000230 - 0x000398)
class ABaseSky : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0230   (0x0008)  MISSED
	bool                                               AdjustCullDistance;                                         // 0x0238   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0239   (0x0003)  MISSED
	float                                              IBLContributionMultiplier;                                  // 0x023C   (0x0004)  
	FLinearColor                                       ProbesTintColor;                                            // 0x0240   (0x0010)  
	float                                              ProbesSaturationValue;                                      // 0x0250   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0254   (0x0004)  MISSED
	FBHVRPerDetailModeFloat                            ASMDepthBias;                                               // 0x0258   (0x00A0)  
	FBHVRPerDetailModeFloat                            ASMDepthAttenuation;                                        // 0x02F8   (0x00A0)  


	/// Functions
	// Function /Script/DeadByDaylight.BaseSky.ToggleLightingChange
	// void ToggleLightingChange(bool toggleOn, FName ThemeName);                                                            // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.BaseSky.SetProbesTint
	// void SetProbesTint(FLinearColor InColor, float inSaturation);                                                         // [0x57d9300] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.BaseSky.SetCullDistance
	// void SetCullDistance(float NewCullDistance);                                                                          // [0x57d9040] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.BaseSky.OnFadeEnd
	// void OnFadeEnd(class AActor* Other);                                                                                  // [0x57d8e60] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.BaseSky.OnFadeBegin
	// void OnFadeBegin(class AActor* Other);                                                                                // [0x57d8dd0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.BaseSky.OnAlphaChanged
	// void OnAlphaChanged(float newAlpha, class AActor* Other);                                                             // [0x57d8b90] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.BaseSky.GetVistasAndEnvironmentElements
	// class USceneComponent* GetVistasAndEnvironmentElements();                                                             // [0x57d8ae0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.BaseSky.GetPostprocessComponent
	// class UPostProcessComponent* GetPostprocessComponent();                                                               // [0x57d8ab0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.BaseSky.CopyComponentsSettingsFromSource
	// void CopyComponentsSettingsFromSource(class UStaticMeshComponent* moonMesh, class UDirectionalLightComponent* shadowLight, class UDirectionalLightComponent* godRayLight, class USkyLightComponent* SkyLight, class UExponentialHeightFogComponent* HeightFog, class UPostProcessComponent* postProcess, class UClass* sourceBaseSkyClass); // [0x57d8790] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.BaseTrap
/// Size: 0x0008 (0x0004C8 - 0x0004D0)
class ABaseTrap : public ACollectable
{ 
public:
	bool                                               _isTrapSet;                                                 // 0x04C8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x04C9   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.BaseTrap.SetIsTrapSet
	// void SetIsTrapSet(bool value);                                                                                        // [0x57d90c0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.BaseTrap.IsTrapSet
	// bool IsTrapSet();                                                                                                     // [0x57d8b40] Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.BearTrapOutlineUpdateStrategy
/// Size: 0x0038 (0x0000E0 - 0x000118)
class UBearTrapOutlineUpdateStrategy : public UOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       UnrevealedColor;                                            // 0x00E0   (0x0010)  
	FLinearColor                                       RevealedColorToSurvivor;                                    // 0x00F0   (0x0010)  
	class UCurveLinearColor*                           KillerOutlineFadeCurve;                                     // 0x0100   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0108   (0x0008)  MISSED
	class UMapActorComponent*                          _owningBearTrapMapActorComponent;                           // 0x0110   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.BearTrapOutlineUpdateStrategy.SetOwningBearTrapMapActorComponent
	// void SetOwningBearTrapMapActorComponent(class UMapActorComponent* MapActorComponent);                                 // [0x57d9150] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.BlessedVignetteController
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UBlessedVignetteController : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B8   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.BlessedVignetteController.OnDeactivateBlessedVignette
	// void OnDeactivateBlessedVignette();                                                                                   // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.BlessedVignetteController.OnActivateBlessedVignette
	// void OnActivateBlessedVignette();                                                                                     // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.BlindableBaseComponent
/// Size: 0x0188 (0x0000B8 - 0x000240)
class UBlindableBaseComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x90];                                      // 0x00B8   (0x0090)  MISSED
	bool                                               _isBlinded;                                                 // 0x0148   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0149   (0x0007)  MISSED
	FTagStateBool                                      _isBeingBlinded;                                            // 0x0150   (0x0030)  
	class UChargeableComponent*                        _chargeableComponent;                                       // 0x0180   (0x0008)  
	SDK_UNDEFINED(80,1824) /* TMap<AActor*, TScriptInterface<Class>> */ __um(_authority_blindingEffectors);        // 0x0188   (0x0050)  
	unsigned char                                      UnknownData02_6[0x68];                                      // 0x01D8   (0x0068)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.BlindableBaseComponent.SetChargeable
	// void SetChargeable(class UChargeableComponent* value);                                                                // [0x57d8fb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.BlindableBaseComponent.OnRep_IsBlinded
	// void OnRep_IsBlinded();                                                                                               // [0x57d8f70] Final|Native|Private 
	// Function /Script/DeadByDaylight.BlindableBaseComponent.OnChargeableCompletionPercentChanged
	// void OnChargeableCompletionPercentChanged(class UChargeableComponent* ChargeableComponent, float TotalPercentComplete); // [0x57d8c70] Final|Native|Private 
	// Function /Script/DeadByDaylight.BlindableBaseComponent.IsBlinded
	// bool IsBlinded();                                                                                                     // [0x57d8b10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.BlindableBaseComponent.Authority_RemoveBlindingEffector
	// void Authority_RemoveBlindingEffector(TScriptInterface<Class> effector);                                              // [0x57d8660] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.BlindableBaseComponent.Authority_Blinded
	// void Authority_Blinded(EBlindType blindType, float BlindnessDuration, class AActor* effectorActor);                   // [0x57d8550] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.BlindableBaseComponent.Authority_AddBlindingEffector
	// void Authority_AddBlindingEffector(TScriptInterface<Class> effector);                                                 // [0x57d8170] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.BlindableComponent
/// Size: 0x0008 (0x000240 - 0x000248)
class UBlindableComponent : public UBlindableBaseComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0240   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.BlindingEffectorInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UBlindingEffectorInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.BlindingFXComponent
/// Size: 0x0050 (0x0000B8 - 0x000108)
class UBlindingFXComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x14];                                      // 0x00B8   (0x0014)  MISSED
	FName                                              _blindnessIntensityParameter;                               // 0x00CC   (0x000C)  
	class UCurveFloat*                                 _blindnessMaterialCurve;                                    // 0x00D8   (0x0008)  
	class UCurveFloat*                                 _blindnessCurve;                                            // 0x00E0   (0x0008)  
	class UPostProcessComponent*                       _postProcess;                                               // 0x00E8   (0x0008)  
	class UMaterialInstanceDynamic*                    _postProcessMaterial;                                       // 0x00F0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x00F8   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.BlindingFXComponent.SetPostProcessMaterial
	// void SetPostProcessMaterial(class UMaterialInstanceDynamic* value);                                                   // [0x57d9270] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.BlindingFXComponent.SetPostProcess
	// void SetPostProcess(class UPostProcessComponent* value);                                                              // [0x57d91e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.BlockElement
/// Size: 0x0078 (0x000030 - 0x0000A8)
class UBlockElement : public UObject
{ 
public:
	SDK_UNDEFINED(8,1825) /* TWeakObjectPtr<UObject*> */ __um(_source);                                            // 0x0030   (0x0008)  
	SDK_UNDEFINED(80,1826) /* TSet<TWeakObjectPtr<ADBDPlayer*>> */ __um(_affectedPlayers);                         // 0x0038   (0x0050)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0088   (0x0020)  MISSED
};

/// Struct /Script/DeadByDaylight.PlayerBlockData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPlayerBlockData
{ 
	class ADBDPlayer*                                  BlockedPlayer;                                              // 0x0000   (0x0008)  
	FGameplayTag                                       BlockStyle;                                                 // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.BlockableReplicatedDatum
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBlockableReplicatedDatum
{ 
	SDK_UNDEFINED(16,1827) /* TArray<TWeakObjectPtr<UObject*>> */ __um(Sources);                                   // 0x0000   (0x0010)  
	TArray<FPlayerBlockData>                           BlockedPlayersData;                                         // 0x0010   (0x0010)  
};

/// Class /Script/DeadByDaylight.BlockableComponent
/// Size: 0x0048 (0x0000B8 - 0x000100)
class UBlockableComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	FBlockableReplicatedDatum                          _replicatedDatum;                                           // 0x00D0   (0x0020)  
	TArray<class UBlockElement*>                       _blockElements;                                             // 0x00F0   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.BlockableComponent.OnRep_ReplicatedDatum
	// void OnRep_ReplicatedDatum();                                                                                         // [0x57d8f90] Final|Native|Private|Const 
	// Function /Script/DeadByDaylight.BlockableComponent.Authority_RemoveBlock
	// void Authority_RemoveBlock(class UObject* Source);                                                                    // [0x57d8700] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.BlockableComponent.Authority_AddTimedBlock
	// void Authority_AddTimedBlock(class UObject* Source, float Duration, TSet<ADBDPlayer*>& affectedPlayers);              // [0x57d8390] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.BlockableComponent.Authority_AddBlock
	// void Authority_AddBlock(class UObject* Source, TSet<ADBDPlayer*>& affectedPlayers);                                   // [0x57d8210] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.BloodDecalEffectIntensity
/// Size: 0x0018 (0x000038 - 0x000050)
class UBloodDecalEffectIntensity : public UDataAsset
{ 
public:
	FColor                                             IntensifyBloodColor;                                        // 0x0038   (0x0004)  
	FColor                                             IntensifyBloodColor2;                                       // 0x003C   (0x0004)  
	FColor                                             IntensifyBloodColorEmissive;                                // 0x0040   (0x0004)  
	float                                              IntensifyBloodColorEmissiveMinimumIntensity;                // 0x0044   (0x0004)  
	float                                              IntensifyBloodColorEmissiveMaximumIntensity;                // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.BloodDecalEffect
/// Size: 0x00E0 (0x000038 - 0x000118)
class UBloodDecalEffect : public UDataAsset
{ 
public:
	class UCurveFloat*                                 AnimationTimelineCurve;                                     // 0x0038   (0x0008)  
	class UCurveFloat*                                 DestroyTimelineCurve;                                       // 0x0040   (0x0008)  
	TArray<class UTexture2D*>                          Textures;                                                   // 0x0048   (0x0010)  
	TArray<class UTexture2D*>                          Normals;                                                    // 0x0058   (0x0010)  
	bool                                               EnableVisualEffects;                                        // 0x0068   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0069   (0x0007)  MISSED
	class UBloodDecalEffectIntensity*                  BloodDecalEffectIntensity;                                  // 0x0070   (0x0008)  
	float                                              ColorInterpolationSpeed;                                    // 0x0078   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x007C   (0x0004)  MISSED
	class UMaterialInterface*                          DefalultDecalMaterial;                                      // 0x0080   (0x0008)  
	unsigned char                                      UnknownData02_6[0x90];                                      // 0x0088   (0x0090)  MISSED
};

/// Class /Script/DeadByDaylight.Bloodlust
/// Size: 0x0158 (0x000350 - 0x0004A8)
class UBloodlust : public UStatusEffect
{ 
public:
	class UCurveFloat*                                 BloodlustCurve;                                             // 0x0350   (0x0008)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x0358   (0x0020)  MISSED
	float                                              _bloodlustTime;                                             // 0x0378   (0x0004)  
	unsigned char                                      UnknownData01_5[0x2C];                                      // 0x037C   (0x002C)  MISSED
	TArray<FGameplayTag>                               _bloodlustResettingGameEvents;                              // 0x03A8   (0x0010)  
	unsigned char                                      UnknownData02_6[0xF0];                                      // 0x03B8   (0x00F0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.Bloodlust.OnRep_BloodlustTime
	// void OnRep_BloodlustTime(float oldBloodlustTime);                                                                     // [0x57d8ef0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Bloodlust.OnChaseStartedEvent
	// void OnChaseStartedEvent(class ADBDPlayer* chasedPlayer);                                                             // [0x57d8d40] Final|Native|Private 
	// Function /Script/DeadByDaylight.Bloodlust.OnAllChaseEndedEvent
	// void OnAllChaseEndedEvent();                                                                                          // [0x57d8b70] Final|Native|Private 
	// Function /Script/DeadByDaylight.Bloodlust.GetBloodlustTime
	// float GetBloodlustTime();                                                                                             // [0x57d8a80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Bloodlust.DBD_SetBloodlust
	// void DBD_SetBloodlust(int32_t Amount, bool enableDecay);                                                              // [0x57d89b0] Final|Exec|Native|Public 
};

/// Class /Script/DeadByDaylight.BloodTrailSettings
/// Size: 0x0168 (0x000038 - 0x0001A0)
class UBloodTrailSettings : public UDataAsset
{ 
public:
	float                                              _initialDelay;                                              // 0x0038   (0x0004)  
	int32_t                                            _numBloodDropsPerBloodPool;                                 // 0x003C   (0x0004)  
	float                                              _bloodDropsInterval;                                        // 0x0040   (0x0004)  
	bool                                               _randomlyRotateBloodDrops;                                  // 0x0044   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0045   (0x0003)  MISSED
	float                                              _bloodDropsRandomScatter;                                   // 0x0048   (0x0004)  
	SDK_UNDEFINED(1,1828) /* TEnumAsByte<ETraceTypeQuery> */ __um(_bloodTraceChannel);                             // 0x004C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x004D   (0x0003)  MISSED
	class UBloodDecalEffect*                           _bloodDecalEffect;                                          // 0x0050   (0x0008)  
	FBHVRPerDetailModeInt                              _decalPoolSize;                                             // 0x0058   (0x00A0)  
	float                                              _recycleThresholdPercentage;                                // 0x00F8   (0x0004)  
	float                                              _recycleDistancePercentage;                                 // 0x00FC   (0x0004)  
	FBHVRPerDetailModeInt                              _maxOverlapping;                                            // 0x0100   (0x00A0)  
};

/// Class /Script/DeadByDaylight.BloodTrailComponent
/// Size: 0x0188 (0x0000B8 - 0x000240)
class UBloodTrailComponent : public UActorComponent
{ 
public:
	class UBloodTrailSettings*                         _bloodTrailSettings;                                        // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData00_5[0x80];                                      // 0x00C0   (0x0080)  MISSED
	SDK_UNDEFINED(80,1829) /* TMap<UDBDDecalComponent*, FBloodDecal> */ __um(_bloodDecals);                        // 0x0140   (0x0050)  
	class UBloodDecalEffect*                           _bloodDecalEffect;                                          // 0x0190   (0x0008)  
	unsigned char                                      UnknownData01_5[0x90];                                      // 0x0198   (0x0090)  MISSED
	class UDecalSpawner*                               _decalSpawner;                                              // 0x0228   (0x0008)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0230   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.BloodTrailComponent.ConditionalStartBleeding
	// void ConditionalStartBleeding();                                                                                      // [0x4d82970] Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.BloodwebTunables
/// Size: 0x0008 (0x000030 - 0x000038)
class UBloodwebTunables : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.BloodwebBackendTunables
/// Size: 0x0070 (0x000038 - 0x0000A8)
class UBloodwebBackendTunables : public UBloodwebTunables
{ 
public:
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x0038   (0x0070)  MISSED
};

/// Class /Script/DeadByDaylight.BloodwebClientTunables
/// Size: 0x0000 (0x000038 - 0x000038)
class UBloodwebClientTunables : public UBloodwebTunables
{ 
public:
};

/// Class /Script/DeadByDaylight.BloodwebDistribution
/// Size: 0x02F8 (0x000030 - 0x000328)
class UBloodwebDistribution : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0030   (0x0010)  MISSED
	class UDBDDesignTunables*                          _designTunables;                                            // 0x0040   (0x0008)  
	class UBloodwebTunables*                           _bloodwebTunables;                                          // 0x0048   (0x0008)  
	unsigned char                                      UnknownData01_6[0x2D8];                                     // 0x0050   (0x02D8)  MISSED
};

/// Class /Script/DeadByDaylight.BloodwebEntity
/// Size: 0x0048 (0x000030 - 0x000078)
class UBloodwebEntity : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0030   (0x0008)  MISSED
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0038   (0x0008)  
	class UBloodwebTunables*                           _bloodwebTunables;                                          // 0x0040   (0x0008)  
	SDK_UNDEFINED(16,1830) /* TScriptInterface<Class> */ __um(_bloodwebDefinition);                                // 0x0048   (0x0010)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0058   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.BloodwebGenerator
/// Size: 0x00D0 (0x000030 - 0x000100)
class UBloodwebGenerator : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0xC];                                       // 0x0030   (0x000C)  MISSED
	FRandomStream                                      _randomizationStream;                                       // 0x003C   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	SDK_UNDEFINED(16,1831) /* TArray<FString> */       __um(_selectedNodes);                                       // 0x0048   (0x0010)  
	TArray<FName>                                      _selectedContent;                                           // 0x0058   (0x0010)  
	unsigned char                                      UnknownData02_5[0x48];                                      // 0x0068   (0x0048)  MISSED
	SDK_UNDEFINED(16,1832) /* TScriptInterface<Class> */ __um(_bloodwebDefinition);                                // 0x00B0   (0x0010)  
	class UDBDDesignTunables*                          _designTunables;                                            // 0x00C0   (0x0008)  
	class UBloodwebTunables*                           _bloodwebTunables;                                          // 0x00C8   (0x0008)  
	float                                              _alternativePathOccurenceFactor;                            // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x00D4   (0x0004)  MISSED
	class UBloodwebDistribution*                       _dataDistribution;                                          // 0x00D8   (0x0008)  
	class UBloodwebSettings*                           _bloodwebSettings;                                          // 0x00E0   (0x0008)  
	unsigned char                                      UnknownData04_6[0x18];                                      // 0x00E8   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.BloodwebHandler
/// Size: 0x0068 (0x000030 - 0x000098)
class UBloodwebHandler : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x68];                                      // 0x0030   (0x0068)  MISSED
};

/// Class /Script/DeadByDaylight.BloodwebManager
/// Size: 0x01D0 (0x000030 - 0x000200)
class UBloodwebManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0030   (0x0060)  MISSED
	class UClass*                                      _bloodwebBuilderClass;                                      // 0x0090   (0x0008)  
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0098   (0x0008)  
	class UDBDDesignTunables*                          _designTunables;                                            // 0x00A0   (0x0008)  
	class UBaseBloodwebContentAdapter*                 _bloodWebContentAdapter;                                    // 0x00A8   (0x0008)  
	class UBloodwebHandler*                            _bloodwebHandler;                                           // 0x00B0   (0x0008)  
	class UBloodwebPathfinder*                         _bloodwebPathfinder;                                        // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x140];                                     // 0x00C0   (0x0140)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.BloodwebManager.Init
	// void Init(class UDBDGameInstance* GameInstance, class UDBDDesignTunables* Tunables);                                  // [0x57dca40] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.BloodwebPathfinder
/// Size: 0x0020 (0x000030 - 0x000050)
class UBloodwebPathfinder : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0030   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.BloodwebSettings
/// Size: 0x0010 (0x000038 - 0x000048)
class UBloodwebSettings : public UDataAsset
{ 
public:
	TArray<FName>                                      _duplicableItems;                                           // 0x0038   (0x0010)  
};

/// Class /Script/DeadByDaylight.BlueprintDebugUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UBlueprintDebugUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.BlueprintDebugUtilities.EnsureOnConditionWithMessage
	// void EnsureOnConditionWithMessage(bool Condition, FString ensureMessage);                                             // [0x57e0bf0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.BlueprintDebugUtilities.EnsureFalseWithMessage
	// void EnsureFalseWithMessage(FString ensureMessage);                                                                   // [0x57e0b60] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.BlueprintPlatformUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UBlueprintPlatformUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.BlueprintPlatformUtilities.ToInteger
	// int32_t ToInteger(FDBDPerPlatformInt& PerPlatformInt, class UObject* objectInWorld);                                  // [0x57e1940] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.BlueprintPlatformUtilities.ToFloat
	// float ToFloat(FDBDPerPlatformFloat& PerPlatformFloat, class UObject* objectInWorld);                                  // [0x57e1860] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.BonusPointEventsManager
/// Size: 0x00B8 (0x000030 - 0x0000E8)
class UBonusPointEventsManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xB8];                                      // 0x0030   (0x00B8)  MISSED
};

/// Struct /Script/DeadByDaylight.EventSpawnableSpawnRequirements
/// Size: 0x0038 (0x000000 - 0x000038)
struct FEventSpawnableSpawnRequirements
{ 
	FDataTableDropdown                                 Size;                                                       // 0x0000   (0x0030)  
	int32_t                                            MinSpawnNumber;                                             // 0x0030   (0x0004)  
	int32_t                                            MaxSpawnNumber;                                             // 0x0034   (0x0004)  
};

/// Struct /Script/DeadByDaylight.TileEventSpawnerSettingData
/// Size: 0x0020 (0x000008 - 0x000028)
struct FTileEventSpawnerSettingData : FDBDTableRowBase
{ 
	ETileType                                          TileType;                                                   // 0x0008   (0x0001)  
	bool                                               IsExitGate;                                                 // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x000A   (0x0002)  MISSED
	float                                              SpawnProbability;                                           // 0x000C   (0x0004)  
	float                                              MinBudget;                                                  // 0x0010   (0x0004)  
	float                                              MaxBudget;                                                  // 0x0014   (0x0004)  
	TArray<FEventSpawnableSpawnRequirements>           SpawnRequirementsPerSize;                                   // 0x0018   (0x0010)  
};

/// Class /Script/DeadByDaylight.Tile
/// Size: 0x01A0 (0x000230 - 0x0003D0)
class ATile : public AActor
{ 
public:
	bool                                               RerunConstructionScript;                                    // 0x0230   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0231   (0x0003)  MISSED
	int32_t                                            MinimumSpacing;                                             // 0x0234   (0x0004)  
	int32_t                                            MaximumSpacing;                                             // 0x0238   (0x0004)  
	bool                                               DiagonalSpacing;                                            // 0x023C   (0x0001)  
	bool                                               TypeSpacing;                                                // 0x023D   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x023E   (0x0002)  MISSED
	int32_t                                            MaximumCount;                                               // 0x0240   (0x0004)  
	FVector2D                                          Dimension;                                                  // 0x0244   (0x0008)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x024C   (0x0004)  MISSED
	TArray<EscapeStrategyType>                         AvailableEscapeTypes;                                       // 0x0250   (0x0010)  
	ETileType                                          Type;                                                       // 0x0260   (0x0001)  
	EDensity                                           Density;                                                    // 0x0261   (0x0001)  
	EPathType                                          Path;                                                       // 0x0262   (0x0001)  
	unsigned char                                      UnknownData03_5[0x1];                                       // 0x0263   (0x0001)  MISSED
	int32_t                                            Number;                                                     // 0x0264   (0x0004)  
	bool                                               PlaceHolder;                                                // 0x0268   (0x0001)  
	bool                                               Replacement;                                                // 0x0269   (0x0001)  
	unsigned char                                      UnknownData04_5[0x2];                                       // 0x026A   (0x0002)  MISSED
	int32_t                                            SpawnPriorityTier;                                          // 0x026C   (0x0004)  
	float                                              Weight;                                                     // 0x0270   (0x0004)  
	FVector2D                                          Coord;                                                      // 0x0274   (0x0008)  
	EQuadrantSpawnType                                 QuadrantSpawnType;                                          // 0x027C   (0x0001)  
	EBasementType                                      BasementType;                                               // 0x027D   (0x0001)  
	unsigned char                                      UnknownData05_5[0x2];                                       // 0x027E   (0x0002)  MISSED
	TArray<class UTileSpawnPoint*>                     SpawnPointsCache;                                           // 0x0280   (0x0010)  
	TArray<class UObjectRandomizer*>                   ObjectRandomizersCache;                                     // 0x0290   (0x0010)  
	TArray<class UActorSpawner*>                       ActorSpawnersCache;                                         // 0x02A0   (0x0010)  
	TArray<class UActorVariationSpawner*>              ActorVariationSpawnersCache;                                // 0x02B0   (0x0010)  
	unsigned char                                      UnknownData06_5[0x7C];                                      // 0x02C0   (0x007C)  MISSED
	FRandomStream                                      SharedTileRandomizer;                                       // 0x033C   (0x0008)  
	bool                                               IsOutOfWorldTile;                                           // 0x0344   (0x0001)  
	bool                                               UseTileEventSpawnerSettingOverride;                         // 0x0345   (0x0001)  
	unsigned char                                      UnknownData07_5[0x2];                                       // 0x0346   (0x0002)  MISSED
	FTileEventSpawnerSettingData                       TileEventSpawnerSettingOverride;                            // 0x0348   (0x0028)  
	bool                                               _initialized;                                               // 0x0370   (0x0001)  
	unsigned char                                      UnknownData08_6[0x5F];                                      // 0x0371   (0x005F)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.Tile.OnSetSpawnObject
	// void OnSetSpawnObject(class UTileSpawnPoint* TileSpawnPoint, class AActor* spawnedObject);                            // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.Tile.OnRep_Initialized
	// void OnRep_Initialized(bool oldValue);                                                                                // [0x5921780] Final|Native|Protected 
	// Function /Script/DeadByDaylight.Tile.OnAllTileSpawned
	// void OnAllTileSpawned();                                                                                              // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.Tile.InitOnSpawned
	// void InitOnSpawned();                                                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
};

/// Struct /Script/DeadByDaylight.BorderElements
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBorderElements
{ 
	EDirection                                         Direction;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<class UActorSpawner*>                       Elements;                                                   // 0x0008   (0x0010)  
};

/// Class /Script/DeadByDaylight.BorderTile
/// Size: 0x0020 (0x0003D0 - 0x0003F0)
class ABorderTile : public ATile
{ 
public:
	TArray<FBorderElements>                            Borders;                                                    // 0x03D0   (0x0010)  
	class UMapData*                                    _map;                                                       // 0x03E0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x03E8   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.TileRandomizerData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FTileRandomizerData
{ 
	SDK_UNDEFINED(16,1833) /* FString */               __um(Name);                                                 // 0x0000   (0x0010)  
	int32_t                                            Minimun;                                                    // 0x0010   (0x0004)  
	int32_t                                            Maximun;                                                    // 0x0014   (0x0004)  
	TArray<class AActor*>                              Elements;                                                   // 0x0018   (0x0010)  
};

/// Class /Script/DeadByDaylight.Tile2
/// Size: 0x0060 (0x000230 - 0x000290)
class ATile2 : public AActor
{ 
public:
	FRandomStream                                      SharedTileRandomizer;                                       // 0x0230   (0x0008)  
	SDK_UNDEFINED(16,1834) /* FMulticastInlineDelegate */ __um(OnLevelLoaded);                                     // 0x0238   (0x0010)  
	SDK_UNDEFINED(16,1835) /* FMulticastInlineDelegate */ __um(OnSetSpawnObject);                                  // 0x0248   (0x0010)  
	SDK_UNDEFINED(16,1836) /* FMulticastInlineDelegate */ __um(OnAllTileSpawned);                                  // 0x0258   (0x0010)  
	SDK_UNDEFINED(16,1837) /* FMulticastInlineDelegate */ __um(InitOnSpawned);                                     // 0x0268   (0x0010)  
	bool                                               EnableRandomizer;                                           // 0x0278   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0279   (0x0003)  MISSED
	int32_t                                            RandomizerSeed;                                             // 0x027C   (0x0004)  
	TArray<FTileRandomizerData>                        Randomizers;                                                // 0x0280   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BorderElements2
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBorderElements2
{ 
	EDirection                                         Direction;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<class AActor*>                              Elements;                                                   // 0x0008   (0x0010)  
};

/// Class /Script/DeadByDaylight.BorderTile2
/// Size: 0x0018 (0x000290 - 0x0002A8)
class ABorderTile2 : public ATile2
{ 
public:
	TArray<FBorderElements2>                           Borders;                                                    // 0x0290   (0x0010)  
	bool                                               EnableBorderDirection;                                      // 0x02A0   (0x0001)  
	EDirection                                         BorderDirection;                                            // 0x02A1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x02A2   (0x0006)  MISSED
};

/// Class /Script/DeadByDaylight.BreakableBase
/// Size: 0x0028 (0x000338 - 0x000360)
class ABreakableBase : public AInteractable
{ 
public:
	class UBoxComponent*                               _breakableCollision;                                        // 0x0338   (0x0008)  
	EBreakableState                                    _state;                                                     // 0x0340   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0341   (0x0007)  MISSED
	class UAkComponent*                                _akAudioBreakable;                                          // 0x0348   (0x0008)  
	class UAkAudioEvent*                               _akAudioBreakEvent;                                         // 0x0350   (0x0008)  
	class USceneComponent*                             _rootComponent;                                             // 0x0358   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.BreakableBase.PlayAudioBreakable
	// void PlayAudioBreakable();                                                                                            // [0x57e11f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.BreakableBase.IsUnbroken
	// bool IsUnbroken();                                                                                                    // [0x57e0f10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.BreakableBase.ExplodeVfxSfx
	// void ExplodeVfxSfx(FVector ImpulseDir);                                                                               // [0x61d2f50] Event|Protected|HasDefaults|BlueprintEvent 
	// Function /Script/DeadByDaylight.BreakableBase.Explode
	// void Explode(class ADBDPlayer* Player);                                                                               // [0x57e0cd0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.BreakableWallOutlineUpdateStrategy
/// Size: 0x0000 (0x000158 - 0x000158)
class UBreakableWallOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.BubbleIndicator
/// Size: 0x0008 (0x000230 - 0x000238)
class ABubbleIndicator : public AActor
{ 
public:
	float                                              _lifetime;                                                  // 0x0230   (0x0004)  
	bool                                               _displayToLocallyObserved;                                  // 0x0234   (0x0001)  
	bool                                               _isInRange;                                                 // 0x0235   (0x0001)  
	bool                                               _isPreSpawned;                                              // 0x0236   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x0237   (0x0001)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.BubbleIndicator.SetSilhouette
	// void SetSilhouette(class UStaticMesh* StaticMesh);                                                                    // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.BubbleIndicator.DeactivateBubble
	// void DeactivateBubble();                                                                                              // [0x57e0b20] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.BubbleIndicator.ActivateBubbleFX
	// void ActivateBubbleFX(float Duration);                                                                                // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.BubbleIndicatorNotifier
/// Size: 0x0000 (0x000030 - 0x000030)
class UBubbleIndicatorNotifier : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.BubbleIndicatorNotifier.SpawnBubbleIndicator
	// void SpawnBubbleIndicator(class UObject* WorldContextObject, class UClass* bubbleIndicatorBP, FTransform Transform, bool TriggerLoudNoise, bool spawnOnKillerSideOnly, float Lifetime, class UStaticMesh* silhouetteStaticMesh, float audibleRange); // [0x57e1590] Final|Native|Static|Private|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.BubbleIndicatorNotifier.PreSpawnBubbleIndicator
	// class ABubbleIndicator* PreSpawnBubbleIndicator(class UObject* WorldContextObject, class UClass* bubbleIndicatorBP, class UStaticMesh* silhouetteStaticMesh); // [0x57e12a0] Final|Native|Static|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.BubbleIndicatorNotifier.ActivateBubbleIndicator
	// void ActivateBubbleIndicator(class UObject* WorldContextObject, class ABubbleIndicator* BubbleIndicator, FTransform Transform, bool TriggerLoudNoise, float Lifetime, float audibleRange); // [0x57e04c0] Final|Native|Static|Private|HasDefaults|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.CameraAttachment
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCameraAttachment
{ 
	class USceneComponent*                             Parent;                                                     // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0008   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.CameraAttachmentComponent
/// Size: 0x00B0 (0x0000B8 - 0x000168)
class UCameraAttachmentComponent : public UActorComponent
{ 
public:
	class USceneComponent*                             _anchor;                                                    // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x00C0   (0x0010)  MISSED
	FCameraAttachment                                  _defaultCameraAttachment;                                   // 0x00D0   (0x0018)  
	FCameraAttachment                                  _currentCameraAttachment;                                   // 0x00E8   (0x0018)  
	unsigned char                                      UnknownData01_6[0x68];                                      // 0x0100   (0x0068)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CameraAttachmentComponent.Reset
	// void Reset();                                                                                                         // [0x57e13a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CameraAttachmentComponent.IsAttached
	// bool IsAttached();                                                                                                    // [0x57e0ee0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CameraAttachmentComponent.Detach
	// void Detach();                                                                                                        // [0x57e0b40] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CameraFadeComponent
/// Size: 0x0038 (0x0000B8 - 0x0000F0)
class UCameraFadeComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x00B8   (0x0038)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CameraFadeComponent.OnFadedOut
	// void OnFadedOut();                                                                                                    // [0x57e1100] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CameraFadeComponent.OnFadedIn
	// void OnFadedIn();                                                                                                     // [0x57e10e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CameraFadeComponent.GetCameraFadeState
	// ECameraFadeState GetCameraFadeState();                                                                                // [0x57e0d60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.CameraHandlerComponent
/// Size: 0x0100 (0x0000B8 - 0x0001B8)
class UCameraHandlerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x00B8   (0x0038)  MISSED
	SDK_UNDEFINED(80,1838) /* TMap<EDBDCameraSocketID, AActor*> */ __um(_cameraMap);                               // 0x00F0   (0x0050)  
	EDBDCameraSocketID                                 _delayedSocketID;                                           // 0x0140   (0x0001)  
	EDBDCameraSocketID                                 _currentSocketID;                                           // 0x0141   (0x0001)  
	unsigned char                                      UnknownData01_5[0x47];                                      // 0x0142   (0x0047)  MISSED
	bool                                               _manualZoomAllowPerkModifiers;                              // 0x0189   (0x0001)  
	unsigned char                                      UnknownData02_5[0x6];                                       // 0x018A   (0x0006)  MISSED
	class UCurveFloat*                                 _manualZoomCurveFloat;                                      // 0x0190   (0x0008)  
	FName                                              _cameraAttachmentSocket;                                    // 0x0198   (0x000C)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x01A4   (0x0004)  MISSED
	class USceneComponent*                             _cameraAttachmentComponent;                                 // 0x01A8   (0x0008)  
	bool                                               _isFOVSystemActive;                                         // 0x01B0   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x01B1   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CameraHandlerComponent.SetSocketID
	// void SetSocketID(EDBDCameraSocketID Mode);                                                                            // [0x57e14e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CameraHandlerComponent.SetAttachmentComponent
	// void SetAttachmentComponent(class USceneComponent* attachmentComponent);                                              // [0x57e13c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CameraHandlerComponent.PlayVFXOnCurrentCamera
	// void PlayVFXOnCurrentCamera(class UParticleSystemComponent* Component);                                               // [0x57e1210] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CameraHandlerComponent.OnLevelReadyToPlay
	// void OnLevelReadyToPlay();                                                                                            // [0x57e11b0] Final|Native|Private 
	// Function /Script/DeadByDaylight.CameraHandlerComponent.OnFirstPersonViewChanged
	// void OnFirstPersonViewChanged(bool isFirstPerson);                                                                    // [0x57e1120] Final|Native|Private 
	// Function /Script/DeadByDaylight.CameraHandlerComponent.GetSocketID
	// EDBDCameraSocketID GetSocketID();                                                                                     // [0x57e0df0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CameraHandlerComponent.GetDesiredFOV
	// float GetDesiredFOV();                                                                                                // [0x57e0dc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CameraHandlerComponent.GetCurrentCamera
	// class AActor* GetCurrentCamera();                                                                                     // [0x57e0d90] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CameraHandlerComponent.AddCameraToSocket
	// void AddCameraToSocket(EDBDCameraSocketID Mode, class AActor* Camera);                                                // [0x57e0700] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CameraOffsetController
/// Size: 0x0050 (0x0000B8 - 0x000108)
class UCameraOffsetController : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x00B8   (0x0050)  MISSED
};

/// Class /Script/DeadByDaylight.CamperBloodTrailComponent
/// Size: 0x0030 (0x000240 - 0x000270)
class UCamperBloodTrailComponent : public UBloodTrailComponent
{ 
public:
	class UPerkManager*                                _camperPerkManager;                                         // 0x0240   (0x0008)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0248   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CamperBloodTrailComponent.OnDamageStateChanged
	// void OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState CurrentDamageState);                  // [0x57e1010] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.CharacterDreamworldComponent
/// Size: 0x0080 (0x0000B8 - 0x000138)
class UCharacterDreamworldComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1839) /* FMulticastInlineDelegate */ __um(DreamStateChanged);                                 // 0x00B8   (0x0010)  
	class UClass*                                      _mobileDreamworldPostProcessClass;                          // 0x00C8   (0x0008)  
	FTagStateBool                                      _isInDreamworld;                                            // 0x00D0   (0x0030)  
	class APostProcessUpdate*                          _mobileDreamworldPostProcess;                               // 0x0100   (0x0008)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x0108   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CharacterDreamworldComponent.ShouldShowVignette
	// bool ShouldShowVignette();                                                                                            // [0x57f4a40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterDreamworldComponent.OnRep_IsInDreamworld
	// void OnRep_IsInDreamworld();                                                                                          // [0x57f47a0] Final|Native|Private 
	// Function /Script/DeadByDaylight.CharacterDreamworldComponent.IsInDreamworld
	// bool IsInDreamworld();                                                                                                // [0x57f4360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterDreamworldComponent.GetLocallyObservedOrLocalCharacter
	// class ADBDPlayer* GetLocallyObservedOrLocalCharacter(class UObject* WorldContextObject);                              // [0x57f3ae0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterDreamworldComponent.FireWakeUpScoreEvent
	// void FireWakeUpScoreEvent(class ADBDPlayer* Instigator);                                                              // [0x57f2d00] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterDreamworldComponent.Authority_SetIsInDreamworld
	// void Authority_SetIsInDreamworld(bool NewValue, bool isScripted);                                                     // [0x4dcf8b0] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.SurvivorSleepiness
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSurvivorSleepiness
{ 
	float                                              _sleepiness;                                                // 0x0000   (0x0004)  
	float                                              _sleepThreshold;                                            // 0x0004   (0x0004)  
};

/// Class /Script/DeadByDaylight.CamperDreamworldComponent
/// Size: 0x00F0 (0x000138 - 0x000228)
class UCamperDreamworldComponent : public UCharacterDreamworldComponent
{ 
public:
	SDK_UNDEFINED(16,1840) /* FMulticastInlineDelegate */ __um(OnCamperTriggeredDreamTrap);                        // 0x0138   (0x0010)  
	class UClass*                                      _survivorDreamWorldStatusEffect;                            // 0x0148   (0x0008)  
	FSurvivorSleepiness                                _survivorSleepiness;                                        // 0x0150   (0x0008)  
	float                                              _sleepinessProtectionRemainingDuration;                     // 0x0158   (0x0004)  
	float                                              _sleepGainPerSecond;                                        // 0x015C   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0160   (0x0004)  MISSED
	int32_t                                            _wakeUpByOtherCount;                                        // 0x0164   (0x0004)  
	bool                                               _showKiller;                                                // 0x0168   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0169   (0x0007)  MISSED
	FFastTimer                                         _killerGlimpseDurationTimer;                                // 0x0170   (0x0030)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x01A0   (0x0010)  MISSED
	FFastTimer                                         _killerGlimpseCooldownTimer;                                // 0x01B0   (0x0030)  
	unsigned char                                      UnknownData03_5[0x10];                                      // 0x01E0   (0x0010)  MISSED
	float                                              _glimpseMinDistance;                                        // 0x01F0   (0x0004)  
	float                                              _glimpseMaxDistance;                                        // 0x01F4   (0x0004)  
	float                                              _killerGlimpseCooldown;                                     // 0x01F8   (0x0004)  
	float                                              _killerGlimpseDuration;                                     // 0x01FC   (0x0004)  
	int32_t                                            _wakeUpBySkillCheckCount;                                   // 0x0200   (0x0004)  
	int32_t                                            _fellAsleepCount;                                           // 0x0204   (0x0004)  
	bool                                               _forcedAsleep;                                              // 0x0208   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x0209   (0x0007)  MISSED
	class AWakerObject*                                _linkedWaker;                                               // 0x0210   (0x0008)  
	bool                                               _useScriptedKillerVisibility;                               // 0x0218   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x0219   (0x0007)  MISSED
	bool                                               _showKillerInstantly;                                       // 0x0220   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0x0221   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.ShouldLookSleepyToLocalPlayer
	// bool ShouldLookSleepyToLocalPlayer();                                                                                 // [0x57e1560] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.SetScriptedKillerVisibility
	// void SetScriptedKillerVisibility(bool useScriptedKillerVisibility);                                                   // [0x57e1450] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.OnRep_ShowKiller
	// void OnRep_ShowKiller();                                                                                              // [0x57e11d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.Local_SetShowKiller
	// void Local_SetShowKiller(bool showKiller, bool instantly);                                                            // [0x57e0f40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.InitializeTunableValues
	// void InitializeTunableValues(class ASlasherPlayer* killer);                                                           // [0x57e0e50] Final|Native|Private 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.HandleShowKillerChanged
	// void HandleShowKillerChanged(bool showKiller, bool instantly);                                                        // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.GetWakeUpByOtherCount
	// int32_t GetWakeUpByOtherCount();                                                                                      // [0x57e0e20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.CanWakeUpBySkillCheck
	// bool CanWakeUpBySkillCheck();                                                                                         // [0x57e0af0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.CanWakeUp
	// bool CanWakeUp();                                                                                                     // [0x57e0ac0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.BroadcastCamperTriggeredDreamTrap
	// void BroadcastCamperTriggeredDreamTrap(class AActor* dreamObject);                                                    // [0x57e0a30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.Authority_WakeUpByWakerObject
	// void Authority_WakeUpByWakerObject();                                                                                 // [0x57e0a10] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.Authority_WakeUpByOther
	// void Authority_WakeUpByOther(class ADBDPlayer* Instigator);                                                           // [0x57e0980] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.Authority_WakeUpByHook
	// void Authority_WakeUpByHook();                                                                                        // [0x57e0960] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.Authority_SpawnDreamworldStatusEffect
	// void Authority_SpawnDreamworldStatusEffect();                                                                         // [0x57e0940] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|Const 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.Authority_PutAsleep
	// void Authority_PutAsleep();                                                                                           // [0x57e0920] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.Authority_OnAttacked
	// void Authority_OnAttacked();                                                                                          // [0x57e0900] Final|Native|Private 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.Authority_HandleSkillCheckFailure
	// void Authority_HandleSkillCheckFailure(bool wakeUpEveryoneInteracting, class ADBDPlayer* Instigator);                 // [0x57e0830] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.Authority_GetWakeUpBySkillCheckCount
	// int32_t Authority_GetWakeUpBySkillCheckCount();                                                                       // [0x57e0800] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperDreamworldComponent.Authority_GetFellAsleepCount
	// int32_t Authority_GetFellAsleepCount();                                                                               // [0x57e07d0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.CamperEndGameComponent
/// Size: 0x0060 (0x0000B8 - 0x000118)
class UCamperEndGameComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x00B8   (0x0048)  MISSED
	class UClass*                                      _endGameEntityClass;                                        // 0x0100   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0108   (0x0004)  MISSED
	float                                              _delayBeforeSacrifice;                                      // 0x010C   (0x0004)  
	bool                                               _readyToBeSacrificed;                                       // 0x0110   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0111   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CamperEndGameComponent.OnEndGameSacrificeEnd
	// void OnEndGameSacrificeEnd();                                                                                         // [0x57e8de0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperEndGameComponent.OnDelayBeforeSacrificeEnd
	// void OnDelayBeforeSacrificeEnd();                                                                                     // [0x57e8ca0] Final|Native|Private 
	// Function /Script/DeadByDaylight.CamperEndGameComponent.GetSacrificedByEndGame
	// bool GetSacrificedByEndGame();                                                                                        // [0x57e78d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.CamperExposerInstance
/// Size: 0x0030 (0x000230 - 0x000260)
class ACamperExposerInstance : public AActor
{ 
public:
	bool                                               IsInterior;                                                 // 0x0230   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0231   (0x0007)  MISSED
	SDK_UNDEFINED(16,1841) /* FString */               __um(_audioAgravationLevelRtpc);                            // 0x0238   (0x0010)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0248   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CamperExposerInstance.StartSpawnSequence
	// void StartSpawnSequence(bool withRandomDelay);                                                                        // [0x57e9c20] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperExposerInstance.StartExitSequence
	// void StartExitSequence(bool withRandomDelay);                                                                         // [0x57e9b10] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperExposerInstance.SetIsInteriorBP
	// void SetIsInteriorBP(bool interior);                                                                                  // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperExposerInstance.ExitSequenceComplete
	// void ExitSequenceComplete();                                                                                          // [0x57e7170] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.DBDTimer
/// Size: 0x0028 (0x000000 - 0x000028)
struct FDBDTimer
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	float                                              _startTime;                                                 // 0x0008   (0x0004)  
	bool                                               _startTimeDirty;                                            // 0x000C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	FFloat_NetQuantize8                                _timeLeft;                                                  // 0x0010   (0x0008)  
	bool                                               _replicateTimeLeft;                                         // 0x0018   (0x0001)  
	unsigned char                                      UnknownData02_5[0xB];                                       // 0x0019   (0x000B)  MISSED
	float                                              _interpSpeed;                                               // 0x0024   (0x0004)  
};

/// Class /Script/DeadByDaylight.CamperHealthComponent
/// Size: 0x0238 (0x0000B8 - 0x0002F0)
class UCamperHealthComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1842) /* FMulticastInlineDelegate */ __um(OnHealedDelegate);                                  // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,1843) /* FMulticastInlineDelegate */ __um(OnInjuredBleedoutStarted);                          // 0x00C8   (0x0010)  
	SDK_UNDEFINED(16,1844) /* FMulticastInlineDelegate */ __um(OnInjuredBleedoutEnded);                            // 0x00D8   (0x0010)  
	SDK_UNDEFINED(16,1845) /* FMulticastInlineDelegate */ __um(OnInjuredBleedoutKO);                               // 0x00E8   (0x0010)  
	unsigned char                                      UnknownData00_5[0x30];                                      // 0x00F8   (0x0030)  MISSED
	SDK_UNDEFINED(16,1846) /* FMulticastInlineDelegate */ __um(OnDamageStateChanged);                              // 0x0128   (0x0010)  
	SDK_UNDEFINED(16,1847) /* FMulticastInlineDelegate */ __um(OnDamageStateChangedCosmetic);                      // 0x0138   (0x0010)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0148   (0x0018)  MISSED
	FDBDTunableRowHandle                               _bleedoutBaseDuration;                                      // 0x0160   (0x0028)  
	FTagStateBool                                      _inInjuredBleedOut;                                         // 0x0188   (0x0030)  
	FDBDTimer                                          _bleedOutTimer;                                             // 0x01B8   (0x0028)  
	bool                                               _canBleedout;                                               // 0x01E0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x01E1   (0x0007)  MISSED
	TArray<class UClass*>                              _pauseInjuredBleedoutTimerInteractions;                     // 0x01E8   (0x0010)  
	int32_t                                            _currentHealthStateCount;                                   // 0x01F8   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x01FC   (0x0004)  MISSED
	int32_t                                            _numHealthyHeals;                                           // 0x0200   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0204   (0x0004)  MISSED
	FDBDTimer                                          _dyingTimer;                                                // 0x0208   (0x0028)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x0230   (0x0008)  MISSED
	class UChargeableComponent*                        _healFromDyingChargeable;                                   // 0x0238   (0x0008)  
	class UChargeableComponent*                        _healFromInjuredChargeable;                                 // 0x0240   (0x0008)  
	class UChargeableComponent*                        _mendChargeable;                                            // 0x0248   (0x0008)  
	class ADBDPlayer*                                  _injuredBleedoutInstigator;                                 // 0x0250   (0x0008)  
	unsigned char                                      UnknownData06_6[0x98];                                      // 0x0258   (0x0098)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CamperHealthComponent.SetCanBleedout
	// void SetCanBleedout(bool canBleedout);                                                                                // [0x57e99f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperHealthComponent.OnRep_InInjuredBleedOut
	// void OnRep_InInjuredBleedOut();                                                                                       // [0x57e95c0] Final|Native|Private 
	// Function /Script/DeadByDaylight.CamperHealthComponent.OnImmobilizedStateChanged
	// void OnImmobilizedStateChanged(EImmobilizedState oldImmobilizeState, EImmobilizedState newImmobilizeState);           // [0x57e9080] Final|Native|Private 
	// Function /Script/DeadByDaylight.CamperHealthComponent.OnDamageStateChangedCosmetic__DelegateSignature
	// void OnDamageStateChangedCosmetic__DelegateSignature();                                                               // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Multicast_SetHealthType
	// void Multicast_SetHealthType(EHealthType healthType);                                                                 // [0x57e89b0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Multicast_SetHealthStateFromDamageState
	// void Multicast_SetHealthStateFromDamageState(ECamperDamageState damageState, bool FireScoreEvent);                    // [0x57e88d0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Multicast_SetDamageState
	// void Multicast_SetDamageState(ECamperDamageState damageState, bool FireScoreEvent, bool sacrificed);                  // [0x57e87b0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Multicast_SetCurrentHealthStateCount
	// void Multicast_SetCurrentHealthStateCount(int32_t newHealth, bool FireScoreEvent);                                    // [0x57e86e0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Multicast_OnSurvivorGainedHealthStateByOthersEvents
	// void Multicast_OnSurvivorGainedHealthStateByOthersEvents(bool healedFromKO, class ADBDPlayer* healedSurvivor, TArray<ADBDPlayer*> Healers, TArray<bool> healedSurvivorFarEnoughAway); // [0x57e8450] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Multicast_OnInjuredBleedoutKO
	// void Multicast_OnInjuredBleedoutKO(class ADBDPlayer* injuredBleedoutInstigator);                                      // [0x57e83c0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Multicast_OnHealed
	// void Multicast_OnHealed(FCamperHealResult healResult);                                                                // [0x57e8310] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.CamperHealthComponent.IsKO
	// bool IsKO();                                                                                                          // [0x57e8010] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.IsInjuredBleedoutTimerExpired
	// bool IsInjuredBleedoutTimerExpired();                                                                                 // [0x57e7fe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.IsInjured
	// bool IsInjured();                                                                                                     // [0x57e7fb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.IsInInjuredBleedout
	// bool IsInInjuredBleedout();                                                                                           // [0x57e7f50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.IsHealthy
	// bool IsHealthy();                                                                                                     // [0x57e7e90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.IsDyingTimerExpired
	// bool IsDyingTimerExpired();                                                                                           // [0x57e7dd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.IsDead
	// bool IsDead();                                                                                                        // [0x57e7d70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.IncreaseHPSlotSize
	// void IncreaseHPSlotSize(float percent);                                                                               // [0x57e7a90] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperHealthComponent.GetPercentInjuredBleedoutTimer
	// float GetPercentInjuredBleedoutTimer();                                                                               // [0x57e7830] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.GetPercentDyingTimer
	// float GetPercentDyingTimer();                                                                                         // [0x57e77d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.GetDamageState
	// ECamperDamageState GetDamageState();                                                                                  // [0x57e7390] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.GetCurrentTotalHealthBarPercent
	// float GetCurrentTotalHealthBarPercent();                                                                              // [0x57e7360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.GetCurrentHPSlot
	// class UChargeableComponent* GetCurrentHPSlot();                                                                       // [0x57e7330] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CamperHealthComponent.CanHealSelf
	// bool CanHealSelf();                                                                                                   // [0x57e6d70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.CanBeHealedFromInjured
	// bool CanBeHealedFromInjured();                                                                                        // [0x57e6c80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.CanBeHealed
	// bool CanBeHealed();                                                                                                   // [0x57e6c50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.CanBecomeHealthy
	// bool CanBecomeHealthy();                                                                                              // [0x57e6d40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Authority_SetDamageState
	// void Authority_SetDamageState(ECamperDamageState damageState, bool FireScoreEvent, bool sacrificed);                  // [0x57e6a90] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Authority_OnSurvivorRemoved
	// void Authority_OnSurvivorRemoved(class ACamperPlayer* Survivor);                                                      // [0x57e6a00] Final|Native|Private 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Authority_OnMendChargeCompletionStateChanged
	// void Authority_OnMendChargeCompletionStateChanged(bool complete, TArray<AActor*>& instigators);                       // [0x57e6870] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Authority_OnHealthBarCharged
	// void Authority_OnHealthBarCharged(bool complete, TArray<AActor*>& instigators);                                       // [0x57e6770] Final|Native|Public|HasOutParms 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Authority_MendTryGrantScoresOnChargeApplied
	// void Authority_MendTryGrantScoresOnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime); // [0x57e65c0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Authority_HealTryGrantScoresOnChargeApplied
	// void Authority_HealTryGrantScoresOnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime); // [0x57e6410] Final|Native|Protected 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Authority_EndInjuredBleedout
	// void Authority_EndInjuredBleedout();                                                                                  // [0x57e63f0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Authority_ApplyDoubleDamage
	// void Authority_ApplyDoubleDamage(class AActor* damageSource, class ACharacter* damagePlayerOwner);                    // [0x57e6300] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Authority_ApplyDeepWound
	// void Authority_ApplyDeepWound(class AActor* damageSource, class ACharacter* damagePlayerOwner);                       // [0x57e6230] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperHealthComponent.Authority_ApplyDamage
	// void Authority_ApplyDamage(class AActor* damageSource, class ACharacter* damagePlayerOwner);                          // [0x57e6160] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PlayerInteractable
/// Size: 0x0038 (0x000338 - 0x000370)
class APlayerInteractable : public AInteractable
{ 
public:
	class UPrimitiveComponent*                         _mainInteractionZone;                                       // 0x0338   (0x0008)  
	class UInteractor*                                 _selfInteractionsInteractor;                                // 0x0340   (0x0008)  
	class USceneComponent*                             _rootComponent;                                             // 0x0348   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0350   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PlayerInteractable.InitInteractable
	// void InitInteractable(class ADBDPlayer* Player);                                                                      // [0x58d6330] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.CamperInteractable
/// Size: 0x00E8 (0x000370 - 0x000458)
class ACamperInteractable : public APlayerInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0370   (0x0008)  MISSED
	TArray<class UInteractor*>                         HealingInteractors;                                         // 0x0378   (0x0010)  
	TArray<class UChargeableInteractionDefinition*>    _healInteractions;                                          // 0x0388   (0x0010)  
	class UChargeableComponent*                        _killCharge;                                                // 0x0398   (0x0008)  
	class UActivatorComponent*                         _activator;                                                 // 0x03A0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x68];                                      // 0x03A8   (0x0068)  MISSED
	class UInteractor*                                 _killInteractor;                                            // 0x0410   (0x0008)  
	class UBoxComponent*                               _killInteractionZone;                                       // 0x0418   (0x0008)  
	class USphereComponent*                            _killHealthyInteractionZone;                                // 0x0420   (0x0008)  
	class UInteractor*                                 _healingInteractor1;                                        // 0x0428   (0x0008)  
	class UInteractor*                                 _killerInteractor;                                          // 0x0430   (0x0008)  
	class USphereComponent*                            _killerInteractionZone;                                     // 0x0438   (0x0008)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0440   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CamperInteractable.UpdateTargetHPSlot
	// void UpdateTargetHPSlot();                                                                                            // [0x57e9d70] Final|Native|Private 
	// Function /Script/DeadByDaylight.CamperInteractable.SetKillInteraction
	// void SetKillInteraction(class UInteractionDefinition* killInteraction);                                               // [0x57e9a80] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperInteractable.ServerMoveOut
	// void ServerMoveOut();                                                                                                 // [0x57e97b0] Final|Net|Native|Event|Private|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.CamperInteractable.GetSlasherInteractor
	// class UInteractor* GetSlasherInteractor();                                                                            // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperInteractable.GetOwningSurvivor
	// class ACamperPlayer* GetOwningSurvivor();                                                                             // [0x57e77a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Struct /Script/DeadByDaylight.ManagedMaterialGroup
/// Size: 0x0030 (0x000000 - 0x000030)
struct FManagedMaterialGroup
{ 
	class UObject*                                     Source;                                                     // 0x0000   (0x0008)  
	SDK_UNDEFINED(16,1848) /* FString */               __um(Group);                                                // 0x0008   (0x0010)  
	SDK_UNDEFINED(20,1849) /* FDelegateProperty */     __um(Condition);                                            // 0x0018   (0x0014)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.CamperMaterialHelperController
/// Size: 0x0088 (0x0000B8 - 0x000140)
class UCamperMaterialHelperController : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x78];                                      // 0x00B8   (0x0078)  MISSED
	TArray<FManagedMaterialGroup>                      _managedGroups;                                             // 0x0130   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.CamperMaterialHelperController.RemoveGroupsBySource
	// void RemoveGroupsBySource(class UObject* Source);                                                                     // [0x57e9640] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperMaterialHelperController.AddManagedWithCondition
	// void AddManagedWithCondition(class UObject* Source, FString Group, FDelegateProperty& Condition);                     // [0x57e5fe0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperMaterialHelperController.AddManagedGroup
	// void AddManagedGroup(class UObject* Source, FString Group);                                                           // [0x57e5f00] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDCharacterMovementComponent
/// Size: 0x0300 (0x000B10 - 0x000E10)
class UDBDCharacterMovementComponent : public UCharacterMovementComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0B10   (0x0018)  MISSED
	float                                              ProjectedWallSlidingFactor;                                 // 0x0B28   (0x0004)  
	float                                              RandomInputFrontMultiplier;                                 // 0x0B2C   (0x0004)  
	float                                              RandomInputSideMultiplier;                                  // 0x0B30   (0x0004)  
	float                                              RandomInputBackMultiplier;                                  // 0x0B34   (0x0004)  
	unsigned char                                      UnknownData01_5[0x90];                                      // 0x0B38   (0x0090)  MISSED
	bool                                               _forceUseDropStaggerFix;                                    // 0x0BC8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1F];                                      // 0x0BC9   (0x001F)  MISSED
	TArray<class UCurveFloat*>                         _maxSpeedMultiplierCurvesToRemoveOnTheServer;               // 0x0BE8   (0x0010)  
	unsigned char                                      UnknownData03_5[0x168];                                     // 0x0BF8   (0x0168)  MISSED
	class UBaseCharacterVelocityAdditiveStrategy*      _velocityAdditiveStrategy;                                  // 0x0D60   (0x0008)  
	class UBaseInputAccelerationConstraintStrategy*    _inputAccelerationConstraintStrategy;                       // 0x0D68   (0x0008)  
	class UBaseCharacterRotationStrategy*              _rotationStrategy;                                          // 0x0D70   (0x0008)  
	class AActor*                                      _lookAtTarget;                                              // 0x0D78   (0x0008)  
	unsigned char                                      UnknownData04_6[0x90];                                      // 0x0D80   (0x0090)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_StopMontage
	// void Server_StopMontage(float Timestamp, FMontageStopDefinition MontageStopDefinition);                               // [0x581e500] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_StartSnapping
	// void Server_StartSnapping(float Timestamp, FSnappingData Data, int32_t snappingCallCount, uint64_t clientTimeSync);   // [0x581e300] Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_ShowAllIncreaseMovementSpeedModifier
	// void Server_ShowAllIncreaseMovementSpeedModifier(float clientMaxSpeedMultiplierScalar, float clientcomputedMaxSpeedMultiplierScalar, TArray<FMaxSpeedValidate> clientModifiers); // [0x581e1a0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_SetStopSnapping
	// void Server_SetStopSnapping(float Timestamp, bool snapToFinalDestination);                                            // [0x581e0c0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_SetMaxSpeedOverride
	// void Server_SetMaxSpeedOverride(float Timestamp, float value, bool isSet, int32_t maxSpeedOverrideCallCount);         // [0x581df50] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_SetMaxSpeedMultiplierScalar
	// void Server_SetMaxSpeedMultiplierScalar(float Timestamp, float value);                                                // [0x581de80] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_SetMaxAcceleration
	// void Server_SetMaxAcceleration(float Timestamp, float value);                                                         // [0x581ddb0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_SetIgnorePawnCollisionOverride
	// void Server_SetIgnorePawnCollisionOverride(float Timestamp, bool isIgnoringPawnCollision, int32_t ignoringCollisionCallCount); // [0x581dc90] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_SetAdditiveMaxSpeedScalar
	// void Server_SetAdditiveMaxSpeedScalar(float Timestamp, float value);                                                  // [0x581dbc0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_ReplicateControlRotation
	// void Server_ReplicateControlRotation(char ClientRoll, uint32_t View);                                                 // [0x581daf0] Net|NetReliableNative|Event|Protected|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_RemoveMaxSpeedMovementCurve
	// void Server_RemoveMaxSpeedMovementCurve(float Timestamp, uint32_t curveNetId, EMovementCurveType movementCurveType);  // [0x581d9e0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_PlayMontage
	// void Server_PlayMontage(float Timestamp, FMontagePlaybackDefinition MontagePlaybackDefinition);                       // [0x581d8d0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_MovementTimeSync
	// void Server_MovementTimeSync(uint64_t clientTimeSync);                                                                // [0x581d810] Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_Launch
	// void Server_Launch(float Timestamp, FVector LaunchVelocity, int32_t launchCallCount);                                 // [0x581d6e0] Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Server_AddMaxSpeedMovementCurve
	// void Server_AddMaxSpeedMovementCurve(float Timestamp, uint32_t curveNetId, float Duration, float startOffset, EMovementCurveType movementCurveType); // [0x581d540] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.OnPreMontageStop
	// void OnPreMontageStop(FMontageStopDefinition montageDefinition, class UAnimMontage* Montage);                         // [0x581d260] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.OnMontageStarted
	// void OnMontageStarted(FMontagePlaybackDefinition& montageDefinition, class UAnimMontage* Montage);                    // [0x581d160] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Client_TeleportTo
	// void Client_TeleportTo(FVector_NetQuantize100 Location, FYawAndPitchRotator_NetQuantize32 Rotation);                  // [0x581bf40] Net|NetReliableNative|Event|Protected|NetClient 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Client_Stop
	// void Client_Stop();                                                                                                   // [0x581bf20] Net|NetReliableNative|Event|Protected|NetClient 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Client_RequestAllIncreaseMovementSpeed
	// void Client_RequestAllIncreaseMovementSpeed();                                                                        // [0x581bf00] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Client_PreventMovement
	// void Client_PreventMovement(bool value);                                                                              // [0x581be70] Net|NetReliableNative|Event|Protected|NetClient 
	// Function /Script/DeadByDaylight.DBDCharacterMovementComponent.Client_Cheat_SetMaxSpeedMultiplier
	// void Client_Cheat_SetMaxSpeedMultiplier(float maxSpeedMultiplier);                                                    // [0x581bde0] Net|NetReliableNative|Event|Public|NetClient 
};

/// Class /Script/DeadByDaylight.CamperMovementComponent
/// Size: 0x0090 (0x000E10 - 0x000EA0)
class UCamperMovementComponent : public UDBDCharacterMovementComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0E10   (0x0018)  MISSED
	float                                              MaxCrawlSpeed;                                              // 0x0E28   (0x0004)  
	float                                              MaxRunSpeed;                                                // 0x0E2C   (0x0004)  
	FRotator                                           _defaultRotationRate;                                       // 0x0E30   (0x000C)  
	FRotator                                           _rotationRateWhileCrawling;                                 // 0x0E3C   (0x000C)  
	class UCurveFloat*                                 _dropStaggerDuration;                                       // 0x0E48   (0x0008)  
	class UCurveFloat*                                 _dropStaggerMaxSpeed;                                       // 0x0E50   (0x0008)  
	unsigned char                                      UnknownData01_6[0x48];                                      // 0x0E58   (0x0048)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CamperMovementComponent.OnCamperHealthStateChanged
	// void OnCamperHealthStateChanged(ECamperDamageState oldDamageState, ECamperDamageState CurrentDamageState);            // [0x57e8bd0] Final|Native|Public  
	// Function /Script/DeadByDaylight.CamperMovementComponent.GetRotationRateWhileCrawling
	// FRotator GetRotationRateWhileCrawling();                                                                              // [0x57e7890] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperMovementComponent.GetDropStaggerTimeLeft
	// float GetDropStaggerTimeLeft();                                                                                       // [0x57e7400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperMovementComponent.GetDefaultRotationRate
	// FRotator GetDefaultRotationRate();                                                                                    // [0x57e73c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.DBDBasePlayer
/// Size: 0x00E0 (0x0004D0 - 0x0005B0)
class ADBDBasePlayer : public ACharacter
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x04D0   (0x0008)  MISSED
	SDK_UNDEFINED(16,1850) /* FMulticastInlineDelegate */ __um(OnCustomizationChanged);                            // 0x04D8   (0x0010)  
	unsigned char                                      UnknownData01_5[0x20];                                      // 0x04E8   (0x0020)  MISSED
	FGameplayTagContainer                              _semanticGameplayTags;                                      // 0x0508   (0x0020)  
	class UBaseGroundDetectorComponent*                _leftFootGroundDetector;                                    // 0x0528   (0x0008)  
	class UBaseGroundDetectorComponent*                _rightFootGroundDetector;                                   // 0x0530   (0x0008)  
	class UBaseGroundDetectorComponent*                _leftFrontFootGroundDetector;                               // 0x0538   (0x0008)  
	class UBaseGroundDetectorComponent*                _rightFrontFootGroundDetector;                              // 0x0540   (0x0008)  
	class UMontagePlayer*                              _montagePlayer;                                             // 0x0548   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0550   (0x0008)  MISSED
	int32_t                                            _characterIndex;                                            // 0x0558   (0x0004)  
	unsigned char                                      UnknownData03_6[0x54];                                      // 0x055C   (0x0054)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDBasePlayer.TeleportWithClothHandling
	// bool TeleportWithClothHandling(FVector& Location, FRotator& Rotation, bool checkCollisions);                          // [0x581e760] Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDBasePlayer.StopMontage
	// void StopMontage();                                                                                                   // [0x581e740] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDBasePlayer.PlayMontage
	// class UAnimMontage* PlayMontage(FAnimationMontageDescriptor animMontageID, float PlayRate, bool isFollower);          // [0x581d3b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDBasePlayer.OnCurrentMontageComplete
	// void OnCurrentMontageComplete(class UAnimMontage* MontageAsset, bool interrupted);                                    // [0x581d090] Native|Protected     
	// Function /Script/DeadByDaylight.DBDBasePlayer.OnCurrentMontageBlendingOut
	// void OnCurrentMontageBlendingOut(class UAnimMontage* MontageAsset, bool interrupted);                                 // [0x581cfc0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDBasePlayer.OnAnimInstanceChanged
	// void OnAnimInstanceChanged();                                                                                         // [0x581cfa0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDBasePlayer.Multicast_SwapCosmetics
	// void Multicast_SwapCosmetics(FName cosmeticId);                                                                       // [0x581cef0] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.DBDBasePlayer.IsPlayingMontage
	// bool IsPlayingMontage(FAnimationMontageDescriptor animMontageID);                                                     // [0x581ccd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.IsPlayingAnyMontage
	// bool IsPlayingAnyMontage();                                                                                           // [0x581cca0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetShowBlindDebugInfo
	// bool GetShowBlindDebugInfo();                                                                                         // [0x581cb80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetSemanticTag
	// FGameplayTagContainer GetSemanticTag();                                                                               // [0x581cb50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetRightFrontFootSurfaceType
	// TEnumAsByte<EPhysicalSurface> GetRightFrontFootSurfaceType();                                                         // [0x581cb10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetRightFrontFootAudioSurfaceName
	// FString GetRightFrontFootAudioSurfaceName();                                                                          // [0x581ca90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetRightFootSurfaceType
	// TEnumAsByte<EPhysicalSurface> GetRightFootSurfaceType();                                                              // [0x581ca50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetRightFootAudioSurfaceName
	// FString GetRightFootAudioSurfaceName();                                                                               // [0x581c9d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetMontagePlayer
	// class UMontagePlayer* GetMontagePlayer();                                                                             // [0x581c9b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetMontagePlaybackDefinition
	// FMontagePlaybackDefinition GetMontagePlaybackDefinition(FAnimationMontageDescriptor animMontageID, float PlayRate, bool isFollower); // [0x581c7b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetMontageLength
	// float GetMontageLength(FAnimationMontageDescriptor animMontageID);                                                    // [0x581c690] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetMontage
	// class UAnimMontage* GetMontage(FAnimationMontageDescriptor animMontageID);                                            // [0x581c570] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetLeftFrontFootSurfaceType
	// TEnumAsByte<EPhysicalSurface> GetLeftFrontFootSurfaceType();                                                          // [0x581c530] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetLeftFrontFootAudioSurfaceName
	// FString GetLeftFrontFootAudioSurfaceName();                                                                           // [0x581c4b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetLeftFootSurfaceType
	// TEnumAsByte<EPhysicalSurface> GetLeftFootSurfaceType();                                                               // [0x581c470] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetLeftFootAudioSurfaceName
	// FString GetLeftFootAudioSurfaceName();                                                                                // [0x581c3f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetCustomizedSkeletalMesh
	// class UCustomizedSkeletalMesh* GetCustomizedSkeletalMesh();                                                           // [0x581c390] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetCustomizedAudio
	// class UCustomizedAudioComponent* GetCustomizedAudio();                                                                // [0x581c360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetCharacterName
	// FName GetCharacterName();                                                                                             // [0x581c200] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetCharacterIndex
	// int32_t GetCharacterIndex();                                                                                          // [0x581c1d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetAudioComponent
	// class UAkComponent* GetAudioComponent();                                                                              // [0x581c1a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetAnimTags
	// void GetAnimTags(TArray<FName>& outTags);                                                                             // [0x581c0f0] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.GetAnimInstance
	// class UAnimInstance* GetAnimInstance();                                                                               // [0x581c0c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBasePlayer.DBD_SwapCosmetics
	// void DBD_SwapCosmetics(FName cosmeticId);                                                                             // [0x58082a0] Final|Exec|Native|Protected 
};

/// Struct /Script/DeadByDaylight.EffectCameraTypeSettings
/// Size: 0x0003 (0x000000 - 0x000003)
struct FEffectCameraTypeSettings
{ 
	ECustomizationCategory                             category;                                                   // 0x0000   (0x0001)  
	bool                                               VisibilityInFirstPerson;                                    // 0x0001   (0x0001)  
	bool                                               VisibilityInThirdPerson;                                    // 0x0002   (0x0001)  
};

/// Struct /Script/DeadByDaylight.OnMovementCacheStruct
/// Size: 0x000C (0x000000 - 0x00000C)
struct FOnMovementCacheStruct
{ 
	unsigned char                                      UnknownData00_1[0xC];                                       // 0x0000   (0x000C)  MISSED
};

/// Class /Script/DeadByDaylight.DBDPlayer
/// Size: 0x0C00 (0x0005B0 - 0x0011B0)
class ADBDPlayer : public ADBDBasePlayer
{ 
public:
	unsigned char                                      UnknownData00_2[0xA0];                                      // 0x05B0   (0x00A0)  MISSED
	bool                                               AllowInterrupting;                                          // 0x0650   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0651   (0x0003)  MISSED
	float                                              MinFallHeight;                                              // 0x0654   (0x0004)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x0658   (0x0001)  MISSED
	bool                                               IsInInteractionUpdate;                                      // 0x0659   (0x0001)  
	bool                                               IsInteractionChargeCompleted;                               // 0x065A   (0x0001)  
	unsigned char                                      UnknownData03_5[0x1];                                       // 0x065B   (0x0001)  MISSED
	float                                              PitchLimitLower;                                            // 0x065C   (0x0004)  
	float                                              PitchLimitUpper;                                            // 0x0660   (0x0004)  
	FVector                                            StrafingOffset;                                             // 0x0664   (0x000C)  
	float                                              PelvisHeight;                                               // 0x0670   (0x0004)  
	float                                              PelvisHeightForPounceOnStandingCamper;                      // 0x0674   (0x0004)  
	float                                              PelvisHeightForPounceOnCrouchingCamper;                     // 0x0678   (0x0004)  
	unsigned char                                      UnknownData04_5[0x34];                                      // 0x067C   (0x0034)  MISSED
	SDK_UNDEFINED(16,1851) /* FMulticastInlineDelegate */ __um(Authority_OnAttackedDelegate);                      // 0x06B0   (0x0010)  
	SDK_UNDEFINED(16,1852) /* FMulticastInlineDelegate */ __um(OnDamageTargetDelegate);                            // 0x06C0   (0x0010)  
	SDK_UNDEFINED(16,1853) /* FMulticastInlineDelegate */ __um(OnSensed);                                          // 0x06D0   (0x0010)  
	SDK_UNDEFINED(16,1854) /* FMulticastInlineDelegate */ __um(OnAnimNotify_Pickup);                               // 0x06E0   (0x0010)  
	SDK_UNDEFINED(16,1855) /* FMulticastInlineDelegate */ __um(OnAnimNotify_Release);                              // 0x06F0   (0x0010)  
	SDK_UNDEFINED(16,1856) /* FMulticastInlineDelegate */ __um(Authority_OnSecondaryActionInput);                  // 0x0700   (0x0010)  
	SDK_UNDEFINED(16,1857) /* FMulticastInlineDelegate */ __um(OnFirstPersonModeChanged);                          // 0x0710   (0x0010)  
	SDK_UNDEFINED(16,1858) /* FMulticastInlineDelegate */ __um(OnDreamworldComponentSet);                          // 0x0720   (0x0010)  
	SDK_UNDEFINED(16,1859) /* FMulticastInlineDelegate */ __um(OnForwardInputLockedChanged);                       // 0x0730   (0x0010)  
	class USpringArmComponent*                         CameraBoom;                                                 // 0x0740   (0x0008)  
	unsigned char                                      UnknownData05_5[0x10];                                      // 0x0748   (0x0010)  MISSED
	bool                                               ForceSkillChecks;                                           // 0x0758   (0x0001)  
	unsigned char                                      UnknownData06_5[0x7];                                       // 0x0759   (0x0007)  MISSED
	FTransform                                         IKLeftHandTransform;                                        // 0x0760   (0x0030)  
	FTransform                                         IKRightHandTransform;                                       // 0x0790   (0x0030)  
	float                                              CameraResetSpeed;                                           // 0x07C0   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x07C4   (0x0004)  MISSED
	float                                              AverageSpeedBufferTime;                                     // 0x07C8   (0x0004)  
	float                                              AlmostCurrentSpeedBufferTime;                               // 0x07CC   (0x0004)  
	class UCurveFloat*                                 GamepadYawCurve;                                            // 0x07D0   (0x0008)  
	class UCurveFloat*                                 GamepadPitchCurve;                                          // 0x07D8   (0x0008)  
	class UCurveFloat*                                 GamepadSettingToYawRateCurve;                               // 0x07E0   (0x0008)  
	class UCurveFloat*                                 GamepadSettingToPitchRateCurve;                             // 0x07E8   (0x0008)  
	class UCurveFloat*                                 JoyconSettingToYawRateCurve;                                // 0x07F0   (0x0008)  
	class UCurveFloat*                                 JoyconSettingToPitchRateCurve;                              // 0x07F8   (0x0008)  
	SDK_UNDEFINED(16,1860) /* FMulticastInlineDelegate */ __um(OnIsCrouchedChanged);                               // 0x0800   (0x0010)  
	SDK_UNDEFINED(16,1861) /* FMulticastInlineDelegate */ __um(OnRunningAndMovingChanged);                         // 0x0810   (0x0010)  
	unsigned char                                      UnknownData08_5[0x18];                                      // 0x0820   (0x0018)  MISSED
	class UCameraComponent*                            Camera;                                                     // 0x0838   (0x0008)  
	class UMaterialHelper*                             MaterialHelper;                                             // 0x0840   (0x0008)  
	unsigned char                                      UnknownData09_5[0x30];                                      // 0x0848   (0x0030)  MISSED
	class UClass*                                      Interactable;                                               // 0x0878   (0x0008)  
	unsigned char                                      UnknownData10_5[0x18];                                      // 0x0880   (0x0018)  MISSED
	class UCharacterInventoryComponent*                _characterInventoryComponent;                               // 0x0898   (0x0008)  
	FName                                              CarryJointName;                                             // 0x08A0   (0x000C)  
	float                                              _pitchOffsetForInteractionPriority;                         // 0x08AC   (0x0004)  
	class UBoxOcclusionQueryComponent*                 _renderedPixelCounter;                                      // 0x08B0   (0x0008)  
	class UBoxComponent*                               _standingOcclusionBox;                                      // 0x08B8   (0x0008)  
	class UBoxComponent*                               _crouchingOcclusionBox;                                     // 0x08C0   (0x0008)  
	class UActivatorComponent*                         _activator;                                                 // 0x08C8   (0x0008)  
	bool                                               IsInteracting;                                              // 0x08D0   (0x0001)  
	unsigned char                                      UnknownData11_5[0x3];                                       // 0x08D1   (0x0003)  MISSED
	float                                              _aiCanBeSeenTestCrouchScale;                                // 0x08D4   (0x0004)  
	float                                              _aiCanBeSeenTestRightOffset;                                // 0x08D8   (0x0004)  
	float                                              _aiCanBeSeenTestHighOffset;                                 // 0x08DC   (0x0004)  
	float                                              _aiCanBeSeenTestLowOffset;                                  // 0x08E0   (0x0004)  
	float                                              ClearPathTestRadiusMultiplier;                              // 0x08E4   (0x0004)  
	float                                              ClearPathTestHeightMultiplier;                              // 0x08E8   (0x0004)  
	float                                              LocationClearTestRadiusMultiplier;                          // 0x08EC   (0x0004)  
	float                                              LocationClearTestHeightMultiplier;                          // 0x08F0   (0x0004)  
	float                                              ClearPathTestStepHeight;                                    // 0x08F4   (0x0004)  
	float                                              MouseTurnSpeedMultiplier;                                   // 0x08F8   (0x0004)  
	float                                              MouseLookUpSpeedMultiplier;                                 // 0x08FC   (0x0004)  
	class USoundCue*                                   DeathSound;                                                 // 0x0900   (0x0008)  
	ECamperState                                       CurrentCamperState;                                         // 0x0908   (0x0001)  
	unsigned char                                      UnknownData12_5[0x3];                                       // 0x0909   (0x0003)  MISSED
	FName                                              CollectableAttachPoint;                                     // 0x090C   (0x000C)  
	class UStateMachine*                               _stateMachine;                                              // 0x0918   (0x0008)  
	class UPlayerInteractionHandler*                   _interactionHandler;                                        // 0x0920   (0x0008)  
	class UPerkManager*                                _perkManager;                                               // 0x0928   (0x0008)  
	class UDBDPlayerData*                              _playerData;                                                // 0x0930   (0x0008)  
	class APlayerInteractable*                         _interactable;                                              // 0x0938   (0x0008)  
	unsigned char                                      UnknownData13_5[0x50];                                      // 0x0940   (0x0050)  MISSED
	class ADBDPlayer*                                  _carryingPlayer;                                            // 0x0990   (0x0008)  
	unsigned char                                      UnknownData14_5[0x8];                                       // 0x0998   (0x0008)  MISSED
	class ADBDPlayer*                                  _interactingPlayer;                                         // 0x09A0   (0x0008)  
	unsigned char                                      UnknownData15_5[0x30];                                      // 0x09A8   (0x0030)  MISSED
	EAttackSubstate                                    _nextAttackSubstate;                                        // 0x09D8   (0x0001)  
	unsigned char                                      UnknownData16_5[0x7];                                       // 0x09D9   (0x0007)  MISSED
	TArray<class ADBDPlayer*>                          _hitTargets;                                                // 0x09E0   (0x0010)  
	class UCharacterDreamworldComponent*               _dreamworldComponent;                                       // 0x09F0   (0x0008)  
	class UCharacterChaseVisualComponent*              _characterChaseVisualComponent;                             // 0x09F8   (0x0008)  
	class UCameraHandlerComponent*                     _cameraHandlerComponent;                                    // 0x0A00   (0x0008)  
	class UReversibleActionSystemComponent*            _reversibleActionSystemComponent;                           // 0x0A08   (0x0008)  
	class USceneComponent*                             _itemDropOffPosition;                                       // 0x0A10   (0x0008)  
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                                // 0x0A18   (0x0008)  
	TArray<class AActor*>                              _ignoreActors;                                              // 0x0A20   (0x0010)  
	TArray<FEffectCameraTypeSettings>                  EffectCameraTypeSettings;                                   // 0x0A30   (0x0010)  
	SDK_UNDEFINED(80,1862) /* TMap<USceneComponent*, bool> */ __um(_detectionZoneEnabledMap);                      // 0x0A40   (0x0050)  
	unsigned char                                      UnknownData17_5[0x30];                                      // 0x0A90   (0x0030)  MISSED
	class UChargeableComponent*                        _blindingChargeableComponent;                               // 0x0AC0   (0x0008)  
	unsigned char                                      UnknownData18_5[0x90];                                      // 0x0AC8   (0x0090)  MISSED
	bool                                               _shouldUpdateStateMachineDriverOnPossessed;                 // 0x0B58   (0x0001)  
	unsigned char                                      UnknownData19_5[0x7];                                       // 0x0B59   (0x0007)  MISSED
	class UBlindableComponent*                         _blindableComponent;                                        // 0x0B60   (0x0008)  
	unsigned char                                      UnknownData20_5[0x4];                                       // 0x0B68   (0x0004)  MISSED
	float                                              _tutorialChargeableInteractionMultiplier;                   // 0x0B6C   (0x0004)  
	unsigned char                                      UnknownData21_5[0x8];                                       // 0x0B70   (0x0008)  MISSED
	class UPollableEventListener*                      _eventListener;                                             // 0x0B78   (0x0008)  
	unsigned char                                      UnknownData22_5[0x8];                                       // 0x0B80   (0x0008)  MISSED
	class UChaseComponent*                             _chaseComponent;                                            // 0x0B88   (0x0008)  
	class UZoneDetectorComponent*                      _meatHookZoneDetector;                                      // 0x0B90   (0x0008)  
	class UZoneDetectorComponent*                      _basementZoneDetector;                                      // 0x0B98   (0x0008)  
	unsigned char                                      UnknownData23_5[0x40];                                      // 0x0BA0   (0x0040)  MISSED
	FGameplayTagContainer                              _animGameplayTags;                                          // 0x0BE0   (0x0020)  
	unsigned char                                      UnknownData24_5[0x58];                                      // 0x0C00   (0x0058)  MISSED
	class UInteractionDefinition*                      _bookmarkedInteraction;                                     // 0x0C58   (0x0008)  
	SDK_UNDEFINED(80,1863) /* TMap<EDetectionZone, UPrimitiveComponent*> */ __um(_detectionZoneMap);               // 0x0C60   (0x0050)  
	unsigned char                                      UnknownData25_5[0x60];                                      // 0x0CB0   (0x0060)  MISSED
	class UAuthoritativeMovementComponent*             _authoritativeMovementComponent;                            // 0x0D10   (0x0008)  
	unsigned char                                      UnknownData26_5[0x314];                                     // 0x0D18   (0x0314)  MISSED
	float                                              _screenAspectRatio;                                         // 0x102C   (0x0004)  
	unsigned char                                      UnknownData27_5[0x20];                                      // 0x1030   (0x0020)  MISSED
	class UGameplayTagContainerComponent*              _objectState;                                               // 0x1050   (0x0008)  
	class UAudioFXComponent*                           _audioFXComponent;                                          // 0x1058   (0x0008)  
	class UPlayerPerspectiveComponent*                 _playerPerspectiveComponent;                                // 0x1060   (0x0008)  
	unsigned char                                      UnknownData28_5[0x8];                                       // 0x1068   (0x0008)  MISSED
	class UCharacterSightComponent*                    _characterSightComponent;                                   // 0x1070   (0x0008)  
	unsigned char                                      UnknownData29_5[0x8];                                       // 0x1078   (0x0008)  MISSED
	class UCharacterSightableComponent*                _characterSightableComponent;                               // 0x1080   (0x0008)  
	unsigned char                                      UnknownData30_5[0x10];                                      // 0x1088   (0x0010)  MISSED
	class UNavigationStateComponent*                   _navigationStateComponent;                                  // 0x1098   (0x0008)  
	class UInteractionDetectorComponent*               _interactionDetectorComponent;                              // 0x10A0   (0x0008)  
	class UPrimitivesRegistererComponent*              _clippablePrimitivesRegistererComponent;                    // 0x10A8   (0x0008)  
	class UClippableProviderComponent*                 _clippableProviderComponent;                                // 0x10B0   (0x0008)  
	class UDynamicCapsuleResizerComponent*             _dynCapsuleResizer;                                         // 0x10B8   (0x0008)  
	class UPlayerGameRelevancyComponent*               _playerGameRelevancyComponent;                              // 0x10C0   (0x0008)  
	class UContextualQuestComponent*                   _contextualQuestComponent;                                  // 0x10C8   (0x0008)  
	unsigned char                                      UnknownData31_5[0x20];                                      // 0x10D0   (0x0020)  MISSED
	class UActorComponent*                             _questEventHandler;                                         // 0x10F0   (0x0008)  
	class UChargeableProgressProviderComponent*        _presentationChargeableProgressComponent;                   // 0x10F8   (0x0008)  
	unsigned char                                      UnknownData32_5[0x18];                                      // 0x1100   (0x0018)  MISSED
	class UCurveFloat*                                 _currentGamepadYawCurve;                                    // 0x1118   (0x0008)  
	class UCurveFloat*                                 _currentGamepadPitchCurve;                                  // 0x1120   (0x0008)  
	class ADBDPlayerState*                             _associatedPlayerStateCache;                                // 0x1128   (0x0008)  
	FOnMovementCacheStruct                             _onMovementCacheStruct;                                     // 0x1130   (0x000C)  
	unsigned char                                      UnknownData33_5[0x4];                                       // 0x113C   (0x0004)  MISSED
	class UOtherCharactersVerticalCollisionsHandler*   _otherCharactersVerticalCollisionsHandler;                  // 0x1140   (0x0008)  
	unsigned char                                      UnknownData34_6[0x68];                                      // 0x1148   (0x0068)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDPlayer.UpdateLoadoutFromInventory
	// void UpdateLoadoutFromInventory();                                                                                    // [0x5849640] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.TryInteractionType
	// bool TryInteractionType(EInputInteractionType interactionInputType, class ADBDPlayer* requester, bool usingInputPersistence, bool force); // [0x58494c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.TryInteraction
	// bool TryInteraction(class UInteractionDefinition* Interaction, class ADBDPlayer* requester, bool force, bool usingInputPersistence); // [0x5849340] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.TryFireScoreEvent
	// bool TryFireScoreEvent(EDBDScoreTypes scoreType, float PercentToAward);                                               // [0x5849260] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.TriggerAnimNotify
	// void TriggerAnimNotify(EAnimNotifyType animNotifyType);                                                               // [0x58491e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.SnapCharacter
	// void SnapCharacter(bool snapPosition, FVector position, float stopSnapDistance, bool snapRotation, FRotator Rotation, float Time, bool useZCoord, bool sweepOnFinalSnap, bool snapRoll); // [0x5848f00] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.ShouldPlayCarryAnim
	// bool ShouldPlayCarryAnim();                                                                                           // [0x5848ed0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.ShouldFall
	// bool ShouldFall();                                                                                                    // [0x5848ea0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.SetShouldPlayCarryAnim
	// void SetShouldPlayCarryAnim(bool ShouldPlayCarryAnim);                                                                // [0x5848e10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.SetReverseMontage
	// void SetReverseMontage(bool Reverse);                                                                                 // [0x5848d80] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.SetQuestEventHandlerComponent
	// void SetQuestEventHandlerComponent(class UActorComponent* Component);                                                 // [0x5848cf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.SetItemUseAsToggle
	// void SetItemUseAsToggle(bool value);                                                                                  // [0x5848c60] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.SetForceDisableSkillChecks
	// void SetForceDisableSkillChecks(bool IsEnabled);                                                                      // [0x5848bd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.SetFirstPersonVfxsVisibility
	// void SetFirstPersonVfxsVisibility(bool isFirstPerson);                                                                // [0x5848b40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.SetFirstPersonModelEnabled
	// void SetFirstPersonModelEnabled(bool Enabled, bool force);                                                            // [0x5848a70] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.SetFeetOnGround
	// void SetFeetOnGround(bool feetOnGround);                                                                              // [0x58489e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.SetDetectionZoneEnabled
	// void SetDetectionZoneEnabled(EDetectionZone detectionZoneID, bool Enabled);                                           // [0x5848910] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.SetAnimationCrouchState
	// void SetAnimationCrouchState(bool crouched);                                                                          // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.SetAllowNavigation
	// void SetAllowNavigation(bool enable);                                                                                 // [0x5848880] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.SetAllDetectionZonesEnabled
	// void SetAllDetectionZonesEnabled(bool Enabled);                                                                       // [0x58487f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_UpdateScreenAspectRatio
	// void Server_UpdateScreenAspectRatio(float value);                                                                     // [0x5848760] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_SendSecondaryActionPressed
	// void Server_SendSecondaryActionPressed(bool fromCancelRequest);                                                       // [0x58486d0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_SendItemUseInput
	// void Server_SendItemUseInput(bool Pressed, bool requestItemUse);                                                      // [0x58485f0] Net|NetReliableNative|Event|Protected|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_SendItemDropInput
	// void Server_SendItemDropInput(bool Pressed);                                                                          // [0x5848560] Net|NetReliableNative|Event|Protected|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_SendInteractionInput
	// void Server_SendInteractionInput(bool Pressed);                                                                       // [0x58484d0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_SendFastInteractionInput
	// void Server_SendFastInteractionInput(bool Pressed);                                                                   // [0x5848440] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_SendEventAbilityInput
	// void Server_SendEventAbilityInput(bool Pressed);                                                                      // [0x58483b0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_SendAbilityTwoInput
	// void Server_SendAbilityTwoInput(bool Pressed);                                                                        // [0x5848320] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_SendAbilityInput
	// void Server_SendAbilityInput(bool Pressed);                                                                           // [0x5848290] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_GameTimeSync
	// void Server_GameTimeSync();                                                                                           // [0x5848240] Net|NetReliableNative|Event|Protected|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_DebugSetCustomization
	// void Server_DebugSetCustomization(FEquippedPlayerCustomization Customization);                                        // [0x5848190] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayer.Server_Broadcast_DebugPlayMontage
	// void Server_Broadcast_DebugPlayMontage(FAnimationMontageDescriptor animMontageID, float PlayRate);                    // [0x5848050] Net|NetReliableNative|Event|Protected|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayer.ResetPitchScale
	// void ResetPitchScale(float adjustTime);                                                                               // [0x5847fd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.ResetCamera
	// void ResetCamera();                                                                                                   // [0x5847fb0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.RemoveStatusEffect
	// void RemoveStatusEffect(class UStatusEffect* StatusEffect);                                                           // [0x5847f20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.OnRep_Interactable
	// void OnRep_Interactable();                                                                                            // [0x5847f00] Final|Native|Protected 
	// Function /Script/DeadByDaylight.DBDPlayer.OnRep_DreamworldComponent
	// void OnRep_DreamworldComponent();                                                                                     // [0x5847ee0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.DBDPlayer.OnPostProcessInput
	// void OnPostProcessInput();                                                                                            // [0x5847ec0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDPlayer.OnPickupStart
	// void OnPickupStart(class ADBDPlayer* Target);                                                                         // [0x5847e30] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.OnPickupEnd
	// void OnPickupEnd(class ADBDPlayer* Target);                                                                           // [0x5847da0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.OnLocallyObservedChanged
	// void OnLocallyObservedChanged();                                                                                      // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.OnLevelReadyToPlay
	// void OnLevelReadyToPlay();                                                                                            // [0x5847d80] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.OnIsCrouchedChanged__DelegateSignature
	// void OnIsCrouchedChanged__DelegateSignature(bool isCrouched);                                                         // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.DBDPlayer.OnIntroCompletedNative
	// void OnIntroCompletedNative();                                                                                        // [0x5847d60] Native|Protected     
	// Function /Script/DeadByDaylight.DBDPlayer.OnIntroCompleted
	// void OnIntroCompleted();                                                                                              // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.OnInterruptedStart
	// void OnInterruptedStart();                                                                                            // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.OnHudVisibilityChangedNative
	// void OnHudVisibilityChangedNative(bool IsVisible);                                                                    // [0x5847cd0] Native|Protected     
	// Function /Script/DeadByDaylight.DBDPlayer.OnHudVisibilityChanged
	// void OnHudVisibilityChanged(bool IsVisible);                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.OnGetCharacterName
	// FString OnGetCharacterName();                                                                                         // [0x5847c50] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.OnEscapeDoorActivated
	// void OnEscapeDoorActivated();                                                                                         // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.OnControllerChanged
	// void OnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController);      // [0x5847b40] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDPlayer.OnClientRestart
	// void OnClientRestart();                                                                                               // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.OnBlindChargeEmptied
	// void OnBlindChargeEmptied();                                                                                          // [0x5847b20] Native|Protected     
	// Function /Script/DeadByDaylight.DBDPlayer.OnAllPlayerLoaded
	// void OnAllPlayerLoaded();                                                                                             // [0x5847b00] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_SetRunVaultEnabled
	// void Multicast_SetRunVaultEnabled(bool Enabled);                                                                      // [0x5847a70] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_SetReverseTraverseEnabled
	// void Multicast_SetReverseTraverseEnabled(bool Enabled);                                                               // [0x58479e0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_SetInteractingPlayer
	// void Multicast_SetInteractingPlayer(class ADBDPlayer* interactingPlayer);                                             // [0x5847950] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_SetForceAuthoritativeMovement
	// void Multicast_SetForceAuthoritativeMovement(bool value);                                                             // [0x58478c0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_SetEnableCapsuleDynamicResize
	// void Multicast_SetEnableCapsuleDynamicResize(bool Enabled);                                                           // [0x5847830] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_SetDebugSnapPoint
	// void Multicast_SetDebugSnapPoint(bool Enabled);                                                                       // [0x58477a0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_SetDebugPrintAvailableInteractions
	// void Multicast_SetDebugPrintAvailableInteractions(bool Enabled);                                                      // [0x5847710] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_SetDebugCarry
	// void Multicast_SetDebugCarry(bool Enabled);                                                                           // [0x5847680] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_SetCustomization
	// void Multicast_SetCustomization(FEquippedPlayerCustomization Customization);                                          // [0x58475d0] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_SetContinuousPrintDebug
	// void Multicast_SetContinuousPrintDebug(bool Enabled);                                                                 // [0x5847540] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_SetAuthoritativeMovement
	// void Multicast_SetAuthoritativeMovement(bool Enabled);                                                                // [0x58474b0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_ServerResetMeshRelativeOffSet
	// void Multicast_ServerResetMeshRelativeOffSet();                                                                       // [0x5847490] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_ReplicateController
	// void Multicast_ReplicateController(class AController* NewController);                                                 // [0x5847400] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_LeaveGame
	// void Multicast_LeaveGame(FGuid uniqueLeavingPlayerId);                                                                // [0x5847360] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_Debug_SetMaxWalkSpeed
	// void Multicast_Debug_SetMaxWalkSpeed(float MaxWalkSpeed);                                                             // [0x58472d0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_ConfirmItemDrop
	// void Multicast_ConfirmItemDrop(bool Pressed);                                                                         // [0x5847240] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.DBDPlayer.Multicast_Broadcast_DebugPlayMontage
	// void Multicast_Broadcast_DebugPlayMontage(FAnimationMontageDescriptor animMontageID, float PlayRate);                 // [0x5847100] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.DBDPlayer.Local_NotifyMatchEnded
	// void Local_NotifyMatchEnded();                                                                                        // [0x58470e0] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.Local_IsInteractionInputPressed
	// bool Local_IsInteractionInputPressed(EInputInteractionType interactionType);                                          // [0x5846e40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.K2_SetActorLocationByBottomCapsule
	// bool K2_SetActorLocationByBottomCapsule(FVector NewLocation, bool bSweep, FHitResult& SweepHitResult);                // [0x5846f60] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.IsRunning
	// bool IsRunning();                                                                                                     // [0x5846f30] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsMoving
	// bool IsMoving();                                                                                                      // [0x5846f00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsLocallyObserved
	// bool IsLocallyObserved();                                                                                             // [0x5846ed0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsInTerrorRadius
	// bool IsInTerrorRadius();                                                                                              // [0x5846db0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsInteractionInputPressed
	// bool IsInteractionInputPressed(EInputInteractionType interactionType);                                                // [0x5846e40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsInStalkMode
	// bool IsInStalkMode();                                                                                                 // [0x5846d80] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsInsideCloset
	// bool IsInsideCloset();                                                                                                // [0x5846e10] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsInParadise
	// bool IsInParadise();                                                                                                  // [0x5846d50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsInMeathookZone
	// bool IsInMeathookZone();                                                                                              // [0x5846d20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsIncapacitated
	// bool IsIncapacitated();                                                                                               // [0x5846de0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsHeadHidden
	// bool IsHeadHidden();                                                                                                  // [0x5846cf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsForPreview
	// bool IsForPreview();                                                                                                  // [0x5846cd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsExhausted
	// bool IsExhausted();                                                                                                   // [0x5846ca0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsCrouchPressed
	// bool IsCrouchPressed();                                                                                               // [0x5846c40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsCrouching
	// bool IsCrouching();                                                                                                   // [0x5846c70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsCloaked
	// bool IsCloaked();                                                                                                     // [0x5846c10] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsBeingInterrupted
	// bool IsBeingInterrupted();                                                                                            // [0x5846be0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.IsAllowedNavigation
	// bool IsAllowedNavigation();                                                                                           // [0x5846bb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.HasMoveInput
	// bool HasMoveInput();                                                                                                  // [0x5846b80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.HasDamageImmunity
	// bool HasDamageImmunity();                                                                                             // [0x5846b50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.HasClearPathToTargetWithIgnore
	// bool HasClearPathToTargetWithIgnore(FVector targetPosition, TArray<AActor*>& ignoreActors);                           // [0x5846a40] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.HasClearPathToTargetWithFilter
	// bool HasClearPathToTargetWithFilter(FVector targetPosition, class UClass* ClassFilter, class AActor* IgnoreActor);    // [0x5846920] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.HasClearPathToTarget
	// bool HasClearPathToTarget(FVector targetPosition);                                                                    // [0x5846880] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetTunableValue
	// float GetTunableValue(FName Key, float defaultValue, bool warnIfRowMissing);                                          // [0x5846750] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetSharedPlayerController
	// class ADBDPlayerController* GetSharedPlayerController();                                                              // [0x5846720] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetRunVaultEnabled
	// bool GetRunVaultEnabled();                                                                                            // [0x5846700] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetReverseTraverseEnabled
	// bool GetReverseTraverseEnabled();                                                                                     // [0x58466e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetRepControlRotation
	// FRotator GetRepControlRotation();                                                                                     // [0x58466a0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetPlayerTeam
	// EPlayerTeam GetPlayerTeam();                                                                                          // [0x5846670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetPlayerRole
	// EPlayerRole GetPlayerRole();                                                                                          // [0x5846640] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetPlayerInteractionHandler
	// class UPlayerInteractionHandler* GetPlayerInteractionHandler();                                                       // [0x5846610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetPlayerDirection
	// FRotator GetPlayerDirection();                                                                                        // [0x58465d0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetPlayerController
	// class ADBDPlayerController* GetPlayerController();                                                                    // [0x58465a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetPlayerCamera
	// class UCameraComponent* GetPlayerCamera();                                                                            // [0x5846570] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetPerkManager
	// class UPerkManager* GetPerkManager();                                                                                 // [0x5846530] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetPercentMovementSpeed
	// float GetPercentMovementSpeed();                                                                                      // [0x58464f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetPawnType
	// EPawnType GetPawnType();                                                                                              // [0x58464c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetOtherCharactersVerticalCollisionsHandler
	// class UOtherCharactersVerticalCollisionsHandler* GetOtherCharactersVerticalCollisionsHandler();                       // [0x58464a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetObjectState
	// class UGameplayTagContainerComponent* GetObjectState();                                                               // [0x5846460] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetNavigationState
	// class UNavigationStateComponent* GetNavigationState();                                                                // [0x5846430] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetNameDebugString
	// FString GetNameDebugString();                                                                                         // [0x58463b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetMaxSpeed
	// float GetMaxSpeed();                                                                                                  // [0x5846380] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetLuck
	// float GetLuck();                                                                                                      // [0x5846340] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetItemModifiers
	// TArray<UItemModifier*> GetItemModifiers();                                                                            // [0x58462b0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetItemAddons
	// TArray<UItemAddon*> GetItemAddons();                                                                                  // [0x5846220] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetIsInterrupting
	// bool GetIsInterrupting();                                                                                             // [0x58461f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetIsInteracting
	// bool GetIsInteracting();                                                                                              // [0x58461c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetIsInFirstPerson
	// bool GetIsInFirstPerson();                                                                                            // [0x5846190] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetInteractionPlayerProperties
	// FInteractionPlayerProperties GetInteractionPlayerProperties();                                                        // [0x5846140] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.GetInteractionDetectorComponent
	// class UInteractionDetectorComponent* GetInteractionDetectorComponent();                                               // [0x5846110] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetInteractable
	// class AInteractable* GetInteractable();                                                                               // [0x58460e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetGrassEffectRadiusMultiplier
	// float GetGrassEffectRadiusMultiplier();                                                                               // [0x58460a0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetFirstComponentByClass
	// class UActorComponent* GetFirstComponentByClass(class UClass* ComponentClass);                                        // [0x5846000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetFeetPosition
	// FVector GetFeetPosition();                                                                                            // [0x5845fb0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetDreamworldComponent
	// class UCharacterDreamworldComponent* GetDreamworldComponent();                                                        // [0x5845f80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetDetectionZone
	// class UPrimitiveComponent* GetDetectionZone(EDetectionZone detectionZoneID);                                          // [0x5845ef0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetDBDPlayerState
	// class ADBDPlayerState* GetDBDPlayerState();                                                                           // [0x5845ec0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetCurrentInteractionAnimation
	// EInteractionAnimation GetCurrentInteractionAnimation();                                                               // [0x5845e90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetCurrentInteraction
	// class UInteractionDefinition* GetCurrentInteraction();                                                                // [0x5845e60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetChaseComponent
	// class UChaseComponent* GetChaseComponent();                                                                           // [0x5845e30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetCharacterInventoryComponent
	// class UCharacterInventoryComponent* GetCharacterInventoryComponent();                                                 // [0x5845e00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetCameraManager
	// class ADBDPlayerCameraManager* GetCameraManager();                                                                    // [0x5845dd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetBoneLocation
	// FVector GetBoneLocation(FName Name, TEnumAsByte<EBoneSpaces> space);                                                  // [0x5845cc0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetBlindableComponent
	// class UBlindableComponent* GetBlindableComponent();                                                                   // [0x5845c90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetAverageVelocity
	// FVector GetAverageVelocity();                                                                                         // [0x5845c60] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetAuthoritativeMovementComponent
	// class UAuthoritativeMovementComponent* GetAuthoritativeMovementComponent();                                           // [0x5845c20] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetAttachPoint
	// class USceneComponent* GetAttachPoint(FName attachPointName);                                                         // [0x5845b60] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetAssociatedPlayerState
	// class APlayerState* GetAssociatedPlayerState();                                                                       // [0x5845b30] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.GetActorLocationFromFeetLocation
	// FVector GetActorLocationFromFeetLocation(FVector feetLocation);                                                       // [0x5845a80] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.FindClosestSlashablePlayerInDetectionZone
	// class ADBDPlayer* FindClosestSlashablePlayerInDetectionZone(EDetectionZone detectionZoneID);                          // [0x58459f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.Dissolve
	// void Dissolve(bool Dissolve);                                                                                         // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.DetachInteractor
	// void DetachInteractor();                                                                                              // [0x58459d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.DBDUnCrouch
	// void DBDUnCrouch();                                                                                                   // [0x5845830] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.DBDCrouch
	// void DBDCrouch();                                                                                                     // [0x5845810] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayer.DBD_ToggleForceAuthoritativeMovement
	// void DBD_ToggleForceAuthoritativeMovement();                                                                          // [0x58459b0] Final|Exec|Native|Private 
	// Function /Script/DeadByDaylight.DBDPlayer.DBD_ToggleDebugInteractionInZone
	// void DBD_ToggleDebugInteractionInZone();                                                                              // [0x5845990] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.DBD_SetMouseTurnSpeedMultiplier
	// void DBD_SetMouseTurnSpeedMultiplier(float value);                                                                    // [0x5845910] Final|Exec|Native|Protected 
	// Function /Script/DeadByDaylight.DBDPlayer.DBD_SetMouseLookUpSpeedMultiplier
	// void DBD_SetMouseLookUpSpeedMultiplier(float value);                                                                  // [0x5845890] Final|Exec|Native|Protected 
	// Function /Script/DeadByDaylight.DBDPlayer.DBD_DebugStartInteraction
	// void DBD_DebugStartInteraction();                                                                                     // [0x5845870] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayer.DBD_CancelInteraction
	// void DBD_CancelInteraction();                                                                                         // [0x5845850] Final|Exec|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.Client_TryInteractionType
	// void Client_TryInteractionType(EInputInteractionType interactionType, class ADBDPlayer* requester);                   // [0x5845740] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.Client_TryInteraction
	// void Client_TryInteraction(class UInteractionDefinition* Interaction, class ADBDPlayer* requester, bool force, bool usingInputPersistence); // [0x58455e0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayer.Client_SendCancelInteraction
	// void Client_SendCancelInteraction(class UInteractionDefinition* InteractionDefinition);                               // [0x5845550] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.Client_Debug_PlayerStartSnapping
	// void Client_Debug_PlayerStartSnapping(FVector Location, float Duration);                                              // [0x5845480] Final|Net|NetReliableNative|Event|Private|HasDefaults|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayer.CanInterrupt_BP
	// bool CanInterrupt_BP();                                                                                               // [0x58453c0] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.CancelCarry
	// void CancelCarry(bool alsoCancelForOtherPlayer);                                                                      // [0x58453f0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.CameraUpdated
	// void CameraUpdated();                                                                                                 // [0x58453a0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.Authority_SetDreamworldComponent
	// void Authority_SetDreamworldComponent(class UCharacterDreamworldComponent* Component);                                // [0x5845310] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.Authority_RequestStun
	// void Authority_RequestStun(EStunType stunType, class ADBDPlayer* stunner);                                            // [0x5845240] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.Authority_HandleScoreEvent
	// void Authority_HandleScoreEvent(FGameplayTag scoreTypeTag, FScoreEventData ScoreEventData);                           // [0x5845120] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.Authority_EvaluateIfPlayerCanSee
	// void Authority_EvaluateIfPlayerCanSee();                                                                              // [0x5845100] Final|Native|Private|Const 
	// Function /Script/DeadByDaylight.DBDPlayer.AttachInteractor
	// void AttachInteractor(class UInteractor* Interactor);                                                                 // [0x5845070] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayer.AddDetectionZone
	// void AddDetectionZone(EDetectionZone detectionZoneID, class UPrimitiveComponent* zone);                               // [0x5844fa0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CamperPlayer
/// Size: 0x04D0 (0x0011B0 - 0x001680)
class ACamperPlayer : public ADBDPlayer
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x11B0   (0x0018)  MISSED
	SDK_UNDEFINED(16,1864) /* FMulticastInlineDelegate */ __um(OnHookedStateChanged);                              // 0x11C8   (0x0010)  
	SDK_UNDEFINED(16,1865) /* FMulticastInlineDelegate */ __um(OnGuidedStateChanged);                              // 0x11D8   (0x0010)  
	SDK_UNDEFINED(16,1866) /* FMulticastInlineDelegate */ __um(OnPickedUpDelegate);                                // 0x11E8   (0x0010)  
	SDK_UNDEFINED(16,1867) /* FMulticastInlineDelegate */ __um(OnPickedUpEndDelegate);                             // 0x11F8   (0x0010)  
	SDK_UNDEFINED(16,1868) /* FMulticastInlineDelegate */ __um(OnHPSlotChanged);                                   // 0x1208   (0x0010)  
	unsigned char                                      UnknownData01_5[0x40];                                      // 0x1218   (0x0040)  MISSED
	SDK_UNDEFINED(16,1869) /* FMulticastInlineDelegate */ __um(OnImmobilizeStateChanged);                          // 0x1258   (0x0010)  
	unsigned char                                      UnknownData02_5[0x30];                                      // 0x1268   (0x0030)  MISSED
	SDK_UNDEFINED(16,1870) /* FMulticastInlineDelegate */ __um(OnHookEscapeFailedCosmetic);                        // 0x1298   (0x0010)  
	FName                                              ReverseBearTrapAttachSocket;                                // 0x12A8   (0x000C)  
	bool                                               isBeingDissolved;                                           // 0x12B4   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x12B5   (0x0003)  MISSED
	float                                              FootprintAudibleRange;                                      // 0x12B8   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x12BC   (0x0004)  MISSED
	class UStalkedComponent*                           StalkedComponent;                                           // 0x12C0   (0x0008)  
	float                                              CameraResetToleranceYaw;                                    // 0x12C8   (0x0004)  
	float                                              CameraResetTolerancePitch;                                  // 0x12CC   (0x0004)  
	float                                              CameraRecenterOffsetYaw;                                    // 0x12D0   (0x0004)  
	float                                              CameraRecenterOffsetPitch;                                  // 0x12D4   (0x0004)  
	EGender                                            gender;                                                     // 0x12D8   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x12D9   (0x0007)  MISSED
	class UCurveFloat*                                 DropStaggerDuration;                                        // 0x12E0   (0x0008)  
	class UCurveFloat*                                 DropStaggerMaxSpeed;                                        // 0x12E8   (0x0008)  
	float                                              TimeforDeathWhileCrawling;                                  // 0x12F0   (0x0004)  
	float                                              TimeforDeathWhileHooked;                                    // 0x12F4   (0x0004)  
	float                                              SecondsUntilFootprintTrigger;                               // 0x12F8   (0x0004)  
	bool                                               TriggerAfflictionHUDIntro;                                  // 0x12FC   (0x0001)  
	unsigned char                                      UnknownData06_5[0x93];                                      // 0x12FD   (0x0093)  MISSED
	class APlayerController*                           _storedPlayerController;                                    // 0x1390   (0x0008)  
	class UCamperStillnessTrackerComponent*            _stillnessTracker;                                          // 0x1398   (0x0008)  
	float                                              PartiallyHiddenStillnessThreshold;                          // 0x13A0   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x13A4   (0x0004)  MISSED
	class AActor*                                      _escape;                                                    // 0x13A8   (0x0008)  
	class AActor*                                      _overlappingEscape;                                         // 0x13B0   (0x0008)  
	class USpherePlayerOverlapComponent*               ProximityZone;                                              // 0x13B8   (0x0008)  
	unsigned char                                      UnknownData08_5[0x18];                                      // 0x13C0   (0x0018)  MISSED
	class UCapsuleComponent*                           SlashableZone;                                              // 0x13D8   (0x0008)  
	class UCapsuleComponent*                           HookSlashableZone;                                          // 0x13E0   (0x0008)  
	class UCamperSlashableComponent*                   _camperSlashable;                                           // 0x13E8   (0x0008)  
	class UMoriableComponent*                          _moriableComponent;                                         // 0x13F0   (0x0008)  
	float                                              CrouchCapsuleHalfHeight;                                    // 0x13F8   (0x0004)  
	float                                              IKOffsetRightFoot;                                          // 0x13FC   (0x0004)  
	float                                              IKOffsetLeftFoot;                                           // 0x1400   (0x0004)  
	unsigned char                                      UnknownData09_5[0xC];                                       // 0x1404   (0x000C)  MISSED
	class UDBDPawnSensingComponent*                    _camperSensor;                                              // 0x1410   (0x0008)  
	class USurviveTimerScoreEventComponent*            _surviveTimerScoreComponent;                                // 0x1418   (0x0008)  
	unsigned char                                      UnknownData10_5[0x18];                                      // 0x1420   (0x0018)  MISSED
	TArray<class ADBDPlayer*>                          _foundCampers;                                              // 0x1438   (0x0010)  
	TArray<class ADBDPlayer*>                          _potentialSaviors;                                          // 0x1448   (0x0010)  
	class UCamperHealthComponent*                      _healthComponent;                                           // 0x1458   (0x0008)  
	class UChargeableComponent*                        _hpSlot01;                                                  // 0x1460   (0x0008)  
	class UChargeableComponent*                        _hpSlot02;                                                  // 0x1468   (0x0008)  
	class UChargeableComponent*                        _mendChargeable;                                            // 0x1470   (0x0008)  
	class UBloodTrailSettings*                         _bloodTrailSettings;                                        // 0x1478   (0x0008)  
	class UCamperBloodTrailComponent*                  _bloodTrailComponent;                                       // 0x1480   (0x0008)  
	class UCameraAttachmentComponent*                  _cameraAttachment;                                          // 0x1488   (0x0008)  
	class UCharmSpawnerComponent*                      _charmSpawnerComponent;                                     // 0x1490   (0x0008)  
	class UHookableComponent*                          _hookableComponent;                                         // 0x1498   (0x0008)  
	class UProtectionHitComponent*                     _protectionHitComponent;                                    // 0x14A0   (0x0008)  
	class UScreamComponent*                            _screamComponent;                                           // 0x14A8   (0x0008)  
	class UCharacterPositionRecorderComponent*         _positionRecorder;                                          // 0x14B0   (0x0008)  
	unsigned char                                      UnknownData11_5[0xA5];                                      // 0x14B8   (0x00A5)  MISSED
	bool                                               _lastEscaped;                                               // 0x155D   (0x0001)  
	unsigned char                                      UnknownData12_5[0x6];                                       // 0x155E   (0x0006)  MISSED
	bool                                               _runInputPressed;                                           // 0x1564   (0x0001)  
	unsigned char                                      UnknownData13_5[0x23];                                      // 0x1565   (0x0023)  MISSED
	bool                                               _trapIndicatorActive;                                       // 0x1588   (0x0001)  
	unsigned char                                      UnknownData14_5[0x7];                                       // 0x1589   (0x0007)  MISSED
	class UCamperEndGameComponent*                     _camperEndGameComponent;                                    // 0x1590   (0x0008)  
	class UAkComponent*                                _noOcclusionAkComponent;                                    // 0x1598   (0x0008)  
	class UAkComponent*                                _attenuationAkComponent;                                    // 0x15A0   (0x0008)  
	unsigned char                                      UnknownData15_5[0x24];                                      // 0x15A8   (0x0024)  MISSED
	bool                                               _isBeingSacrificed;                                         // 0x15CC   (0x0001)  
	bool                                               _isWiggleProgressionAllowed;                                // 0x15CD   (0x0001)  
	unsigned char                                      UnknownData16_5[0x6A];                                      // 0x15CE   (0x006A)  MISSED
	class UMoveComponentToComponent*                   _meshMover;                                                 // 0x1638   (0x0008)  
	class UCarriedMovementComponent*                   _carriedMovementComponent;                                  // 0x1640   (0x0008)  
	SDK_UNDEFINED(8,1871) /* TWeakObjectPtr<UAntiCampSelfUnhookMeterComponent*> */ __um(_antiCampSelfUnhookMeterComponent); // 0x1648   (0x0008)  
	class USurvivorHitSprintEffect*                    _sprintEffect;                                              // 0x1650   (0x0008)  
	class UClass*                                      _sprintOnHitEffectClass;                                    // 0x1658   (0x0008)  
	unsigned char                                      UnknownData17_6[0x20];                                      // 0x1660   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CamperPlayer.UpdateHealingTimer
	// void UpdateHealingTimer(float DeltaTime);                                                                             // [0x57e9cf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.TriggerPutDownAnimation
	// void TriggerPutDownAnimation();                                                                                       // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.TriggerPickUpAnimation
	// void TriggerPickUpAnimation();                                                                                        // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.TriggerAfflictionHUDFeedback
	// void TriggerAfflictionHUDFeedback();                                                                                  // [0x57e9cd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.StopHealingTimer
	// void StopHealingTimer();                                                                                              // [0x57e9cb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.StartHealingTimer
	// void StartHealingTimer(float Time);                                                                                   // [0x57e9ba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.SetVignetteVisible
	// void SetVignetteVisible(bool visible);                                                                                // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.SetPlayerExposedVFX
	// void SetPlayerExposedVFX();                                                                                           // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.SetBeingCarried
	// void SetBeingCarried(bool IsBeingCarried, class ADBDPlayer* carrier);                                                 // [0x57e9920] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.Server_SetRunInput
	// void Server_SetRunInput(bool Pressed);                                                                                // [0x57e9890] Net|NetReliableNative|Event|Protected|NetServer 
	// Function /Script/DeadByDaylight.CamperPlayer.Server_SetOverlappingEscape
	// void Server_SetOverlappingEscape(class AActor* Escape);                                                               // [0x57e9800] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.CamperPlayer.RunLocked
	// void RunLocked(bool lock);                                                                                            // [0x57e9720] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.ResetPotentialSaviors
	// void ResetPotentialSaviors();                                                                                         // [0x57e96f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.ResetCameraAttach
	// void ResetCameraAttach();                                                                                             // [0x57e96d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.RemoveReverseBearTrap
	// void RemoveReverseBearTrap();                                                                                         // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.OnUnhooked
	// void OnUnhooked();                                                                                                    // [0x57e9620] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.OnRep_SprintEffect
	// void OnRep_SprintEffect();                                                                                            // [0x57e9600] Final|Native|Private 
	// Function /Script/DeadByDaylight.CamperPlayer.OnRep_RunInputPressed
	// void OnRep_RunInputPressed();                                                                                         // [0x57e95e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.CamperPlayer.OnProximityEntered
	// void OnProximityEntered(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x57e93a0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.CamperPlayer.OnPickUpEnter
	// void OnPickUpEnter(class ADBDPlayer* picker, float TransitionTime);                                                   // [0x57e92d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.OnPickUpDenied
	// void OnPickUpDenied();                                                                                                // [0x57e92b0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.OnPawnSensed
	// void OnPawnSensed(class APawn* Pawn);                                                                                 // [0x57e9220] Final|Native|Private 
	// Function /Script/DeadByDaylight.CamperPlayer.OnObsessionChanged
	// void OnObsessionChanged(class ACamperPlayer* newObsession, class ACamperPlayer* previousObsession);                   // [0x57e9150] Final|Native|Public  
	// Function /Script/DeadByDaylight.CamperPlayer.OnHpSlotSkillCheckResponseAesthetic
	// void OnHpSlotSkillCheckResponseAesthetic(bool success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, ESkillCheckCustomType Type, float ChargeChange); // [0x57e8e40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.OnHookedStateChangedCosmetic
	// void OnHookedStateChangedCosmetic(bool hooked);                                                                       // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.OnHooked
	// void OnHooked();                                                                                                      // [0x57e8e20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.OnFinishedPlaying
	// void OnFinishedPlaying();                                                                                             // [0x57e8e00] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.OnDroppedStart
	// void OnDroppedStart(class ADBDPlayer* dropper);                                                                       // [0x57e8d50] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.OnDroppedEnd
	// void OnDroppedEnd(bool clearLeader);                                                                                  // [0x57e8cc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.OnDroppedByBearTrap
	// void OnDroppedByBearTrap();                                                                                           // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.Multicast_SetOverlappingEscape
	// void Multicast_SetOverlappingEscape(class AActor* Escape);                                                            // [0x57e8b40] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.CamperPlayer.Multicast_SetImmobilized
	// void Multicast_SetImmobilized(EImmobilizedState State);                                                               // [0x57e8ac0] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.CamperPlayer.Multicast_SetHookEscapeAutoFail
	// void Multicast_SetHookEscapeAutoFail(bool Enabled);                                                                   // [0x57e8a30] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.CamperPlayer.Multicast_SetAuthoritativeMovementFlag
	// void Multicast_SetAuthoritativeMovementFlag(EAuthoritativeMovementFlag flag, bool value);                             // [0x57e8600] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.CamperPlayer.Multicast_RemoveReverseBearTrap
	// void Multicast_RemoveReverseBearTrap();                                                                               // [0x57e85e0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.CamperPlayer.Multicast_EscapeItemEvents
	// void Multicast_EscapeItemEvents(bool isItemFromSpawn);                                                                // [0x57e8280] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.CamperPlayer.MakeCamperDisappearBleedOut
	// void MakeCamperDisappearBleedOut();                                                                                   // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.MakeCamperDisappear
	// void MakeCamperDisappear();                                                                                           // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.Local_SetImmobilized
	// void Local_SetImmobilized(EImmobilizedState State);                                                                   // [0x57e8200] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.Kill
	// void Kill(EHealthType healthType);                                                                                    // [0x57e8180] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.IsVaulting
	// bool IsVaulting();                                                                                                    // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsUnintentionallyImmobilized
	// bool IsUnintentionallyImmobilized();                                                                                  // [0x57e8150] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsUnhookingSelf
	// bool IsUnhookingSelf();                                                                                               // [0x57e8120] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsTrapped
	// bool IsTrapped();                                                                                                     // [0x57e80f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsSacrificed
	// bool IsSacrificed();                                                                                                  // [0x57e80c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsRunLocked
	// bool IsRunLocked();                                                                                                   // [0x57e80a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.IsObsessionTarget
	// bool IsObsessionTarget();                                                                                             // [0x57e8070] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsMovementGuided
	// bool IsMovementGuided();                                                                                              // [0x57e8040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsInNeed
	// bool IsInNeed();                                                                                                      // [0x57e7f80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsInDeathBed
	// bool IsInDeathBed();                                                                                                  // [0x57e7f20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsImmobilized
	// bool IsImmobilized();                                                                                                 // [0x57e7ef0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsHooked
	// bool IsHooked();                                                                                                      // [0x57e7ec0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsHealingTimerExpired
	// bool IsHealingTimerExpired();                                                                                         // [0x57e7e60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsGuidedBySlasher
	// bool IsGuidedBySlasher();                                                                                             // [0x57e7e30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsEscaped
	// bool IsEscaped();                                                                                                     // [0x57e7e00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsDeadOrInParadise
	// bool IsDeadOrInParadise();                                                                                            // [0x57e7da0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsCrawling
	// bool IsCrawling();                                                                                                    // [0x57e7d40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsBeingUnhooked
	// bool IsBeingUnhooked();                                                                                               // [0x57e7d10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsBeingPutOnHook
	// bool IsBeingPutOnHook();                                                                                              // [0x57e7ce0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsBeingPutDown
	// bool IsBeingPutDown();                                                                                                // [0x57e7cb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsBeingPulledFromCloset
	// bool IsBeingPulledFromCloset();                                                                                       // [0x57e7c80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsBeingPickedUp
	// bool IsBeingPickedUp();                                                                                               // [0x57e7c50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsBeingMended
	// bool IsBeingMended();                                                                                                 // [0x57e7c20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsBeingKilled
	// bool IsBeingKilled();                                                                                                 // [0x57e7bf0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsBeingInteractedWith
	// bool IsBeingInteractedWith();                                                                                         // [0x57e7bc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsBeingHealed
	// bool IsBeingHealed();                                                                                                 // [0x57e7b90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsBeingEndGameSacrificed
	// bool IsBeingEndGameSacrificed();                                                                                      // [0x57e7b60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.IsBeingCarried
	// bool IsBeingCarried();                                                                                                // [0x57e7b30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.Input_ToggleRun
	// void Input_ToggleRun();                                                                                               // [0x57e7b10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.HatchEscapeZoneEntered
	// void HatchEscapeZoneEntered(class AActor* Escape);                                                                    // [0x57e7a00] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.HasReverseBearTrap
	// bool HasReverseBearTrap();                                                                                            // [0x57e79d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.HasHitEvents
	// bool HasHitEvents();                                                                                                  // [0x57e79a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.HasGuidedAction
	// bool HasGuidedAction();                                                                                               // [0x57e7970] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetWiggleChargeable
	// class UChargeableComponent* GetWiggleChargeable();                                                                    // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetToAimPointRotation
	// FRotator GetToAimPointRotation();                                                                                     // [0x57e7930] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetStillness
	// float GetStillness();                                                                                                 // [0x57e7900] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetReverseBearTrap
	// class AReverseBearTrap* GetReverseBearTrap();                                                                         // [0x57e7860] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetPercentHealingTimer
	// float GetPercentHealingTimer();                                                                                       // [0x57e7800] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetOverlappingEscape
	// class AActor* GetOverlappingEscape();                                                                                 // [0x57e7780] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetObsessionTargetWeight
	// float GetObsessionTargetWeight();                                                                                     // [0x57e7750] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetNumberOfEntityRenderRegions
	// int32_t GetNumberOfEntityRenderRegions();                                                                             // [0x57e7720] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetNoOcclusionAudioComponent
	// class UAkComponent* GetNoOcclusionAudioComponent();                                                                   // [0x57e76f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetMontageFollower
	// class UAnimationMontageSlave* GetMontageFollower();                                                                   // [0x57e76c0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CamperPlayer.GetMeshMover
	// class UMoveComponentToComponent* GetMeshMover();                                                                      // [0x57e7690] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetMaxGruntDistance
	// float GetMaxGruntDistance(bool isLocalPlayerKiller);                                                                  // [0x57e75f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetIsWiggleProgressionAllowed
	// bool GetIsWiggleProgressionAllowed();                                                                                 // [0x57e75c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetIsBeingDissolved
	// bool GetIsBeingDissolved();                                                                                           // [0x57e7590] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetImmobilizedState
	// EImmobilizedState GetImmobilizedState();                                                                              // [0x57e7560] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetHookableComponent
	// class UHookableComponent* GetHookableComponent();                                                                     // [0x57e7530] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetHealthComponent
	// class UCamperHealthComponent* GetHealthComponent();                                                                   // [0x57e7500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetGuidedAction
	// EGuidedState GetGuidedAction();                                                                                       // [0x57e74d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetEntityRenderRegionAtIndex
	// class UDBDClipRegionComponent* GetEntityRenderRegionAtIndex(int32_t InIndex);                                         // [0x57e7430] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetChaseeCharacterComponent
	// class UChaseeCharacterComponent* GetChaseeCharacterComponent();                                                       // [0x57e7300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetCamperStillnessComponent
	// class UCamperStillnessTrackerComponent* GetCamperStillnessComponent();                                                // [0x57e72e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.GetCameraAttachmentComponent
	// class UCameraAttachmentComponent* GetCameraAttachmentComponent();                                                     // [0x57e72b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetBloodTrailComponent
	// class UCamperBloodTrailComponent* GetBloodTrailComponent();                                                           // [0x57e7280] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetAttenuationAudioComponent
	// class UAkComponent* GetAttenuationAudioComponent();                                                                   // [0x57e7250] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetAllEntityRenderRegions
	// TArray<UDBDClipRegionComponent*> GetAllEntityRenderRegions();                                                         // [0x57e71d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.GetAimPoint
	// FVector GetAimPoint();                                                                                                // [0x57e7190] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.EventOnDeath
	// void EventOnDeath();                                                                                                  // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.EscapeTutorial
	// void EscapeTutorial();                                                                                                // [0x57e7150] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.DoSacrificialDissolve
	// void DoSacrificialDissolve();                                                                                         // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.DetachFromGuidingPlayer
	// void DetachFromGuidingPlayer();                                                                                       // [0x57e7130] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.DecalBlood_Puddles
	// void DecalBlood_Puddles();                                                                                            // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.DBD_SetSurvivorCameraArmLengthCommand
	// void DBD_SetSurvivorCameraArmLengthCommand(float cameraArmLength);                                                    // [0x57e70b0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.CamperPlayer.DBD_SetSurvivorCameraArmLength
	// void DBD_SetSurvivorCameraArmLength(float cameraArmLength);                                                           // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.DBD_SetImmobilized
	// void DBD_SetImmobilized(EImmobilizedState State);                                                                     // [0x57e7030] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.CamperPlayer.DBD_LeaveParadise
	// void DBD_LeaveParadise();                                                                                             // [0x57e7010] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.DBD_ForceRun
	// void DBD_ForceRun(bool Forced);                                                                                       // [0x57e6f80] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.CamperPlayer.DBD_CheatEscaped
	// void DBD_CheatEscaped();                                                                                              // [0x57e6f60] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.ComputeInteractionSuccessPercentage
	// float ComputeInteractionSuccessPercentage(class UInteractionDefinition* Interaction);                                 // [0x57e6ec0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.ComputeHookEscapeResult
	// bool ComputeHookEscapeResult();                                                                                       // [0x57e6e90] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.ComputeBeartrapEscapeResult
	// bool ComputeBeartrapEscapeResult();                                                                                   // [0x57e6e60] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.Client_OnSlashedOutOfTrap
	// void Client_OnSlashedOutOfTrap(class ADBDPlayer* requester);                                                          // [0x57e6dd0] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.CanRushQuietly
	// bool CanRushQuietly();                                                                                                // [0x57e6da0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.CanBeShocked
	// bool CanBeShocked();                                                                                                  // [0x57e6d10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.CanBePickedUp
	// bool CanBePickedUp();                                                                                                 // [0x57e6ce0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.CanBeKilled
	// bool CanBeKilled();                                                                                                   // [0x57e6cb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CamperPlayer.CallOnDroppedByBearTrap
	// void CallOnDroppedByBearTrap();                                                                                       // [0x57e6c30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.Authority_SetImmobilized
	// void Authority_SetImmobilized(EImmobilizedState State);                                                               // [0x57e6bb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.Authority_OnSlashed
	// void Authority_OnSlashed(class ADBDPlayer* Attacker);                                                                 // [0x57e6970] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.Authority_ApplySprintEffect
	// void Authority_ApplySprintEffect();                                                                                   // [0x57e63d0] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.AttachToGuidingPlayer
	// void AttachToGuidingPlayer();                                                                                         // [0x57e6140] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.AddBloodDropsToRightHand
	// void AddBloodDropsToRightHand();                                                                                      // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.AddBloodDropsToLeftHand
	// void AddBloodDropsToLeftHand();                                                                                       // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.AddBloodDrippingToGK_Mori
	// void AddBloodDrippingToGK_Mori();                                                                                     // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.AddBloodDecalToGK_Mori
	// void AddBloodDecalToGK_Mori();                                                                                        // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.ActivatePlayerExposedVFX
	// void ActivatePlayerExposedVFX();                                                                                      // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.ActivateLocalPlayerExposedVFX
	// void ActivateLocalPlayerExposedVFX();                                                                                 // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.CamperPlayer.ActionInputReleased
	// void ActionInputReleased();                                                                                           // [0x57e5ee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.ActionInputPressed
	// void ActionInputPressed();                                                                                            // [0x57e5ec0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperPlayer.AcceptsHealing
	// bool AcceptsHealing();                                                                                                // [0x57e5e90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.CamperSlashableComponent
/// Size: 0x00F8 (0x0000B8 - 0x0001B0)
class UCamperSlashableComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00B8   (0x0008)  MISSED
	class UCapsuleComponent*                           _slashableZone;                                             // 0x00C0   (0x0008)  
	class UCapsuleComponent*                           _hookSlashableZone;                                         // 0x00C8   (0x0008)  
	float                                              _standingCapsuleHalfHeight;                                 // 0x00D0   (0x0004)  
	float                                              _crouchCapsuleHalfHeight;                                   // 0x00D4   (0x0004)  
	FGameplayTagContainer                              _slashableDisablingStateTags;                               // 0x00D8   (0x0020)  
	float                                              _sourceActivationLingerDuration;                            // 0x00F8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x34];                                      // 0x00FC   (0x0034)  MISSED
	class USlashableActivationSourceCollection*        _slashableActivationSources;                                // 0x0130   (0x0008)  
	unsigned char                                      UnknownData02_6[0x78];                                      // 0x0138   (0x0078)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CamperSlashableComponent.SetUseCrouchSlashableCapsule
	// void SetUseCrouchSlashableCapsule(bool useCrouchCapsule);                                                             // [0x57ef080] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperSlashableComponent.SetStandingCapsuleHalfHeight
	// void SetStandingCapsuleHalfHeight(float Height);                                                                      // [0x5060b20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperSlashableComponent.SetSlashableZone
	// void SetSlashableZone(class UCapsuleComponent* zone);                                                                 // [0x57eeff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperSlashableComponent.SetHookSlashableZone
	// void SetHookSlashableZone(class UCapsuleComponent* zone);                                                             // [0x57eef60] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperSlashableComponent.SetCrouchCapsuleHalfHeight
	// void SetCrouchCapsuleHalfHeight(float Height);                                                                        // [0x57eeee0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PlayerStateMachine
/// Size: 0x0000 (0x000130 - 0x000130)
class UPlayerStateMachine : public UStateMachine
{ 
public:
};

/// Class /Script/DeadByDaylight.CamperStateMachine
/// Size: 0x0000 (0x000130 - 0x000130)
class UCamperStateMachine : public UPlayerStateMachine
{ 
public:
};

/// Class /Script/DeadByDaylight.StillnessTrackerComponent
/// Size: 0x0038 (0x0000B8 - 0x0000F0)
class UStillnessTrackerComponent : public UActorComponent
{ 
public:
	float                                              SpeedThreshold;                                             // 0x00B8   (0x0004)  
	float                                              DistanceThreshold;                                          // 0x00BC   (0x0004)  
	float                                              DistanceDecay;                                              // 0x00C0   (0x0004)  
	bool                                               DecayWhileMoving;                                           // 0x00C4   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00C5   (0x0003)  MISSED
	float                                              StillnessThreshhold;                                        // 0x00C8   (0x0004)  
	float                                              StillnessTimerLimit;                                        // 0x00CC   (0x0004)  
	float                                              DecaySpeedMultiplier;                                       // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x00D4   (0x0008)  MISSED
	SDK_UNDEFINED(8,1872) /* TWeakObjectPtr<ADBDPlayer*> */ __um(_trackedPlayer);                                  // 0x00DC   (0x0008)  
	unsigned char                                      UnknownData02_6[0xC];                                       // 0x00E4   (0x000C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.StillnessTrackerComponent.StartTracking
	// void StartTracking();                                                                                                 // [0x509c9d0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.CamperStillnessTrackerComponent
/// Size: 0x0060 (0x0000F0 - 0x000150)
class UCamperStillnessTrackerComponent : public UStillnessTrackerComponent
{ 
public:
	float                                              ChickenShitModifier;                                        // 0x00F0   (0x0004)  
	float                                              LoudNoiseTime;                                              // 0x00F4   (0x0004)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x00F8   (0x0010)  MISSED
	TArray<float>                                      ExposerSpawnTimes;                                          // 0x0108   (0x0010)  
	TArray<float>                                      ExposerDespawnTimes;                                        // 0x0118   (0x0010)  
	class UClass*                                      _exposerInstanceToSpawn;                                    // 0x0128   (0x0008)  
	TArray<class ACamperExposerInstance*>              _exposerInstances;                                          // 0x0130   (0x0010)  
	class UExposerInteriorZoneComponent*               _interiorZone;                                              // 0x0140   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0148   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CamperStillnessTrackerComponent.OnOverlapExit
	// void OnOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x57eeb30] Final|Native|Protected 
	// Function /Script/DeadByDaylight.CamperStillnessTrackerComponent.OnOverlapEnter
	// void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x57ee910] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.CamperStillnessTrackerComponent.OnLevelReadyToPlay
	// void OnLevelReadyToPlay();                                                                                            // [0x57ee860] Final|Native|Protected 
	// Function /Script/DeadByDaylight.CamperStillnessTrackerComponent.ExitInteriorZone
	// void ExitInteriorZone(class UExposerInteriorZoneComponent* zone);                                                     // [0x57edb80] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CamperStillnessTrackerComponent.EnterInteriorZone
	// void EnterInteriorZone(class UExposerInteriorZoneComponent* zone);                                                    // [0x57edaf0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CarriedMovementComponent
/// Size: 0x00A8 (0x0000B8 - 0x000160)
class UCarriedMovementComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0xA8];                                      // 0x00B8   (0x00A8)  MISSED
};

/// Class /Script/DeadByDaylight.CartersSparkComponent
/// Size: 0x00F0 (0x0000B8 - 0x0001A8)
class UCartersSparkComponent : public UActorComponent
{ 
public:
	bool                                               _staticBlastEnabled;                                        // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x8F];                                      // 0x00B9   (0x008F)  MISSED
	TArray<class ADBDPlayer*>                          _totallyInsanePlayers;                                      // 0x0148   (0x0010)  
	class ADBDPlayer*                                  _owningPlayer;                                              // 0x0158   (0x0008)  
	unsigned char                                      UnknownData01_5[0x20];                                      // 0x0160   (0x0020)  MISSED
	FDBDTunableRowHandle                               _maxMadnessTier;                                            // 0x0180   (0x0028)  


	/// Functions
	// Function /Script/DeadByDaylight.CartersSparkComponent.TriggerStaticBlastCooldown
	// void TriggerStaticBlastCooldown();                                                                                    // [0x57ef130] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CartersSparkComponent.TriggerShockTherapyCooldown
	// void TriggerShockTherapyCooldown();                                                                                   // [0x57ef110] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CartersSparkComponent.OnRequestAndBeginInteraction
	// void OnRequestAndBeginInteraction(class UInteractionDefinition* Interaction);                                         // [0x57eec90] Final|Native|Private 
	// Function /Script/DeadByDaylight.CartersSparkComponent.Multicast_OnShockTherapyCooldownCheatEntered
	// void Multicast_OnShockTherapyCooldownCheatEntered();                                                                  // [0x57ee6a0] Net|NetReliableNative|Event|NetMulticast|Public|NetValidate 
	// Function /Script/DeadByDaylight.CartersSparkComponent.IsStaticBlastOnCooldown
	// bool IsStaticBlastOnCooldown();                                                                                       // [0x57ee670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CartersSparkComponent.IsShockTherapyOnCooldown
	// bool IsShockTherapyOnCooldown();                                                                                      // [0x57ee640] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CartersSparkComponent.GetStaticBlastCooldownPercentElapsed
	// float GetStaticBlastCooldownPercentElapsed();                                                                         // [0x57ee5d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CartersSparkComponent.GetStaticBlastCooldownDuration
	// float GetStaticBlastCooldownDuration();                                                                               // [0x57ee5a0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CartersSparkComponent.GetShockTherapyCooldownDuration
	// float GetShockTherapyCooldownDuration();                                                                              // [0x57ee570] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CartersSparkComponent.Authority_RegisterToGameEvents
	// void Authority_RegisterToGameEvents();                                                                                // [0x57edad0] Final|Native|Private 
	// Function /Script/DeadByDaylight.CartersSparkComponent.Authority_AddTotallyInsaneSurvivor
	// void Authority_AddTotallyInsaneSurvivor(class ADBDPlayer* insaneSurvivor);                                            // [0x57eda40] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CDNPatchManager
/// Size: 0x0228 (0x000030 - 0x000258)
class UCDNPatchManager : public UObject
{ 
public:
	SDK_UNDEFINED(16,1873) /* FString */               __um(InstallDirectory);                                     // 0x0030   (0x0010)  
	int32_t                                            PakOrder;                                                   // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	SDK_UNDEFINED(16,1874) /* FString */               __um(PakMountPoint);                                        // 0x0048   (0x0010)  
	unsigned char                                      UnknownData01_5[0x48];                                      // 0x0058   (0x0048)  MISSED
	SDK_UNDEFINED(8,1875) /* TWeakObjectPtr<UGameInstance*> */ __um(_gameInstance);                                // 0x00A0   (0x0008)  
	unsigned char                                      UnknownData02_5[0xF0];                                      // 0x00A8   (0x00F0)  MISSED
	class UAtlantaPendingContent*                      _currentContentToInstall;                                   // 0x0198   (0x0008)  
	SDK_UNDEFINED(16,1876) /* TArray<FString> */       __um(_remainingManifestsToInstall);                         // 0x01A0   (0x0010)  
	SDK_UNDEFINED(80,1877) /* TMap<FString, UAtlantaPendingContent*> */ __um(_contentToInstall);                   // 0x01B0   (0x0050)  
	unsigned char                                      UnknownData03_5[0x48];                                      // 0x0200   (0x0048)  MISSED
	class UAtlantaPendingContent*                      _MobilePendingContent;                                      // 0x0248   (0x0008)  
	unsigned char                                      UnknownData04_6[0x8];                                       // 0x0250   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CDNPatchManager.OnRequestSucceeded
	// void OnRequestSucceeded(class UAtlantaPendingContent* pendingContent);                                                // [0x57eee50] Final|Native|Private 
	// Function /Script/DeadByDaylight.CDNPatchManager.OnRequestFailed
	// void OnRequestFailed(FText ErrorText, int32_t ErrorCode);                                                             // [0x57eed20] Final|Native|Private 
	// Function /Script/DeadByDaylight.CDNPatchManager.OnInstallSucceeded
	// void OnInstallSucceeded();                                                                                            // [0x57ee840] Final|Native|Private 
	// Function /Script/DeadByDaylight.CDNPatchManager.OnInstallFailed
	// void OnInstallFailed(FText ErrorText, int32_t ErrorCode);                                                             // [0x57ee710] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.CharacterChaseVisualComponent
/// Size: 0x0080 (0x0000B8 - 0x000138)
class UCharacterChaseVisualComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1878) /* FMulticastInlineDelegate */ __um(OnChaseStartEvent);                                 // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,1879) /* FMulticastInlineDelegate */ __um(OnChaseEndEvent);                                   // 0x00C8   (0x0010)  
	class UMaterialHelperUnaffectedStaticMeshComponent* _vignetteMeshComp;                                         // 0x00D8   (0x0008)  
	FVector                                            _relativeLocation;                                          // 0x00E0   (0x000C)  
	FVector                                            _relativeScale;                                             // 0x00EC   (0x000C)  
	FRotator                                           _relativeRotation;                                          // 0x00F8   (0x000C)  
	float                                              _fovModifyFactor;                                           // 0x0104   (0x0004)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x0108   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CharacterChaseVisualComponent.OnObservedCharacterChange
	// void OnObservedCharacterChange(class ADBDPlayer* Player);                                                             // [0x57ee880] Final|Native|Public  
	// Function /Script/DeadByDaylight.CharacterChaseVisualComponent.OnAllChaseEnd
	// void OnAllChaseEnd();                                                                                                 // [0x57ee6f0] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.CharacterCollection
/// Size: 0x0258 (0x0000B8 - 0x000310)
class UCharacterCollection : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0xC0];                                      // 0x00B8   (0x00C0)  MISSED
	class ASlasherPlayer*                              _killer;                                                    // 0x0178   (0x0008)  
	SDK_UNDEFINED(80,1880) /* TSet<ACamperPlayer*> */  __um(_survivors);                                           // 0x0180   (0x0050)  
	SDK_UNDEFINED(80,1881) /* TSet<ADBDPlayer*> */     __um(_mainDBDPlayers);                                      // 0x01D0   (0x0050)  
	SDK_UNDEFINED(80,1882) /* TSet<ADBDPlayer*> */     __um(_otherCharacters);                                     // 0x0220   (0x0050)  
	SDK_UNDEFINED(80,1883) /* TSet<ACharacter*> */     __um(_nonPlayableCharacters);                               // 0x0270   (0x0050)  
	SDK_UNDEFINED(80,1884) /* TSet<ACharacter*> */     __um(_allCharacters);                                       // 0x02C0   (0x0050)  


	/// Functions
	// Function /Script/DeadByDaylight.CharacterCollection.GetSurvivors
	// TSet<ACamperPlayer*> GetSurvivors();                                                                                  // [0x57ee600] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterCollection.GetOtherCharacters
	// TSet<ADBDPlayer*> GetOtherCharacters();                                                                               // [0x57ee530] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterCollection.GetMainDBDPlayers
	// TSet<ADBDPlayer*> GetMainDBDPlayers();                                                                                // [0x57ee460] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterCollection.GetKiller
	// class ASlasherPlayer* GetKiller();                                                                                    // [0x57ee3a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterCollection.GetAllDBDPlayers
	// TArray<ADBDPlayer*> GetAllDBDPlayers();                                                                               // [0x57edd50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.CharacterCollectionUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UCharacterCollectionUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.CharacterCollectionUtilities.GetNumberOfInjuredHookedOrDyingSurvivors
	// int32_t GetNumberOfInjuredHookedOrDyingSurvivors(class UObject* WorldContextObject);                                  // [0x57ee4a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterCollectionUtilities.GetKiller
	// class ASlasherPlayer* GetKiller(class UObject* WorldContextObject);                                                   // [0x57ee3d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterCollectionUtilities.GetInGameSurvivorsByRef
	// TSet<ACamperPlayer*> GetInGameSurvivorsByRef(class UObject* WorldContextObject);                                      // [0x57ee310] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterCollectionUtilities.GetInGameSurvivorsAsPlayers
	// TArray<ADBDPlayer*> GetInGameSurvivorsAsPlayers(class UObject* WorldContextObject);                                   // [0x57ee240] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterCollectionUtilities.GetInGameSurvivors
	// TArray<ACamperPlayer*> GetInGameSurvivors(class UObject* WorldContextObject);                                         // [0x57ee170] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterCollectionUtilities.GetInGamePlayers
	// TArray<ADBDPlayer*> GetInGamePlayers(class UObject* WorldContextObject);                                              // [0x57ee0a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterCollectionUtilities.GetInGameOtherCharacters
	// TArray<ADBDPlayer*> GetInGameOtherCharacters(class UObject* WorldContextObject);                                      // [0x57edfd0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterCollectionUtilities.GetCharactersByPlayerTeam
	// TArray<ADBDPlayer*> GetCharactersByPlayerTeam(EPlayerTeam playerTeam, class UObject* WorldContextObject);             // [0x57edec0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterCollectionUtilities.GetAllDBDPlayers
	// TArray<ADBDPlayer*> GetAllDBDPlayers(class UObject* WorldContextObject);                                              // [0x57eddf0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterCollectionUtilities.GetAllCharacters
	// TSet<ACharacter*> GetAllCharacters(class UObject* WorldContextObject);                                                // [0x57edc10] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.CharacterCollisionsUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UCharacterCollisionsUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.CharacterDataSubsystem
/// Size: 0x0000 (0x000038 - 0x000038)
class UCharacterDataSubsystem : public UGameInstanceSubsystem
{ 
public:
};

/// Class /Script/DeadByDaylight.CharacterHelper
/// Size: 0x0000 (0x000030 - 0x000030)
class UCharacterHelper : public UObject
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.CharacterHelper.SetCharmSlot
	// FCharmIdSlot SetCharmSlot(class ADBDPlayerState* PlayerState, FName& CharmId, int32_t slotIndex);                     // [0x57f4920] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterHelper.GetOutfitsByCharacterID
	// TArray<FOutfitData> GetOutfitsByCharacterID(FString characterId, bool sortArray);                                     // [0x57f3d80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterHelper.GetOutfitComposition
	// void GetOutfitComposition(FCustomizationItemData& returnHead, FCustomizationItemData& returnTorso, FCustomizationItemData& returnLegsWeapon, FString OutfitId); // [0x57f3b70] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterHelper.GetCharactersByRole
	// TArray<FCharacterDescription> GetCharactersByRole(class UObject* WorldContextObject, EPlayerRole Role, bool sortArray); // [0x57f3660] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterHelper.GetAllOutfitComponentsOfCharacter
	// void GetAllOutfitComponentsOfCharacter(TArray<FCustomizationItemData>& returnHeads, TArray<FCustomizationItemData>& returnTorsos, TArray<FCustomizationItemData>& returnLegsWeapons, FString characterId, bool sortArrays); // [0x57f2fa0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterHelper.GetAllEnabledCharms
	// TArray<FString> GetAllEnabledCharms(bool sortArray);                                                                  // [0x57f2ed0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CharacterInfoScreen
/// Size: 0x0018 (0x000120 - 0x000138)
class UCharacterInfoScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0120   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CharacterInfoScreen.OnBackButtonClick
	// void OnBackButtonClick();                                                                                             // [0x57bc860] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.CharacterInventoryComponent
/// Size: 0x00C8 (0x0000B8 - 0x000180)
class UCharacterInventoryComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x00B8   (0x0048)  MISSED
	TArray<FGameplayTag>                               _tagsPreventingItemVisibility;                              // 0x0100   (0x0010)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0110   (0x0010)  MISSED
	TArray<class ACollectable*>                        _inventory;                                                 // 0x0120   (0x0010)  
	TArray<class UItemAddon*>                          _generalAddons;                                             // 0x0130   (0x0010)  
	TArray<class ACollectable*>                        _backpackInventory;                                         // 0x0140   (0x0010)  
	TArray<class ACollectable*>                        _localInventory;                                            // 0x0150   (0x0010)  
	TArray<class ACollectable*>                        _localBackpackInventory;                                    // 0x0160   (0x0010)  
	TArray<class UItemAddon*>                          _allAddons;                                                 // 0x0170   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.StoreItem
	// void StoreItem();                                                                                                     // [0x57f4b20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.SpawnAndCollectItem
	// class ACollectable* SpawnAndCollectItem(FName ItemId);                                                                // [0x57f4a70] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.OnRep_Inventory
	// void OnRep_Inventory();                                                                                               // [0x57f4780] Final|Native|Private 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.OnRep_GeneralAddons
	// void OnRep_GeneralAddons();                                                                                           // [0x57f4760] Final|Native|Private 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.OnRep_BackpackInventory
	// void OnRep_BackpackInventory();                                                                                       // [0x57f4740] Final|Native|Private 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.Multicast_RemoveFromInventory
	// void Multicast_RemoveFromInventory(class ACollectable* Item, EInventoryType inventoryType);                           // [0x57f4560] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.Multicast_MoveItemToOtherSlot
	// void Multicast_MoveItemToOtherSlot(class ACollectable* itemBeingMoved, EInventoryType targetInventoryType);           // [0x57f4490] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.Multicast_ClearAndDestroyInventory
	// void Multicast_ClearAndDestroyInventory();                                                                            // [0x4dd4860] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.Multicast_AddToInventory
	// void Multicast_AddToInventory(class ACollectable* Item, EInventoryType inventoryType);                                // [0x57f43c0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.IsUsingAimItem
	// bool IsUsingAimItem();                                                                                                // [0x57f4390] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.HasStoredItem
	// bool HasStoredItem();                                                                                                 // [0x57f4310] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.HasMaximumItemCount
	// bool HasMaximumItemCount(class ACollectable* Item);                                                                   // [0x57f4270] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.HasItem
	// bool HasItem(EInventoryType inventoryType);                                                                           // [0x57f41e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.HasInInventory
	// bool HasInInventory(class UClass* Item, EInventoryType inventoryType);                                                // [0x57f4110] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.HasEquippedItem
	// bool HasEquippedItem();                                                                                               // [0x57f40e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.GetItemID
	// FName GetItemID(EInventoryType inventoryType);                                                                        // [0x57f3a40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.GetItemCountByID
	// int32_t GetItemCountByID(FName ItemId);                                                                               // [0x57f3990] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.GetItemCount
	// int32_t GetItemCount();                                                                                               // [0x57f3960] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.GetItem
	// class ACollectable* GetItem(EInventoryType inventoryType);                                                            // [0x57f38d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.GetFirstItemFromInventory
	// class ACollectable* GetFirstItemFromInventory(class UClass* Item, EInventoryType inventoryType);                      // [0x57f3800] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.GetAddons
	// TArray<UItemAddon*> GetAddons();                                                                                      // [0x57f2e40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.GetAddon
	// class UItemAddon* GetAddon(FName AddonID);                                                                            // [0x57f2d90] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.EquipItem
	// void EquipItem();                                                                                                     // [0x57f2ce0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.Authority_UseInventoryItem
	// void Authority_UseInventoryItem();                                                                                    // [0x57f2cc0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.Authority_RemoveFromInventory
	// void Authority_RemoveFromInventory(class ACollectable* Item, EInventoryType inventoryType);                           // [0x57f2bf0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.Authority_Collect
	// void Authority_Collect(class ACollectable* Item, EInventoryType inventoryType);                                       // [0x57f2b20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.Authority_ClearAndDestroyInventory
	// void Authority_ClearAndDestroyInventory();                                                                            // [0x57f2b00] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CharacterInventoryComponent.Authority_AddToInventory
	// void Authority_AddToInventory(class ACollectable* Item, EInventoryType inventoryType);                                // [0x57f2a30] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ItemsAssetLibrary
/// Size: 0x0070 (0x0000B0 - 0x000120)
class UItemsAssetLibrary : public UAssetLibrary
{ 
public:
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x00B0   (0x0070)  MISSED
};

/// Class /Script/DeadByDaylight.CharacterItemsAssetLibrary
/// Size: 0x0018 (0x000120 - 0x000138)
class UCharacterItemsAssetLibrary : public UItemsAssetLibrary
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0120   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.CharacterPositionRecorderConfigurator
/// Size: 0x0018 (0x0000C0 - 0x0000D8)
class UCharacterPositionRecorderConfigurator : public UBaseHitValidationConfigurator
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00C0   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.CharacterProgressionManager
/// Size: 0x0008 (0x000030 - 0x000038)
class UCharacterProgressionManager : public UObject
{ 
public:
	SDK_UNDEFINED(8,1885) /* TWeakObjectPtr<UDBDGameInstance*> */ __um(_gameInstance);                             // 0x0030   (0x0008)  
};

/// Class /Script/DeadByDaylight.CharacterStatsHandlerComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UCharacterStatsHandlerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B8   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CharacterStatsHandlerComponent.ReceiveGameEvent
	// void ReceiveGameEvent(EDBDScoreTypes scoreType, float Amount, class AActor* Instigator, class AActor* Target);        // [0x57f47c0] Final|Native|Public  
	// Function /Script/DeadByDaylight.CharacterStatsHandlerComponent.OnGameEvent
	// void OnGameEvent(FGameplayTag gameEventType, FGameEventData& GameEventData);                                          // [0x57f4630] Final|Native|Public|HasOutParms 
	// Function /Script/DeadByDaylight.CharacterStatsHandlerComponent.InitializePreMatchStats
	// void InitializePreMatchStats();                                                                                       // [0x57f4340] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.CharacterStatsUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UCharacterStatsUtilities : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDEditorActor
/// Size: 0x0000 (0x000230 - 0x000230)
class ADBDEditorActor : public AActor
{ 
public:
};

/// Struct /Script/DeadByDaylight.CharacterToolData
/// Size: 0x0080 (0x000000 - 0x000080)
struct FCharacterToolData
{ 
	EPlayerRole                                        Role;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            characterId;                                                // 0x0004   (0x0004)  
	FName                                              OutfitId;                                                   // 0x0008   (0x000C)  
	FName                                              CharmId;                                                    // 0x0014   (0x000C)  
	FName                                              SurvivorHead;                                               // 0x0020   (0x000C)  
	FName                                              SurvivorTorso;                                              // 0x002C   (0x000C)  
	FName                                              SurvivorLegs;                                               // 0x0038   (0x000C)  
	FName                                              KillerHead;                                                 // 0x0044   (0x000C)  
	FName                                              KillerBody;                                                 // 0x0050   (0x000C)  
	FName                                              KillerWeapon;                                               // 0x005C   (0x000C)  
	bool                                               IsAnimBP;                                                   // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0069   (0x0007)  MISSED
	SDK_UNDEFINED(16,1886) /* FString */               __um(AnimAsset);                                            // 0x0070   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterToolSpawnParameters
/// Size: 0x0003 (0x000000 - 0x000003)
struct FCharacterToolSpawnParameters
{ 
	bool                                               IsAnimated;                                                 // 0x0000   (0x0001)  
	bool                                               ShowPower;                                                  // 0x0001   (0x0001)  
	bool                                               UseMasterPoseForItems;                                      // 0x0002   (0x0001)  
};

/// Struct /Script/DeadByDaylight.NamedButton
/// Size: 0x0018 (0x000000 - 0x000018)
struct FNamedButton
{ 
	int32_t                                            ClickCounter;                                               // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(16,1887) /* FString */               __um(DisplayName);                                          // 0x0008   (0x0010)  
};

/// Class /Script/DeadByDaylight.CharacterTool
/// Size: 0x0150 (0x000230 - 0x000380)
class ACharacterTool : public ADBDEditorActor
{ 
public:
	TArray<class ATargetPoint*>                        SpawnLocations;                                             // 0x0230   (0x0010)  
	FCharacterToolData                                 _customizationData;                                         // 0x0240   (0x0080)  
	FCharacterToolSpawnParameters                      _defaultSpawnParams;                                        // 0x02C0   (0x0003)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x02C3   (0x0001)  MISSED
	FName                                              _powerSocket;                                               // 0x02C4   (0x000C)  
	EAttachmentRule                                    _powerAttachmentRule;                                       // 0x02D0   (0x0001)  
	bool                                               _muteAudioInPIE;                                            // 0x02D1   (0x0001)  
	bool                                               _isUsingGameSkeleton;                                       // 0x02D2   (0x0001)  
	unsigned char                                      UnknownData01_5[0x5];                                       // 0x02D3   (0x0005)  MISSED
	SDK_UNDEFINED(48,1888) /* TWeakObjectPtr<UClass*> */ __um(_overallLightingClass);                              // 0x02D8   (0x0030)  
	FNamedButton                                       _showHelp;                                                  // 0x0308   (0x0018)  
	SDK_UNDEFINED(80,1889) /* TMap<ADBDMenuPlayer*, FCharacterToolSpawnParameters> */ __um(_characters);           // 0x0320   (0x0050)  
	class AActor*                                      _lighting;                                                  // 0x0370   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0378   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterToolItemData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCharacterToolItemData
{ 
	ECharacterToolItemType                             _type;                                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              _id;                                                        // 0x0004   (0x000C)  
};

/// Class /Script/DeadByDaylight.CharacterToolAnimation
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UCharacterToolAnimation : public UAnimInstance
{ 
public:
	TArray<FCharacterToolItemData>                     SelectedItems;                                              // 0x02C0   (0x0010)  
};

/// Class /Script/DeadByDaylight.CharacterUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UCharacterUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.CharacterUtilities.GetFeetPositionAtTargetLocation
	// FVector GetFeetPositionAtTargetLocation(class ACharacter* Character, FVector& Location);                              // [0x57f86b0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterUtilities.GetFeetPosition
	// FVector GetFeetPosition(class ACharacter* Character);                                                                 // [0x57f8610] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharacterUtilities.GetActorLocationFromFeetLocation
	// FVector GetActorLocationFromFeetLocation(class ACharacter* Character, FVector& feetLocation);                         // [0x57f8080] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.CharacterXPManager
/// Size: 0x00E0 (0x000030 - 0x000110)
class UCharacterXPManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0030   (0x0018)  MISSED
	SDK_UNDEFINED(8,1890) /* TWeakObjectPtr<UDBDGameInstance*> */ __um(_gameInstance);                             // 0x0048   (0x0008)  
	unsigned char                                      UnknownData01_6[0xC0];                                      // 0x0050   (0x00C0)  MISSED
};

/// Struct /Script/DeadByDaylight.ChargeData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FChargeData
{ 
	class AActor*                                      Instigator;                                                 // 0x0000   (0x0008)  
	float                                              ChargeAmount;                                               // 0x0008   (0x0004)  
	bool                                               BypassSkillCheckFail;                                       // 0x000C   (0x0001)  
	bool                                               IsOneTimeIncrease;                                          // 0x000D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x000E   (0x0002)  MISSED
};

/// Class /Script/DeadByDaylight.ChargeableComponent
/// Size: 0x0270 (0x0000B8 - 0x000328)
class UChargeableComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1891) /* FMulticastInlineDelegate */ __um(OnInteractionEmptiedEvent);                         // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x00C8   (0x0018)  MISSED
	SDK_UNDEFINED(16,1892) /* FMulticastInlineDelegate */ __um(OnInteractionCompletionStateChanged);               // 0x00E0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x00F0   (0x0018)  MISSED
	SDK_UNDEFINED(16,1893) /* FMulticastInlineDelegate */ __um(SkillCheckResponseAestheticDelegate);               // 0x0108   (0x0010)  
	SDK_UNDEFINED(16,1894) /* FMulticastInlineDelegate */ __um(SkillCheckResponseAuthorityDelegate);               // 0x0118   (0x0010)  
	SDK_UNDEFINED(16,1895) /* FMulticastInlineDelegate */ __um(ChargeAppliedAuthorityDelegate);                    // 0x0128   (0x0010)  
	SDK_UNDEFINED(16,1896) /* FMulticastInlineDelegate */ __um(ChargeableCompletionPercentChangeAuthorityDelegate); // 0x0138   (0x0010)  
	SDK_UNDEFINED(16,1897) /* FMulticastInlineDelegate */ __um(ChargeableCompletionPercentChangeCosmeticDelegate); // 0x0148   (0x0010)  
	SDK_UNDEFINED(16,1898) /* FMulticastInlineDelegate */ __um(DechargeBeginDelegate);                             // 0x0158   (0x0010)  
	SDK_UNDEFINED(16,1899) /* FMulticastInlineDelegate */ __um(DechargeEndDelegate);                               // 0x0168   (0x0010)  
	bool                                               AllowSkillChecksAtFullCharge;                               // 0x0178   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0179   (0x0007)  MISSED
	SDK_UNDEFINED(16,1900) /* FString */               __um(ChargeableComponentID);                                // 0x0180   (0x0010)  
	float                                              DechargeDelay;                                              // 0x0190   (0x0004)  
	float                                              StartingChargePercent;                                      // 0x0194   (0x0004)  
	FSpeedBasedNetSyncedValue                          _currentCharge;                                             // 0x0198   (0x0038)  
	unsigned char                                      UnknownData03_5[0x10];                                      // 0x01D0   (0x0010)  MISSED
	FDBDTimer                                          _skillCheckFailurePenaltyTimer;                             // 0x01E0   (0x0028)  
	FDBDTimer                                          _dechargeTimer;                                             // 0x0208   (0x0028)  
	TArray<FChargeData>                                _chargesThisFrame;                                          // 0x0230   (0x0010)  
	TArray<FChargeData>                                _redirectedChargesThisFrame;                                // 0x0240   (0x0010)  
	SDK_UNDEFINED(80,1901) /* TMap<uint32_t, UChargeStrategy*> */ __um(_activeChargeStrategies);                   // 0x0250   (0x0050)  
	TArray<class AActor*>                              _instigatorsSinceEmpty;                                     // 0x02A0   (0x0010)  
	SDK_UNDEFINED(80,1902) /* TMap<FName, float> */    __um(_tunableValueMap);                                     // 0x02B0   (0x0050)  
	bool                                               _isCharging;                                                // 0x0300   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x0301   (0x0007)  MISSED
	TArray<int32_t>                                    _playersWhoDidSkillCheck;                                   // 0x0308   (0x0010)  
	bool                                               _isChargeBlocked;                                           // 0x0318   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0319   (0x0003)  MISSED
	float                                              _dechargeRate;                                              // 0x031C   (0x0004)  
	bool                                               _enableAddCharge;                                           // 0x0320   (0x0001)  
	bool                                               _enableSkillCheckFailurePenalty;                            // 0x0321   (0x0001)  
	bool                                               _isDecharging;                                              // 0x0322   (0x0001)  
	bool                                               _stopDechargingWhenComplete;                                // 0x0323   (0x0001)  
	unsigned char                                      UnknownData06_6[0x4];                                       // 0x0324   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ChargeableComponent.SetSecondsToCharge
	// void SetSecondsToCharge(float SecondsToCharge);                                                                       // [0x57f99f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableComponent.SetDechargeRate
	// void SetDechargeRate(float dechargeRate);                                                                             // [0x57f9970] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableComponent.OnRep_CurrentCharge
	// void OnRep_CurrentCharge();                                                                                           // [0x509c9d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.ChargeableComponent.OnCurrentChargeChanged
	// void OnCurrentChargeChanged(float value);                                                                             // [0x57f9420] Final|Native|Private 
	// Function /Script/DeadByDaylight.ChargeableComponent.Multicast_SetPermanentCharge
	// void Multicast_SetPermanentCharge(float ChargePercent);                                                               // [0x57f9390] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.ChargeableComponent.Multicast_OnEmptied
	// void Multicast_OnEmptied();                                                                                           // [0x4d82970] Final|Net|NetReliableNative|Event|NetMulticast|Private|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.Multicast_OnCompleteChanged
	// void Multicast_OnCompleteChanged(bool COMPLETED);                                                                     // [0x5070b90] Final|Net|NetReliableNative|Event|NetMulticast|Private|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.IsSkillCheckTimePenaltyActive
	// bool IsSkillCheckTimePenaltyActive();                                                                                 // [0x57f9360] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.IsChargeComplete
	// bool IsChargeComplete();                                                                                              // [0x57f9300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.IncreaseMaxCharge
	// void IncreaseMaxCharge(float percent);                                                                                // [0x57f9280] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableComponent.HasPlayerDoneSkillCheck
	// bool HasPlayerDoneSkillCheck(int32_t playerID);                                                                       // [0x57f9140] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.GetTunableValue
	// float GetTunableValue(FName tunableValueID);                                                                          // [0x57f8f90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.GetPlayerCountPenaltyModifier
	// float GetPlayerCountPenaltyModifier(int32_t PlayerCount);                                                             // [0x57f8b00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.GetPermanentChargePercent
	// float GetPermanentChargePercent();                                                                                    // [0x57f8aa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.GetPercentComplete
	// float GetPercentComplete();                                                                                           // [0x57f89d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.GetMaxCharge
	// float GetMaxCharge();                                                                                                 // [0x57f88d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.GetCurrentCharge
	// float GetCurrentCharge();                                                                                             // [0x57f85e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.GetChargingSpeed
	// float GetChargingSpeed();                                                                                             // [0x57f85b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.GetChargeRemaining
	// float GetChargeRemaining();                                                                                           // [0x57f84b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargeableComponent.Authority_SetEnableSkillCheckFailurePenalty
	// void Authority_SetEnableSkillCheckFailurePenalty(bool enable);                                                        // [0x57f7ff0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableComponent.Authority_SetEnableAddCharge
	// void Authority_SetEnableAddCharge(bool enable);                                                                       // [0x57f7f60] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableComponent.Authority_Reset
	// void Authority_Reset();                                                                                               // [0x57f7eb0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableComponent.Authority_ApplyStartingCharge
	// void Authority_ApplyStartingCharge();                                                                                 // [0x57f7d70] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableComponent.Authority_AddChargePercent
	// void Authority_AddChargePercent(float ChargePercent, class AActor* Instigator, bool BypassSkillCheckFail, bool IsOneTimeIncrease, bool isChargeWithItem); // [0x57f7bb0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargeableComponent.Authority_AddCharge
	// void Authority_AddCharge(float ChargeAmount, class AActor* Instigator, bool BypassSkillCheckFail, bool IsOneTimeIncrease, bool isChargeWithItem); // [0x57f78d0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ChargeableProgressProviderComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UChargeableProgressProviderComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B8   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.ChargedAttackStateComponent
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UChargedAttackStateComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00B8   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ChargedAttackStateComponent.SetIsCharging
	// void SetIsCharging(bool IsCharging);                                                                                  // [0x5800eb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargedAttackStateComponent.SetChargingPercent
	// void SetChargingPercent(float ChargePercent);                                                                         // [0x5800c90] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargedAttackStateComponent.GetIsCharging
	// bool GetIsCharging();                                                                                                 // [0x57ff670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargedAttackStateComponent.GetChargingPercent
	// float GetChargingPercent();                                                                                           // [0x57ff540] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.ChargerComponent
/// Size: 0x0098 (0x0000B8 - 0x000150)
class UChargerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00B8   (0x0008)  MISSED
	SDK_UNDEFINED(16,1903) /* FString */               __um(ChargerComponentID);                                   // 0x00C0   (0x0010)  
	SDK_UNDEFINED(16,1904) /* FMulticastInlineDelegate */ __um(OnChargeStateChange);                               // 0x00D0   (0x0010)  
	SDK_UNDEFINED(16,1905) /* FMulticastInlineDelegate */ __um(OnChargePercentChange);                             // 0x00E0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x00F0   (0x0030)  MISSED
	EEnergyTypeEnum                                    EnergyType;                                                 // 0x0120   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0121   (0x0003)  MISSED
	float                                              _currentEnergyLevel;                                        // 0x0124   (0x0004)  
	float                                              _maxEnergyLevel;                                            // 0x0128   (0x0004)  
	unsigned char                                      UnknownData03_6[0x24];                                      // 0x012C   (0x0024)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ChargerComponent.UseEnergy
	// void UseEnergy(float Seconds, float energyUseModifier);                                                               // [0x5801450] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargerComponent.SetNormalizedEnergyLevel
	// void SetNormalizedEnergyLevel(float EnergyLevel);                                                                     // [0x58010f0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargerComponent.SetMaxEnergyLevel
	// void SetMaxEnergyLevel(float EnergyLevel);                                                                            // [0x5801060] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargerComponent.SetEnergyLevel
	// void SetEnergyLevel(float EnergyLevel);                                                                               // [0x5800e20] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargerComponent.Reset
	// void Reset();                                                                                                         // [0x5800c70] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ChargerComponent.OnRep_EnergyLevel
	// void OnRep_EnergyLevel(float previousEnergyLevel);                                                                    // [0x58008c0] Final|Native|Private 
	// Function /Script/DeadByDaylight.ChargerComponent.HasCharge
	// bool HasCharge();                                                                                                     // [0x57ffaf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargerComponent.GetNormalizedEnergyLevel
	// float GetNormalizedEnergyLevel();                                                                                     // [0x57ffa40] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargerComponent.GetMaxEnergyLevel
	// float GetMaxEnergyLevel();                                                                                            // [0x57ff730] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ChargerComponent.GetEnergyLevel
	// float GetEnergyLevel();                                                                                               // [0x57ff5f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.ChargeStrategy
/// Size: 0x0018 (0x000030 - 0x000048)
class UChargeStrategy : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0030   (0x0010)  MISSED
	bool                                               _shouldApplyRedirectedChargeNormally;                       // 0x0040   (0x0001)  
	bool                                               _shouldBroadcastChargeApplied;                              // 0x0041   (0x0001)  
	bool                                               _shouldApplyModifiersToRedirectedCharge;                    // 0x0042   (0x0001)  
	bool                                               _shouldAllowChargeFromItem;                                 // 0x0043   (0x0001)  
	bool                                               _shouldRedirectSkillcheckChargePenalty;                     // 0x0044   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0045   (0x0003)  MISSED
};

/// Class /Script/DeadByDaylight.Charm
/// Size: 0x0048 (0x000230 - 0x000278)
class ACharm : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0230   (0x0008)  MISSED
	class UDBDSkeletalMeshComponentBudgeted*           _skeletalMeshComponent;                                     // 0x0238   (0x0008)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0240   (0x0018)  MISSED
	class AItemVfx*                                    _actorVfx;                                                  // 0x0258   (0x0008)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0260   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.Charm.BeginDestroySequence_Internal
	// void BeginDestroySequence_Internal();                                                                                 // [0x57ff130] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.CharmAttachable
/// Size: 0x0000 (0x000030 - 0x000030)
class UCharmAttachable : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.CharmAttacher
/// Size: 0x0040 (0x000230 - 0x000270)
class ACharmAttacher : public AActor
{ 
public:
	SDK_UNDEFINED(16,1906) /* FMulticastInlineDelegate */ __um(OnAttachedOnActor);                                 // 0x0230   (0x0010)  
	SDK_UNDEFINED(16,1907) /* FMulticastInlineDelegate */ __um(OnCharmAnimationTagsChanged);                       // 0x0240   (0x0010)  
	class UDBDSkeletalMeshComponentBudgeted*           _chain;                                                     // 0x0250   (0x0008)  
	class ACharm*                                      _attachedCharm;                                             // 0x0258   (0x0008)  
	FName                                              _charmAttachSocketName;                                     // 0x0260   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x026C   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CharmAttacher.GetSkeletalMeshComponentAttachedOn
	// class USkeletalMeshComponent* GetSkeletalMeshComponentAttachedOn();                                                   // [0x57ffa80] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharmAttacher.GetAttachedCharm
	// class ACharm* GetAttachedCharm();                                                                                     // [0x57ff520] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharmAttacher.GetAnimationTweak
	// FCharmAttacherAnimationTweak GetAnimationTweak();                                                                     // [0x57ff4d0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharmAttacher.GetActorAttachedOn
	// class AActor* GetActorAttachedOn();                                                                                   // [0x57ff4a0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.CharmAttacher.DispatchOnCharmAnimationTagsChanged
	// void DispatchOnCharmAnimationTagsChanged();                                                                           // [0x57ff480] Final|Native|Private 
	// Function /Script/DeadByDaylight.CharmAttacher.BindOnCharmAnimationTagsChanged
	// void BindOnCharmAnimationTagsChanged();                                                                               // [0x57ff150] Final|Native|Private 
};

/// Struct /Script/DeadByDaylight.CharmAttacherAnimationTweak
/// Size: 0x0028 (0x000000 - 0x000028)
struct FCharmAttacherAnimationTweak
{ 
	class UClass*                                      OverrideAnimInstance;                                       // 0x0000   (0x0008)  
	FVector                                            AttachPointTranslation;                                     // 0x0008   (0x000C)  
	FRotator                                           AttachPointRotation;                                        // 0x0014   (0x000C)  
	int32_t                                            ConstraintType;                                             // 0x0020   (0x0004)  
	float                                              MagicTweakingFloat;                                         // 0x0024   (0x0004)  
};

/// Struct /Script/DeadByDaylight.CharmSlot
/// Size: 0x00B8 (0x000000 - 0x0000B8)
struct FCharmSlot
{ 
	int32_t                                            slotIndex;                                                  // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(48,1908) /* TWeakObjectPtr<UClass*> */ __um(CharmAttacherClass);                                 // 0x0008   (0x0030)  
	FCharmAttacherAnimationTweak                       DefaultAnimationTweak;                                      // 0x0038   (0x0028)  
	SDK_UNDEFINED(80,1909) /* TMap<FName, FCharmAttacherAnimationTweak> */ __um(AnimationTweakByTag);              // 0x0060   (0x0050)  
	class ACharmAttacher*                              CharmAttacherSpawned;                                       // 0x00B0   (0x0008)  
};

/// Class /Script/DeadByDaylight.CharmSpawnerComponent
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class UCharmSpawnerComponent : public UActorComponent
{ 
public:
	FName                                              SocketRootName;                                             // 0x00B8   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00C4   (0x0004)  MISSED
	TArray<FCharmSlot>                                 CharmSlots;                                                 // 0x00C8   (0x0010)  
	FVector                                            ScaleCharm;                                                 // 0x00D8   (0x000C)  
	int32_t                                            _forcedLOD;                                                 // 0x00E4   (0x0004)  


	/// Functions
	// Function /Script/DeadByDaylight.CharmSpawnerComponent.ReplaceCharmTextures
	// void ReplaceCharmTextures(TArray<FCharmIdSlot>& Customization);                                                       // [0x5800bc0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ChaseComponent
/// Size: 0x0070 (0x0000B8 - 0x000128)
class UChaseComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1910) /* FMulticastInlineDelegate */ __um(OnChaseStarted);                                    // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,1911) /* FMulticastInlineDelegate */ __um(OnChaseEnded);                                      // 0x00C8   (0x0010)  
	SDK_UNDEFINED(16,1912) /* FMulticastInlineDelegate */ __um(OnAllChaseEnded);                                   // 0x00D8   (0x0010)  
	SDK_UNDEFINED(16,1913) /* FMulticastInlineDelegate */ __um(OnIsInChaseChanged);                                // 0x00E8   (0x0010)  
	FTagStateBool                                      _isInChase;                                                 // 0x00F8   (0x0030)  


	/// Functions
	// Function /Script/DeadByDaylight.ChaseComponent.OnRep_IsInChase
	// void OnRep_IsInChase();                                                                                               // [0x4d82970] Native|Protected     
	// Function /Script/DeadByDaylight.ChaseComponent.IsInChase
	// bool IsInChase();                                                                                                     // [0x57ffcc0] Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.ChaseeCharacterComponent
/// Size: 0x0068 (0x000128 - 0x000190)
class UChaseeCharacterComponent : public UChaseComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0128   (0x0008)  MISSED
	float                                              _totalChaseTimeThisMatchDebugReplicated;                    // 0x0130   (0x0004)  
	unsigned char                                      UnknownData01_6[0x5C];                                      // 0x0134   (0x005C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ChaseeCharacterComponent.Authority_OnLevelReadyToPlay
	// void Authority_OnLevelReadyToPlay();                                                                                  // [0x57ff040] Final|Native|Private 
	// Function /Script/DeadByDaylight.ChaseeCharacterComponent.Authority_OnGeneratorPercentChanged
	// void Authority_OnGeneratorPercentChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete); // [0x57fef30] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.ChaserCharacterComponent
/// Size: 0x00E0 (0x000128 - 0x000208)
class UChaserCharacterComponent : public UChaseComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0128   (0x0010)  MISSED
	class UDBDPawnSensingComponent*                    _camperSensor;                                              // 0x0138   (0x0008)  
	SDK_UNDEFINED(80,1914) /* TMap<ADBDPlayer*, FChaseUpdateInfo> */ __um(_chaseUpdateInfo);                       // 0x0140   (0x0050)  
	TArray<class ADBDPlayer*>                          _chasedPlayers;                                             // 0x0190   (0x0010)  
	TArray<class ADBDPlayer*>                          _authority_survivorsWhoStunnedKillerByPalletDuringChase;    // 0x01A0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x01B0   (0x0030)  MISSED
	FGameplayTagContainer                              _preventChaseTags;                                          // 0x01E0   (0x0020)  
	bool                                               _camperSensorUsesActorRotation;                             // 0x0200   (0x0001)  
	bool                                               _camperSensorLocationUsesEyesViewPoint;                     // 0x0201   (0x0001)  
	unsigned char                                      UnknownData02_6[0x6];                                       // 0x0202   (0x0006)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ChaserCharacterComponent.OnKillerLocallyObservedChanged
	// void OnKillerLocallyObservedChanged(bool locallyObserved);                                                            // [0x58007a0] Final|Native|Private 
	// Function /Script/DeadByDaylight.ChaserCharacterComponent.Multicast_OnChaseStart
	// void Multicast_OnChaseStart(class ACamperPlayer* Survivor);                                                           // [0x58004b0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.ChaserCharacterComponent.Multicast_OnChaseEnd
	// void Multicast_OnChaseEnd(class ACamperPlayer* Survivor, FChaseUpdateInfo ChaseUpdateInfo);                           // [0x5800350] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.ChaserCharacterComponent.Multicast_OnAllChaseEnd
	// void Multicast_OnAllChaseEnd();                                                                                       // [0x4dd4880] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.ChaserCharacterComponent.Authority_OnChaseTargetFound
	// void Authority_OnChaseTargetFound(class APawn* Pawn);                                                                 // [0x57fed40] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.ChatManager
/// Size: 0x0020 (0x000230 - 0x000250)
class AChatManager : public AActor
{ 
public:
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0230   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0238   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ChatManager.Multicast_DisplayMessage
	// void Multicast_DisplayMessage(FString chatIdentifier, int32_t PlayerIndex, FString MirrorsId, FString Msg);           // [0x5800070] Net|NetReliableNative|Event|NetMulticast|Public 
};

/// Class /Script/DeadByDaylight.ChatSimulator
/// Size: 0x0020 (0x000030 - 0x000050)
class UChatSimulator : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0030   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.ChunkingManager
/// Size: 0x0050 (0x000030 - 0x000080)
class UChunkingManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0030   (0x0018)  MISSED
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0048   (0x0008)  
	unsigned char                                      UnknownData01_6[0x30];                                      // 0x0050   (0x0030)  MISSED
};

/// Struct /Script/DeadByDaylight.Cinematic
/// Size: 0x0068 (0x000000 - 0x000068)
struct FCinematic
{ 
	unsigned char                                      UnknownData00_1[0x68];                                      // 0x0000   (0x0068)  MISSED
};

/// Class /Script/DeadByDaylight.CinematicManager
/// Size: 0x0060 (0x000030 - 0x000090)
class UCinematicManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0030   (0x0048)  MISSED
	TArray<FCinematic>                                 _cinematicQueue;                                            // 0x0078   (0x0010)  
	class UBackendCinematicContainer*                  _backendContainer;                                          // 0x0088   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.CinematicManager.SetVideoThumbnailProperties
	// void SetVideoThumbnailProperties(FCinematic& Cinematic);                                                              // [0x5801180] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.CinematicManager.PlaySingle
	// void PlaySingle(FCinematic& Cinematic);                                                                               // [0x5800a40] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.CinematicManager.PlayMultiple
	// void PlayMultiple(TArray<FCinematic>& Cinematics);                                                                    // [0x5800960] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.CinematicManager.HasCinematicToPlay
	// bool HasCinematicToPlay();                                                                                            // [0x57ffb20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CinematicManager.GetNextCinematicToPlay
	// FCinematic GetNextCinematicToPlay();                                                                                  // [0x57ff970] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CinematicManager.CancelAllCinematicToPlay
	// void CancelAllCinematicToPlay();                                                                                      // [0x57ff440] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ClientBloodwebContentAdapter
/// Size: 0x0010 (0x000060 - 0x000070)
class UClientBloodwebContentAdapter : public UBaseBloodwebContentAdapter
{ 
public:
	class UBloodwebGenerator*                          _bloodwebBuilder;                                           // 0x0060   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0068   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.ClientStartupInitializerInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UClientStartupInitializerInterface : public UInterface
{ 
public:
};

/// Struct /Script/DeadByDaylight.MaterialOriginalState
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMaterialOriginalState
{ 
	class UMeshComponent*                              MeshWithChangedMaterials;                                   // 0x0000   (0x0008)  
	TArray<class UMaterialInterface*>                  OriginalMaterial;                                           // 0x0008   (0x0010)  
};

/// Class /Script/DeadByDaylight.ClipManager
/// Size: 0x0168 (0x000230 - 0x000398)
class AClipManager : public AActor
{ 
public:
	TArray<class UDBDClipRegionComponent*>             _clippingZones;                                             // 0x0230   (0x0010)  
	SDK_UNDEFINED(80,1915) /* TSet<UMeshComponent*> */ __um(_meshComponents);                                      // 0x0240   (0x0050)  
	TArray<FMaterialOriginalState>                     _dissolvedMeshes;                                           // 0x0290   (0x0010)  
	SDK_UNDEFINED(80,1916) /* TMap<UMaterialInterface*, UMaterialInterface*> */ __um(_normal2dissolve);            // 0x02A0   (0x0050)  
	SDK_UNDEFINED(80,1917) /* TMap<UMaterialInterface*, FStaticMeshesArrayForClip> */ __um(_normal2dissolveStaticMeshes); // 0x02F0   (0x0050)  
	SDK_UNDEFINED(80,1918) /* TMap<UMaterialInterface*, UMaterialInterface*> */ __um(_dissolve2normal);            // 0x0340   (0x0050)  
	class UDataTable*                                  _sphericalDissolveMaterials;                                // 0x0390   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.ClipManager.SphericalDissolveAt
	// void SphericalDissolveAt(FVector Location, float Radius);                                                             // [0x5801370] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.ClipManager.RemoveDissolveMaterials
	// void RemoveDissolveMaterials();                                                                                       // [0x5800ba0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CollectableAudioComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UCollectableAudioComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B8   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CollectableAudioComponent.PostAudioEvent
	// void PostAudioEvent(FString audioCall);                                                                               // [0x5808860] Final|Native|Private 
	// Function /Script/DeadByDaylight.CollectableAudioComponent.PlayerPickedUpCollectable
	// void PlayerPickedUpCollectable(class ADBDPlayer* Player);                                                             // [0x58087d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.CollectableAudioComponent.OnItemDropped
	// void OnItemDropped(EItemDropType dropType);                                                                           // [0x5808730] Final|Native|Private 
	// Function /Script/DeadByDaylight.CollectableAudioComponent.OnChargeEmpty
	// void OnChargeEmpty();                                                                                                 // [0x5808620] Final|Native|Private 
	// Function /Script/DeadByDaylight.CollectableAudioComponent.EnableComponent
	// void EnableComponent();                                                                                               // [0x5808340] Final|Native|Private 
	// Function /Script/DeadByDaylight.CollectableAudioComponent.AddonConsumed
	// void AddonConsumed(class UItemAddon* addon);                                                                          // [0x5808130] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.CollectableCollection
/// Size: 0x0048 (0x0000B8 - 0x000100)
class UCollectableCollection : public UActorComponent
{ 
public:
	TArray<class ACollectable*>                        _collectables;                                              // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x38];                                      // 0x00C8   (0x0038)  MISSED
};

/// Class /Script/DeadByDaylight.CombinedPartyFriendFacade
/// Size: 0x0138 (0x000030 - 0x000168)
class UCombinedPartyFriendFacade : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x138];                                     // 0x0030   (0x0138)  MISSED
};

/// Class /Script/DeadByDaylight.CombinedSpecialEventDataUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UCombinedSpecialEventDataUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.CombinedSpecialEventDataUtilities.GetSpecialMusicState
	// FName GetSpecialMusicState(FCombinedSpecialEventData& Data);                                                          // [0x5808420] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.CommentatorActorBase
/// Size: 0x0008 (0x000230 - 0x000238)
class ACommentatorActorBase : public AActor
{ 
public:
	class UAkComponent*                                _audioComponent;                                            // 0x0230   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.CommentatorActorBase.OnAudioStarted
	// void OnAudioStarted();                                                                                                // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.CommentatorActorBase.OnAudioEnded
	// void OnAudioEnded();                                                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.CommentatorAudioData
/// Size: 0x0060 (0x000038 - 0x000098)
class UCommentatorAudioData : public UDataAsset
{ 
public:
	SDK_UNDEFINED(80,1919) /* TMap<ECommentatorContextCode, FCommentatorAudioContext> */ __um(_commentatorAudioContexts); // 0x0038   (0x0050)  
	class UClass*                                      _commentatorActorClass;                                     // 0x0088   (0x0008)  
	class UCommentatorSpawnStrategy*                   _commentatorSpawnStrategy;                                  // 0x0090   (0x0008)  
};

/// Class /Script/DeadByDaylight.CommentatorSpawnStrategy
/// Size: 0x0000 (0x000030 - 0x000030)
class UCommentatorSpawnStrategy : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.CommentatorSubsystem
/// Size: 0x0088 (0x000038 - 0x0000C0)
class UCommentatorSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x88];                                      // 0x0038   (0x0088)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CommentatorSubsystem.OnCommentatorAudioFinished
	// void OnCommentatorAudioFinished(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);                   // [0x5808640] Final|Native|Private 
	// Function /Script/DeadByDaylight.CommentatorSubsystem.EnqueueMenuAudioContext
	// void EnqueueMenuAudioContext(ECommentatorContextCode contextCode);                                                    // [0x5808360] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CommentatorSubsystem.EnqueueInGameAudioContext
	// void EnqueueInGameAudioContext(ECommentatorContextCode contextCode);                                                  // [0x5808360] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CondemnedUIDataInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UCondemnedUIDataInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.ConeAroundDirectionCameraStrategy
/// Size: 0x0028 (0x000030 - 0x000058)
class UConeAroundDirectionCameraStrategy : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0030   (0x0018)  MISSED
	float                                              _maxPitchDifference;                                        // 0x0048   (0x0004)  
	float                                              _maxYawDifference;                                          // 0x004C   (0x0004)  
	float                                              _maxRollDifference;                                         // 0x0050   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.ConnectionStatusSubsystem
/// Size: 0x00E0 (0x000038 - 0x000118)
class UConnectionStatusSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0xE0];                                      // 0x0038   (0x00E0)  MISSED
};

/// Class /Script/DeadByDaylight.ConsentManager
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UConsentManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x80];                                      // 0x0030   (0x0080)  MISSED
};

/// Class /Script/DeadByDaylight.ConstrainAspectRatioComponent
/// Size: 0x00B8 (0x0000B8 - 0x000170)
class UConstrainAspectRatioComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0xB8];                                      // 0x00B8   (0x00B8)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ConstrainAspectRatioComponent.SetCinematicMode
	// void SetCinematicMode(bool cinematicMode);                                                                            // [0x5808900] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ConstrainAspectRatioComponent.OnIntroCompleted
	// void OnIntroCompleted();                                                                                              // [0x5808710] Final|Native|Private 
	// Function /Script/DeadByDaylight.ConstrainAspectRatioComponent.GetCameraConstrainedViewSize
	// FIntPoint GetCameraConstrainedViewSize();                                                                             // [0x58083e0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ConstrainAspectRatioComponent.DBD_ToggleBlackBars
	// void DBD_ToggleBlackBars(int32_t Option);                                                                             // [0x4dd9ef0] Final|Exec|Native|Private 
};

/// Class /Script/DeadByDaylight.ContainsItemInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UContainsItemInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.ContentScheduleManager
/// Size: 0x0110 (0x000030 - 0x000140)
class UContentScheduleManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x108];                                     // 0x0030   (0x0108)  MISSED
	class UObjectLibrary*                              _availableMapLibrary;                                       // 0x0138   (0x0008)  
};

/// Class /Script/DeadByDaylight.ContentVersionManager
/// Size: 0x00B8 (0x000038 - 0x0000F0)
class UContentVersionManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0xB8];                                      // 0x0038   (0x00B8)  MISSED
};

/// Struct /Script/DeadByDaylight.SpecialBehaviourObjectsInfo
/// Size: 0x0014 (0x000000 - 0x000014)
struct FSpecialBehaviourObjectsInfo
{ 
	FName                                              SpecialBehaviourId;                                         // 0x0000   (0x000C)  
	int32_t                                            amountRequired;                                             // 0x000C   (0x0004)  
	int32_t                                            TimesInteractedWith;                                        // 0x0010   (0x0004)  
};

/// Class /Script/DeadByDaylight.ContextualQuestComponent
/// Size: 0x0040 (0x0000B8 - 0x0000F8)
class UContextualQuestComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x00B8   (0x0028)  MISSED
	TArray<FSpecialBehaviourObjectsInfo>               _specialBehaviourObjectsInfo;                               // 0x00E0   (0x0010)  
	bool                                               _isInitialized;                                             // 0x00F0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x00F1   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ContextualQuestComponent.OnSpecialBehaviourSet__DelegateSignature
	// void OnSpecialBehaviourSet__DelegateSignature(class ADBDPlayer* DBDPlayer);                                           // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.ContextualQuestComponent.OnRep_SpecialBehaviourObjectsInfo
	// void OnRep_SpecialBehaviourObjectsInfo();                                                                             // [0x58087b0] Final|Native|Private 
	// Function /Script/DeadByDaylight.ContextualQuestComponent.Authority_DebugRemoveSpecialBehaviour
	// void Authority_DebugRemoveSpecialBehaviour(FName ID);                                                                 // [0x58082a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ContextualQuestComponent.Authority_DebugAddSpecialBehaviour
	// void Authority_DebugAddSpecialBehaviour(FName ID, int32_t amountRequired);                                            // [0x58081c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ControllerPairingManager
/// Size: 0x0010 (0x000030 - 0x000040)
class UControllerPairingManager : public UObject
{ 
public:
	SDK_UNDEFINED(8,1920) /* TWeakObjectPtr<UDBDGameInstance*> */ __um(_gameInstance);                             // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.CooldownTimerPerkIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UCooldownTimerPerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.CoreCursor
/// Size: 0x0008 (0x000298 - 0x0002A0)
class UCoreCursor : public UUserWidget
{ 
public:
	class UScaleBox*                                   CursorScaleBox;                                             // 0x0298   (0x0008)  
};

/// Class /Script/DeadByDaylight.CoreHudRootWidget
/// Size: 0x00B8 (0x000298 - 0x000350)
class UCoreHudRootWidget : public UUserWidget
{ 
public:
	class UOverlay*                                    WidgetContainer;                                            // 0x0298   (0x0008)  
	class UOverlay*                                    OuterContainer;                                             // 0x02A0   (0x0008)  
	class UOverlay*                                    SpectateContainer;                                          // 0x02A8   (0x0008)  
	class UScaleBox*                                   ScaleHud;                                                   // 0x02B0   (0x0008)  
	float                                              UnfocusedOpacity;                                           // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x02BC   (0x0004)  MISSED
	class UClass*                                      EquippedItemWidgetClass;                                    // 0x02C0   (0x0008)  
	class UClass*                                      EquippedPowerWidgetClass;                                   // 0x02C8   (0x0008)  
	class UClass*                                      ExternalEffectsWidgetClass;                                 // 0x02D0   (0x0008)  
	class UClass*                                      HudAlertWidgetClass;                                        // 0x02D8   (0x0008)  
	class UClass*                                      InteractionProgressWidgetClass;                             // 0x02E0   (0x0008)  
	class UClass*                                      InteractionPromptsContainerWidgetClass;                     // 0x02E8   (0x0008)  
	class UClass*                                      ItemInteractionWidgetClass;                                 // 0x02F0   (0x0008)  
	class UClass*                                      OfferingInteractionWidgetClass;                             // 0x02F8   (0x0008)  
	class UClass*                                      PerksContainerWidgetClass;                                  // 0x0300   (0x0008)  
	class UClass*                                      PingStatusWidgetClass;                                      // 0x0308   (0x0008)  
	class UClass*                                      PlayerStatusesWidgetClass;                                  // 0x0310   (0x0008)  
	class UClass*                                      ScreenIndicatorWidgetClass;                                 // 0x0318   (0x0008)  
	class UClass*                                      StartSequenceWidgetClass;                                   // 0x0320   (0x0008)  
	class UClass*                                      StatusEffectWidgetClass;                                    // 0x0328   (0x0008)  
	SDK_UNDEFINED(16,1921) /* TArray<TScriptInterface<Class>> */ __um(_coreBaseViewInterfaces);                    // 0x0330   (0x0010)  
	SDK_UNDEFINED(16,1922) /* FMulticastInlineDelegate */ __um(HUDWidgetsFadeOutCompletedDelegate);                // 0x0340   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.CoreHudRootWidget.SetWidgetsVisibility
	// void SetWidgetsVisibility(bool visible);                                                                              // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CoreHudRootWidget.FadeOutWidgets
	// void FadeOutWidgets();                                                                                                // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CoreHudRootWidget.FadeInWidgets
	// void FadeInWidgets();                                                                                                 // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.CoreHudRootWidget.ApplyConstrainedAspectRatio
	// void ApplyConstrainedAspectRatio(bool isConstrained, float AspectRatio);                                              // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.CosmeticGameplayMutator
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UCosmeticGameplayMutator : public UGameplayMutator
{ 
public:
	bool                                               _isInitialized;                                             // 0x00B8   (0x0001)  
	bool                                               _isEnabled;                                                 // 0x00B9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00BA   (0x0006)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CosmeticGameplayMutator.OnRep_IsInitialized
	// void OnRep_IsInitialized(bool oldValue);                                                                              // [0x580d1a0] Final|Native|Private 
	// Function /Script/DeadByDaylight.CosmeticGameplayMutator.OnRep_IsEnabled
	// void OnRep_IsEnabled(bool oldValue);                                                                                  // [0x580d110] Final|Native|Private 
	// Function /Script/DeadByDaylight.CosmeticGameplayMutator.OnLocallyObservedChanged
	// void OnLocallyObservedChanged();                                                                                      // [0x580d0f0] Final|Native|Private 
	// Function /Script/DeadByDaylight.CosmeticGameplayMutator.DBD_ShowCosmeticMutators
	// void DBD_ShowCosmeticMutators(bool IsVisible, FString localPlayerId);                                                 // [0x580ccb0] Final|Exec|Native|Private 
	// Function /Script/DeadByDaylight.CosmeticGameplayMutator.Cosmetic_OnViewTargetChanged
	// void Cosmetic_OnViewTargetChanged(class AActor* ViewTarget);                                                          // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.CosmeticGameplayMutator.Cosmetic_OnInitialized
	// void Cosmetic_OnInitialized(class ADBDPlayer* Player);                                                                // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.CosmeticGameplayMutator.Cosmetic_OnEnabled
	// void Cosmetic_OnEnabled(class ADBDPlayer* Player);                                                                    // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.CosmeticGameplayMutator.Cosmetic_OnDisabled
	// void Cosmetic_OnDisabled(class ADBDPlayer* Player);                                                                   // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.CrossPlatformManager
/// Size: 0x0008 (0x000030 - 0x000038)
class UCrossPlatformManager : public UObject
{ 
public:
	bool                                               _crossPlayAllowedByPlatform;                                // 0x0030   (0x0001)  
	bool                                               _crossPlayAllowedByKraken;                                  // 0x0031   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0032   (0x0006)  MISSED
};

/// Class /Script/DeadByDaylight.CrossPromotionManager
/// Size: 0x0028 (0x000038 - 0x000060)
class UCrossPromotionManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.GeneratorDrivenActor
/// Size: 0x0028 (0x000230 - 0x000258)
class AGeneratorDrivenActor : public AActor
{ 
public:
	float                                              LightPriority;                                              // 0x0230   (0x0004)  
	SDK_UNDEFINED(1,1923) /* TEnumAsByte<EComponentMobility> */ __um(TargetMobileLightMobility);                   // 0x0234   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0235   (0x0003)  MISSED
	TArray<bool>                                       _activated;                                                 // 0x0238   (0x0010)  
	TArray<class AGenerator*>                          _generators;                                                // 0x0248   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.SetSpawnedObject
	// void SetSpawnedObject(class AGenerator* Generator, int32_t generatorId);                                              // [0x588c1a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnInitGeneratorDrivenActor
	// void OnInitGeneratorDrivenActor(class AGenerator* Generator, int32_t generatorId);                                    // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent6
	// void OnGeneratorRepairedEvent6(bool isAutoCompleted);                                                                 // [0x588bcf0] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent5
	// void OnGeneratorRepairedEvent5(bool isAutoCompleted);                                                                 // [0x588bc60] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent4
	// void OnGeneratorRepairedEvent4(bool isAutoCompleted);                                                                 // [0x588bbd0] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent3
	// void OnGeneratorRepairedEvent3(bool isAutoCompleted);                                                                 // [0x588bb40] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent2
	// void OnGeneratorRepairedEvent2(bool isAutoCompleted);                                                                 // [0x588bab0] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent1
	// void OnGeneratorRepairedEvent1(bool isAutoCompleted);                                                                 // [0x588ba20] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent0
	// void OnGeneratorRepairedEvent0(bool isAutoCompleted);                                                                 // [0x588b990] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent6
	// void OnGeneratorRepairedBySurvivorEvent6(class ADBDPlayer* repairingSurvivor);                                        // [0x588b900] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent5
	// void OnGeneratorRepairedBySurvivorEvent5(class ADBDPlayer* repairingSurvivor);                                        // [0x588b870] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent4
	// void OnGeneratorRepairedBySurvivorEvent4(class ADBDPlayer* repairingSurvivor);                                        // [0x588b7e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent3
	// void OnGeneratorRepairedBySurvivorEvent3(class ADBDPlayer* repairingSurvivor);                                        // [0x588b750] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent2
	// void OnGeneratorRepairedBySurvivorEvent2(class ADBDPlayer* repairingSurvivor);                                        // [0x588b6c0] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent1
	// void OnGeneratorRepairedBySurvivorEvent1(class ADBDPlayer* repairingSurvivor);                                        // [0x588b630] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent0
	// void OnGeneratorRepairedBySurvivorEvent0(class ADBDPlayer* repairingSurvivor);                                        // [0x588b5a0] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivor
	// void OnGeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor, int32_t generatorId);                         // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.OnActivateGeneratorDrivenActor
	// void OnActivateGeneratorDrivenActor(bool isAutoCompleted, int32_t generatorId);                                       // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.Multicast_GeneratorRepairedBySurvivor
	// void Multicast_GeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor, int32_t generatorId);                 // [0x588b330] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.Multicast_ActivationChecked
	// void Multicast_ActivationChecked(bool activated, bool isAutoCompleted, int32_t generatorId);                          // [0x588b210] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.IsValidGeneratorId
	// bool IsValidGeneratorId(int32_t generatorId);                                                                         // [0x588b140] Final|Native|Private|Const 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.IsActivated
	// bool IsActivated(int32_t generatorId);                                                                                // [0x588b070] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.GetSharedTileRandomizer
	// FRandomStream GetSharedTileRandomizer();                                                                              // [0x588afd0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.Authority_CheckGeneratorRepairedBySurvivor
	// void Authority_CheckGeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor, int32_t generatorId);            // [0x588a770] Final|Native|Public  
	// Function /Script/DeadByDaylight.GeneratorDrivenActor.Authority_CheckActivation
	// void Authority_CheckActivation(bool isAutoCompleted, int32_t generatorId);                                            // [0x588a6a0] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.CrowBomb
/// Size: 0x0098 (0x000258 - 0x0002F0)
class ACrowBomb : public AGeneratorDrivenActor
{ 
public:
	float                                              _innerRadius;                                               // 0x0258   (0x0004)  
	float                                              _outerRadius;                                               // 0x025C   (0x0004)  
	float                                              _maxTakeoffDelay;                                           // 0x0260   (0x0004)  
	int32_t                                            _numCrows;                                                  // 0x0264   (0x0004)  
	int32_t                                            _crowCenterDistance;                                        // 0x0268   (0x0004)  
	int32_t                                            _eliminationSamples;                                        // 0x026C   (0x0004)  
	float                                              _eliminationStddev;                                         // 0x0270   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0274   (0x0004)  MISSED
	SDK_UNDEFINED(48,1924) /* TWeakObjectPtr<UClass*> */ __um(_meshComponentClass);                                // 0x0278   (0x0030)  
	TArray<class UWorldRunawayMeshComponent*>          _crows;                                                     // 0x02A8   (0x0010)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x02B8   (0x0018)  MISSED
	class USceneComponent*                             _root;                                                      // 0x02D0   (0x0008)  
	class USceneComponent*                             _traceStart;                                                // 0x02D8   (0x0008)  
	class USceneComponent*                             _traceEnd;                                                  // 0x02E0   (0x0008)  
	bool                                               _landed;                                                    // 0x02E8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x02E9   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CrowBomb.TriggerTakeOff
	// void TriggerTakeOff(FVector triggerLocation);                                                                         // [0x580d5f0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.CrowBomb.TriggerLand
	// void TriggerLand();                                                                                                   // [0x580d5d0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CurrencyDisplayable
/// Size: 0x0068 (0x000230 - 0x000298)
class ACurrencyDisplayable : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0230   (0x0008)  MISSED
	class UDBDSkeletalMeshComponentBudgeted*           SkeletalMeshComponent;                                      // 0x0238   (0x0008)  
	SDK_UNDEFINED(80,1925) /* TMap<ECurrencyType, USkeletalMesh*> */ __um(_currencyMeshes);                        // 0x0240   (0x0050)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0290   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CurrencyDisplayable.FinishSpawningCurrency
	// void FinishSpawningCurrency(ECurrencyType CurrencyType);                                                              // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.CurrencyDisplayable.BeginDestroySequence_Internal
	// void BeginDestroySequence_Internal();                                                                                 // [0x57ff130] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.CurveFloatNetIdSubsystem
/// Size: 0x0060 (0x000038 - 0x000098)
class UCurveFloatNetIdSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0038   (0x0060)  MISSED
};

/// Struct /Script/DeadByDaylight.CustomizedMeshPart
/// Size: 0x0048 (0x000000 - 0x000048)
struct FCustomizedMeshPart
{ 
	ECustomizationCategory                             category;                                                   // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FDataTableDropdown                                 DefaultItemId;                                              // 0x0008   (0x0030)  
	FName                                              SocketName;                                                 // 0x0038   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.CustomizationDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UCustomizationDescription : public UDataAsset
{ 
public:
	TArray<FCustomizedMeshPart>                        Parts;                                                      // 0x0038   (0x0010)  
};

/// Class /Script/DeadByDaylight.CustomizationHelper
/// Size: 0x0000 (0x000030 - 0x000030)
class UCustomizationHelper : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.CustomizationPresetController
/// Size: 0x0000 (0x000030 - 0x000030)
class UCustomizationPresetController : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.CustomizedAnimationComponent
/// Size: 0x0020 (0x0000B8 - 0x0000D8)
class UCustomizedAnimationComponent : public UActorComponent
{ 
public:
	class ADBDBasePlayer*                              _owner;                                                     // 0x00B8   (0x0008)  
	class UCustomizedSkeletalMesh*                     _customizedSkeletalMesh;                                    // 0x00C0   (0x0008)  
	class UClass*                                      _defaultAnimClass;                                          // 0x00C8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00D0   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CustomizedAnimationComponent.OnCustomizationChanged
	// void OnCustomizationChanged();                                                                                        // [0x580d0d0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.CustomizedAudioComponent
/// Size: 0x0160 (0x0000B8 - 0x000218)
class UCustomizedAudioComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1926) /* FMulticastInlineDelegate */ __um(OnCustomizedAudioSwitchStateChanged);               // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,1927) /* FMulticastInlineDelegate */ __um(OnOutfitCustomizedAudioStateCollectionChanged);     // 0x00C8   (0x0010)  
	unsigned char                                      UnknownData00_5[0xB0];                                      // 0x00D8   (0x00B0)  MISSED
	SDK_UNDEFINED(16,1928) /* FString */               __um(AudioCharacterNameDefaultSwitchState);                 // 0x0188   (0x0010)  
	SDK_UNDEFINED(16,1929) /* FString */               __um(AudioCharacterSubNameDefaultSwitchState);              // 0x0198   (0x0010)  
	SDK_UNDEFINED(16,1930) /* FString */               __um(AudioCharacterHeadDefaultSwitchState);                 // 0x01A8   (0x0010)  
	SDK_UNDEFINED(16,1931) /* FString */               __um(AudioCharacterClothesDefaultSwitchState);              // 0x01B8   (0x0010)  
	SDK_UNDEFINED(16,1932) /* FString */               __um(AudioCharacterShoesDefaultSwitchState);                // 0x01C8   (0x0010)  
	SDK_UNDEFINED(16,1933) /* FString */               __um(AudioCharacterWeaponDefaultSwitchState);               // 0x01D8   (0x0010)  
	SDK_UNDEFINED(16,1934) /* FString */               __um(AudioCharacterAmbianceDefaultSwitchState);             // 0x01E8   (0x0010)  
	SDK_UNDEFINED(16,1935) /* FString */               __um(AudioCharacterStateDefaultSwitchState);                // 0x01F8   (0x0010)  
	FName                                              AudioCharacterDefaultOutfitCollectionState;                 // 0x0208   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0214   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CustomizedAudioComponent.OutfitCustomizedAudioChangedDelegate__DelegateSignature
	// void OutfitCustomizedAudioChangedDelegate__DelegateSignature(FName& outfitAudioStateCollection);                      // [0x61d2f50] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/DeadByDaylight.CustomizedAudioComponent.GetOutfitCustomizedAudioCollectionState
	// FName GetOutfitCustomizedAudioCollectionState();                                                                      // [0x580cfc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CustomizedAudioComponent.GetAudioSwitchState
	// FString GetAudioSwitchState(EAudioCustomizationCategory audioCustomizationCategory);                                  // [0x580cda0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.CustomizedSkeletalMesh
/// Size: 0x0378 (0x0000B8 - 0x000430)
class UCustomizedSkeletalMesh : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1936) /* FMulticastInlineDelegate */ __um(OnMeshSwitchBP);                                    // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x00C8   (0x0018)  MISSED
	SDK_UNDEFINED(16,1937) /* FMulticastInlineDelegate */ __um(OnCustomizationReady);                              // 0x00E0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x00F0   (0x0030)  MISSED
	class USkinnedMeshComponent*                       _meshOwner;                                                 // 0x0120   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0128   (0x0008)  MISSED
	SDK_UNDEFINED(80,1938) /* TSet<ECustomizationCategory> */ __um(_ignoredItemCategories);                        // 0x0130   (0x0050)  
	TArray<class USkeletalMeshComponent*>              _cosmeticPiecesMesh;                                        // 0x0180   (0x0010)  
	SDK_UNDEFINED(80,1939) /* TMap<ECustomizationCategory, USkeletalMeshComponent*> */ __um(_cosmeticPiecesMeshPerCategory); // 0x0190   (0x0050)  
	TArray<class USkeletalMeshComponent*>              _slaves;                                                    // 0x01E0   (0x0010)  
	SDK_UNDEFINED(80,1940) /* TMap<ECustomizationCategory, AItemVfx*> */ __um(_itemVfxs);                          // 0x01F0   (0x0050)  
	unsigned char                                      UnknownData03_5[0xA0];                                      // 0x0240   (0x00A0)  MISSED
	int32_t                                            _characterIdOverride;                                       // 0x02E0   (0x0004)  
	unsigned char                                      UnknownData04_5[0x5C];                                      // 0x02E4   (0x005C)  MISSED
	SDK_UNDEFINED(80,1941) /* TMap<ECustomizationCategory, FCosmeticPieceMeshLoadingData> */ __um(_cosmeticPieceMeshesBeingLoaded); // 0x0340   (0x0050)  
	unsigned char                                      UnknownData05_6[0xA0];                                      // 0x0390   (0x00A0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.SetVfxsVisibility
	// void SetVfxsVisibility(ECustomizationCategory category, bool visible);                                                // [0x580d500] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.SetMeshVisibility
	// void SetMeshVisibility(bool visible);                                                                                 // [0x580d470] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.SetMeshOwner
	// void SetMeshOwner(class USkinnedMeshComponent* Mesh);                                                                 // [0x580d3e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.SetCastShadow
	// void SetCastShadow(bool CastShadow);                                                                                  // [0x580d350] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.SetAllVfxsVisibility
	// void SetAllVfxsVisibility(bool visible);                                                                              // [0x580d2c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.SetAllAccessoriesVisibility
	// void SetAllAccessoriesVisibility(bool visible);                                                                       // [0x580d230] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.OnMeshSwitchEventBP__DelegateSignature
	// void OnMeshSwitchEventBP__DelegateSignature(ECustomizationCategory category, class USkeletalMeshComponent* Mesh);     // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.OnCustomizationReadyBP__DelegateSignature
	// void OnCustomizationReadyBP__DelegateSignature();                                                                     // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.HasValidCustomization
	// bool HasValidCustomization();                                                                                         // [0x580d090] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.GetSkeletalMesh
	// class USkeletalMeshComponent* GetSkeletalMesh(ECustomizationCategory category);                                       // [0x580d000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.GetMeshOwner
	// class USkinnedMeshComponent* GetMeshOwner();                                                                          // [0x580cf90] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.GetCurrentCustomizationItems
	// TArray<FName> GetCurrentCustomizationItems();                                                                         // [0x580cf10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.GetComponents
	// TArray<USkeletalMeshComponent*> GetComponents();                                                                      // [0x580ce80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.CopyCustomization
	// void CopyCustomization(class UCustomizedSkeletalMesh* copyFrom);                                                      // [0x580cc20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.Contains
	// bool Contains(TArray<FName> itemIds);                                                                                 // [0x580cb20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CustomizedSkeletalMesh.ClearAllVfxs
	// void ClearAllVfxs();                                                                                                  // [0x580cb00] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CustomWidgetWrapperInitializer
/// Size: 0x0010 (0x000298 - 0x0002A8)
class UCustomWidgetWrapperInitializer : public UUserWidget
{ 
public:
	class UCustomWidgetWrapper*                        ListeningWrapper;                                           // 0x0298   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02A0   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.CustomWidgetWrapper
/// Size: 0x0050 (0x000158 - 0x0001A8)
class UCustomWidgetWrapper : public UCanvasPanel
{ 
public:
	SDK_UNDEFINED(16,1942) /* FMulticastInlineDelegate */ __um(OnVersion);                                         // 0x0158   (0x0010)  
	FGameplayTag                                       ID;                                                         // 0x0168   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0174   (0x0004)  MISSED
	class UCustomWidgetWrapper*                        ManuallyParentWrapper;                                      // 0x0178   (0x0008)  
	TArray<class UCustomWidgetWrapper*>                ManuallyChildWrappers;                                      // 0x0180   (0x0010)  
	class UCustomWidgetWrapperInitializer*             InitializerWidget;                                          // 0x0190   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0198   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CustomWidgetWrapper.ApplyVersion
	// void ApplyVersion(int32_t Version);                                                                                   // [0x497ee20] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomWidgetWrapper.ApplyScale
	// void ApplyScale(float Scale);                                                                                         // [0x58112b0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomWidgetWrapper.ApplyOpacity
	// void ApplyOpacity(float Opacity);                                                                                     // [0x5811220] Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.HudEditorDragFromParentAxisLimit
/// Size: 0x0014 (0x000000 - 0x000014)
struct FHudEditorDragFromParentAxisLimit
{ 
	bool                                               enable;                                                     // 0x0000   (0x0001)  
	EHudEditorDragAxisOption                           AxisOption;                                                 // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	float                                              MinDragDistance;                                            // 0x0004   (0x0004)  
	bool                                               ScaleMinDragDistanceWithParent;                             // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              MaxDragDistance;                                            // 0x000C   (0x0004)  
	bool                                               ScaleMaxDragDistanceWithParent;                             // 0x0010   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0011   (0x0003)  MISSED
};

/// Class /Script/DeadByDaylight.CustomWidgetWrapper_HudEditor
/// Size: 0x00C8 (0x0001A8 - 0x000270)
class UCustomWidgetWrapper_HudEditor : public UCustomWidgetWrapper
{ 
public:
	float                                              MinOpacity;                                                 // 0x01A8   (0x0004)  
	float                                              MaxOpacity;                                                 // 0x01AC   (0x0004)  
	float                                              MinScale;                                                   // 0x01B0   (0x0004)  
	float                                              MaxScale;                                                   // 0x01B4   (0x0004)  
	int32_t                                            NbVersions;                                                 // 0x01B8   (0x0004)  
	float                                              HideUnderOpacity;                                           // 0x01BC   (0x0004)  
	FColor                                             HiddenStatusTintColor;                                      // 0x01C0   (0x0004)  
	float                                              HiddenStatusOpacity;                                        // 0x01C4   (0x0004)  
	float                                              OverlapAboveSizeRatio;                                      // 0x01C8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x01CC   (0x0004)  MISSED
	FGameplayTagContainer                              IgnoreOverlapIds;                                           // 0x01D0   (0x0020)  
	FHudEditorDragFromParentAxisLimit                  ParentDragLimitX;                                           // 0x01F0   (0x0014)  
	FHudEditorDragFromParentAxisLimit                  ParentDragLimitY;                                           // 0x0204   (0x0014)  
	bool                                               IsEditingHudByInput;                                        // 0x0218   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0219   (0x0003)  MISSED
	FColor                                             OverlapStatusTintColor;                                     // 0x021C   (0x0004)  
	unsigned char                                      UnknownData02_6[0x50];                                      // 0x0220   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CustomWidgetWrapper_HudEditor.GetScale
	// float GetScale();                                                                                                     // [0x5811fa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CustomWidgetWrapper_HudEditor.GetOpacity
	// float GetOpacity();                                                                                                   // [0x5811f70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CustomWidgetWrapper_HudEditor.FlipScreenPosition
	// void FlipScreenPosition();                                                                                            // [0x5811c70] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomWidgetWrapper_HudEditor.FlipPositionWithChildLinkWidget
	// void FlipPositionWithChildLinkWidget();                                                                               // [0x5811c50] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomWidgetWrapper_HudEditor.ClampToViewport
	// void ClampToViewport();                                                                                               // [0x5811690] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomWidgetWrapper_HudEditor.CanEditScale
	// bool CanEditScale();                                                                                                  // [0x58115c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CustomWidgetWrapper_HudEditor.CanEditOpacity
	// bool CanEditOpacity();                                                                                                // [0x5811580] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.CustomWidgetWrapper_HudEditor.ApplyScaleWithOverlappingWrappers
	// void ApplyScaleWithOverlappingWrappers(float Scale, class UWidget* Widget, TArray<UCustomWidgetWrapper_HudEditor*>& allEditableWrappers, bool needDetectOverlapping); // [0x5811340] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.CustomWidgetWrapper_HudEditor.AddToTranslation
	// void AddToTranslation(FVector2D Translation);                                                                         // [0x58111a0] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CustomWidgetWrapper_InGame
/// Size: 0x0028 (0x0001A8 - 0x0001D0)
class UCustomWidgetWrapper_InGame : public UCustomWidgetWrapper
{ 
public:
	int32_t                                            VirtualJoystickIndex;                                       // 0x01A8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x24];                                      // 0x01AC   (0x0024)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.CustomWidgetWrapper_InGame.UpdateSettings
	// void UpdateSettings();                                                                                                // [0x5812aa0] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.DailyRewardUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDailyRewardUtilities : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.DailyRitualsScreen
/// Size: 0x0060 (0x000120 - 0x000180)
class UDailyRitualsScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0120   (0x0060)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DailyRitualsScreen.OnRemoveRitual
	// void OnRemoveRitual(FString ID);                                                                                      // [0x58125d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DailyRitualsScreen.OnClosed
	// void OnClosed();                                                                                                      // [0x57c4110] Final|Native|Private 
	// Function /Script/DeadByDaylight.DailyRitualsScreen.OnClaimRitual
	// void OnClaimRitual(FString ID);                                                                                       // [0x58122e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DailyRitualsScreen.OnClaimAllRituals
	// void OnClaimAllRituals();                                                                                             // [0x58122c0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.DBD_CrossDissolver
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class UDBD_CrossDissolver : public UActorComponent
{ 
public:
	TArray<class UMaterialInterface*>                  NewMaterials;                                               // 0x00B8   (0x0010)  
	TArray<class USkeletalMeshComponent*>              BaseSkeletalMesh;                                           // 0x00C8   (0x0010)  
	TArray<class USkeletalMeshComponent*>              ClonedSkeletalMeshes;                                       // 0x00D8   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.DBD_CrossDissolver.MakeClone
	// void MakeClone();                                                                                                     // [0x5812080] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBD_CrossDissolver.KillClone
	// void KillClone();                                                                                                     // [0x5812060] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.MapMeshToAkAudioEvent
/// Size: 0x0040 (0x000000 - 0x000040)
struct FMapMeshToAkAudioEvent
{ 
	SDK_UNDEFINED(48,1943) /* TWeakObjectPtr<UStaticMesh*> */ __um(Mesh);                                          // 0x0000   (0x0030)  
	class UAkAudioEvent*                               SoundEvent;                                                 // 0x0030   (0x0008)  
	float                                              MinDelayBetweenEvents;                                      // 0x0038   (0x0004)  
	float                                              MinDelayBetweenObject;                                      // 0x003C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.MapSoundsToAvoid
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMapSoundsToAvoid
{ 
	class UPrimitiveComponent*                         Component;                                                  // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.DBD_SoundClipUtil
/// Size: 0x00C8 (0x0000B8 - 0x000180)
class UDBD_SoundClipUtil : public UActorComponent
{ 
public:
	TArray<FMapMeshToAkAudioEvent>                     AudioMap;                                                   // 0x00B8   (0x0010)  
	SDK_UNDEFINED(80,1944) /* TMap<FName, FMapMeshToAkAudioEvent> */ __um(_audioEventMap);                         // 0x00C8   (0x0050)  
	TArray<FMapSoundsToAvoid>                          _objectsWhoHavePlayedASound;                                // 0x0118   (0x0010)  
	SDK_UNDEFINED(80,1945) /* TMap<UAkAudioEvent*, float> */ __um(_nextSoundPlayTime);                             // 0x0128   (0x0050)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0178   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBD_SoundClipUtil.OnCharacterEnterSoundRegion
	// void OnCharacterEnterSoundRegion(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x58120a0] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.DBD_SoundClipUtil.GetAudioEventForMesh
	// class UAkAudioEvent* GetAudioEventForMesh(class UStaticMeshComponent* usm);                                           // [0x5811ed0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBD_SoundClipUtil.Cosmetic_OnSoundTriggered
	// void Cosmetic_OnSoundTriggered(class AActor* Actor);                                                                  // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
};

/// Struct /Script/DeadByDaylight.DBD_SoundSpawnerData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FDBD_SoundSpawnerData
{ 
	SDK_UNDEFINED(16,1946) /* TArray<TWeakObjectPtr<UClass*>> */ __um(TriggerObject);                              // 0x0000   (0x0010)  
	bool                                               TriggerVisualForCamper;                                     // 0x0010   (0x0001)  
	bool                                               TriggerVisualForSlasher;                                    // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0012   (0x0006)  MISSED
	SDK_UNDEFINED(16,1947) /* TArray<TWeakObjectPtr<UClass*>> */ __um(ActorToSpawnVisual);                         // 0x0018   (0x0010)  
};

/// Class /Script/DeadByDaylight.DBD_SoundEventSpawner
/// Size: 0x0038 (0x000230 - 0x000268)
class ADBD_SoundEventSpawner : public AActor
{ 
public:
	TArray<FDBD_SoundSpawnerData>                      AtlantaSoundDescriptor;                                     // 0x0230   (0x0010)  
	TArray<FDBD_SoundSpawnerData>                      SoundDescriptor;                                            // 0x0240   (0x0010)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0250   (0x0008)  MISSED
	TArray<class UClass*>                              _loadedSoundAssets;                                         // 0x0258   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.DBD_SoundEventSpawner.OnLoudNoiseTriggered
	// void OnLoudNoiseTriggered(class AActor* originator, class AActor* instigatingActor, FVector Location, bool shouldTrack, float& audibleRange, bool isQuickAction, bool isDeceivingNoise); // [0x5812380] Final|Native|Protected|HasOutParms|HasDefaults 
	// Function /Script/DeadByDaylight.DBD_SoundEventSpawner.AssetsLoaded
	// void AssetsLoaded();                                                                                                  // [0x58114d0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.DBDBaseActorSpawnerActor2
/// Size: 0x0010 (0x000230 - 0x000240)
class ADBDBaseActorSpawnerActor2 : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0230   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.DBDActorSpawnerActor2
/// Size: 0x0008 (0x000240 - 0x000248)
class ADBDActorSpawnerActor2 : public ADBDBaseActorSpawnerActor2
{ 
public:
	class UActorSpawner*                               actorSpawnerComponent;                                      // 0x0240   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDTileSpawnPointActor2
/// Size: 0x0008 (0x000240 - 0x000248)
class ADBDTileSpawnPointActor2 : public ADBDBaseActorSpawnerActor2
{ 
public:
	class UTileSpawnPoint*                             tileSpawnPointComponent;                                    // 0x0240   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDActorVariationSpawnerActor2
/// Size: 0x0008 (0x000240 - 0x000248)
class ADBDActorVariationSpawnerActor2 : public ADBDBaseActorSpawnerActor2
{ 
public:
	class UActorVariationSpawner*                      actorVariationSpawnerComponent;                             // 0x0240   (0x0008)  
};

/// Class /Script/DeadByDaylight.ActorSpawner2Component
/// Size: 0x0000 (0x000270 - 0x000270)
class UActorSpawner2Component : public UChildActorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDAggregateCullDistanceVolumes
/// Size: 0x0000 (0x000230 - 0x000230)
class ADBDAggregateCullDistanceVolumes : public AActor
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDAggregateCullDistanceVolumes.SpawnCullDistanceVolumes
	// void SpawnCullDistanceVolumes();                                                                                      // [0x58129b0] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.DBDAggregateParticleSystemComponent
/// Size: 0x0060 (0x000700 - 0x000760)
class UDBDAggregateParticleSystemComponent : public UParticleSystemComponent
{ 
public:
	float                                              CullAngle;                                                  // 0x06F8   (0x0004)  
	float                                              EndFadeDistance;                                            // 0x06FC   (0x0004)  
	SDK_UNDEFINED(80,1948) /* TSet<USceneComponent*> */ __um(LocatorComponentCache);                               // 0x0700   (0x0050)  
	bool                                               PendingReset;                                               // 0x0750   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0751   (0x000F)  MISSED
};

/// Class /Script/DeadByDaylight.DBDAggregateParticleManager
/// Size: 0x0000 (0x000230 - 0x000230)
class ADBDAggregateParticleManager : public AActor
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDLocatorComponent
/// Size: 0x0000 (0x000220 - 0x000220)
class UDBDLocatorComponent : public USceneComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDAggregateParticleLocatorComponent
/// Size: 0x0000 (0x000220 - 0x000220)
class UDBDAggregateParticleLocatorComponent : public UDBDLocatorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDAIPlayerController
/// Size: 0x0028 (0x000620 - 0x000648)
class ADBDAIPlayerController : public ADBDAIController
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0620   (0x0018)  MISSED
	TArray<class UAICharacterBehaviour*>               _currentBehaviours;                                         // 0x0638   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.DBDAIPlayerController.StopCharacterBehaviour
	// void StopCharacterBehaviour(class UClass* behaviourClass);                                                            // [0x5818100] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIPlayerController.StopAllCharacterBehaviours
	// void StopAllCharacterBehaviours();                                                                                    // [0x58180e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIPlayerController.StartCharacterBehaviour
	// void StartCharacterBehaviour(class UClass* behaviourClass, class UAICharacterBehaviourData* characterBehaviourData);  // [0x5818010] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIPlayerController.ResumeCharacterBehaviour
	// void ResumeCharacterBehaviour(class UClass* behaviourClass);                                                          // [0x5817bd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIPlayerController.PauseCharacterBehaviour
	// void PauseCharacterBehaviour(class UClass* behaviourClass);                                                           // [0x5817b40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAIPlayerController.OnBehaviourEndedHandler
	// void OnBehaviourEndedHandler(class UAICharacterBehaviour* behaviourEnded);                                            // [0x5817ab0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDAIPlayerController.MovePlayerToActor
	// void MovePlayerToActor(class AActor* Goal, float AcceptanceRadius);                                                   // [0x58176f0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDAITypes
/// Size: 0x0210 (0x000030 - 0x000240)
class UDBDAITypes : public UObject
{ 
public:
	FGameplayTag                                       AISkills_Context_Service_Root;                              // 0x0030   (0x000C)  
	FGameplayTag                                       AISkills_Context_Task_Slasher_AttackTarget;                 // 0x003C   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Slasher_AttackTarget;              // 0x0048   (0x000C)  
	FGameplayTag                                       AISkills_Context_Task_Slasher_CrawlingTarget;               // 0x0054   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Slasher_CrawlingTarget;            // 0x0060   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Slasher_Investigate_NotInChase;    // 0x006C   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Slasher_Investigate_InChase;       // 0x0078   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Slasher_Investigate_MoveAround;    // 0x0084   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Slasher_Patrol;                    // 0x0090   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Slasher_Patrol_MoveAround;         // 0x009C   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_Standing;                   // 0x00A8   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_Crawling;                   // 0x00B4   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_Flee_Run_Always;            // 0x00C0   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_Flee_Run_InChase;           // 0x00CC   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_Flee_Run_NotInChase;        // 0x00D8   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_Patrol;                     // 0x00E4   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_RescueCarriedFriend;        // 0x00F0   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_RemoveTrap;                 // 0x00FC   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_Chained;                    // 0x0108   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_HelpOther;                  // 0x0114   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_GoalInTerror;               // 0x0120   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_Carried;                    // 0x012C   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_UseSelfItem;                // 0x0138   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_InLocker;                   // 0x0144   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_Flee_InLocker;              // 0x0150   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_RepairGenerator;            // 0x015C   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_BeforeGoals;                // 0x0168   (0x000C)  
	FGameplayTag                                       AISkills_Context_Service_Camper_UseK32Emp;                  // 0x0174   (0x000C)  
	FGameplayTag                                       AIBlackboard_InteractableWishList_FindSkill;                // 0x0180   (0x000C)  
	FGameplayTag                                       AIBlackboard_ActorWishList_FindSkill;                       // 0x018C   (0x000C)  
	FGameplayTag                                       AI_PointOfInterest_ActivatedDoor;                           // 0x0198   (0x000C)  
	FGameplayTag                                       AI_PointOfInterest_ActivatedDoor_Opened;                    // 0x01A4   (0x000C)  
	FGameplayTag                                       AI_PointOfInterest_BrokenGenerator;                         // 0x01B0   (0x000C)  
	FGameplayTag                                       AI_PointOfInterest_OccupiedMeatHook;                        // 0x01BC   (0x000C)  
	FGameplayTag                                       AI_PointOfInterest_HexTotem;                                // 0x01C8   (0x000C)  
	FGameplayTag                                       AI_Hearing_SilenceStatusEffect_Header;                      // 0x01D4   (0x000C)  
	FGameplayTag                                       AI_PinLocation_WarpStart;                                   // 0x01E0   (0x000C)  
	FGameplayTag                                       AI_PinLocation_WarpEnd;                                     // 0x01EC   (0x000C)  
	FGameplayTag                                       AI_PinLocation_EQS;                                         // 0x01F8   (0x000C)  
	FGameplayTag                                       AI_PinLocation_WishedObj;                                   // 0x0204   (0x000C)  
	FGameplayTag                                       AI_PinLocation_GoTo;                                        // 0x0210   (0x000C)  
	FGameplayTag                                       AI_PinObject_EQS;                                           // 0x021C   (0x000C)  
	FGameplayTag                                       AI_PinObject_WishedObj;                                     // 0x0228   (0x000C)  
	FGameplayTag                                       AI_PinObject_GoTo;                                          // 0x0234   (0x000C)  
};

/// Class /Script/DeadByDaylight.DBDAnimationBudgetAllocatorActivator
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class UDBDAnimationBudgetAllocatorActivator : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x00B8   (0x0030)  MISSED
};

/// Class /Script/DeadByDaylight.DBDAssetManager
/// Size: 0x0018 (0x000480 - 0x000498)
class UDBDAssetManager : public UAssetManager
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0480   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.DBDAtlantaBloodwebDefinition
/// Size: 0x0110 (0x000030 - 0x000140)
class UDBDAtlantaBloodwebDefinition : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x110];                                     // 0x0030   (0x0110)  MISSED
};

/// Class /Script/DeadByDaylight.DBDBaseInputHandler
/// Size: 0x00A8 (0x000030 - 0x0000D8)
class UDBDBaseInputHandler : public UObject
{ 
public:
	class APawn*                                       _pawn;                                                      // 0x0030   (0x0008)  
	class USpringArmComponent*                         _cameraBoom;                                                // 0x0038   (0x0008)  
	unsigned char                                      UnknownData00_6[0x98];                                      // 0x0040   (0x0098)  MISSED
};

/// Class /Script/DeadByDaylight.DBDAtlantaInputHandler
/// Size: 0x00D8 (0x0000D8 - 0x0001B0)
class UDBDAtlantaInputHandler : public UDBDBaseInputHandler
{ 
public:
	unsigned char                                      UnknownData00_1[0xD8];                                      // 0x00D8   (0x00D8)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDAtlantaInputHandler.SetVirtualJoystickCenter
	// void SetVirtualJoystickCenter(int32_t controlIndex, FVector2D controlCenter);                                         // [0x5817f40] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAtlantaInputHandler.GetVirtualJoystickVisualSize
	// FVector2D GetVirtualJoystickVisualSize(int32_t controlIndex);                                                         // [0x5817550] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDAtlantaInputHandler.GetVirtualJoystickVisualCenter
	// FVector2D GetVirtualJoystickVisualCenter(int32_t controlIndex);                                                       // [0x58174c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDAtlantaInputHandler.GetVirtualJoystickPosition
	// FVector2D GetVirtualJoystickPosition(int32_t controlIndex);                                                           // [0x5817430] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDAtlantaInputHandler.GetVirtualJoystickNormalizedOffset
	// FVector2D GetVirtualJoystickNormalizedOffset(int32_t controlIndex);                                                   // [0x5817430] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.AtlantaRitualEvaluatorBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UAtlantaRitualEvaluatorBase : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.AtlantaRitualEvaluatorInvalid
/// Size: 0x0000 (0x000030 - 0x000030)
class UAtlantaRitualEvaluatorInvalid : public UAtlantaRitualEvaluatorBase
{ 
public:
};

/// Class /Script/DeadByDaylight.AtlantaRitualEvaluatorFullLoadout
/// Size: 0x0000 (0x000030 - 0x000030)
class UAtlantaRitualEvaluatorFullLoadout : public UAtlantaRitualEvaluatorBase
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDAtlantaTutorialParameters
/// Size: 0x0008 (0x000030 - 0x000038)
class UDBDAtlantaTutorialParameters : public UObject
{ 
public:
	float                                              SurvTutorial_WiggleChargeRateMultiplier;                    // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.AttackDelegatePair
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAttackDelegatePair
{ 
	class UDBDAttack*                                  _attack;                                                    // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.DBDAttackerComponent
/// Size: 0x0108 (0x0000B8 - 0x0001C0)
class UDBDAttackerComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1949) /* FMulticastInlineDelegate */ __um(OnAttackStartDelegate);                             // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,1950) /* FMulticastInlineDelegate */ __um(OnAttackFinishDelegate);                            // 0x00C8   (0x0010)  
	unsigned char                                      UnknownData00_5[0x38];                                      // 0x00D8   (0x0038)  MISSED
	FDBDTunableRowHandle                               _autonomousHitPredictionDelay;                              // 0x0110   (0x0028)  
	TArray<class UDBDAttack*>                          _attacks;                                                   // 0x0138   (0x0010)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0148   (0x0010)  MISSED
	class UDBDAttack*                                  _requestedAttack;                                           // 0x0158   (0x0008)  
	class UDBDAttack*                                  _currentAttack;                                             // 0x0160   (0x0008)  
	unsigned char                                      UnknownData02_5[0x48];                                      // 0x0168   (0x0048)  MISSED
	TArray<FAttackDelegatePair>                        _attackHitDelegates;                                        // 0x01B0   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.DBDAttackerComponent.Server_StoreAttack
	// void Server_StoreAttack(EAttackType attackType);                                                                      // [0x581e660] Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDAttackerComponent.OnAttackPhaseChangedDelegate__DelegateSignature
	// void OnAttackPhaseChangedDelegate__DelegateSignature(EAttackType attackType);                                         // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.DBDAttackerComponent.Multicast_StoreAttack
	// void Multicast_StoreAttack(EAttackType attackType);                                                                   // [0x581ce70] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDAttackerComponent.Local_RequestAttack
	// void Local_RequestAttack(EAttackType attackType);                                                                     // [0x581cdf0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDAttackerComponent.IsAttackTransitionRequested
	// bool IsAttackTransitionRequested(EAttackType attackType);                                                             // [0x581cbe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDAttackerComponent.IsAttacking
	// bool IsAttacking();                                                                                                   // [0x581cc70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDAttackerComponent.IsAnyAttackTransitionRequested
	// bool IsAnyAttackTransitionRequested();                                                                                // [0x581cbb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.DBDAttackUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDAttackUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDAttackUtilities.GetCurrentAttackType
	// EAttackType GetCurrentAttackType(class AActor* Attacker);                                                             // [0x581c2d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDAttackUtilities.GetCurrentAttackSubstateRemainingTime
	// float GetCurrentAttackSubstateRemainingTime(class AActor* Attacker);                                                  // [0x581c240] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Struct /Script/DeadByDaylight.AuthenticationInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAuthenticationInfo
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.DBDAuthentication
/// Size: 0x0028 (0x000030 - 0x000058)
class UDBDAuthentication : public UObject
{ 
public:
	TArray<FAuthenticationInfo>                        _localInfos;                                                // 0x0030   (0x0010)  
	TArray<FAuthenticationInfo>                        _remoteInfos;                                               // 0x0040   (0x0010)  
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0050   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDBaseGameMode
/// Size: 0x0040 (0x000328 - 0x000368)
class ADBDBaseGameMode : public AGameMode
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0328   (0x0008)  MISSED
	FDataTableDropdown                                 DebugSpecialEvent;                                          // 0x0330   (0x0030)  
	EGameType                                          DebugGameType;                                              // 0x0360   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0361   (0x0007)  MISSED
};

/// Class /Script/DeadByDaylight.DBDBaseHud
/// Size: 0x0010 (0x000320 - 0x000330)
class ADBDBaseHud : public AHUD
{ 
public:
	class UFont*                                       _debugFont;                                                 // 0x0320   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0328   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDBaseHud.ShowAnimHudBP
	// void ShowAnimHudBP();                                                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDBaseHud.ShouldDrawAnimHud
	// bool ShouldDrawAnimHud();                                                                                             // [0x581e710] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDBaseHud.DBD_ShowAnimHud
	// void DBD_ShowAnimHud(bool Show);                                                                                      // [0x581c030] Final|Exec|Native|Protected 
};

/// Class /Script/DeadByDaylight.DBDBaseMatchGameMode
/// Size: 0x0018 (0x000368 - 0x000380)
class ADBDBaseMatchGameMode : public ADBDBaseGameMode
{ 
public:
	class UEndGameComponent*                           _endGameComponent;                                          // 0x0368   (0x0008)  
	class UEscapeRequirementTracker*                   _escapeRequirementTracker;                                  // 0x0370   (0x0008)  
	class ANetworkFenceActor*                          _theFence;                                                  // 0x0378   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.DBDBaseMatchGameMode.GetEndGameComponent
	// class UEndGameComponent* GetEndGameComponent();                                                                       // [0x581c3c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.HISMMaterialHelperSettings
/// Size: 0x0050 (0x000038 - 0x000088)
class UHISMMaterialHelperSettings : public UDataAsset
{ 
public:
	SDK_UNDEFINED(80,1951) /* TMap<UStaticMesh*, TWeakObjectPtr<UClass*>> */ __um(_meshMaterialOverride);          // 0x0038   (0x0050)  
};

/// Struct /Script/DeadByDaylight.StaticMeshAutoBatch
/// Size: 0x0040 (0x000000 - 0x000040)
struct FStaticMeshAutoBatch
{ 
	class UStaticMesh*                                 StaticMesh;                                                 // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x28];                                      // 0x0008   (0x0028)  MISSED
	TArray<class UStaticMeshComponent*>                staticMeshComponents;                                       // 0x0030   (0x0010)  
};

/// Class /Script/DeadByDaylight.BatchDrawing
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UBatchDrawing : public UObject
{ 
public:
	class AActor*                                      _actorToSpawnInstancesInto;                                 // 0x0030   (0x0008)  
	SDK_UNDEFINED(80,1952) /* TMap<UStaticMesh*, FPerMeshInstancingData> */ __um(_meshesToInstancingData);         // 0x0038   (0x0050)  
	class UHISMMaterialHelperSettings*                 _hismMaterialHelperSettings;                                // 0x0088   (0x0008)  
	class UWorld*                                      _currentWorld;                                              // 0x0090   (0x0008)  
	TArray<FStaticMeshAutoBatch>                       _meshAutoBatch;                                             // 0x0098   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.DBDBloodWebDefinition
/// Size: 0x0110 (0x000030 - 0x000140)
class UDBDBloodWebDefinition : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x110];                                     // 0x0030   (0x0110)  MISSED
};

/// Class /Script/DeadByDaylight.DBDBloodwebDefinitionBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDBloodwebDefinitionBase : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDBotsUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDBotsUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDCharacterMovementUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDCharacterMovementUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDCharacterUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDCharacterUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsWilliamBillOverbeck
	// bool IsWilliamBillOverbeck(class ADBDBasePlayer* TargetPlayer);                                                       // [0x5822c90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheWraith
	// bool IsTheWraith(class ADBDBasePlayer* TargetPlayer);                                                                 // [0x5822c00] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheTwins_Sister
	// bool IsTheTwins_Sister(class ADBDBasePlayer* TargetPlayer);                                                           // [0x5822b70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheTwins_Brother
	// bool IsTheTwins_Brother(class ADBDBasePlayer* TargetPlayer);                                                          // [0x5822ae0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheTwins
	// bool IsTheTwins(class ADBDBasePlayer* TargetPlayer);                                                                  // [0x5822a50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheTrickster
	// bool IsTheTrickster(class ADBDBasePlayer* TargetPlayer);                                                              // [0x58229c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheTrapper
	// bool IsTheTrapper(class ADBDBasePlayer* TargetPlayer);                                                                // [0x5822930] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheSpirit
	// bool IsTheSpirit(class ADBDBasePlayer* TargetPlayer);                                                                 // [0x58228a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheShape
	// bool IsTheShape(class ADBDBasePlayer* TargetPlayer);                                                                  // [0x5822810] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsThePig
	// bool IsThePig(class ADBDBasePlayer* TargetPlayer);                                                                    // [0x5822780] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheOnryo
	// bool IsTheOnryo(class ADBDBasePlayer* TargetPlayer);                                                                  // [0x58226f0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheOni
	// bool IsTheOni(class ADBDBasePlayer* TargetPlayer);                                                                    // [0x5822660] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheNurse
	// bool IsTheNurse(class ADBDBasePlayer* TargetPlayer);                                                                  // [0x58225d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheNightmare
	// bool IsTheNightmare(class ADBDBasePlayer* TargetPlayer);                                                              // [0x5822540] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheLegion
	// bool IsTheLegion(class ADBDBasePlayer* TargetPlayer);                                                                 // [0x58224b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheHuntress
	// bool IsTheHuntress(class ADBDBasePlayer* TargetPlayer);                                                               // [0x5822420] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheHillBilly
	// bool IsTheHillBilly(class ADBDBasePlayer* TargetPlayer);                                                              // [0x5822390] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheHag
	// bool IsTheHag(class ADBDBasePlayer* TargetPlayer);                                                                    // [0x5822300] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheGoodGuy
	// bool IsTheGoodGuy(class ADBDBasePlayer* TargetPlayer);                                                                // [0x5822270] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheGhost
	// bool IsTheGhost(class ADBDBasePlayer* TargetPlayer);                                                                  // [0x58221e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheExecutioner
	// bool IsTheExecutioner(class ADBDBasePlayer* TargetPlayer);                                                            // [0x5822150] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheDoctor
	// bool IsTheDoctor(class ADBDBasePlayer* TargetPlayer);                                                                 // [0x58220c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheDemogorgon
	// bool IsTheDemogorgon(class ADBDBasePlayer* TargetPlayer);                                                             // [0x5822030] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheClown
	// bool IsTheClown(class ADBDBasePlayer* TargetPlayer);                                                                  // [0x5821fa0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheCannibal
	// bool IsTheCannibal(class ADBDBasePlayer* TargetPlayer);                                                               // [0x5821f10] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsTheBlight
	// bool IsTheBlight(class ADBDBasePlayer* TargetPlayer);                                                                 // [0x5821e80] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsSteveHarrington
	// bool IsSteveHarrington(class ADBDBasePlayer* TargetPlayer);                                                           // [0x5821df0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsSlasherLocallyObserved
	// bool IsSlasherLocallyObserved(class UObject* WorldContextObject);                                                     // [0x5821d60] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsQuentinSmith
	// bool IsQuentinSmith(class ADBDBasePlayer* TargetPlayer);                                                              // [0x5821cd0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsPlague
	// bool IsPlague(class ADBDBasePlayer* TargetPlayer);                                                                    // [0x5821c40] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsNeaKarlsson
	// bool IsNeaKarlsson(class ADBDBasePlayer* TargetPlayer);                                                               // [0x5821bb0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsNancyWheeler
	// bool IsNancyWheeler(class ADBDBasePlayer* TargetPlayer);                                                              // [0x5821b20] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsMegThomas
	// bool IsMegThomas(class ADBDBasePlayer* TargetPlayer);                                                                 // [0x5821a90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsLaurieStrode
	// bool IsLaurieStrode(class ADBDBasePlayer* TargetPlayer);                                                              // [0x5821a00] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsKateDenson
	// bool IsKateDenson(class ADBDBasePlayer* TargetPlayer);                                                                // [0x5821970] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsJeffJohansen
	// bool IsJeffJohansen(class ADBDBasePlayer* TargetPlayer);                                                              // [0x58218e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsJaneRomero
	// bool IsJaneRomero(class ADBDBasePlayer* TargetPlayer);                                                                // [0x5821850] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsJakePark
	// bool IsJakePark(class ADBDBasePlayer* TargetPlayer);                                                                  // [0x58217c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsInDreamworld
	// bool IsInDreamworld(class ADBDPlayer* Player);                                                                        // [0x5821730] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsFengMin
	// bool IsFengMin(class ADBDBasePlayer* TargetPlayer);                                                                   // [0x58216a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsDwightFairfield
	// bool IsDwightFairfield(class ADBDBasePlayer* TargetPlayer);                                                           // [0x5821610] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsDavidTapp
	// bool IsDavidTapp(class ADBDBasePlayer* TargetPlayer);                                                                 // [0x5821580] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsDavidKing
	// bool IsDavidKing(class ADBDBasePlayer* TargetPlayer);                                                                 // [0x58214f0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsClaudetteMorel
	// bool IsClaudetteMorel(class ADBDBasePlayer* TargetPlayer);                                                            // [0x5821460] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsAshleyWilliams
	// bool IsAshleyWilliams(class ADBDBasePlayer* TargetPlayer);                                                            // [0x58213d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsAdamFrancis
	// bool IsAdamFrancis(class ADBDBasePlayer* TargetPlayer);                                                               // [0x5821340] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.IsAceVisconti
	// bool IsAceVisconti(class ADBDBasePlayer* TargetPlayer);                                                               // [0x58212b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDCharacterUtilities.GetLocallyObservedPlayerRole
	// EPlayerRole GetLocallyObservedPlayerRole(class UObject* WorldContextObject);                                          // [0x5821220] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.DBDCheatValidatorSubsystem
/// Size: 0x0000 (0x000038 - 0x000038)
class UDBDCheatValidatorSubsystem : public UEngineSubsystem
{ 
public:
};

/// Struct /Script/DeadByDaylight.SpawnInfo
/// Size: 0x0070 (0x000000 - 0x000070)
struct FSpawnInfo
{ 
	class UClass*                                      ActorClass;                                                 // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
	FName                                              AttachSocket;                                               // 0x0040   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	SDK_UNDEFINED(16,1953) /* FString */               __um(AttachParentName);                                     // 0x0050   (0x0010)  
	class UClass*                                      AttachParentClass;                                          // 0x0060   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0068   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.DBDClientSyncer
/// Size: 0x01F8 (0x000230 - 0x000428)
class ADBDClientSyncer : public AActor
{ 
public:
	TArray<FSpawnInfo>                                 _actorsToSpawnLocally;                                      // 0x0230   (0x0010)  
	TArray<FSpawnInfo>                                 _currentQueue;                                              // 0x0240   (0x0010)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0250   (0x0008)  MISSED
	class UPaperTileMap*                               _tileMap;                                                   // 0x0258   (0x0008)  
	unsigned char                                      UnknownData01_6[0x1C8];                                     // 0x0260   (0x01C8)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDClientSyncer.Multicast_SyncSeed
	// void Multicast_SyncSeed(int32_t Seed, class UPaperTileMap* TileMap, int32_t GenerationPlayerCount, FString PremadeMap); // [0x5822ec0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDClientSyncer.Multicast_SyncFinalLocallySpawnCount
	// void Multicast_SyncFinalLocallySpawnCount(int32_t numLocal);                                                          // [0x5822e30] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDClientSyncer.Multicast_SyncActorToSpawnLocally
	// void Multicast_SyncActorToSpawnLocally(TArray<FSpawnInfo> spawnInfos, int32_t startIndex);                            // [0x5822d20] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Struct /Script/DeadByDaylight.AffectedMaterialAndVariant
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAffectedMaterialAndVariant
{ 
	class UMaterialInterface*                          AffectedMaterial;                                           // 0x0000   (0x0008)  
	class UMaterialInterface*                          MaterialVariant;                                            // 0x0008   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDClipRegionComponent
/// Size: 0x0010 (0x000220 - 0x000230)
class UDBDClipRegionComponent : public UDBDLocatorComponent
{ 
public:
	TArray<FAffectedMaterialAndVariant>                AffectedMaterialsAndVariants;                               // 0x0218   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0228   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDClipRegionComponent.NotifyShouldClipComponent
	// void NotifyShouldClipComponent(class UMeshComponent* InMeshComponent);                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDClipRegionComponent.ClipDistance
	// float ClipDistance(class UMeshComponent* InMeshComponent);                                                            // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDClipRegionComponent.ApplyClipToDynamicMaterial
	// void ApplyClipToDynamicMaterial(class UMaterialInstanceDynamic* dynamicInstanceToClip, int32_t InRegionID);           // [0x58210d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDClipRegionComponent.ApplyClip
	// void ApplyClip(class UMaterialInstanceDynamic* InMaterial2clip, int32_t InRegionID);                                  // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDClipRegionComponent.ApplyArrayOfClipsToDynamicMaterial
	// void ApplyArrayOfClipsToDynamicMaterial(TArray<UDBDClipRegionComponent*> InRegions, class UMaterialInstanceDynamic* dynamicInstanceToClip); // [0x5820fb0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ColorBlindFunctionLibrary
/// Size: 0x0000 (0x000030 - 0x000030)
class UColorBlindFunctionLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.ColorBlindFunctionLibrary.CallOnColorBlindSettingsChange
	// void CallOnColorBlindSettingsChange(class AActor* callingActor);                                                      // [0x58211a0] Final|Native|Static|Private|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ColorBlindSettingsListenerInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UColorBlindSettingsListenerInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.ColorBlindSettingsListenerInterface.OnColorBlindSettingsChange
	// void OnColorBlindSettingsChange(EColorVisionDeficiency ColorBlindMode, int32_t ColorblindIntensity);                  // [0x5823020] Native|Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.DBDConsoleCommandUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDConsoleCommandUtilities : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDCoreUMGDesignTunables
/// Size: 0x0060 (0x000030 - 0x000090)
class UDBDCoreUMGDesignTunables : public UObject
{ 
public:
	SDK_UNDEFINED(48,1954) /* TWeakObjectPtr<UClass*> */ __um(CoreHudRootWidgetClass);                             // 0x0030   (0x0030)  
	SDK_UNDEFINED(48,1955) /* TWeakObjectPtr<UClass*> */ __um(CorePlayerControllerClass);                          // 0x0060   (0x0030)  
};

/// Class /Script/DeadByDaylight.DBDCurrencyConversionTunables
/// Size: 0x0050 (0x000038 - 0x000088)
class UDBDCurrencyConversionTunables : public UDataAsset
{ 
public:
	SDK_UNDEFINED(80,1956) /* TMap<ECurrencyType, FCurrencyConversion> */ __um(Currencies);                        // 0x0038   (0x0050)  
};

/// Struct /Script/DeadByDaylight.ItemUIData
/// Size: 0x0120 (0x000000 - 0x000120)
struct FItemUIData
{ 
	SDK_UNDEFINED(24,1957) /* FText */                 __um(DisplayName);                                          // 0x0000   (0x0018)  
	SDK_UNDEFINED(24,1958) /* FText */                 __um(Description);                                          // 0x0018   (0x0018)  
	SDK_UNDEFINED(16,1959) /* TArray<FString> */       __um(IconFilePathList);                                     // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,1960) /* TArray<TWeakObjectPtr<UTexture2D*>> */ __um(IconAssetList);                          // 0x0040   (0x0010)  
	SDK_UNDEFINED(16,1961) /* FString */               __um(SecondaryIcon);                                        // 0x0050   (0x0010)  
	SDK_UNDEFINED(48,1962) /* TWeakObjectPtr<UClass*> */ __um(AnimatedWidgetRef);                                  // 0x0060   (0x0030)  
	SDK_UNDEFINED(16,1963) /* FString */               __um(AnimationFilePath);                                    // 0x0090   (0x0010)  
	SDK_UNDEFINED(16,1964) /* FString */               __um(AnimationLinkageId);                                   // 0x00A0   (0x0010)  
	FCustomTransformation                              CustomTransformation;                                       // 0x00B0   (0x0014)  
	uint32_t                                           PlatformsUnlicensedNameOverride;                            // 0x00C4   (0x0004)  
	uint32_t                                           PlatformsUnlicensedDescriptionOverride;                     // 0x00C8   (0x0004)  
	uint32_t                                           PlatformsForIconUnlicensedFilePathListOverride;             // 0x00CC   (0x0004)  
	SDK_UNDEFINED(16,1965) /* TArray<FString> */       __um(IconUnlicensedFilePathListOverride);                   // 0x00D0   (0x0010)  
	bool                                               LicenseExpirationOverride;                                  // 0x00E0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00E1   (0x0007)  MISSED
	SDK_UNDEFINED(24,1966) /* FText */                 __um(DisplayNameUnlicensedOverride);                        // 0x00E8   (0x0018)  
	SDK_UNDEFINED(24,1967) /* FText */                 __um(DescriptionUnlicensedOverride);                        // 0x0100   (0x0018)  
	int32_t                                            AssociatedCharacterIndex;                                   // 0x0118   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x011C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.ItemAvailability
/// Size: 0x0040 (0x000000 - 0x000040)
struct FItemAvailability
{ 
	EItemAvailability                                  ItemAvailability;                                           // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,1968) /* FString */               __um(DLCId);                                                // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,1969) /* TArray<FString> */       __um(AdditionalDlcIds);                                     // 0x0018   (0x0010)  
	int32_t                                            CloudInventoryId;                                           // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	SDK_UNDEFINED(16,1970) /* FString */               __um(CommunityId);                                          // 0x0030   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CustomizationData
/// Size: 0x01A8 (0x000008 - 0x0001B0)
struct FCustomizationData : FDBDTableRowBase
{ 
	int32_t                                            AssociatedCharacter;                                        // 0x0008   (0x0004)  
	EPlayerRole                                        AssociatedRole;                                             // 0x000C   (0x0001)  
	EItemRarity                                        Rarity;                                                     // 0x000D   (0x0001)  
	ECustomizationModifier                             Prefix;                                                     // 0x000E   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x000F   (0x0001)  MISSED
	FItemUIData                                        UIData;                                                     // 0x0010   (0x0120)  
	FItemAvailability                                  Availability;                                               // 0x0130   (0x0040)  
	SDK_UNDEFINED(16,1971) /* FString */               __um(InclusionVersion);                                     // 0x0170   (0x0010)  
	SDK_UNDEFINED(16,1972) /* FString */               __um(CustomizationId);                                      // 0x0180   (0x0010)  
	SDK_UNDEFINED(16,1973) /* TArray<FText> */         __um(SearchTags);                                           // 0x0190   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x01A0   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.MaterialReplacerData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FMaterialReplacerData
{ 
	SDK_UNDEFINED(48,1974) /* TWeakObjectPtr<UMaterialInterface*> */ __um(From);                                   // 0x0000   (0x0030)  
	SDK_UNDEFINED(48,1975) /* TWeakObjectPtr<UMaterialInterface*> */ __um(To);                                     // 0x0030   (0x0030)  
};

/// Struct /Script/DeadByDaylight.ConditionalMaterialReplacer
/// Size: 0x0060 (0x000000 - 0x000060)
struct FConditionalMaterialReplacer
{ 
	FName                                              ItemTag;                                                    // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(80,1976) /* TMap<FName, FMaterialReplacerArray> */ __um(ConditionalMaterials);                   // 0x0010   (0x0050)  
};

/// Struct /Script/DeadByDaylight.TextureReplacerData
/// Size: 0x0070 (0x000000 - 0x000070)
struct FTextureReplacerData
{ 
	SDK_UNDEFINED(48,1977) /* TWeakObjectPtr<UMaterialInterface*> */ __um(BaseMaterial);                           // 0x0000   (0x0030)  
	SDK_UNDEFINED(48,1978) /* TWeakObjectPtr<UTexture2D*> */ __um(ReplacementTexture);                             // 0x0030   (0x0030)  
	FName                                              TextureParameterName;                                       // 0x0060   (0x000C)  
	int32_t                                            ExplicitMaterialSlot;                                       // 0x006C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.BPAttachementSocketData
/// Size: 0x00E0 (0x000000 - 0x0000E0)
struct FBPAttachementSocketData
{ 
	SDK_UNDEFINED(48,1979) /* TWeakObjectPtr<UClass*> */ __um(AccessoryBlueprint);                                 // 0x0000   (0x0030)  
	SDK_UNDEFINED(48,1980) /* TWeakObjectPtr<USkeletalMesh*> */ __um(SkeletalMesh);                                // 0x0030   (0x0030)  
	FName                                              SocketName;                                                 // 0x0060   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x006C   (0x0004)  MISSED
	TArray<FMaterialReplacerData>                      MaterialsMap;                                               // 0x0070   (0x0010)  
	FConditionalMaterialReplacer                       ConditionalMaterialReplacer;                                // 0x0080   (0x0060)  
};

/// Struct /Script/DeadByDaylight.UnlockSaveStatCondition
/// Size: 0x0014 (0x000000 - 0x000014)
struct FUnlockSaveStatCondition
{ 
	FName                                              StatName;                                                   // 0x0000   (0x000C)  
	float                                              ValueRequired;                                              // 0x000C   (0x0004)  
	bool                                               isCharacterSpecific;                                        // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.CustomSoundFXData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCustomSoundFXData
{ 
	EAudioCustomizationCategory                        AudioCategory;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,1981) /* FString */               __um(switchState);                                          // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CustomAnimData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FCustomAnimData
{ 
	SDK_UNDEFINED(48,1982) /* TWeakObjectPtr<UClass*> */ __um(MenuAnimationBlueprint);                             // 0x0000   (0x0030)  
	SDK_UNDEFINED(48,1983) /* TWeakObjectPtr<UClass*> */ __um(InGameAnimationBlueprint);                           // 0x0030   (0x0030)  
};

/// Struct /Script/DeadByDaylight.CustomizationItemData
/// Size: 0x0238 (0x0001B0 - 0x0003E8)
struct FCustomizationItemData : FCustomizationData
{ 
	ECustomizationCategory                             category;                                                   // 0x01B0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x01B1   (0x0007)  MISSED
	SDK_UNDEFINED(48,1984) /* TWeakObjectPtr<USkeletalMesh*> */ __um(ItemMesh);                                    // 0x01B8   (0x0030)  
	SDK_UNDEFINED(48,1985) /* TWeakObjectPtr<UClass*> */ __um(AnimClass);                                          // 0x01E8   (0x0030)  
	SDK_UNDEFINED(48,1986) /* TWeakObjectPtr<UClass*> */ __um(ItemBlueprint);                                      // 0x0218   (0x0030)  
	TArray<FMaterialReplacerData>                      MaterialsMap;                                               // 0x0248   (0x0010)  
	FConditionalMaterialReplacer                       ConditionalMaterialReplacer;                                // 0x0258   (0x0060)  
	TArray<FTextureReplacerData>                       TexturesMap;                                                // 0x02B8   (0x0010)  
	TArray<FName>                                      SkeletalComponentTags;                                      // 0x02C8   (0x0010)  
	FGameplayTagContainer                              CosmeticOverrideSemanticTags;                               // 0x02D8   (0x0020)  
	SDK_UNDEFINED(24,1987) /* FText */                 __um(CollectionName);                                       // 0x02F8   (0x0018)  
	SDK_UNDEFINED(24,1988) /* FText */                 __um(CollectionDescription);                                // 0x0310   (0x0018)  
	int32_t                                            PrestigeUlockLevel;                                         // 0x0328   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x032C   (0x0004)  MISSED
	SDK_UNDEFINED(16,1989) /* FString */               __um(PrestigeUnlockDate);                                   // 0x0330   (0x0010)  
	FName                                              eventID;                                                    // 0x0340   (0x000C)  
	ECharmCategory                                     CharmCategory;                                              // 0x034C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x034D   (0x0003)  MISSED
	TArray<FBPAttachementSocketData>                   SocketAttachements;                                         // 0x0350   (0x0010)  
	TArray<FUnlockSaveStatCondition>                   UnlockingConditions;                                        // 0x0360   (0x0010)  
	bool                                               IsInStore;                                                  // 0x0370   (0x0001)  
	bool                                               IsInNonViolentBuild;                                        // 0x0371   (0x0001)  
	bool                                               IsAvailableInAtlantaBuild;                                  // 0x0372   (0x0001)  
	bool                                               IsEntitledByDefault;                                        // 0x0373   (0x0001)  
	uint32_t                                           PlatformExclusiveFlag;                                      // 0x0374   (0x0004)  
	TArray<FCustomSoundFXData>                         CustomSFXs;                                                 // 0x0378   (0x0010)  
	FCustomAnimData                                    AnimationData;                                              // 0x0388   (0x0060)  
};

/// Struct /Script/DeadByDaylight.DBDCustomizationToolData
/// Size: 0x1018 (0x000000 - 0x001018)
struct FDBDCustomizationToolData
{ 
	FCustomizationItemData                             Head;                                                       // 0x0000   (0x03E8)  
	FCustomizationItemData                             Torso;                                                      // 0x03E8   (0x03E8)  
	FCustomizationItemData                             Leg;                                                        // 0x07D0   (0x03E8)  
	FCustomizationItemData                             Bodies;                                                     // 0x0BB8   (0x03E8)  
	SDK_UNDEFINED(16,1990) /* FString */               __um(characterName);                                        // 0x0FA0   (0x0010)  
	SDK_UNDEFINED(16,1991) /* FString */               __um(RoleName);                                             // 0x0FB0   (0x0010)  
	class USkeletalMesh*                               BaseSkeleton;                                               // 0x0FC0   (0x0008)  
	class UTexture2D*                                  MaskTexture;                                                // 0x0FC8   (0x0008)  
	class UAnimationAsset*                             AnimationToPlay;                                            // 0x0FD0   (0x0008)  
	SDK_UNDEFINED(16,1992) /* FString */               __um(StrHeadDLC);                                           // 0x0FD8   (0x0010)  
	SDK_UNDEFINED(16,1993) /* FString */               __um(StrTorsoDLC);                                          // 0x0FE8   (0x0010)  
	SDK_UNDEFINED(16,1994) /* FString */               __um(StrLegDLC);                                            // 0x0FF8   (0x0010)  
	SDK_UNDEFINED(16,1995) /* FString */               __um(StrBodiesDLC);                                         // 0x1008   (0x0010)  
};

/// Class /Script/DeadByDaylight.DBDCustomizationTool
/// Size: 0x1060 (0x000230 - 0x001290)
class ADBDCustomizationTool : public AActor
{ 
public:
	SDK_UNDEFINED(48,1996) /* TWeakObjectPtr<UClass*> */ __um(OverallLightingClass);                               // 0x0230   (0x0030)  
	FDBDCustomizationToolData                          CustomizationData;                                          // 0x0260   (0x1018)  
	TArray<class AActor*>                              _spawnedActors;                                             // 0x1278   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x1288   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.RitualEvaluatorBase
/// Size: 0x0000 (0x000030 - 0x000030)
class URitualEvaluatorBase : public UObject
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.RitualEvaluatorBase.EvaluateEvent
	// bool EvaluateEvent(FRitualEvent& RitualEvent);                                                                        // [0x5826450] Native|Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.DBDDangerPredictionComponent
/// Size: 0x0018 (0x0000B8 - 0x0000D0)
class UDBDDangerPredictionComponent : public UActorComponent
{ 
public:
	bool                                               ApplyAdditionalCostInDangerArea;                            // 0x00B8   (0x0001)  
	ESurvivorFleePathStrategy                          SurvivorFleePathStrategy;                                   // 0x00B9   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x00BA   (0x0002)  MISSED
	float                                              RelevantHorizontalDistance;                                 // 0x00BC   (0x0004)  
	float                                              RelevantVerticalDistance;                                   // 0x00C0   (0x0004)  
	EPlayerRole                                        RelevantRole;                                               // 0x00C4   (0x0001)  
	unsigned char                                      UnknownData01_6[0xB];                                       // 0x00C5   (0x000B)  MISSED
};

/// Class /Script/DeadByDaylight.DBDDateTimeProvider
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDDateTimeProvider : public UDateTimeProvider
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDDebugCameraController
/// Size: 0x0000 (0x000698 - 0x000698)
class ADBDDebugCameraController : public ADebugCameraController
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDGameMode
/// Size: 0x01A0 (0x000380 - 0x000520)
class ADBDGameMode : public ADBDBaseMatchGameMode
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0380   (0x0050)  MISSED
	SDK_UNDEFINED(16,1997) /* FMulticastInlineDelegate */ __um(OnPlayersLoadoutsCreated);                          // 0x03D0   (0x0010)  
	class UClass*                                      _killerPlayerControllerClass;                               // 0x03E0   (0x0008)  
	class UClass*                                      _survivorPlayerControllerClass;                             // 0x03E8   (0x0008)  
	TArray<class APlayerStart*>                        _initialPlayerStarts;                                       // 0x03F0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x34];                                      // 0x0400   (0x0034)  MISSED
	int32_t                                            KillerCreationPositionOrder;                                // 0x0434   (0x0004)  
	class UStatusEffect*                               _gateBlockedStatus;                                         // 0x0438   (0x0008)  
	unsigned char                                      UnknownData02_5[0xA8];                                      // 0x0440   (0x00A8)  MISSED
	class UNavmeshGeneratorComponent*                  _navmeshGeneratorComponent;                                 // 0x04E8   (0x0008)  
	unsigned char                                      UnknownData03_6[0x30];                                      // 0x04F0   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDGameMode.SetPlayerCount
	// void SetPlayerCount(int32_t playerAmount);                                                                            // [0x582ec70] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameMode.LevelLoaded
	// void LevelLoaded(FString LevelName);                                                                                  // [0x582ea50] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameMode.IsEscapeOpen
	// bool IsEscapeOpen();                                                                                                  // [0x582ea20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameMode.InitializeEscapeRequirements
	// void InitializeEscapeRequirements();                                                                                  // [0x582e930] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameMode.HostGame
	// void HostGame();                                                                                                      // [0x582e910] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameMode.AreLoadoutsCreated
	// bool AreLoadoutsCreated();                                                                                            // [0x4b65410] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Struct /Script/DeadByDaylight.CharacterCustomizationDropdown
/// Size: 0x0054 (0x000008 - 0x00005C)
struct FCharacterCustomizationDropdown : FCharacterDropdown
{ 
	FName                                              OutfitId;                                                   // 0x0008   (0x000C)  
	FName                                              SurvivorHead;                                               // 0x0014   (0x000C)  
	FName                                              SurvivorTorso;                                              // 0x0020   (0x000C)  
	FName                                              SurvivorLegs;                                               // 0x002C   (0x000C)  
	FName                                              KillerHead;                                                 // 0x0038   (0x000C)  
	FName                                              KillerBody;                                                 // 0x0044   (0x000C)  
	FName                                              KillerWeapon;                                               // 0x0050   (0x000C)  
};

/// Struct /Script/DeadByDaylight.CharmDropdown
/// Size: 0x000E (0x000002 - 0x000010)
struct FCharmDropdown : FRoleDropdown
{ 
	bool                                               ShowCharmSelection;                                         // 0x0002   (0x0001)  
	bool                                               ShowCommonCharms;                                           // 0x0003   (0x0001)  
	FName                                              CharmId;                                                    // 0x0004   (0x000C)  
};

/// Struct /Script/DeadByDaylight.ItemIdDropdown
/// Size: 0x000E (0x000002 - 0x000010)
struct FItemIdDropdown : FRoleDropdown
{ 
	unsigned char                                      UnknownData00_2[0x2];                                       // 0x0002   (0x0002)  MISSED
	FName                                              ItemId;                                                     // 0x0004   (0x000C)  
};

/// Struct /Script/DeadByDaylight.AddonDropdown
/// Size: 0x000E (0x000002 - 0x000010)
struct FAddonDropdown : FRoleDropdown
{ 
	unsigned char                                      UnknownData00_2[0x2];                                       // 0x0002   (0x0002)  MISSED
	FName                                              AddonID;                                                    // 0x0004   (0x000C)  
};

/// Struct /Script/DeadByDaylight.DebugLoadoutAddon
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDebugLoadoutAddon
{ 
	FAddonDropdown                                     AddonDropdown;                                              // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.PerkDropdown
/// Size: 0x000E (0x000002 - 0x000010)
struct FPerkDropdown : FRoleDropdown
{ 
	unsigned char                                      UnknownData00_2[0x2];                                       // 0x0002   (0x0002)  MISSED
	FName                                              perkId;                                                     // 0x0004   (0x000C)  
};

/// Struct /Script/DeadByDaylight.DebugLoadoutPerk
/// Size: 0x0014 (0x000000 - 0x000014)
struct FDebugLoadoutPerk
{ 
	FPerkDropdown                                      PerkDropdown;                                               // 0x0000   (0x0010)  
	int32_t                                            PerkLevel;                                                  // 0x0010   (0x0004)  
};

/// Struct /Script/DeadByDaylight.CamperLoadout
/// Size: 0x00C0 (0x000000 - 0x0000C0)
struct FCamperLoadout
{ 
	FCharacterCustomizationDropdown                    camper;                                                     // 0x0000   (0x005C)  
	FCharmDropdown                                     Slot0_CharmID;                                              // 0x005C   (0x0010)  
	FCharmDropdown                                     Slot1_CharmID;                                              // 0x006C   (0x0010)  
	FCharmDropdown                                     Slot2_CharmID;                                              // 0x007C   (0x0010)  
	FItemIdDropdown                                    Item;                                                       // 0x008C   (0x0010)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x009C   (0x0004)  MISSED
	TArray<FDebugLoadoutAddon>                         AddonIDs;                                                   // 0x00A0   (0x0010)  
	TArray<FDebugLoadoutPerk>                          Perks;                                                      // 0x00B0   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SlasherLoadout
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FSlasherLoadout
{ 
	FCharmDropdown                                     Slot0_CharmID;                                              // 0x0000   (0x0010)  
	FCharmDropdown                                     Slot1_CharmID;                                              // 0x0010   (0x0010)  
	FCharmDropdown                                     Slot2_CharmID;                                              // 0x0020   (0x0010)  
	TArray<FDebugLoadoutPerk>                          Perks;                                                      // 0x0030   (0x0010)  
	TArray<FDebugLoadoutAddon>                         PowerAddonIDs;                                              // 0x0040   (0x0010)  
	FCharacterCustomizationDropdown                    Slasher;                                                    // 0x0050   (0x005C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00AC   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.DebugQuestModelExtArchiveCondition
/// Size: 0x0020 (0x000000 - 0x000020)
struct FDebugQuestModelExtArchiveCondition
{ 
	SDK_UNDEFINED(16,1998) /* FString */               __um(Key);                                                  // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,1999) /* TArray<FString> */       __um(value);                                                // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.DebugModelExtArchiveQuestEvent
/// Size: 0x0028 (0x000000 - 0x000028)
struct FDebugModelExtArchiveQuestEvent
{ 
	SDK_UNDEFINED(16,2000) /* FString */               __um(Parameters);                                           // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2001) /* FString */               __um(QuestEventId);                                         // 0x0010   (0x0010)  
	int32_t                                            Repetition;                                                 // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.DebugModelExtArchiveQuestSpecialBehaviours
/// Size: 0x0020 (0x000000 - 0x000020)
struct FDebugModelExtArchiveQuestSpecialBehaviours
{ 
	SDK_UNDEFINED(16,2002) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2003) /* FString */               __um(Params);                                               // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.DebugQuestModelExtArchiveObjective
/// Size: 0x0038 (0x000000 - 0x000038)
struct FDebugQuestModelExtArchiveObjective
{ 
	TArray<FDebugQuestModelExtArchiveCondition>        Conditions;                                                 // 0x0000   (0x0010)  
	int32_t                                            NeededProgression;                                          // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<FDebugModelExtArchiveQuestEvent>            QuestEvents;                                                // 0x0018   (0x0010)  
	TArray<FDebugModelExtArchiveQuestSpecialBehaviours> SpecialBehaviours;                                         // 0x0028   (0x0010)  
};

/// Class /Script/DeadByDaylight.DBDDebugGameMode
/// Size: 0x00D8 (0x000520 - 0x0005F8)
class ADBDDebugGameMode : public ADBDGameMode
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0520   (0x0008)  MISSED
	SDK_UNDEFINED(80,2004) /* TMap<ADBDPlayerController*, int32_t> */ __um(LoadoutIndex);                          // 0x0528   (0x0050)  
	SDK_UNDEFINED(80,2005) /* TSet<ADBDPlayer*> */     __um(PlayersWithItems);                                     // 0x0578   (0x0050)  
	TArray<FCamperLoadout>                             CamperPawnOverrides;                                        // 0x05C8   (0x0010)  
	TArray<FSlasherLoadout>                            SlasherPawnOverrides;                                       // 0x05D8   (0x0010)  
	TArray<FDebugQuestModelExtArchiveObjective>        _questObjectives;                                           // 0x05E8   (0x0010)  
};

/// Class /Script/DeadByDaylight.DBDDebugInputComponent
/// Size: 0x0020 (0x0000B8 - 0x0000D8)
class UDBDDebugInputComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x00B8   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDDebugInputComponent.DBD_ItsAlive
	// void DBD_ItsAlive(bool aliveEnabled);                                                                                 // [0x581c030] Final|Exec|Native|Public 
};

/// Class /Script/DeadByDaylight.DBDDecalComponent
/// Size: 0x00C0 (0x000260 - 0x000320)
class UDBDDecalComponent : public UDecalComponent
{ 
public:
	TArray<class UStaticMeshComponent*>                staticMeshDecals;                                           // 0x0258   (0x0010)  
	SDK_UNDEFINED(80,2006) /* TMap<UStaticMeshComponent*, UGlassStaticMesh*> */ __um(staticMeshGlass);             // 0x0268   (0x0050)  
	TArray<class UMaterialInstanceDynamic*>            materialInstances;                                          // 0x02B8   (0x0010)  
	unsigned char                                      UnknownData00_5[0x48];                                      // 0x02C8   (0x0048)  MISSED
	class UDecalCollection*                            _decalCollection;                                           // 0x0310   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0318   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.PerkLevelDefinition
/// Size: 0x0004 (0x000000 - 0x000004)
struct FPerkLevelDefinition
{ 
	int32_t                                            CountRequired;                                              // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.GameEventForwarderInfo
/// Size: 0x0020 (0x000000 - 0x000020)
struct FGameEventForwarderInfo
{ 
	TArray<FGameplayTag>                               GameEventsToRegister;                                       // 0x0000   (0x0010)  
	FGameplayTag                                       ForwardedEvent;                                             // 0x0010   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.DBDDesignTunables
/// Size: 0x0248 (0x000030 - 0x000278)
class UDBDDesignTunables : public UObject
{ 
public:
	int8_t                                             EntityDispleasedKills;                                      // 0x0030   (0x0001)  
	int8_t                                             BrutalKillerKills;                                          // 0x0031   (0x0001)  
	int8_t                                             RuthlessKillerKills;                                        // 0x0032   (0x0001)  
	int8_t                                             MercilessKillerKills;                                       // 0x0033   (0x0001)  
	int32_t                                            WinStreakThresholdLarge;                                    // 0x0034   (0x0004)  
	int32_t                                            WinStreakThresholdSmall;                                    // 0x0038   (0x0004)  
	int32_t                                            MaxFearTokens;                                              // 0x003C   (0x0004)  
	int32_t                                            QuantityOfItemsToBuyBeforeFreeBloodwebRefresh;              // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	TArray<FPerkLevelDefinition>                       PerkLevelDefinitions;                                       // 0x0048   (0x0010)  
	SDK_UNDEFINED(80,2007) /* TSet<FGameplayTag> */    __um(MetaModifiers);                                        // 0x0058   (0x0050)  
	SDK_UNDEFINED(80,2008) /* TSet<FGameplayTag> */    __um(RangedSurvivorAuraPerceptionModifiers);                // 0x00A8   (0x0050)  
	SDK_UNDEFINED(80,2009) /* TSet<FGameplayTag> */    __um(SurvivorRevelatoryAuraPerceptionModifiers);            // 0x00F8   (0x0050)  
	SDK_UNDEFINED(80,2010) /* TSet<FGameplayTag> */    __um(DisruptableAuraReadingFlags);                          // 0x0148   (0x0050)  
	SDK_UNDEFINED(48,2011) /* TWeakObjectPtr<UClass*> */ __um(TextDesignTunableClass);                             // 0x0198   (0x0030)  
	class UDBDTextDesignTunables*                      TextTunables;                                               // 0x01C8   (0x0008)  
	TArray<FGameEventForwarderInfo>                    GameEventForwarderInfos;                                    // 0x01D0   (0x0010)  
	SDK_UNDEFINED(48,2012) /* TWeakObjectPtr<UClass*> */ __um(CoreUMGDesignTunableClass);                          // 0x01E0   (0x0030)  
	class UDBDCoreUMGDesignTunables*                   CoreUMGDesignTunables;                                      // 0x0210   (0x0008)  
	class UGameTypeModifierDefaults*                   GameTypeModifierDefaults;                                   // 0x0218   (0x0008)  
	SDK_UNDEFINED(48,2013) /* TWeakObjectPtr<UMenuCameraDesignTunables*> */ __um(SoftMenuCameraDesignTunable);     // 0x0220   (0x0030)  
	class UMenuCameraDesignTunables*                   MenuCameraDesignTunables;                                   // 0x0250   (0x0008)  
	bool                                               _overrideDefaultLobby;                                      // 0x0258   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0259   (0x0003)  MISSED
	FName                                              _lobbyOverrideName;                                         // 0x025C   (0x000C)  
	TArray<FGameplayTag>                               _conspicuousActionEvents;                                   // 0x0268   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.DBDDesignTunables.GetTunableValue
	// float GetTunableValue(FName ID, bool warnIfRowMissing);                                                               // [0x5826970] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDDesignTunables.GetStringGameTypeTunable
	// FString GetStringGameTypeTunable(EGameType gameType, EGameTypeModifierName TunableName, class UObject* WorldContextObject); // [0x5826850] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDDesignTunables.GetIntGameTypeTunable
	// int32_t GetIntGameTypeTunable(EGameType gameType, EGameTypeModifierName TunableName, class UObject* WorldContextObject); // [0x5826740] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDDesignTunables.GetBoolGameTypeTunable
	// bool GetBoolGameTypeTunable(EGameType gameType, EGameTypeModifierName TunableName, class UObject* WorldContextObject); // [0x5826630] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDDesignTunables.GetArrayGameTypeTunable
	// TArray<FString> GetArrayGameTypeTunable(EGameType gameType, EGameTypeModifierName TunableName, class UObject* WorldContextObject); // [0x5826510] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDTextDesignTunables
/// Size: 0x00D8 (0x000030 - 0x000108)
class UDBDTextDesignTunables : public UObject
{ 
public:
	SDK_UNDEFINED(24,2014) /* FText */                 __um(LegalTextTitle);                                       // 0x0030   (0x0018)  
	SDK_UNDEFINED(24,2015) /* FText */                 __um(LegalText);                                            // 0x0048   (0x0018)  
	SDK_UNDEFINED(24,2016) /* FText */                 __um(ConsentTextTitle);                                     // 0x0060   (0x0018)  
	SDK_UNDEFINED(24,2017) /* FText */                 __um(ConsentText);                                          // 0x0078   (0x0018)  
	SDK_UNDEFINED(24,2018) /* FText */                 __um(LegalTextSIEA);                                        // 0x0090   (0x0018)  
	SDK_UNDEFINED(24,2019) /* FText */                 __um(LegalTextSIEE);                                        // 0x00A8   (0x0018)  
	SDK_UNDEFINED(24,2020) /* FText */                 __um(SystemMessage_ChatDisconnected);                       // 0x00C0   (0x0018)  
	SDK_UNDEFINED(24,2021) /* FText */                 __um(SystemMessage_ChatReturnedToLobby);                    // 0x00D8   (0x0018)  
	SDK_UNDEFINED(24,2022) /* FText */                 __um(SystemMessage_ChatMatchServerClosed);                  // 0x00F0   (0x0018)  
};

/// Class /Script/DeadByDaylight.GameTypeModifierDefaults
/// Size: 0x0050 (0x000038 - 0x000088)
class UGameTypeModifierDefaults : public UDataAsset
{ 
public:
	SDK_UNDEFINED(80,2023) /* TMap<EGameTypeModifierName, FTypeFlexibleTunable> */ __um(Modifiers);                // 0x0038   (0x0050)  
};

/// Class /Script/DeadByDaylight.DBDDiceRoller
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDDiceRoller : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDDiceRoller.GetRollResultByTunableValue
	// bool GetRollResultByTunableValue(class AActor* RollingActor, FName tunableValueName, float MultiplicativeModifier, float AdditiveModifier); // [0x582b570] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDDiceRoller.GetRollResultByDiceRollType
	// bool GetRollResultByDiceRollType(class ADBDPlayer* RollingPlayer, EDiceRollType DiceRollType);                        // [0x582b4a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDDiceRoller.GetInteractionRollSuccessPercentageByDiceRollType
	// float GetInteractionRollSuccessPercentageByDiceRollType(class UInteractionDefinition* Interaction, class ADBDPlayer* RollingPlayer, EDiceRollType DiceRollType); // [0x582b3a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDDiceRoller.CalculateTickedRollResult
	// bool CalculateTickedRollResult(class AActor* RollingActor, float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier); // [0x582a4c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDDiceRoller.CalculateRollResult
	// bool CalculateRollResult(class AActor* RollingActor, float BaseProbability, float MultiplicativeModifier, float AdditiveModifier); // [0x582a370] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDDiceRoller.CalculateOverTimeRollResult
	// bool CalculateOverTimeRollResult(class AActor* RollingActor, float BaseProbability, float DeltaTime, float ExpectedTime, float MultiplicativeModifier, float AdditiveModifier); // [0x582a1a0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDEasyAntiCheat
/// Size: 0x0028 (0x000030 - 0x000058)
class UDBDEasyAntiCheat : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0030   (0x0018)  MISSED
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0048   (0x0008)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0050   (0x0002)  MISSED
	bool                                               _connectedToServer;                                         // 0x0052   (0x0001)  
	unsigned char                                      UnknownData02_6[0x5];                                       // 0x0053   (0x0005)  MISSED
};

/// Class /Script/DeadByDaylight.DBDEasyAntiCheatEnable
/// Size: 0x0090 (0x000058 - 0x0000E8)
class UDBDEasyAntiCheatEnable : public UDBDEasyAntiCheat
{ 
public:
	unsigned char                                      UnknownData00_1[0x90];                                      // 0x0058   (0x0090)  MISSED
};

/// Class /Script/DeadByDaylight.DBDEasyAntiCheatLinux
/// Size: 0x0000 (0x0000E8 - 0x0000E8)
class UDBDEasyAntiCheatLinux : public UDBDEasyAntiCheatEnable
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDEasyAntiCheatWindows
/// Size: 0x0000 (0x0000E8 - 0x0000E8)
class UDBDEasyAntiCheatWindows : public UDBDEasyAntiCheatEnable
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDEngineUtils
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDEngineUtils : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDGame_Lobby
/// Size: 0x0080 (0x000368 - 0x0003E8)
class ADBDGame_Lobby : public ADBDBaseGameMode
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0368   (0x0018)  MISSED
	class UIdentityValidation*                         _identityValidation;                                        // 0x0380   (0x0008)  
	unsigned char                                      UnknownData01_6[0x60];                                      // 0x0388   (0x0060)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDGame_Lobby.DBD_RemoveBotByIndex
	// void DBD_RemoveBotByIndex(int32_t botIndex);                                                                          // [0x582b090] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGame_Lobby.DBD_FillLobbyWithBotsByName
	// void DBD_FillLobbyWithBotsByName(FString selectedKiller, int32_t Rank);                                               // [0x582afb0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGame_Lobby.DBD_FillLobby
	// void DBD_FillLobby();                                                                                                 // [0x582af90] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGame_Lobby.DBD_AddBotToLobbyNoLoadoutByName
	// void DBD_AddBotToLobbyNoLoadoutByName(FString SelectedCharacter);                                                     // [0x582aef0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGame_Lobby.DBD_AddBotToLobbyNoLoadout
	// void DBD_AddBotToLobbyNoLoadout(int32_t SelectedCharacter);                                                           // [0x582ae60] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGame_Lobby.DBD_AddBotToLobbyByName
	// void DBD_AddBotToLobbyByName(FString SelectedCharacter, FString Item, FString addon1, FString addon2, FString Offering, FString perk1, FString perk2, FString perk3, FString perk4, int32_t Rank); // [0x582aac0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGame_Lobby.DBD_AddBotToLobby
	// void DBD_AddBotToLobby(int32_t SelectedCharacter, FString Item, FString addon1, FString addon2, FString Offering, FString perk1, FString perk2, FString perk3, FString perk4, int32_t Rank); // [0x582a740] Final|Exec|Native|Public 
};

/// Class /Script/DeadByDaylight.DBDGame_Menu
/// Size: 0x0030 (0x000368 - 0x000398)
class ADBDGame_Menu : public ADBDBaseGameMode
{ 
public:
	bool                                               StartWithSlasher;                                           // 0x0368   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0369   (0x0007)  MISSED
	class UAtlantaPartyFlowHandler*                    _partyFlowHandler;                                          // 0x0370   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0378   (0x0008)  MISSED
	class ALevelSequenceActor*                         _sequenceFadeActor;                                         // 0x0380   (0x0008)  
	class ALevelSequenceActor*                         _sequenceIntroActor;                                        // 0x0388   (0x0008)  
	class ALevelSequenceActor*                         _sequenceLoopActor;                                         // 0x0390   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDGame_Start
/// Size: 0x0088 (0x000368 - 0x0003F0)
class ADBDGame_Start : public ADBDBaseGameMode
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0368   (0x0060)  MISSED
	SDK_UNDEFINED(16,2024) /* TScriptInterface<Class> */ __um(_startupInitializer);                                // 0x03C8   (0x0010)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x03D8   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.DBDGameEngine
/// Size: 0x0008 (0x000EB8 - 0x000EC0)
class UDBDGameEngine : public UGameEngine
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0EB8   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.DBDGameEventForwarderComponent
/// Size: 0x0018 (0x0000B8 - 0x0000D0)
class UDBDGameEventForwarderComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00B8   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.DBDGameEventUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDGameEventUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDGameEventUtilities.RemotelyDispatchGameEvent
	// void RemotelyDispatchGameEvent(class UObject* WorldContextObject, FGameplayTag gameEventType, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int32_t CustomIntValue); // [0x582b990] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameEventUtilities.LocallyDispatchGameEvent
	// void LocallyDispatchGameEvent(class UObject* WorldContextObject, FGameplayTag gameEventType, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int32_t CustomIntValue); // [0x582b760] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameEventUtilities.DispatcherFireGameEvent
	// void DispatcherFireGameEvent(class UObject* WorldContextObject, FGameplayTag gameEventType, bool broadcastOverNetwork, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int32_t CustomIntValue); // [0x582b120] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameEventUtilities.Authority_DispatcherFireGameEvent
	// void Authority_DispatcherFireGameEvent(class UObject* WorldContextObject, FGameplayTag gameEventType, bool broadcastOverNetwork, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int32_t CustomIntValue); // [0x5829f20] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameEventUtilities.Authority_AccumulateOngoingGameEvent
	// void Authority_AccumulateOngoingGameEvent(class UObject* WorldContextObject, FGameplayTag gameEventType, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, float OngoingWaitTime, class UObject* CustomObjectParameter, int32_t CustomIntValue); // [0x5829cb0] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDGameFlowUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDGameFlowUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDGameFlowUtilities.TriggerWorldFlowEvent
	// void TriggerWorldFlowEvent(class UObject* WorldContextObject, EWorldFlowEvent worldFlowEvent);                        // [0x582bc80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameFlowUtilities.TriggerUIFlowEvent
	// void TriggerUIFlowEvent(class UObject* WorldContextObject, EUIFlowEvent uiFlowEvent);                                 // [0x582bbc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameFlowUtilities.IsCurrentlyInGame
	// bool IsCurrentlyInGame(class UDBDGameInstance* GameInstance);                                                         // [0x582b6d0] Final|Native|Static|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.ForceSpawnTileData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FForceSpawnTileData
{ 
	SDK_UNDEFINED(16,2025) /* FString */               __um(Name);                                                 // 0x0000   (0x0010)  
	int32_t                                            matrixX;                                                    // 0x0010   (0x0004)  
	int32_t                                            matrixY;                                                    // 0x0014   (0x0004)  
	int32_t                                            Rotation;                                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.ParadiseData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FParadiseData
{ 
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0000   (0x0058)  MISSED
};

/// Class /Script/DeadByDaylight.DBDGameInstance
/// Size: 0x07F0 (0x000200 - 0x0009F0)
class UDBDGameInstance : public UGameInstance
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0200   (0x0048)  MISSED
	class UClass*                                      DesignTunableClass;                                         // 0x0248   (0x0008)  
	class UDBDDesignTunables*                          DesignTunables;                                             // 0x0250   (0x0008)  
	class UClass*                                      RegionClass;                                                // 0x0258   (0x0008)  
	class UClass*                                      ShopManagerClass;                                           // 0x0260   (0x0008)  
	class UClass*                                      OfferingSequenceManagerClass;                               // 0x0268   (0x0008)  
	class UClass*                                      FriendManagerClass;                                         // 0x0270   (0x0008)  
	class UDataAsset*                                  AchievementsDataAsset;                                      // 0x0278   (0x0008)  
	class UGameEventTracker*                           GameEventTracker;                                           // 0x0280   (0x0008)  
	class UDBDKeyDisplayInfo*                          KeyDisplayInfo;                                             // 0x0288   (0x0008)  
	bool                                               LeaveGameRequested;                                         // 0x0290   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0291   (0x0007)  MISSED
	class UPlayerProfileDAL*                           PlayerProfileDAL;                                           // 0x0298   (0x0008)  
	int32_t                                            GenerationSeed;                                             // 0x02A0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02A4   (0x0004)  MISSED
	SDK_UNDEFINED(16,2026) /* FString */               __um(PaperTileAssetName);                                   // 0x02A8   (0x0010)  
	int32_t                                            GenerationPlayerCount;                                      // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x02BC   (0x0004)  MISSED
	SDK_UNDEFINED(16,2027) /* FString */               __um(PremadeMap);                                           // 0x02C0   (0x0010)  
	TArray<FForceSpawnTileData>                        ForceSpawnTileData;                                         // 0x02D0   (0x0010)  
	unsigned char                                      UnknownData04_5[0x20];                                      // 0x02E0   (0x0020)  MISSED
	class AOfferingSequenceManager*                    OfferingSequence;                                           // 0x0300   (0x0008)  
	TArray<FParadiseData>                              ParadiseData;                                               // 0x0308   (0x0010)  
	bool                                               PlayerProfileLoadFailed;                                    // 0x0318   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x0319   (0x0007)  MISSED
	class UNewsContentManager*                         NewsContentManager;                                         // 0x0320   (0x0008)  
	class UContentScheduleManager*                     ContentScheduleManager;                                     // 0x0328   (0x0008)  
	class UCDNPatchManager*                            CDNPatchManager;                                            // 0x0330   (0x0008)  
	class UCharacterProgressionManager*                CharacterProgressionManager;                                // 0x0338   (0x0008)  
	class UCharacterXPManager*                         CharacterXPManager;                                         // 0x0340   (0x0008)  
	class UAtlantaRitualsManager*                      AtlRitualsManager;                                          // 0x0348   (0x0008)  
	SDK_UNDEFINED(16,2028) /* FString */               __um(AuthOrEACErrorAdditionalInfo);                         // 0x0350   (0x0010)  
	bool                                               HasServerLeftMatch;                                         // 0x0360   (0x0001)  
	bool                                               HasWrittenGameEndStats;                                     // 0x0361   (0x0001)  
	unsigned char                                      UnknownData06_5[0x6];                                       // 0x0362   (0x0006)  MISSED
	class UFearMarketManager*                          FearMarketManager;                                          // 0x0368   (0x0008)  
	class Ushopmanager*                                shopmanager;                                                // 0x0370   (0x0008)  
	class UFriendManager*                              FriendManager;                                              // 0x0378   (0x0008)  
	class UWalletHandler*                              WalletHandler;                                              // 0x0380   (0x0008)  
	FName                                              TutorialRequesterName;                                      // 0x0388   (0x000C)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x0394   (0x0004)  MISSED
	class UControllerPairingManager*                   ControllerPairingManager;                                   // 0x0398   (0x0008)  
	unsigned char                                      UnknownData08_5[0xE8];                                      // 0x03A0   (0x00E8)  MISSED
	class UChunkingManager*                            ChunkingManager;                                            // 0x0488   (0x0008)  
	SDK_UNDEFINED(16,2029) /* FMulticastInlineDelegate */ __um(OnPlayerDisconnect);                                // 0x0490   (0x0010)  
	unsigned char                                      UnknownData09_5[0x138];                                     // 0x04A0   (0x0138)  MISSED
	class UAssetLibraryManager*                        _assetLibraryManager;                                       // 0x05D8   (0x0008)  
	SDK_UNDEFINED(48,2030) /* TWeakObjectPtr<UClass*> */ __um(_bloodwebManagerClass);                              // 0x05E0   (0x0030)  
	class UOnlineTransactionServiceComponent*          _onlineTransactionService;                                  // 0x0610   (0x0008)  
	unsigned char                                      UnknownData10_5[0x130];                                     // 0x0618   (0x0130)  MISSED
	class UDBDPersistentData*                          _persistentData;                                            // 0x0748   (0x0008)  
	class UPlayerDataStorageFacade*                    _playerDataFacade;                                          // 0x0750   (0x0008)  
	class URankManager*                                _rankManager;                                               // 0x0758   (0x0008)  
	class UDBDPlayerLevelManager*                      _playerLevelManager;                                        // 0x0760   (0x0008)  
	class UPlayerNameRegistration*                     _playerNameRegistration;                                    // 0x0768   (0x0008)  
	class Uspecialeventmanager*                        _specialEventManager;                                       // 0x0770   (0x0008)  
	class UBonusPointEventsManager*                    _bonusPointEventsManager;                                   // 0x0778   (0x0008)  
	class UDBDTimeTravelManager*                       _timeTravelManager;                                         // 0x0780   (0x0008)  
	class UToastManager*                               _toastManager;                                              // 0x0788   (0x0008)  
	class UDBDSocialNotificationFactory*               _socialNotificationFactory;                                 // 0x0790   (0x0008)  
	class UDBDPartyFacade*                             _partyFacade;                                               // 0x0798   (0x0008)  
	class UPenaltyTracker*                             _penaltyTracker;                                            // 0x07A0   (0x0008)  
	unsigned char                                      UnknownData11_5[0x28];                                      // 0x07A8   (0x0028)  MISSED
	class ULightingHelper*                             _ligthingHelper;                                            // 0x07D0   (0x0008)  
	class UOfferingHandler*                            _offeringHandler;                                           // 0x07D8   (0x0008)  
	unsigned char                                      UnknownData12_5[0x8];                                       // 0x07E0   (0x0008)  MISSED
	TArray<class UActorKnowledgeCollection*>           _actorKnowledgeCollections;                                 // 0x07E8   (0x0010)  
	class UMapActorDB*                                 _mapActorDB;                                                // 0x07F8   (0x0008)  
	TArray<class UInteractionProficiency*>             _interactionProficiencies;                                  // 0x0800   (0x0010)  
	class UDBDHud*                                     _theHud;                                                    // 0x0810   (0x0008)  
	unsigned char                                      UnknownData13_5[0x28];                                      // 0x0818   (0x0028)  MISSED
	class UBloodwebManager*                            _bloodwebManager;                                           // 0x0840   (0x0008)  
	class UPopupSequencer*                             _popupSequencer;                                            // 0x0848   (0x0008)  
	class UPopupFactory*                               _popupFactory;                                              // 0x0850   (0x0008)  
	class UDBDAuthentication*                          _auth;                                                      // 0x0858   (0x0008)  
	class UDBDEasyAntiCheat*                           _eac;                                                       // 0x0860   (0x0008)  
	unsigned char                                      UnknownData14_5[0x98];                                      // 0x0868   (0x0098)  MISSED
	SDK_UNDEFINED(16,2031) /* TArray<TWeakObjectPtr<UObject*>> */ __um(_execObjects);                              // 0x0900   (0x0010)  
	bool                                               _networkFailureDetected;                                    // 0x0910   (0x0001)  
	bool                                               _networkConnectionMonitoringOnly;                           // 0x0911   (0x0001)  
	bool                                               _achievementStatsUploadEnabled;                             // 0x0912   (0x0001)  
	bool                                               _isDisconnected;                                            // 0x0913   (0x0001)  
	bool                                               _isGamepadReconnected;                                      // 0x0914   (0x0001)  
	bool                                               _isProfileOffline;                                          // 0x0915   (0x0001)  
	bool                                               _isAppSuspended;                                            // 0x0916   (0x0001)  
	bool                                               _isAppResumed;                                              // 0x0917   (0x0001)  
	bool                                               _isInvitationRejected;                                      // 0x0918   (0x0001)  
	bool                                               _isAdditionalContentInstalled;                              // 0x0919   (0x0001)  
	bool                                               _isCloudInventoryInitialized;                               // 0x091A   (0x0001)  
	unsigned char                                      UnknownData15_5[0x2D];                                      // 0x091B   (0x002D)  MISSED
	class UOfferingEffectCollection*                   _resultOfferingAndPerkEffects;                              // 0x0948   (0x0008)  
	class UCinematicManager*                           _cinematicManager;                                          // 0x0950   (0x0008)  
	class USoftBanManager*                             _softBanManager;                                            // 0x0958   (0x0008)  
	class UConsentManager*                             _consentManager;                                            // 0x0960   (0x0008)  
	class UOnlineSystemHandler*                        _onlineSystemHandler;                                       // 0x0968   (0x0008)  
	class URegionFinder*                               _regionFinder;                                              // 0x0970   (0x0008)  
	class UDecalSpawnerCollection*                     _decalSpawnerCollection;                                    // 0x0978   (0x0008)  
	class UPrimitiveCollection*                        _characterClippingPrimitiveCollection;                      // 0x0980   (0x0008)  
	class UAtlantaTooltipManager*                      _atlantaTooltipManager;                                     // 0x0988   (0x0008)  
	uint32_t                                           LastProviderErrorCode;                                      // 0x0990   (0x0004)  
	EDisconnectErrors                                  _disconnectError;                                           // 0x0994   (0x0001)  
	unsigned char                                      UnknownData16_5[0xB];                                       // 0x0995   (0x000B)  MISSED
	class UDateTimerUpdater*                           _dateTimerUpdater;                                          // 0x09A0   (0x0008)  
	unsigned char                                      UnknownData17_6[0x48];                                      // 0x09A8   (0x0048)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDGameInstance.StartOfferingSequence
	// void StartOfferingSequence();                                                                                         // [0x582ee00] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameInstance.SimulateOfferingSequence
	// void SimulateOfferingSequence(TArray<FName>& offerings, bool playSequence);                                           // [0x582ed00] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.RemoveActorKnowledgeCollection
	// void RemoveActorKnowledgeCollection(class UActorKnowledgeCollection* Collection);                                     // [0x582ebe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.OnTimeTravelComplete
	// void OnTimeTravelComplete(bool success, FString Date);                                                                // [0x582eaf0] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.IsActorKnown
	// bool IsActorKnown(class ADBDPlayer* knowledgePossessor, class AActor* possiblyKnownActor);                            // [0x582e950] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.HasOfferingOfType
	// bool HasOfferingOfType(EOfferingEffectType Type, int32_t playerID, FName Tag);                                        // [0x582e7e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.HasOfferingByType
	// bool HasOfferingByType(EOfferingEffectType Type);                                                                     // [0x582e750] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GotoSplashScreen
	// void GotoSplashScreen(bool showDefaultDialogueOnSplashScreen);                                                        // [0x582e6c0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetTimeUtils
	// class UDBDTimeUtilities* GetTimeUtils();                                                                              // [0x582e690] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetSpecialEventManager
	// class Uspecialeventmanager* GetSpecialEventManager();                                                                 // [0x582e660] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetSoftBanManager
	// class USoftBanManager* GetSoftBanManager();                                                                           // [0x582e630] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetRankManager
	// class URankManager* GetRankManager();                                                                                 // [0x582e600] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetPlayerNameRegistration
	// class UPlayerNameRegistration* GetPlayerNameRegistration();                                                           // [0x582e5d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetPlayerLevelManager
	// class UDBDPlayerLevelManager* GetPlayerLevelManager();                                                                // [0x582e5a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetMaxSurvivorCount
	// int32_t GetMaxSurvivorCount();                                                                                        // [0x582e570] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetMapActorDB
	// class UMapActorDB* GetMapActorDB();                                                                                   // [0x582e540] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetLocalPlayerController
	// class APlayerController* GetLocalPlayerController();                                                                  // [0x582e4e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetLocalPlayer
	// class ULocalPlayer* GetLocalPlayer();                                                                                 // [0x582e4b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetLocallyControlledCharacter
	// class ADBDPlayer* GetLocallyControlledCharacter();                                                                    // [0x582e510] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetLocalEventManager
	// class ULocalEventManager* GetLocalEventManager();                                                                     // [0x582e480] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetLightInterpolator
	// class ULightingInterpolator* GetLightInterpolator();                                                                  // [0x582e420] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetLightingHelper
	// class ULightingHelper* GetLightingHelper();                                                                           // [0x582e450] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetLevelLighting
	// class ABaseSky* GetLevelLighting();                                                                                   // [0x582e3f0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameInstance.GetInventoryHandler
	// class UInventoryHandler* GetInventoryHandler();                                                                       // [0x582e3c0] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetDedicatedServerManager
	// class UDedicatedServerManager* GetDedicatedServerManager();                                                           // [0x582e390] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetDecalSpawnerCollection
	// class UDecalSpawnerCollection* GetDecalSpawnerCollection();                                                           // [0x582e360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetDeadOrDisconnectedCampersCount
	// int32_t GetDeadOrDisconnectedCampersCount(class ADBDPlayerState* exception);                                          // [0x582e2c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetConsentManager
	// class UConsentManager* GetConsentManager();                                                                           // [0x582e290] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetCinematicManager
	// class UCinematicManager* GetCinematicManager();                                                                       // [0x582e260] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetCharacterDefaultItem
	// FName GetCharacterDefaultItem(int32_t inCharacterIndex);                                                              // [0x582e1b0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetCharacterClippingPrimitiveCollection
	// class UPrimitiveCollection* GetCharacterClippingPrimitiveCollection();                                                // [0x582e180] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.GetBonusPointEventsManager
	// class UBonusPointEventsManager* GetBonusPointEventsManager();                                                         // [0x582e150] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.ForceCloseGame
	// void ForceCloseGame();                                                                                                // [0x582e130] Final|Native|Static|Public 
	// Function /Script/DeadByDaylight.DBDGameInstance.EndLoadingScreen
	// void EndLoadingScreen(class UWorld* loadedWorld);                                                                     // [0x582e0a0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_UpdateSteamInventory
	// void DBD_UpdateSteamInventory();                                                                                      // [0x582e080] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_ToggleLightingLoaded
	// void DBD_ToggleLightingLoaded();                                                                                      // [0x582e060] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_TestTickedDiceRoll
	// void DBD_TestTickedDiceRoll(float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier); // [0x582df00] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_TestSaveFile
	// void DBD_TestSaveFile(FString Name);                                                                                  // [0x582de10] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_TestRegion
	// void DBD_TestRegion();                                                                                                // [0x582ddf0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_TestDiceRoll
	// void DBD_TestDiceRoll(float BaseProbability, float MultiplicativeModifier, float AdditiveModifier);                   // [0x582dcd0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_SetStatsUploadEnabled
	// void DBD_SetStatsUploadEnabled(bool Enabled);                                                                         // [0x582dc40] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_SetFearMarketDate
	// void DBD_SetFearMarketDate(FString dateString);                                                                       // [0x582db50] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_ResetSaveData
	// void DBD_ResetSaveData();                                                                                             // [0x582db30] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_ResetCurrentAchievementStats
	// void DBD_ResetCurrentAchievementStats(bool andUpload, bool andUpdateData);                                            // [0x582da60] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_ResetCurrentAchievementStat
	// void DBD_ResetCurrentAchievementStat(FName StatName, bool andUpload);                                                 // [0x582d970] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_PrintAudioConfig
	// void DBD_PrintAudioConfig();                                                                                          // [0x582d950] Final|Exec|Native|Public|BlueprintCallable|Const 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_PIXEndCapture
	// void DBD_PIXEndCapture();                                                                                             // [0x582d930] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_PIXBeginCapture
	// void DBD_PIXBeginCapture();                                                                                           // [0x582d910] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_GetRegion
	// void DBD_GetRegion();                                                                                                 // [0x582d8f0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_ForceSave
	// void DBD_ForceSave();                                                                                                 // [0x582d8d0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_ForceLoad
	// void DBD_ForceLoad();                                                                                                 // [0x582d8b0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_DumpSessions
	// void DBD_DumpSessions();                                                                                              // [0x582d890] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_DisplayCurrentAchievementStat
	// void DBD_DisplayCurrentAchievementStat(FName StatName);                                                               // [0x582d7f0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_DestroySteamInventory
	// void DBD_DestroySteamInventory();                                                                                     // [0x582d7d0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_DeleteLocalSaveFile
	// void DBD_DeleteLocalSaveFile();                                                                                       // [0x582d7b0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_CheckForNewContent
	// void DBD_CheckForNewContent(FString debugGameVersion, bool forceDisplay);                                             // [0x582d6d0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_ChangeSteamOverlayPosition
	// void DBD_ChangeSteamOverlayPosition(int32_t position, int32_t VerticalOffset, int32_t HorizontalOffset);              // [0x582d5c0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_ApplyNoMist
	// void DBD_ApplyNoMist();                                                                                               // [0x582d5a0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.DBD_ApplyMist
	// void DBD_ApplyMist(float fogModifier);                                                                                // [0x582d520] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.BeginLoadingScreen
	// void BeginLoadingScreen(FString MapName);                                                                             // [0x496ca30] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDGameInstance.Authority_SimulatePerks
	// void Authority_SimulatePerks(TArray<FName> Perks, int32_t Level);                                                     // [0x582d3f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameInstance.AddActorKnowledgeCollection
	// void AddActorKnowledgeCollection(class UActorKnowledgeCollection* Collection);                                        // [0x582d360] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDGameSession
/// Size: 0x0060 (0x000250 - 0x0002B0)
class ADBDGameSession : public AGameSession
{ 
public:
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0250   (0x0060)  MISSED
};

/// Struct /Script/DeadByDaylight.SharedAuthenticationTokenInformation
/// Size: 0x0030 (0x000000 - 0x000030)
struct FSharedAuthenticationTokenInformation
{ 
	SDK_UNDEFINED(16,2032) /* FString */               __um(LoginProvider);                                        // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2033) /* FString */               __um(AuthToken);                                            // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2034) /* FString */               __um(TokenType);                                            // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BonusTierTooltipVisibility
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBonusTierTooltipVisibility
{ 
	SDK_UNDEFINED(16,2035) /* FString */               __um(archiveId);                                            // 0x0000   (0x0010)  
	bool                                               IsVisible;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaCustomizedHudSettings
/// Size: 0x0040 (0x000000 - 0x000040)
struct FAtlantaCustomizedHudSettings
{ 
	FGameplayTag                                       ID;                                                         // 0x0000   (0x000C)  
	FVector2D                                          NormalizedOffset;                                           // 0x000C   (0x0008)  
	float                                              Scale;                                                      // 0x0014   (0x0004)  
	float                                              RenderOpacity;                                              // 0x0018   (0x0004)  
	int32_t                                            Version;                                                    // 0x001C   (0x0004)  
	FGameplayTagContainer                              OverlapWrapperIds;                                          // 0x0020   (0x0020)  
};

/// Class /Script/DeadByDaylight.DBDGameUserSettings
/// Size: 0x0318 (0x000128 - 0x000440)
class UDBDGameUserSettings : public UGameUserSettings
{ 
public:
	TArray<FInputActionKeyMapping>                     ActionMappings;                                             // 0x0128   (0x0010)  
	TArray<FInputAxisKeyMapping>                       AxisMappings;                                               // 0x0138   (0x0010)  
	SDK_UNDEFINED(16,2036) /* FMulticastInlineDelegate */ __um(OnSetCustomizedHudsTimestamp);                      // 0x0148   (0x0010)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x0158   (0x0018)  MISSED
	SDK_UNDEFINED(16,2037) /* FString */               __um(DeviceLoginTokenID);                                   // 0x0170   (0x0010)  
	int32_t                                            ScalabilityLevel;                                           // 0x0180   (0x0004)  
	bool                                               AutoScalabilitySet;                                         // 0x0184   (0x0001)  
	bool                                               AutoAdjust;                                                 // 0x0185   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0186   (0x0002)  MISSED
	int32_t                                            ScreenRenderSize;                                           // 0x0188   (0x0004)  
	bool                                               HUDConstrainedAspectRatio;                                  // 0x018C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x018D   (0x0003)  MISSED
	int32_t                                            MenuScaleFactor;                                            // 0x0190   (0x0004)  
	int32_t                                            HudScaleFactor;                                             // 0x0194   (0x0004)  
	int32_t                                            SkillCheckScaleFactor;                                      // 0x0198   (0x0004)  
	bool                                               LargeText;                                                  // 0x019C   (0x0001)  
	bool                                               BloodwebInteractionBehaviour;                               // 0x019D   (0x0001)  
	bool                                               TerrorRadiusVisualFeedback;                                 // 0x019E   (0x0001)  
	unsigned char                                      UnknownData03_5[0x1];                                       // 0x019F   (0x0001)  MISSED
	int32_t                                            FieldOfView;                                                // 0x01A0   (0x0004)  
	bool                                               HUDPlayerNamesVisibility;                                   // 0x01A4   (0x0001)  
	bool                                               HUDKillerHookCountVisibility;                               // 0x01A5   (0x0001)  
	bool                                               HUDScoreEventsVisibility;                                   // 0x01A6   (0x0001)  
	bool                                               LegacyPrestigePortraits;                                    // 0x01A7   (0x0001)  
	bool                                               ChallengeProgression;                                       // 0x01A8   (0x0001)  
	bool                                               ChallengeCompletion;                                        // 0x01A9   (0x0001)  
	unsigned char                                      UnknownData04_5[0x2];                                       // 0x01AA   (0x0002)  MISSED
	uint32_t                                           FPSLimitMode;                                               // 0x01AC   (0x0004)  
	int32_t                                            AntiAliasingMode;                                           // 0x01B0   (0x0004)  
	bool                                               EnableFSR;                                                  // 0x01B4   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x01B5   (0x0003)  MISSED
	float                                              SharpnessValue;                                             // 0x01B8   (0x0004)  
	int32_t                                            MainVolume;                                                 // 0x01BC   (0x0004)  
	bool                                               MainVolumeOn;                                               // 0x01C0   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x01C1   (0x0003)  MISSED
	int32_t                                            MenuMusicVolume;                                            // 0x01C4   (0x0004)  
	bool                                               MenuMusicVolumeOn;                                          // 0x01C8   (0x0001)  
	bool                                               UseHeadphones;                                              // 0x01C9   (0x0001)  
	bool                                               MuteOnFocusLost;                                            // 0x01CA   (0x0001)  
	bool                                               HapticsVibrationPS5;                                        // 0x01CB   (0x0001)  
	int32_t                                            KillerCameraSensitivity;                                    // 0x01CC   (0x0004)  
	int32_t                                            SurvivorCameraSensitivity;                                  // 0x01D0   (0x0004)  
	int32_t                                            KillerMouseSensitivity;                                     // 0x01D4   (0x0004)  
	int32_t                                            SurvivorMouseSensitivity;                                   // 0x01D8   (0x0004)  
	int32_t                                            KillerControllerSensitivity;                                // 0x01DC   (0x0004)  
	int32_t                                            SurvivorControllerSensitivity;                              // 0x01E0   (0x0004)  
	bool                                               AimAssist;                                                  // 0x01E4   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x01E5   (0x0003)  MISSED
	int32_t                                            ControlType;                                                // 0x01E8   (0x0004)  
	bool                                               InvertY;                                                    // 0x01EC   (0x0001)  
	bool                                               SurvivorInvertY;                                            // 0x01ED   (0x0001)  
	bool                                               KillerToggleInteractions;                                   // 0x01EE   (0x0001)  
	bool                                               SurvivorToggleInteractions;                                 // 0x01EF   (0x0001)  
	bool                                               SprintToCancel;                                             // 0x01F0   (0x0001)  
	unsigned char                                      UnknownData08_5[0x7];                                       // 0x01F1   (0x0007)  MISSED
	SDK_UNDEFINED(16,2038) /* FString */               __um(Language);                                             // 0x01F8   (0x0010)  
	bool                                               LanguageIsDefinedByPlayer;                                  // 0x0208   (0x0001)  
	unsigned char                                      UnknownData09_5[0x3];                                       // 0x0209   (0x0003)  MISSED
	int32_t                                            HighestWeightSeenNews;                                      // 0x020C   (0x0004)  
	FSharedAuthenticationTokenInformation              SharedLoginInformation;                                     // 0x0210   (0x0030)  
	uint32_t                                           LastPanelContextId;                                         // 0x0240   (0x0004)  
	bool                                               ArchivesAutoPlayVoiceOver;                                  // 0x0244   (0x0001)  
	bool                                               ArchivesFullscreenTextVisibility;                           // 0x0245   (0x0001)  
	bool                                               HasAcceptedCrossplayPopup;                                  // 0x0246   (0x0001)  
	bool                                               HasAcceptedProgressionSystemInfoPopup;                      // 0x0247   (0x0001)  
	bool                                               HasAcceptedHapticsVibrationPopup;                           // 0x0248   (0x0001)  
	bool                                               HasAcceptedCrossProgressionPopup;                           // 0x0249   (0x0001)  
	unsigned char                                      UnknownData10_5[0x6];                                       // 0x024A   (0x0006)  MISSED
	FBonusTierTooltipVisibility                        BonusTierTooltipVisibility;                                 // 0x0250   (0x0018)  
	bool                                               UseAtlantaCustomizedHuds;                                   // 0x0268   (0x0001)  
	bool                                               UseAtlantaSurvivorQuickTurn;                                // 0x0269   (0x0001)  
	bool                                               UseAtlantaKillerQuickTurn;                                  // 0x026A   (0x0001)  
	unsigned char                                      UnknownData11_5[0x5];                                       // 0x026B   (0x0005)  MISSED
	TArray<FAtlantaCustomizedHudSettings>              AtlantaCustomizedHuds;                                      // 0x0270   (0x0010)  
	unsigned char                                      UnknownData12_5[0x8];                                       // 0x0280   (0x0008)  MISSED
	bool                                               ShowPortraitBorder;                                         // 0x0288   (0x0001)  
	unsigned char                                      UnknownData13_5[0x7];                                       // 0x0289   (0x0007)  MISSED
	SDK_UNDEFINED(16,2039) /* FString */               __um(PartyPrivacyState);                                    // 0x0290   (0x0010)  
	unsigned char                                      UnknownData14_5[0x138];                                     // 0x02A0   (0x0138)  MISSED
	int32_t                                            ColorBlindMode;                                             // 0x03D8   (0x0004)  
	int32_t                                            ColorBlindModeIntensity;                                    // 0x03DC   (0x0004)  
	bool                                               BeginnerMode;                                               // 0x03E0   (0x0001)  
	bool                                               Subtitles;                                                  // 0x03E1   (0x0001)  
	unsigned char                                      UnknownData15_5[0x2];                                       // 0x03E2   (0x0002)  MISSED
	int32_t                                            SubtitlesBackgroundOpacity;                                 // 0x03E4   (0x0004)  
	unsigned char                                      UnknownData16_5[0x48];                                      // 0x03E8   (0x0048)  MISSED
	int32_t                                            SubtitlesSize;                                              // 0x0430   (0x0004)  
	bool                                               IsAnonymousMode;                                            // 0x0434   (0x0001)  
	bool                                               HideYourName;                                               // 0x0435   (0x0001)  
	bool                                               HideOtherNames;                                             // 0x0436   (0x0001)  
	bool                                               HiddenMatchmakingDelay;                                     // 0x0437   (0x0001)  
	int32_t                                            PlayerCardAnimationMode;                                    // 0x0438   (0x0004)  
	unsigned char                                      UnknownData17_6[0x4];                                       // 0x043C   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetTerrorRadiusVisualFeedback
	// bool GetTerrorRadiusVisualFeedback();                                                                                 // [0x583a770] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetSkillCheckScaleFactor
	// int32_t GetSkillCheckScaleFactor();                                                                                   // [0x583a740] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetMenuScaleFactor
	// int32_t GetMenuScaleFactor();                                                                                         // [0x583a710] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetLegacyPrestigePortraits
	// bool GetLegacyPrestigePortraits();                                                                                    // [0x583a6e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetLargeText
	// bool GetLargeText();                                                                                                  // [0x583a6b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetHUDScoreEventsVisibility
	// bool GetHUDScoreEventsVisibility();                                                                                   // [0x583a2d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetHudScaleFactor
	// int32_t GetHudScaleFactor();                                                                                          // [0x583a300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetHUDPlayerNamesVisibility
	// bool GetHUDPlayerNamesVisibility();                                                                                   // [0x583a2a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetHUDKillerHookCountVisibility
	// bool GetHUDKillerHookCountVisibility();                                                                               // [0x583a270] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetFieldOfView
	// int32_t GetFieldOfView();                                                                                             // [0x583a0c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetDBDGameUserSettings
	// class UDBDGameUserSettings* GetDBDGameUserSettings();                                                                 // [0x583a090] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetColorBlindModeIntensity
	// int32_t GetColorBlindModeIntensity();                                                                                 // [0x583a060] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetColorBlindMode
	// EColorVisionDeficiency GetColorBlindMode();                                                                           // [0x583a030] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetChallengeProgression
	// bool GetChallengeProgression();                                                                                       // [0x583a000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetChallengeCompletion
	// bool GetChallengeCompletion();                                                                                        // [0x5839fd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDGameUserSettings.GetBloodwebInteractionBehaviour
	// bool GetBloodwebInteractionBehaviour();                                                                               // [0x5839fa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.DBDGameViewportClient
/// Size: 0x0030 (0x000370 - 0x0003A0)
class UDBDGameViewportClient : public UGameViewportClient
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0370   (0x0030)  MISSED
};

/// Class /Script/DeadByDaylight.DBDGenericTeamAgentInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDGenericTeamAgentInterface : public UGenericTeamAgentInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDHud
/// Size: 0x0050 (0x000030 - 0x000080)
class UDBDHud : public UObject
{ 
public:
	SDK_UNDEFINED(80,2040) /* TMap<FName, AStatusView*> */ __um(_statusViews);                                     // 0x0030   (0x0050)  


	/// Functions
	// Function /Script/DeadByDaylight.DBDHud.RemoveStatusViewOnDestroy
	// void RemoveStatusViewOnDestroy(class AActor* Actor);                                                                  // [0x583a8e0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.DBDInGameHud
/// Size: 0x0028 (0x000330 - 0x000358)
class ADBDInGameHud : public ADBDBaseHud
{ 
public:
	class UFont*                                       _debugFontObj;                                              // 0x0330   (0x0008)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x0338   (0x0018)  MISSED
	class UCompetenceDebugger*                         _competenceDebugger;                                        // 0x0350   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDInitPlayerQuery
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDInitPlayerQuery : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDInitPlayerQueryYesNo
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UDBDInitPlayerQueryYesNo : public UDBDInitPlayerQuery
{ 
public:
	unsigned char                                      UnknownData00_1[0x80];                                      // 0x0030   (0x0080)  MISSED
};

/// Class /Script/DeadByDaylight.DBDInitPlayerQueryYesNoSizeWifi
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UDBDInitPlayerQueryYesNoSizeWifi : public UDBDInitPlayerQueryYesNo
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B0   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.DBDFoliageInstance
/// Size: 0x004C (0x000000 - 0x00004C)
struct FDBDFoliageInstance
{ 
	int32_t                                            BaseId;                                                     // 0x0000   (0x0004)  
	FGuid                                              ProceduralGuid;                                             // 0x0004   (0x0010)  
	FVector                                            Location;                                                   // 0x0014   (0x000C)  
	FRotator                                           Rotation;                                                   // 0x0020   (0x000C)  
	FRotator                                           PreAlignRotation;                                           // 0x002C   (0x000C)  
	FVector                                            DrawScale3D;                                                // 0x0038   (0x000C)  
	float                                              ZOffset;                                                    // 0x0044   (0x0004)  
	uint32_t                                           Flags;                                                      // 0x0048   (0x0004)  
};

/// Struct /Script/DeadByDaylight.DBDFoliageInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FDBDFoliageInfo
{ 
	class UFoliageType*                                FoliageType;                                                // 0x0000   (0x0008)  
	TArray<FDBDFoliageInstance>                        Instances;                                                  // 0x0008   (0x0010)  
};

/// Class /Script/DeadByDaylight.DBDInstancedFoliageComponent
/// Size: 0x0068 (0x0000B8 - 0x000120)
class UDBDInstancedFoliageComponent : public UActorComponent
{ 
public:
	int32_t                                            NextBaseId;                                                 // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00BC   (0x0004)  MISSED
	SDK_UNDEFINED(80,2041) /* TMap<int32_t, USceneComponent*> */ __um(InstanceBaseMap);                            // 0x00C0   (0x0050)  
	TArray<FDBDFoliageInfo>                            Foliage;                                                    // 0x0110   (0x0010)  
};

/// Class /Script/DeadByDaylight.DBDInventoryUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDInventoryUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDKeyDisplayInfo
/// Size: 0x0140 (0x000030 - 0x000170)
class UDBDKeyDisplayInfo : public UObject
{ 
public:
	SDK_UNDEFINED(80,2042) /* TMap<FName, FKeyDisplayInfo> */ __um(_keyDisplayInfoMap);                            // 0x0030   (0x0050)  
	unsigned char                                      UnknownData00_5[0x50];                                      // 0x0080   (0x0050)  MISSED
	SDK_UNDEFINED(80,2043) /* TMap<EInputInteractionType, FName> */ __um(_interactionTypeToActionMap_Camper);      // 0x00D0   (0x0050)  
	SDK_UNDEFINED(80,2044) /* TMap<EInputInteractionType, FName> */ __um(_interactionTypeToActionMap_Slasher);     // 0x0120   (0x0050)  


	/// Functions
	// Function /Script/DeadByDaylight.DBDKeyDisplayInfo.IsExcludedKey
	// bool IsExcludedKey(FKey Key);                                                                                         // [0x583a7a0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDKeyDisplayInfo.GetKeyDisplayInfoForInteractionType
	// FKeyDisplayInfo GetKeyDisplayInfoForInteractionType(class UPlayerInput* PlayerInput, EPlayerRole PlayerRole, EInputInteractionType interactionType, bool useGamePad); // [0x583a4b0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDKeyDisplayInfo.GetKeyDisplayInfo
	// FKeyDisplayInfo GetKeyDisplayInfo(FKey Key);                                                                          // [0x583a330] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDKeyDisplayInfo.GetFirstKeyForAction
	// FKey GetFirstKeyForAction(class UPlayerInput* PlayerInput, FName ActionName, bool useGamePad);                        // [0x583a0f0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDKeyDisplayInfo.GetActionForInteractionType
	// FName GetActionForInteractionType(EPlayerRole PlayerRole, EInputInteractionType inputInteractionType, bool useGamePad, bool ignoreInteractMash); // [0x5839e10] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.DBDLobbyHud
/// Size: 0x0000 (0x000330 - 0x000330)
class ADBDLobbyHud : public ADBDBaseHud
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDLocalPlayer
/// Size: 0x0000 (0x000268 - 0x000268)
class UDBDLocalPlayer : public ULocalPlayer
{ 
public:
};

/// Struct /Script/DeadByDaylight.TypeFoliageToAutomateDensity
/// Size: 0x0068 (0x000000 - 0x000068)
struct FTypeFoliageToAutomateDensity
{ 
	SDK_UNDEFINED(48,2045) /* TWeakObjectPtr<UStaticMesh*> */ __um(SourceMesh);                                    // 0x0000   (0x0030)  
	SDK_UNDEFINED(48,2046) /* TWeakObjectPtr<UStaticMesh*> */ __um(ReplacementMesh);                               // 0x0030   (0x0030)  
	bool                                               bGenerateOverlaps;                                          // 0x0060   (0x0001)  
	bool                                               bReceiveDecals;                                             // 0x0061   (0x0001)  
	SDK_UNDEFINED(1,2047) /* TEnumAsByte<ECanBeCharacterBase> */ __um(bCanCharacterStepOn);                        // 0x0062   (0x0001)  
	SDK_UNDEFINED(1,2048) /* TEnumAsByte<EDetailMode> */ __um(DetailMode);                                         // 0x0063   (0x0001)  
	float                                              MinimumFoliageRadius;                                       // 0x0064   (0x0004)  
};

/// Class /Script/DeadByDaylight.DBDMapFoliageDensityTunables
/// Size: 0x0010 (0x000030 - 0x000040)
class UDBDMapFoliageDensityTunables : public UObject
{ 
public:
	TArray<FTypeFoliageToAutomateDensity>              FoliageToAutomateDensity;                                   // 0x0030   (0x0010)  
};

/// Class /Script/DeadByDaylight.DBDMaterialBlueprintLibrary
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDMaterialBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDMaterialBlueprintLibrary.SetVectorParameterValueOnMeshComponent
	// void SetVectorParameterValueOnMeshComponent(class UMeshComponent* Mesh, FName ParameterName, FLinearColor value);     // [0x583e9a0] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterValueOnMeshComponent
	// void SetTransformParameterValueOnMeshComponent(class UMeshComponent* Mesh, FName ParameterName, FTransform value);    // [0x583e820] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterValueOnMaterialDynamic
	// void SetTransformParameterValueOnMaterialDynamic(class UMaterialInstanceDynamic* Material, FName ParameterName, FTransform value); // [0x583e6a0] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterInverseValueOnMaterialDynamic
	// void SetTransformParameterInverseValueOnMaterialDynamic(class UMaterialInstanceDynamic* Material, FName ParameterName, FTransform value); // [0x583e520] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDMaterialBlueprintLibrary.CreateDynamicMaterialInstanceForParticleSystem
	// TArray<UMaterialInstanceDynamic*> CreateDynamicMaterialInstanceForParticleSystem(class UParticleSystemComponent* System); // [0x583d7e0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDMathBlueprintLibrary
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDMathBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDMathBlueprintLibrary.VectorIntersect
	// bool VectorIntersect(FVector& OriginA, FVector& ExtentA, FVector& OriginB, FVector& ExtentB);                         // [0x583ecc0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDMathBlueprintLibrary.VectorAbsoluteValue
	// FVector VectorAbsoluteValue(FVector& A);                                                                              // [0x583ec20] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDMathBlueprintLibrary.TransformToMatrix
	// TArray<FLinearColor> TransformToMatrix(FTransform& A);                                                                // [0x583eb00] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.DBDHookUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDHookUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDHookUtilities.IsWraithHook
	// bool IsWraithHook(class AMeatHook* targetHook);                                                                       // [0x583df10] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDHookUtilities.IsPigHook
	// bool IsPigHook(class AMeatHook* targetHook);                                                                          // [0x583de50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDHookUtilities.IsNurseHook
	// bool IsNurseHook(class AMeatHook* targetHook);                                                                        // [0x583dd30] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDHookUtilities.IsLegionHook
	// bool IsLegionHook(class AMeatHook* targetHook);                                                                       // [0x583dca0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDHookUtilities.IsHuntressHook
	// bool IsHuntressHook(class AMeatHook* targetHook);                                                                     // [0x583dc10] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDHookUtilities.IsHookOf
	// bool IsHookOf(class AMeatHook* targetHook, FGameplayTag hookTag);                                                     // [0x583db30] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDHookUtilities.IsHagHook
	// bool IsHagHook(class AMeatHook* targetHook);                                                                          // [0x583daa0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDHookUtilities.IsFreddyHook
	// bool IsFreddyHook(class AMeatHook* targetHook);                                                                       // [0x583da10] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDHookUtilities.ComputeHookStrugglePercent
	// float ComputeHookStrugglePercent(class ACamperPlayer* hookedCamper, float hookStruggleThreshold);                     // [0x583d710] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.DBDMenuGameState
/// Size: 0x0008 (0x000948 - 0x000950)
class ADBDMenuGameState : public ADBDGameState
{ 
public:
	class UMenuForcedLODHandler*                       _menuForcedLODHandler;                                      // 0x0948   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDMenuPlayer
/// Size: 0x0110 (0x0005B0 - 0x0006C0)
class ADBDMenuPlayer : public ADBDBasePlayer
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x05B0   (0x0020)  MISSED
	bool                                               RoleSelected;                                               // 0x05D0   (0x0001)  
	bool                                               IsOnline;                                                   // 0x05D1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x05D2   (0x0006)  MISSED
	SDK_UNDEFINED(16,2049) /* FMulticastInlineDelegate */ __um(OnItemEquipped);                                    // 0x05D8   (0x0010)  
	unsigned char                                      UnknownData02_5[0x18];                                      // 0x05E8   (0x0018)  MISSED
	SDK_UNDEFINED(48,2050) /* TWeakObjectPtr<UClass*> */ __um(MoriPreviewAnimClass);                               // 0x0600   (0x0030)  
	SDK_UNDEFINED(48,2051) /* TWeakObjectPtr<UMaterialInterface*> */ __um(DarkMaterial);                           // 0x0630   (0x0030)  
	EItemHandPosition                                  _handPosition;                                              // 0x0660   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0661   (0x0007)  MISSED
	class UDBDSkeletalMeshComponentBudgeted*           ItemMesh;                                                   // 0x0668   (0x0008)  
	class UMaterialHelper*                             MaterialHelper;                                             // 0x0670   (0x0008)  
	class UCustomizedSkeletalMesh*                     _customizedSkeletalMeshComponent;                           // 0x0678   (0x0008)  
	FName                                              _equippedItemName;                                          // 0x0680   (0x000C)  
	unsigned char                                      UnknownData04_5[0x28];                                      // 0x068C   (0x0028)  MISSED
	float                                              _blockRotationDuringSpawnAnimationDuration;                 // 0x06B4   (0x0004)  
	bool                                               _isLocalPlayerCharacter;                                    // 0x06B8   (0x0001)  
	bool                                               _isReady;                                                   // 0x06B9   (0x0001)  
	unsigned char                                      UnknownData05_6[0x6];                                       // 0x06BA   (0x0006)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDMenuPlayer.WrappedOnDestroyed
	// void WrappedOnDestroyed(class AActor* DestroyedActor);                                                                // [0x583ee50] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.ShouldShowSpawnAnimation
	// bool ShouldShowSpawnAnimation();                                                                                      // [0x583eae0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.ShouldApplyPositionOffset
	// bool ShouldApplyPositionOffset();                                                                                     // [0x583eac0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.RestartInSequence_Internal
	// void RestartInSequence_Internal();                                                                                    // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.PlayCharacterLevelUpVFX
	// void PlayCharacterLevelUpVFX();                                                                                       // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.OnPlayerMaxPrestige
	// void OnPlayerMaxPrestige();                                                                                           // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.OnLocalPlayerSpawned
	// void OnLocalPlayerSpawned();                                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.OnLocalPlayerReadyChanged
	// void OnLocalPlayerReadyChanged(bool IsReady);                                                                         // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.OnIsReadyChanged
	// void OnIsReadyChanged(bool IsReady);                                                                                  // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.OnGuestPlayerSpawned
	// void OnGuestPlayerSpawned(class ADBDMenuPlayer* Player);                                                              // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.OnGuestPlayerReadyChanged
	// void OnGuestPlayerReadyChanged(class ADBDMenuPlayer* Player, bool IsReady);                                           // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.OnGuestPlayerDespawned
	// void OnGuestPlayerDespawned(class ADBDMenuPlayer* Player);                                                            // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.OnCustomizationTransactionCompleted
	// void OnCustomizationTransactionCompleted(ECustomizationCategory category);                                            // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.OnAllPlayersReadyInOnlineLobby
	// void OnAllPlayersReadyInOnlineLobby();                                                                                // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.IsInMenuPlayer
	// bool IsInMenuPlayer();                                                                                                // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.HasSameCharacterInLobby
	// bool HasSameCharacterInLobby();                                                                                       // [0x583d9c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.GetIsReady
	// bool GetIsReady();                                                                                                    // [0x583d960] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.GetIsLocalPlayerCharacter
	// bool GetIsLocalPlayerCharacter();                                                                                     // [0x583d930] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.GetHandPosition
	// EItemHandPosition GetHandPosition();                                                                                  // [0x583d910] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.GetCurrentMenu
	// EGameFlowStep GetCurrentMenu();                                                                                       // [0x4e99690] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.GetCharmSpawnerComponent
	// class UCharmSpawnerComponent* GetCharmSpawnerComponent();                                                             // [0x583d8e0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.GetBlockRotationAfterSpawningTime
	// float GetBlockRotationAfterSpawningTime();                                                                            // [0x583d8b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.BlockCharacterRotation
	// void BlockCharacterRotation(bool shouldBlock);                                                                        // [0x583d680] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.BeginDestroySequence_Internal
	// void BeginDestroySequence_Internal();                                                                                 // [0x583d660] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDMenuPlayer.BeginCreateSequence
	// void BeginCreateSequence();                                                                                           // [0x61d2f50] Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.DBDMenuSilhouette
/// Size: 0x0000 (0x000230 - 0x000230)
class ADBDMenuSilhouette : public AActor
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDMistLocatorComponent
/// Size: 0x0000 (0x000220 - 0x000220)
class UDBDMistLocatorComponent : public UDBDLocatorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDMistManager
/// Size: 0x0008 (0x000230 - 0x000238)
class ADBDMistManager : public AActor
{ 
public:
	class UDBDAggregateParticleSystemComponent*        _particleSystemComp;                                        // 0x0230   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDNavEvadeLoopComponent
/// Size: 0x00A0 (0x0000B8 - 0x000158)
class UDBDNavEvadeLoopComponent : public UActorComponent
{ 
public:
	FVector                                            EvadeDoorExtent;                                            // 0x00B8   (0x000C)  
	float                                              EvadeDoorFrontPointOffset;                                  // 0x00C4   (0x0004)  
	float                                              EvadeDoorSideOffset;                                        // 0x00C8   (0x0004)  
	float                                              SideBlockerOffset;                                          // 0x00CC   (0x0004)  
	float                                              AutoSnapPointsUpHeight;                                     // 0x00D0   (0x0004)  
	float                                              AutoSnapPointsDownHeight;                                   // 0x00D4   (0x0004)  
	SDK_UNDEFINED(1,2052) /* TEnumAsByte<ECollisionChannel> */ __um(AutoSnapCollisionChannel);                     // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00D9   (0x0007)  MISSED
	class UClass*                                      EvadeLoopFilterClass;                                       // 0x00E0   (0x0008)  
	float                                              MinSafetyLength;                                            // 0x00E8   (0x0004)  
	float                                              MaxSafetyLength;                                            // 0x00EC   (0x0004)  
	EAIEvadeLoopSides                                  LimitToSide;                                                // 0x00F0   (0x0001)  
	bool                                               DebugEditMode;                                              // 0x00F1   (0x0001)  
	bool                                               DrawDebugFilter;                                            // 0x00F2   (0x0001)  
	unsigned char                                      UnknownData01_6[0x65];                                      // 0x00F3   (0x0065)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDNavEvadeLoopComponent.OnLevelReadyToPlay
	// void OnLevelReadyToPlay();                                                                                            // [0x583dfa0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.DBDNavModifierComponent
/// Size: 0x0060 (0x000150 - 0x0001B0)
class UDBDNavModifierComponent : public UNavModifierComponent
{ 
public:
	bool                                               ForceUseFailsafeExtent;                                     // 0x0150   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0151   (0x0003)  MISSED
	float                                              UpdateModifierInterval;                                     // 0x0154   (0x0004)  
	bool                                               StartNavigationRelevant;                                    // 0x0158   (0x0001)  
	bool                                               AlwaysTickToCheckTransform;                                 // 0x0159   (0x0001)  
	bool                                               RelevantPassiveMode;                                        // 0x015A   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x015B   (0x0001)  MISSED
	FVector                                            BoundCenterOffset;                                          // 0x015C   (0x000C)  
	unsigned char                                      UnknownData02_6[0x48];                                      // 0x0168   (0x0048)  MISSED
};

/// Class /Script/DeadByDaylight.DBDNetworkUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDNetworkUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDNetworkUtilities.IsRunningDedicatedServerFlow
	// bool IsRunningDedicatedServerFlow();                                                                                  // [0x583dee0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDNetworkUtilities.IsOnDedicatedServerNetwork
	// bool IsOnDedicatedServerNetwork(class UObject* WorldContextObject);                                                   // [0x583ddc0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.DBDObserverPlayer
/// Size: 0x0040 (0x0004D0 - 0x000510)
class ADBDObserverPlayer : public ACharacter
{ 
public:
	class UDBDPlayerData*                              _playerData;                                                // 0x04D0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x38];                                      // 0x04D8   (0x0038)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDObserverPlayer.Server_PlayerReady
	// void Server_PlayerReady();                                                                                            // [0x583e020] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
};

/// Class /Script/DeadByDaylight.DBDOnlineSessionClient
/// Size: 0x0028 (0x000200 - 0x000228)
class UDBDOnlineSessionClient : public UOnlineSessionClient
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0200   (0x0028)  MISSED
};

/// Struct /Script/DeadByDaylight.DBDOutlineRenderStrategySelector
/// Size: 0x0040 (0x000000 - 0x000040)
struct FDBDOutlineRenderStrategySelector
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	class AActor*                                      _actorForStrategy;                                          // 0x0008   (0x0008)  
	class UBaseOutlineRenderStrategy*                  _selectedStrategy;                                          // 0x0010   (0x0008)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x0018   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.DBDOutlineComponent
/// Size: 0x00F0 (0x0002B0 - 0x0003A0)
class UDBDOutlineComponent : public UBatchMeshCommands
{ 
public:
	float                                              InterpolationSpeed;                                         // 0x02A8   (0x0004)  
	bool                                               ShouldBeAboveOutlines;                                      // 0x02AC   (0x0001)  
	bool                                               ForceOutlineFarAway;                                        // 0x02AD   (0x0001)  
	bool                                               LimitToCustomDepthObjects;                                  // 0x02AE   (0x0001)  
	bool                                               FadeOutAsClosingIn;                                         // 0x02AF   (0x0001)  
	bool                                               IsAlwaysVisible;                                            // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02B1   (0x0003)  MISSED
	float                                              MinimumOutlineDistanceWhenIsAlwaysVisible;                  // 0x02B4   (0x0004)  
	float                                              MinimumOutlineDistance;                                     // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02BC   (0x0004)  MISSED
	SDK_UNDEFINED(16,2053) /* FString */               __um(OutlineName);                                          // 0x02C0   (0x0010)  
	unsigned char                                      UnknownData02_5[0x58];                                      // 0x02D0   (0x0058)  MISSED
	FDBDOutlineRenderStrategySelector                  _renderStrategySelector;                                    // 0x0328   (0x0040)  
	class UBatchMeshCommands*                          _batchMeshCommands;                                         // 0x0368   (0x0008)  
	unsigned char                                      UnknownData03_5[0x10];                                      // 0x0370   (0x0010)  MISSED
	class UBaseOutlineRenderStrategy*                  _renderingStrategy;                                         // 0x0380   (0x0008)  
	unsigned char                                      UnknownData04_6[0x18];                                      // 0x0388   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDOutlineComponent.SetTargetColor
	// void SetTargetColor(FLinearColor Color);                                                                              // [0x583e490] Final|BlueprintCosmetic|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.SetOutlineMaterialOverride
	// void SetOutlineMaterialOverride(FGameplayTag OverrideName);                                                           // [0x583e3f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.SetOutlineIntensity
	// void SetOutlineIntensity(float outlineIntensity);                                                                     // [0x583e370] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.SetMinimumOutlineDistance
	// void SetMinimumOutlineDistance(float distanceWhenIsAlwaysVisible, float distance);                                    // [0x583e2a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.SetMaterialCopyTarget
	// void SetMaterialCopyTarget(class UMaterialInterface* inMaterialToCopy);                                               // [0x583e210] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.SetIsOccludingOutlines
	// void SetIsOccludingOutlines(bool isOccluding);                                                                        // [0x583e180] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.SetFadeTexture
	// void SetFadeTexture(class UTexture* inFadeTexture);                                                                   // [0x583e0f0] Final|BlueprintCosmetic|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.SetFadeIntensity
	// void SetFadeIntensity(float fadeIntensity);                                                                           // [0x583e070] Final|BlueprintCosmetic|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.ResetToTransparent
	// void ResetToTransparent();                                                                                            // [0x583e000] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.RefreshOutlineComponent
	// void RefreshOutlineComponent();                                                                                       // [0x583dfe0] Final|BlueprintCosmetic|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.OnLevelReadyToPlay
	// void OnLevelReadyToPlay();                                                                                            // [0x583dfc0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.InitBatcher
	// void InitBatcher();                                                                                                   // [0x583d9f0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDOutlineComponent.GetTargetColor
	// FLinearColor GetTargetColor();                                                                                        // [0x583d990] Final|BlueprintCosmetic|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.DBDOutlineComponentConfiguration
/// Size: 0x0100 (0x000038 - 0x000138)
class UDBDOutlineComponentConfiguration : public UDataAsset
{ 
public:
	SDK_UNDEFINED(80,2054) /* TMap<TWeakObjectPtr<UClass*>, FOutlineConfig> */ __um(OutlineConfigs);               // 0x0038   (0x0050)  
	SDK_UNDEFINED(80,2055) /* TMap<FName, FOutlineColourConfiguration> */ __um(OutlineColours);                    // 0x0088   (0x0050)  
	SDK_UNDEFINED(16,2056) /* TArray<TWeakObjectPtr<UMaterialInterface*>> */ __um(TranslucencyDefaultMaterials);   // 0x00D8   (0x0010)  
	SDK_UNDEFINED(80,2057) /* TMap<FGameplayTag, FOutlineOverrideConfig> */ __um(OutlineOverrideConfigs);          // 0x00E8   (0x0050)  
};

/// Class /Script/DeadByDaylight.DBDOutlineComponentCustomDepthConfiguration
/// Size: 0x0000 (0x000138 - 0x000138)
class UDBDOutlineComponentCustomDepthConfiguration : public UDBDOutlineComponentConfiguration
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDOutlineComponentStencilConfiguration
/// Size: 0x0000 (0x000138 - 0x000138)
class UDBDOutlineComponentStencilConfiguration : public UDBDOutlineComponentConfiguration
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDOutlineComponentTranslucentConfiguration
/// Size: 0x0000 (0x000138 - 0x000138)
class UDBDOutlineComponentTranslucentConfiguration : public UDBDOutlineComponentConfiguration
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDParadiseGameMode
/// Size: 0x0000 (0x000368 - 0x000368)
class ADBDParadiseGameMode : public ADBDBaseGameMode
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDPartyFacade
/// Size: 0x0010 (0x0004C8 - 0x0004D8)
class UDBDPartyFacade : public UPartyFacade
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x04C8   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.DBDPawnSensingComponent
/// Size: 0x0010 (0x000100 - 0x000110)
class UDBDPawnSensingComponent : public UPawnSensingComponent
{ 
public:
	bool                                               bSenseEverywhere;                                           // 0x0100   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0101   (0x0003)  MISSED
	float                                              PartiallyHiddenSensingDistance;                             // 0x0104   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0108   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.GamePersistentData
/// Size: 0x0108 (0x000000 - 0x000108)
struct FGamePersistentData
{ 
	int32_t                                            PlayerCount;                                                // 0x0000   (0x0004)  
	int32_t                                            spectatorCount;                                             // 0x0004   (0x0004)  
	FGamePresetData                                    GamePresetData;                                             // 0x0008   (0x0090)  
	unsigned char                                      UnknownData00_6[0x70];                                      // 0x0098   (0x0070)  MISSED
};

/// Struct /Script/DeadByDaylight.PlayerLoadoutData
/// Size: 0x00A8 (0x000000 - 0x0000A8)
struct FPlayerLoadoutData
{ 
	FName                                              Item;                                                       // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<FName>                                      ItemAddOns;                                                 // 0x0010   (0x0010)  
	TArray<FName>                                      CamperPerks;                                                // 0x0020   (0x0010)  
	TArray<int32_t>                                    CamperPerkLevels;                                           // 0x0030   (0x0010)  
	FName                                              CamperFavor;                                                // 0x0040   (0x000C)  
	FName                                              Power;                                                      // 0x004C   (0x000C)  
	TArray<FName>                                      PowerAddOns;                                                // 0x0058   (0x0010)  
	TArray<FName>                                      SlasherPerks;                                               // 0x0068   (0x0010)  
	TArray<int32_t>                                    SlasherPerkLevels;                                          // 0x0078   (0x0010)  
	FName                                              SlasherFavor;                                               // 0x0088   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0094   (0x0004)  MISSED
	TArray<EPerkCategory>                              RandomPerks;                                                // 0x0098   (0x0010)  
};

/// Struct /Script/DeadByDaylight.PlayerSavedProfileDataShared
/// Size: 0x0068 (0x000000 - 0x000068)
struct FPlayerSavedProfileDataShared
{ 
	SDK_UNDEFINED(16,2058) /* FString */               __um(playerName);                                           // 0x0000   (0x0010)  
	int32_t                                            SelectedCamperIndex;                                        // 0x0010   (0x0004)  
	int32_t                                            SelectedSlasherIndex;                                       // 0x0014   (0x0004)  
	FEquippedPlayerCustomization                       SelectedCharacterCustomization;                             // 0x0018   (0x0038)  
	int32_t                                            CamperStreak;                                               // 0x0050   (0x0004)  
	bool                                               ShowPortraitBorder;                                         // 0x0054   (0x0001)  
	bool                                               HasActiveSubscription;                                      // 0x0055   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0056   (0x0002)  MISSED
	SDK_UNDEFINED(16,2059) /* FString */               __um(PlatformId);                                           // 0x0058   (0x0010)  
};

/// Struct /Script/DeadByDaylight.DailyRitualSaveData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FDailyRitualSaveData
{ 
	FDateTime                                          LastRitualPopupDate;                                        // 0x0000   (0x0008)  
};

/// Struct /Script/DeadByDaylight.UIViewFlagSaveData
/// Size: 0x00F0 (0x000000 - 0x0000F0)
struct FUIViewFlagSaveData
{ 
	SDK_UNDEFINED(80,2060) /* TMap<FString, bool> */   __um(CharactersFirstBloodweb);                              // 0x0000   (0x0050)  
	SDK_UNDEFINED(80,2061) /* TMap<FString, bool> */   __um(ArchiveStoryHasBeenSeenStatus);                        // 0x0050   (0x0050)  
	SDK_UNDEFINED(80,2062) /* TMap<FString, bool> */   __um(ArchiveNewTomeAnimationHasBeenSeenStatus);             // 0x00A0   (0x0050)  
};

/// Struct /Script/DeadByDaylight.FearMarketItemInstance
/// Size: 0x0030 (0x000000 - 0x000030)
struct FFearMarketItemInstance
{ 
	FName                                              ItemId;                                                     // 0x0000   (0x000C)  
	int32_t                                            BloodpointConversion;                                       // 0x000C   (0x0004)  
	bool                                               Purchased;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	float                                              DiscountPercentage;                                         // 0x0014   (0x0004)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0018   (0x0018)  MISSED
};

/// Struct /Script/DeadByDaylight.FearMarketOfferingInstance
/// Size: 0x0020 (0x000000 - 0x000020)
struct FFearMarketOfferingInstance
{ 
	TArray<FFearMarketItemInstance>                    ObjectsForSale;                                             // 0x0000   (0x0010)  
	FDateTime                                          starttime;                                                  // 0x0010   (0x0008)  
	FDateTime                                          EndTime;                                                    // 0x0018   (0x0008)  
};

/// Struct /Script/DeadByDaylight.BloodwebNodeProperties
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBloodwebNodeProperties
{ 
	EBloodwebNodeContentType                           ContentType;                                                // 0x0000   (0x0001)  
	EItemRarity                                        Rarity;                                                     // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	SDK_UNDEFINED(16,2063) /* TArray<FString> */       __um(Tags);                                                 // 0x0008   (0x0010)  
	int32_t                                            characterId;                                                // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.BloodwebNodeGate
/// Size: 0x0000 (0x000008 - 0x000008)
struct FBloodwebNodeGate : FDBDTableRowBase
{ 
};

/// Struct /Script/DeadByDaylight.BloodwebChest
/// Size: 0x0030 (0x000008 - 0x000038)
struct FBloodwebChest : FDBDTableRowBase
{ 
	FName                                              ID;                                                         // 0x0008   (0x000C)  
	FName                                              eventID;                                                    // 0x0014   (0x000C)  
	EGameType                                          gameType;                                                   // 0x0020   (0x0001)  
	EBloodchestType                                    ChestType;                                                  // 0x0021   (0x0001)  
	EItemRarity                                        Rarity;                                                     // 0x0022   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x0023   (0x0005)  MISSED
	TArray<float>                                      GivenItemRarity;                                            // 0x0028   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BloodwebNode
/// Size: 0x0090 (0x000000 - 0x000090)
struct FBloodwebNode
{ 
	FBloodwebNodeProperties                            Properties;                                                 // 0x0000   (0x0020)  
	TArray<FBloodwebNodeGate>                          Gates;                                                      // 0x0020   (0x0010)  
	EBloodwebNodeState                                 State;                                                      // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	SDK_UNDEFINED(16,2064) /* FString */               __um(NodeId);                                               // 0x0038   (0x0010)  
	FName                                              ContentId;                                                  // 0x0048   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	FBloodwebChest                                     BloodwebChest;                                              // 0x0058   (0x0038)  
};

/// Struct /Script/DeadByDaylight.BloodWebRingPersistentData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBloodWebRingPersistentData
{ 
	TArray<FBloodwebNode>                              NodeData;                                                   // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BloodWebPersistentData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FBloodWebPersistentData
{ 
	int32_t                                            VersionNumber;                                              // 0x0000   (0x0004)  
	int32_t                                            Level;                                                      // 0x0004   (0x0004)  
	TArray<FBloodWebRingPersistentData>                RingData;                                                   // 0x0008   (0x0010)  
	TArray<FName>                                      Paths;                                                      // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,2065) /* FString */               __um(EntityCurrentNode);                                    // 0x0028   (0x0010)  
	FDateTime                                          GenerationDate;                                             // 0x0038   (0x0008)  
	SDK_UNDEFINED(16,2066) /* FString */               __um(Seed);                                                 // 0x0040   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterCustomizationPreset
/// Size: 0x0038 (0x000000 - 0x000038)
struct FCharacterCustomizationPreset
{ 
	FName                                              Head;                                                       // 0x0000   (0x000C)  
	FName                                              TorsoOrBody;                                                // 0x000C   (0x000C)  
	FName                                              LegsOrWeapon;                                               // 0x0018   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	TArray<FCharmIdSlot>                               Charms;                                                     // 0x0028   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterCustomizationPresetsList
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCharacterCustomizationPresetsList
{ 
	int32_t                                            characterId;                                                // 0x0000   (0x0004)  
	int32_t                                            ActivePreset;                                               // 0x0004   (0x0004)  
	TArray<FCharacterCustomizationPreset>              Presets;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterLoadoutPreset
/// Size: 0x0040 (0x000000 - 0x000040)
struct FCharacterLoadoutPreset
{ 
	FName                                              PowerOrItem;                                                // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<FName>                                      addons;                                                     // 0x0010   (0x0010)  
	TArray<FName>                                      Perks;                                                      // 0x0020   (0x0010)  
	FName                                              Favor;                                                      // 0x0030   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterLoadoutPresetsList
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCharacterLoadoutPresetsList
{ 
	int32_t                                            characterId;                                                // 0x0000   (0x0004)  
	int32_t                                            ActivePreset;                                               // 0x0004   (0x0004)  
	TArray<FCharacterLoadoutPreset>                    Presets;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.PlayerSavedProfileCumulativeData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FPlayerSavedProfileCumulativeData
{ 
	bool                                               FirstTimePlaying;                                           // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            CumulativeMatches;                                          // 0x0004   (0x0004)  
	int32_t                                            CumulativeMatchesLeft;                                      // 0x0008   (0x0004)  
	int32_t                                            CumulativeMatchesAsSurvivor;                                // 0x000C   (0x0004)  
	int32_t                                            CumulativeMatchesLeftAsSurvivor;                            // 0x0010   (0x0004)  
	int32_t                                            CumulativeMatchesAsKiller;                                  // 0x0014   (0x0004)  
	int32_t                                            CumulativeMatchesLeftAsKiller;                              // 0x0018   (0x0004)  
	int32_t                                            CumulativeMatchesAsSurvivorNoFriends;                       // 0x001C   (0x0004)  
	int32_t                                            CumulativeMatchesAsKillerNoFriends;                         // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	FDateTime                                          LastMatchTimestamp;                                         // 0x0028   (0x0008)  
	FDateTime                                          LastSessionTimestamp;                                       // 0x0030   (0x0008)  
	int32_t                                            CumulativeSessions;                                         // 0x0038   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	FTimespan                                          CumulativePlaytime;                                         // 0x0040   (0x0008)  
};

/// Struct /Script/DeadByDaylight.SavedStatsData
/// Size: 0x0014 (0x000000 - 0x000014)
struct FSavedStatsData
{ 
	uint32_t                                           Version;                                                    // 0x0000   (0x0004)  
	FName                                              Name;                                                       // 0x0004   (0x000C)  
	float                                              value;                                                      // 0x0010   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PlayerSavedProfileDataLocal
/// Size: 0x0620 (0x000000 - 0x000620)
struct FPlayerSavedProfileDataLocal
{ 
	int32_t                                            Tokens;                                                     // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FName>                                      offerings;                                                  // 0x0008   (0x0010)  
	SDK_UNDEFINED(80,2067) /* TMap<FName, bool> */     __um(PageVisited);                                          // 0x0018   (0x0050)  
	SDK_UNDEFINED(80,2068) /* TMap<FName, bool> */     __um(ChatVisible);                                          // 0x0068   (0x0050)  
	SDK_UNDEFINED(80,2069) /* TMap<FName, bool> */     __um(OnboardingCompleted);                                  // 0x00B8   (0x0050)  
	int32_t                                            ConsecutiveMatchStreak;                                     // 0x0108   (0x0004)  
	int32_t                                            Wins;                                                       // 0x010C   (0x0004)  
	int32_t                                            Losses;                                                     // 0x0110   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0114   (0x0004)  MISSED
	uint64_t                                           CurrentSeasonTicks;                                         // 0x0118   (0x0008)  
	FDailyRitualSaveData                               DailyRitualSaveData;                                        // 0x0120   (0x0008)  
	FUIViewFlagSaveData                                UIViewFlags;                                                // 0x0128   (0x00F0)  
	FFearMarketOfferingInstance                        FearMarket;                                                 // 0x0218   (0x0020)  
	FPlayerLoadoutData                                 LastConnectedLoadout;                                       // 0x0238   (0x00A8)  
	int32_t                                            LastConnectedCharacterIndex;                                // 0x02E0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02E4   (0x0004)  MISSED
	FDateTime                                          DisconnectPenaltyTime;                                      // 0x02E8   (0x0008)  
	FDateTime                                          LastMatchEndTime;                                           // 0x02F0   (0x0008)  
	FDateTime                                          LastMatchStartTime;                                         // 0x02F8   (0x0008)  
	FDateTime                                          LastKillerMatchEndTime;                                     // 0x0300   (0x0008)  
	FDateTime                                          LastSurvivorMatchEndTime;                                   // 0x0308   (0x0008)  
	FBloodWebPersistentData                            BloodStoreKillers;                                          // 0x0310   (0x0050)  
	FBloodWebPersistentData                            BloodStoreSurvivors;                                        // 0x0360   (0x0050)  
	bool                                               CrossplayAllowed;                                           // 0x03B0   (0x0001)  
	bool                                               AutoDeclineFriendInvites;                                   // 0x03B1   (0x0001)  
	unsigned char                                      UnknownData03_5[0x6];                                       // 0x03B2   (0x0006)  MISSED
	TArray<FCharacterCustomizationPresetsList>         CharacterCustomizationPresets;                              // 0x03B8   (0x0010)  
	TArray<FCharacterLoadoutPresetsList>               CharacterLoadoutPresets;                                    // 0x03C8   (0x0010)  
	SDK_UNDEFINED(80,2070) /* TMap<FString, FLoadoutPresetsDataForGameType> */ __um(CharacterLoadoutPresetsPerGameType); // 0x03D8   (0x0050)  
	FPlayerSavedProfileCumulativeData                  _cumulativeData;                                            // 0x0428   (0x0048)  
	TArray<FSavedStatsData>                            _savedPlayerStats;                                          // 0x0470   (0x0010)  
	bool                                               _hasBeenGivenKillerTutorialEndReward;                       // 0x0480   (0x0001)  
	bool                                               _hasBeenGivenSurvivorTutorialEndReward;                     // 0x0481   (0x0001)  
	bool                                               _hasSeenBloodpointsOnboardingCurrencyPopup;                 // 0x0482   (0x0001)  
	bool                                               _hasSeenAuricCellsOnboardingCurrencyPopup;                  // 0x0483   (0x0001)  
	bool                                               _hasSeenIridescentShardsOnboardingCurrencyPopup;            // 0x0484   (0x0001)  
	bool                                               _hasSeenLightSensitivity;                                   // 0x0485   (0x0001)  
	bool                                               _hasSeenMainMenu;                                           // 0x0486   (0x0001)  
	unsigned char                                      UnknownData04_5[0x1];                                       // 0x0487   (0x0001)  MISSED
	SDK_UNDEFINED(80,2071) /* TMap<int32_t, FCharacterSavedProfileData> */ __um(_characterData);                   // 0x0488   (0x0050)  
	SDK_UNDEFINED(80,2072) /* TMap<FName, FSpecialEventSavedData> */ __um(_specialEvent);                          // 0x04D8   (0x0050)  
	SDK_UNDEFINED(80,2073) /* TSet<FName> */           __um(_seenCinematics);                                      // 0x0528   (0x0050)  
	SDK_UNDEFINED(80,2074) /* TSet<FName> */           __um(_seenFeatures);                                        // 0x0578   (0x0050)  
	SDK_UNDEFINED(80,2075) /* TMap<FString, FReleaseSavedData> */ __um(_releases);                                 // 0x05C8   (0x0050)  
	bool                                               _hasBeginnerTooltipsBeenDisabledAtLevel;                    // 0x0618   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x0619   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.ConsoleUserSettings
/// Size: 0x00D8 (0x000000 - 0x0000D8)
struct FConsoleUserSettings
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	TArray<FInputActionKeyMapping>                     ActionMappings;                                             // 0x0008   (0x0010)  
	TArray<FInputAxisKeyMapping>                       AxisMappings;                                               // 0x0018   (0x0010)  
	int32_t                                            MenuScaleFactor;                                            // 0x0028   (0x0004)  
	int32_t                                            HudScaleFactor;                                             // 0x002C   (0x0004)  
	int32_t                                            SkillCheckScaleFactor;                                      // 0x0030   (0x0004)  
	bool                                               LargeText;                                                  // 0x0034   (0x0001)  
	bool                                               BloodwebInteractionBehaviour;                               // 0x0035   (0x0001)  
	bool                                               TerrorRadiusVisualFeedback;                                 // 0x0036   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0037   (0x0001)  MISSED
	int32_t                                            FieldOfView;                                                // 0x0038   (0x0004)  
	int32_t                                            Gamma;                                                      // 0x003C   (0x0004)  
	bool                                               HUDPlayerNamesVisibility;                                   // 0x0040   (0x0001)  
	bool                                               HUDScoreEventsVisibility;                                   // 0x0041   (0x0001)  
	bool                                               HUDKillerHookCountVisibility;                               // 0x0042   (0x0001)  
	bool                                               SurvivorSpecificPingIcon;                                   // 0x0043   (0x0001)  
	bool                                               LegacyPrestigePortraits;                                    // 0x0044   (0x0001)  
	bool                                               ChallengeProgression;                                       // 0x0045   (0x0001)  
	bool                                               ChallengeCompletion;                                        // 0x0046   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x0047   (0x0001)  MISSED
	int32_t                                            MainVolume;                                                 // 0x0048   (0x0004)  
	int32_t                                            MenuMusicVolume;                                            // 0x004C   (0x0004)  
	bool                                               UseHeadphones;                                              // 0x0050   (0x0001)  
	bool                                               MuteOnFocusLost;                                            // 0x0051   (0x0001)  
	bool                                               HapticsVibrationPS5;                                        // 0x0052   (0x0001)  
	unsigned char                                      UnknownData03_5[0x1];                                       // 0x0053   (0x0001)  MISSED
	int32_t                                            KillerMouseSensitivity;                                     // 0x0054   (0x0004)  
	int32_t                                            SurvivorMouseSensitivity;                                   // 0x0058   (0x0004)  
	int32_t                                            KillerControllerSensitivity;                                // 0x005C   (0x0004)  
	int32_t                                            SurvivorControllerSensitivity;                              // 0x0060   (0x0004)  
	bool                                               InvertY;                                                    // 0x0064   (0x0001)  
	bool                                               SurvivorInvertY;                                            // 0x0065   (0x0001)  
	bool                                               KillerToggleInteractions;                                   // 0x0066   (0x0001)  
	bool                                               SurvivorToggleInteractions;                                 // 0x0067   (0x0001)  
	bool                                               SprintToCancel;                                             // 0x0068   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0069   (0x0003)  MISSED
	int32_t                                            HighestWeightSeenNews;                                      // 0x006C   (0x0004)  
	bool                                               UseAtlantaCustomizedHuds;                                   // 0x0070   (0x0001)  
	bool                                               UseAtlantaSurvivorQuickTurn;                                // 0x0071   (0x0001)  
	bool                                               UseAtlantaKillerQuickTurn;                                  // 0x0072   (0x0001)  
	unsigned char                                      UnknownData05_5[0x5];                                       // 0x0073   (0x0005)  MISSED
	TArray<FAtlantaCustomizedHudSettings>              AtlantaCustomizedHuds;                                      // 0x0078   (0x0010)  
	bool                                               HasAcceptedCrossplayPopup;                                  // 0x0088   (0x0001)  
	bool                                               HasAcceptedProgressionSystemInfoPopup;                      // 0x0089   (0x0001)  
	bool                                               HasAcceptedCrossProgressionPopup;                           // 0x008A   (0x0001)  
	unsigned char                                      UnknownData06_5[0x5];                                       // 0x008B   (0x0005)  MISSED
	FBonusTierTooltipVisibility                        BonusTierTooltipVisibility;                                 // 0x0090   (0x0018)  
	SDK_UNDEFINED(16,2076) /* FString */               __um(PartyPrivacyState);                                    // 0x00A8   (0x0010)  
	int32_t                                            ColorBlindMode;                                             // 0x00B8   (0x0004)  
	int32_t                                            ColorBlindModeIntensity;                                    // 0x00BC   (0x0004)  
	bool                                               BeginnerMode;                                               // 0x00C0   (0x0001)  
	bool                                               Subtitles;                                                  // 0x00C1   (0x0001)  
	unsigned char                                      UnknownData07_5[0x2];                                       // 0x00C2   (0x0002)  MISSED
	int32_t                                            SubtitlesBackgroundOpacity;                                 // 0x00C4   (0x0004)  
	int32_t                                            SubtitlesSize;                                              // 0x00C8   (0x0004)  
	bool                                               IsAnonymousMode;                                            // 0x00CC   (0x0001)  
	bool                                               HideYourName;                                               // 0x00CD   (0x0001)  
	bool                                               HideOtherNames;                                             // 0x00CE   (0x0001)  
	bool                                               HiddenMatchmakingDelay;                                     // 0x00CF   (0x0001)  
	bool                                               HasAcceptedHapticsVibrationPopup;                           // 0x00D0   (0x0001)  
	unsigned char                                      UnknownData08_5[0x3];                                       // 0x00D1   (0x0003)  MISSED
	int32_t                                            PlayerCardAnimationMode;                                    // 0x00D4   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PlayerSavedProfileData
/// Size: 0x0770 (0x000000 - 0x000770)
struct FPlayerSavedProfileData
{ 
	SDK_UNDEFINED(16,2077) /* FString */               __um(PlayerUID);                                            // 0x0000   (0x0010)  
	FPlayerSavedProfileDataShared                      SharedData;                                                 // 0x0010   (0x0068)  
	FPlayerSavedProfileDataLocal                       LocalData;                                                  // 0x0078   (0x0620)  
	FConsoleUserSettings                               ConsoleUserSettings;                                        // 0x0698   (0x00D8)  
};

/// Struct /Script/DeadByDaylight.PlayerPersistentData
/// Size: 0x09D0 (0x000000 - 0x0009D0)
struct FPlayerPersistentData
{ 
	EPlayerRole                                        GameRole;                                                   // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FPlayerLoadoutData                                 StartingLoadout;                                            // 0x0008   (0x00A8)  
	FPlayerLoadoutData                                 CurrentLoadout;                                             // 0x00B0   (0x00A8)  
	unsigned char                                      UnknownData01_5[0x98];                                      // 0x0158   (0x0098)  MISSED
	FPlayerSavedProfileData                            SavedData;                                                  // 0x01F0   (0x0770)  
	EPlatformFlag                                      PlayerPlatform;                                             // 0x0960   (0x0004)  
	EProviderFlag                                      PlayerProvider;                                             // 0x0964   (0x0004)  
	unsigned char                                      UnknownData02_5[0x48];                                      // 0x0968   (0x0048)  MISSED
	SDK_UNDEFINED(16,2078) /* FString */               __um(_equippedBanner);                                      // 0x09B0   (0x0010)  
	SDK_UNDEFINED(16,2079) /* FString */               __um(_equippedBadge);                                       // 0x09C0   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CloudInventoryItem
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCloudInventoryItem
{ 
	int32_t                                            DefinitionId;                                               // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	uint64_t                                           InstanceId;                                                 // 0x0008   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDPersistentData
/// Size: 0x0BB8 (0x000030 - 0x000BE8)
class UDBDPersistentData : public UObject
{ 
public:
	FGamePersistentData                                _gamePersistentData;                                        // 0x0030   (0x0108)  
	SDK_UNDEFINED(16,2080) /* TArray<FString> */       __um(_keepDataIDs);                                         // 0x0138   (0x0010)  
	SDK_UNDEFINED(80,2081) /* TMap<FString, FPlayerPersistentData> */ __um(_playerIdToPersistentDataMap);          // 0x0148   (0x0050)  
	FPlayerPersistentData                              _localPlayerPersistentData;                                 // 0x0198   (0x09D0)  
	unsigned char                                      UnknownData00_5[0x50];                                      // 0x0B68   (0x0050)  MISSED
	TArray<FCloudInventoryItem>                        _cloudInventory;                                            // 0x0BB8   (0x0010)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0BC8   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.DBDPlayerAudioHandlerComponent
/// Size: 0x0090 (0x0000B8 - 0x000148)
class UDBDPlayerAudioHandlerComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2082) /* FString */               __um(_stopMovingRTPC);                                      // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x80];                                      // 0x00C8   (0x0080)  MISSED
};

/// Class /Script/DeadByDaylight.DBDPlayerCameraManager
/// Size: 0x0020 (0x002820 - 0x002840)
class ADBDPlayerCameraManager : public APlayerCameraManager
{ 
public:
	float                                              NormalFOV;                                                  // 0x2820   (0x0004)  
	float                                              TargetingFOV;                                               // 0x2824   (0x0004)  
	SDK_UNDEFINED(16,2083) /* TScriptInterface<Class> */ __um(_viewRotationStrategy);                              // 0x2828   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x2838   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDPlayerCameraManager.StartFadeOutTimeline
	// void StartFadeOutTimeline(float Duration);                                                                            // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.DBDPlayerCameraManager.StartFadeInTimeline
	// void StartFadeInTimeline(float Duration);                                                                             // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.DBDPlayerControllerBase
/// Size: 0x00D8 (0x000590 - 0x000668)
class ADBDPlayerControllerBase : public APlayerController
{ 
public:
	unsigned char                                      UnknownData00_2[0x58];                                      // 0x0590   (0x0058)  MISSED
	SDK_UNDEFINED(16,2084) /* FMulticastInlineDelegate */ __um(OnPlayerStateChanged);                              // 0x05E8   (0x0010)  
	unsigned char                                      UnknownData01_5[0x58];                                      // 0x05F8   (0x0058)  MISSED
	class ADBDPlayer*                                  _mainCharacter;                                             // 0x0650   (0x0008)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0658   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Server_UpdateReplicatedPips
	// void Server_UpdateReplicatedPips(int32_t pipsToAdd);                                                                  // [0x58516a0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Server_SetPlayerCard
	// void Server_SetPlayerCard(FString badgeId, FString BannerId);                                                         // [0x5850d20] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Server_SetConsecutiveMatchStreak
	// void Server_SetConsecutiveMatchStreak(int32_t consecutiveMatch);                                                      // [0x5850900] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Server_SendMessage
	// void Server_SendMessage(FString Message);                                                                             // [0x5850550] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Server_SendClientAuthentication
	// void Server_SendClientAuthentication(FString authClientTicket, uint64_t SteamId, uint32_t ticketLength);              // [0x58503f0] Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Server_ReceivePlayerProfile
	// void Server_ReceivePlayerProfile(FPlayerSavedProfileDataShared savedProfileData, FPlayerLoadoutData playerLoadout);   // [0x584fad0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Server_EACMessageFromClient
	// void Server_EACMessageFromClient(TArray<char> Message);                                                               // [0x584f780] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Server
	// void Server(FString commandLine);                                                                                     // [0x584f280] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_UpdateLocalStats
	// void DBD_UpdateLocalStats();                                                                                          // [0x4592da0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesPast
	// void DBD_SetCurrentCharacterPrestigeDatesPast();                                                                      // [0x4592da0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesNow
	// void DBD_SetCurrentCharacterPrestigeDatesNow();                                                                       // [0x4592da0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesFuture
	// void DBD_SetCurrentCharacterPrestigeDatesFuture();                                                                    // [0x4592da0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_FireTestScore
	// void DBD_FireTestScore(int32_t category, float value);                                                                // [0x584ef20] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_FillScoreCategory
	// void DBD_FillScoreCategory(int32_t category);                                                                         // [0x4dd9ef0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_FillAllScoreCategories
	// void DBD_FillAllScoreCategories();                                                                                    // [0x4592da0] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_DebugSendChatMessage
	// void DBD_DebugSendChatMessage(FString Msg);                                                                           // [0x44526d0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromTile
	// void DBD_BuildFromTile(int32_t matrixX, int32_t matrixY, int32_t Rotation, FString Name);                             // [0x584edb0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromSeed
	// void DBD_BuildFromSeed(int32_t Seed);                                                                                 // [0x584ed20] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromPremadeMap
	// void DBD_BuildFromPremadeMap(FString Map);                                                                            // [0x584ec80] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromPlayerCount
	// void DBD_BuildFromPlayerCount(int32_t Count);                                                                         // [0x584ebf0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromMap
	// void DBD_BuildFromMap(FString Map);                                                                                   // [0x584eb50] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Client_SendWarning
	// void Client_SendWarning(bool penaltyStarts, float Seconds);                                                           // [0x584e800] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Client_SendServerAuthentication
	// void Client_SendServerAuthentication(FString authServerTicket, uint64_t SteamId, uint32_t ticketLength);              // [0x584e6a0] Final|Net|NetReliableNative|Event|Private|NetClient|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Client_SendLogs
	// void Client_SendLogs(TArray<FString> ensures);                                                                        // [0x584e5d0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Client_RequestPlayerProfile
	// void Client_RequestPlayerProfile();                                                                                   // [0x584e5b0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Client_GameEnded
	// void Client_GameEnded();                                                                                              // [0x584e590] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Client_FinishedPlaying
	// void Client_FinishedPlaying(FPlayerFinishedPlayingData finishedPlayingData);                                          // [0x584e500] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Client_EACResetConnection
	// void Client_EACResetConnection();                                                                                     // [0x584e4e0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Client_EACMessageFromServer
	// void Client_EACMessageFromServer(TArray<char> Message);                                                               // [0x584e440] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.Client_EACConnect
	// void Client_EACConnect();                                                                                             // [0x584e420] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerControllerBase.CallConsoleCmdOnServer_Server
	// void CallConsoleCmdOnServer_Server(FString commandLine);                                                              // [0x584e360] Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate 
};

/// Class /Script/DeadByDaylight.DBDPlayerController
/// Size: 0x0218 (0x000668 - 0x000880)
class ADBDPlayerController : public ADBDPlayerControllerBase
{ 
public:
	SDK_UNDEFINED(16,2085) /* FMulticastInlineDelegate */ __um(OnPawnLeavingGame);                                 // 0x0668   (0x0010)  
	SDK_UNDEFINED(16,2086) /* FMulticastInlineDelegate */ __um(OnLocallyObservedChanged);                          // 0x0678   (0x0010)  
	unsigned char                                      UnknownData00_5[0x98];                                      // 0x0688   (0x0098)  MISSED
	class ANetworkFenceActor*                          _theFence;                                                  // 0x0720   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0728   (0x0008)  MISSED
	class UDBDBaseInputHandler*                        _inputHandler;                                              // 0x0730   (0x0008)  
	unsigned char                                      UnknownData02_5[0x130];                                     // 0x0738   (0x0130)  MISSED
	class APawn*                                       _aiPawn;                                                    // 0x0868   (0x0008)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0870   (0x0008)  MISSED
	EPlayerRole                                        _controllerGameRole;                                        // 0x0878   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x0879   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDPlayerController.ServerViewPlayer
	// void ServerViewPlayer(FString playerName);                                                                            // [0x584f320] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController.Server_SetSpectatorModeInEditor
	// void Server_SetSpectatorModeInEditor(bool On, class ADBDPlayerState* spectatingPlayerState);                          // [0x58515a0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController.Server_SetSpectatorMode
	// void Server_SetSpectatorMode(bool On);                                                                                // [0x58514e0] Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController.Server_SetReadyToTravel
	// void Server_SetReadyToTravel();                                                                                       // [0x5851470] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerController.Server_RequestEndGame
	// void Server_RequestEndGame();                                                                                         // [0x58503d0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerController.Server_NotifyHasMoved
	// void Server_NotifyHasMoved();                                                                                         // [0x584fab0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerController.Server_LeaveGame
	// void Server_LeaveGame(bool joiningLobby);                                                                             // [0x584fa20] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerController.Server_DebugSend
	// void Server_DebugSend(FString Data);                                                                                  // [0x584f6e0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerController.Server_ClientTimeSinceLastLoadingProgress
	// void Server_ClientTimeSinceLastLoadingProgress(float lastProgression);                                                // [0x584f650] Net|Native|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerController.Server_ActivateAIAll
	// void Server_ActivateAIAll(bool Activate, int32_t PlayerRank, int8_t PlayerRole);                                      // [0x584f4e0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController.Server_ActivateAI
	// void Server_ActivateAI(bool Activate, int32_t PlayerRank);                                                            // [0x584f3e0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController.OnRep_Fence
	// void OnRep_Fence();                                                                                                   // [0x584f260] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDPlayerController.MobileJoystickInput_Pressed
	// bool MobileJoystickInput_Pressed(int32_t joystickIndex);                                                              // [0x584f1c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayerController.IsSpectating
	// bool IsSpectating();                                                                                                  // [0x584f190] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayerController.ImplementRunLockMechanic
	// void ImplementRunLockMechanic();                                                                                      // [0x584f0e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayerController.GetSpectatedPlayerState
	// class ADBDPlayerState* GetSpectatedPlayerState();                                                                     // [0x584f0b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayerController.GetSpectatedPlayer
	// class ADBDPlayer* GetSpectatedPlayer();                                                                               // [0x584f080] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayerController.GetControlledPlayer
	// class ADBDPlayer* GetControlledPlayer();                                                                              // [0x584f050] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayerController.GetAIPawn
	// class APawn* GetAIPawn();                                                                                             // [0x584eff0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayerController.Client_SpectateAI
	// void Client_SpectateAI(class APawn* aiPawn);                                                                          // [0x584eac0] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerController.Client_SetSpectatorModeInEditor
	// void Client_SetSpectatorModeInEditor(bool On, class ADBDPlayerState* spectatingPlayerState);                          // [0x584e9f0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerController.Client_SetSpectatorMode
	// void Client_SetSpectatorMode(bool On);                                                                                // [0x584e960] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerController.Client_SetPlayerFinishStats
	// void Client_SetPlayerFinishStats(FPlayerFinishStats Stats);                                                           // [0x584e8e0] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerController.ActivateAI
	// void ActivateAI(bool Activate, int32_t PlayerRank);                                                                   // [0x584e1e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDPlayerController_Menu
/// Size: 0x0000 (0x000668 - 0x000668)
class ADBDPlayerController_Menu : public ADBDPlayerControllerBase
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.TogglePlayerReadyState
	// void TogglePlayerReadyState();                                                                                        // [0x58517f0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.SetPlayerReady
	// void SetPlayerReady(bool IsReady);                                                                                    // [0x5851760] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.Server_SetReadyToTravel
	// void Server_SetReadyToTravel();                                                                                       // [0x5851490] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.Server_SetPlayerReady
	// void Server_SetPlayerReady(bool IsReady);                                                                             // [0x58513b0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.Server_SetPlayerLoadout
	// void Server_SetPlayerLoadout(FPlayerLoadoutData desiredLoadout);                                                      // [0x5850e40] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.Server_SetEquipedPerks
	// void Server_SetEquipedPerks(TArray<FName> perkIds, TArray<int32_t> perkLevels, bool callOnRep);                       // [0x5850b80] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.Server_SetCustomizationMeshes
	// void Server_SetCustomizationMeshes(FCharacterCustomization Customization);                                            // [0x5850ad0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.Server_SetCustomizationCharm
	// void Server_SetCustomizationCharm(FName CharmId, int8_t slotIndex);                                                   // [0x5850990] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.Server_SetCharacterLevel
	// void Server_SetCharacterLevel(int32_t CharacterLevel, int32_t PrestigeLevel, bool callOnRep);                         // [0x58507b0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.Server_SetCharacterData
	// void Server_SetCharacterData(int32_t CharacterIndex, FPlayerDataSync PlayerDataSync);                                 // [0x5850610] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.Server_GamePresetDataFromClient
	// void Server_GamePresetDataFromClient(FGamePresetData GameState);                                                      // [0x584f840] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.Authority_TogglePlayerReadyState
	// void Authority_TogglePlayerReadyState();                                                                              // [0x584e340] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDPlayerController_Menu.Authority_SetPlayerReady
	// void Authority_SetPlayerReady(bool IsReady);                                                                          // [0x584e2b0] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.DBDPlayerData
/// Size: 0x0090 (0x0000B8 - 0x000148)
class UDBDPlayerData : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2087) /* FMulticastInlineDelegate */ __um(OnItemUseButtonStateChanged);                       // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_5[0x74];                                      // 0x00C8   (0x0074)  MISSED
	FYawAndPitchRotator_NetQuantize16                  _controlRotation;                                           // 0x013C   (0x000C)  


	/// Functions
	// Function /Script/DeadByDaylight.DBDPlayerData.Server_SetPlayerReady
	// void Server_SetPlayerReady();                                                                                         // [0x57e95c0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerData.Server_SetMapSpecificComponentReady
	// void Server_SetMapSpecificComponentReady();                                                                           // [0x4dd4860] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerData.Server_SetKillerSpecificComponentReady
	// void Server_SetKillerSpecificComponentReady();                                                                        // [0x4d82970] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerData.Server_SetIntroCompleted
	// void Server_SetIntroCompleted();                                                                                      // [0x5850d00] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerData.Server_RenderingFeaturesCompleted
	// void Server_RenderingFeaturesCompleted();                                                                             // [0x58503b0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerData.Server_NotifyAIPawnSpawned
	// void Server_NotifyAIPawnSpawned();                                                                                    // [0x4dd4840] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerData.Server_LoadoutSpawned
	// void Server_LoadoutSpawned();                                                                                         // [0x4dd4880] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerData.Server_CampaignDataSynced
	// void Server_CampaignDataSynced();                                                                                     // [0x584f630] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.DBDPlayerData.OnItemUseButtonStateChanged__DelegateSignature
	// void OnItemUseButtonStateChanged__DelegateSignature(bool IsPressed);                                                  // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.DBDPlayerData.IsInteractionInputPressed
	// bool IsInteractionInputPressed(EInputInteractionType interactionType);                                                // [0x584f100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayerData.GetControlRotation
	// FRotator GetControlRotation();                                                                                        // [0x584f010] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.DBDPlayerLevelManager
/// Size: 0x0168 (0x000030 - 0x000198)
class UDBDPlayerLevelManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x168];                                     // 0x0030   (0x0168)  MISSED
};

/// Class /Script/DeadByDaylight.DBDPlayerPositionOffsetComponent
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UDBDPlayerPositionOffsetComponent : public UActorComponent
{ 
public:
	FPerPlatformFloat                                  _menuZHeadOffset;                                           // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.DBDPlayerStart
/// Size: 0x0008 (0x000268 - 0x000270)
class ADBDPlayerStart : public APlayerStart
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0268   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterStateData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCharacterStateData
{ 
	int32_t                                            _pips;                                                      // 0x0000   (0x0004)  
	FName                                              _powerId;                                                   // 0x0004   (0x000C)  
	TArray<FName>                                      _addonIds;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.PlayerStateData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FPlayerStateData
{ 
	int32_t                                            CharacterLevel;                                             // 0x0000   (0x0004)  
	FName                                              EquipedFavorId;                                             // 0x0004   (0x000C)  
	TArray<FName>                                      EquipedPerkIds;                                             // 0x0010   (0x0010)  
	TArray<int32_t>                                    EquipedPerkLevels;                                          // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2088) /* FString */               __um(EquippedBannerId);                                     // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,2089) /* FString */               __um(EquippedBadgeId);                                      // 0x0040   (0x0010)  
	EGameState                                         _playerGameState;                                           // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0051   (0x0003)  MISSED
	int32_t                                            _prestigeLevel;                                             // 0x0054   (0x0004)  
};

/// Struct /Script/DeadByDaylight.UserGameStats
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FUserGameStats
{ 
	bool                                               Disconnected;                                               // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            FearTokens;                                                 // 0x0004   (0x0004)  
	int32_t                                            Skulls;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(80,2090) /* TMap<EDBDScoreCategory, int32_t> */ __um(BonusBloodpoints);                          // 0x0010   (0x0050)  
	SDK_UNDEFINED(80,2091) /* TMap<EDBDScoreCategory, int32_t> */ __um(_bloodpoints);                              // 0x0060   (0x0050)  
};

/// Struct /Script/DeadByDaylight.OngoingScoreData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FOngoingScoreData
{ 
	EDBDScoreTypes                                     scoreType;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FGameplayTag                                       scoreTypeTag;                                               // 0x0004   (0x000C)  
	float                                              TimeSinceScore;                                             // 0x0010   (0x0004)  
	float                                              ApplyScoreTimeout;                                          // 0x0014   (0x0004)  
	float                                              AccumulatedPercent;                                         // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	class AActor*                                      Target;                                                     // 0x0020   (0x0008)  
	class UObject*                                     CustomObjectParameter;                                      // 0x0028   (0x0008)  
};

/// Struct /Script/DeadByDaylight.StreamerModePlayerData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FStreamerModePlayerData
{ 
	bool                                               IsAnonymousMode;                                            // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            AnonymousSuffix;                                            // 0x0004   (0x0004)  
};

/// Class /Script/DeadByDaylight.DBDPlayerState
/// Size: 0x0408 (0x000338 - 0x000740)
class ADBDPlayerState : public APlayerState
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	SDK_UNDEFINED(16,2092) /* FMulticastInlineDelegate */ __um(OnAIFinishedPlayingEvent);                          // 0x0340   (0x0010)  
	SDK_UNDEFINED(16,2093) /* FString */               __um(MirrorsId);                                            // 0x0350   (0x0010)  
	SDK_UNDEFINED(16,2094) /* FString */               __um(ContentVersion);                                       // 0x0360   (0x0010)  
	EAIDifficultyLevel                                 _difficultyLevel;                                           // 0x0370   (0x0001)  
	bool                                               IsPlayerReady;                                              // 0x0371   (0x0001)  
	EPlayerRole                                        GameRole;                                                   // 0x0372   (0x0001)  
	unsigned char                                      UnknownData01_5[0x5];                                       // 0x0373   (0x0005)  MISSED
	class UDedicatedServerHandlerComponent*            DedicatedServerHandler;                                     // 0x0378   (0x0008)  
	FCharacterStateData                                CamperData;                                                 // 0x0380   (0x0020)  
	FCharacterStateData                                SlasherData;                                                // 0x03A0   (0x0020)  
	FPlayerStateData                                   PlayerData;                                                 // 0x03C0   (0x0058)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0418   (0x0008)  MISSED
	SDK_UNDEFINED(16,2095) /* FMulticastInlineDelegate */ __um(OnPlayerGameplayEvent);                             // 0x0420   (0x0010)  
	SDK_UNDEFINED(16,2096) /* FMulticastInlineDelegate */ __um(OnPlayerGameStateChanged);                          // 0x0430   (0x0010)  
	SDK_UNDEFINED(80,2097) /* TMap<FName, FAwardedScores> */ __um(_awardedScoresByType);                           // 0x0440   (0x0050)  
	FUserGameStats                                     _cachedUserGameStats;                                       // 0x0490   (0x00B0)  
	TArray<FOngoingScoreData>                          _ongoingScoreEvents;                                        // 0x0540   (0x0010)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0550   (0x0008)  MISSED
	bool                                               _inParadise;                                                // 0x0558   (0x0001)  
	bool                                               _endOfMatchRpcReceived;                                     // 0x0559   (0x0001)  
	unsigned char                                      UnknownData04_5[0x6];                                       // 0x055A   (0x0006)  MISSED
	FEquippedPlayerCustomization                       _playerCustomization;                                       // 0x0560   (0x0038)  
	int32_t                                            _selectedCamperIndex;                                       // 0x0598   (0x0004)  
	int32_t                                            _selectedSlasherIndex;                                      // 0x059C   (0x0004)  
	class UGameplayNotificationManager*                _gameplayNotificationManager;                               // 0x05A0   (0x0008)  
	class UCharacterStatsHandlerComponent*             _characterStatsHandler;                                     // 0x05A8   (0x0008)  
	class UPlayerScoreComponent*                       _playerScoreComponent;                                      // 0x05B0   (0x0008)  
	unsigned char                                      UnknownData05_5[0x20];                                      // 0x05B8   (0x0020)  MISSED
	SDK_UNDEFINED(16,2098) /* FString */               __um(_platformAccountId);                                   // 0x05D8   (0x0010)  
	unsigned char                                      UnknownData06_5[0x104];                                     // 0x05E8   (0x0104)  MISSED
	EPlatformFlag                                      _platform;                                                  // 0x06EC   (0x0004)  
	EProviderFlag                                      _provider;                                                  // 0x06F0   (0x0004)  
	bool                                               _crossplayAllowed;                                          // 0x06F4   (0x0001)  
	bool                                               _offNetworkFlag;                                            // 0x06F5   (0x0001)  
	unsigned char                                      UnknownData07_5[0x2];                                       // 0x06F6   (0x0002)  MISSED
	FStreamerModePlayerData                            _streamerModePlayerData;                                    // 0x06F8   (0x0008)  
	bool                                               _gameLevelLoaded;                                           // 0x0700   (0x0001)  
	unsigned char                                      UnknownData08_5[0x17];                                      // 0x0701   (0x0017)  MISSED
	bool                                               _showPortraitBorder;                                        // 0x0718   (0x0001)  
	unsigned char                                      UnknownData09_5[0x2];                                       // 0x0719   (0x0002)  MISSED
	bool                                               _hasActiveSubscription;                                     // 0x071B   (0x0001)  
	uint32_t                                           _matchmakingIncentive;                                      // 0x071C   (0x0004)  
	float                                              _pktLossPercentage;                                         // 0x0720   (0x0004)  
	bool                                               _isReplacementBot;                                          // 0x0724   (0x0001)  
	unsigned char                                      UnknownData10_5[0x3];                                       // 0x0725   (0x0003)  MISSED
	SDK_UNDEFINED(16,2099) /* FString */               __um(_replacementBotName);                                  // 0x0728   (0x0010)  
	int32_t                                            _disconnectedPlayerScore;                                   // 0x0738   (0x0004)  
	unsigned char                                      UnknownData11_6[0x4];                                       // 0x073C   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDPlayerState.UpdateOngoingScores
	// void UpdateOngoingScores();                                                                                           // [0x5856e60] Final|Native|Protected 
	// Function /Script/DeadByDaylight.DBDPlayerState.Server_CheatSelectSurvivor
	// void Server_CheatSelectSurvivor(int32_t camperIndex);                                                                 // [0x58567b0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerState.Server_CheatSelectKiller
	// void Server_CheatSelectKiller(int32_t slasherIndex);                                                                  // [0x58566f0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerState.OnRep_IsReplacementBot
	// void OnRep_IsReplacementBot();                                                                                        // [0x58566d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDPlayerState.OnRep_DisplayData
	// void OnRep_DisplayData();                                                                                             // [0x58566b0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDPlayerState.OnRep_CustomizationData
	// void OnRep_CustomizationData();                                                                                       // [0x5856690] Native|Public        
	// Function /Script/DeadByDaylight.DBDPlayerState.OnRep_BotDifficultyLevel
	// void OnRep_BotDifficultyLevel();                                                                                      // [0x5856670] Final|Native|Public  
	// Function /Script/DeadByDaylight.DBDPlayerState.Multicast_SetPlayerGameState
	// void Multicast_SetPlayerGameState(EGameState newGameState, bool isEscapeHatch);                                       // [0x58562f0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDPlayerState.Multicast_SetInParadise
	// void Multicast_SetInParadise();                                                                                       // [0x58562d0] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.DBDPlayerState.Multicast_SetBotInfoInCachedPlayerScore
	// void Multicast_SetBotInfoInCachedPlayerScore(bool IsBot, bool isReplacementBot, FString replacementBotName);          // [0x5856190] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDPlayerState.Multicast_SetAsLeftMatch
	// void Multicast_SetAsLeftMatch(EBotReplacementState botReplacementState);                                              // [0x5856110] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayerState.Multicast_SetAsDisconnected
	// void Multicast_SetAsDisconnected(EBotReplacementState botReplacementState);                                           // [0x5856090] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.DBDPlayerState.Multicast_FireGameplayEventWithScore
	// void Multicast_FireGameplayEventWithScore(EDBDScoreTypes playerGameplayEventType, float Amount, class AActor* effector, class AActor* Target, FAwardedScore AwardedScore); // [0x5855ee0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDPlayerState.Multicast_FireGameplayEvent
	// void Multicast_FireGameplayEvent(EDBDScoreTypes playerGameplayEventType, float Amount, class AActor* effector, class AActor* Target); // [0x5855d80] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DBDPlayerState.IsInFinishedPlayingState
	// bool IsInFinishedPlayingState();                                                                                      // [0x5855d50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayerState.HasEscaped
	// bool HasEscaped();                                                                                                    // [0x5855d20] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.DBDPlayerState.GetPlayerGameState
	// EGameState GetPlayerGameState();                                                                                      // [0x5855cf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayerState.GetGameRole
	// EPlayerRole GetGameRole();                                                                                            // [0x5855cb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayerState.GetGameplayNotificationManager
	// class UGameplayNotificationManager* GetGameplayNotificationManager();                                                 // [0x5855cd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDPlayerState.FireScoreEvent
	// void FireScoreEvent(EDBDScoreTypes scoreType, float PercentToAward);                                                  // [0x5855be0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayerState.FireActiveStatusViewEvent
	// void FireActiveStatusViewEvent(FName StatusViewID, FName uniqueSourceID, FStatusViewSource StatusViewSource);         // [0x5855a70] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayerState.FireActiveStatusEffectEvent
	// void FireActiveStatusEffectEvent(FName statusEffectId, float Percentage, int32_t iconFilePathIndex, int32_t levelToDisplay); // [0x58558f0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayerState.Client_UpdateWallet
	// void Client_UpdateWallet(FString currencyId, int32_t Amount);                                                         // [0x5855740] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerState.Client_SetInParadise
	// void Client_SetInParadise();                                                                                          // [0x5855720] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerState.Client_SetGameRole
	// void Client_SetGameRole(EPlayerRole newRole);                                                                         // [0x58556a0] Net|NetReliableNative|Event|Protected|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerState.Client_SetDSKickedOutReason
	// void Client_SetDSKickedOutReason(uint32_t Reason);                                                                    // [0x5855610] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerState.Client_RemoveItemFromInventory
	// void Client_RemoveItemFromInventory(FName toRemove, bool UpdateLoadout);                                              // [0x5855520] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerState.Client_RemotelyDispatchGameEventWithScore
	// void Client_RemotelyDispatchGameEventWithScore(FGameplayTag gameEventType, FGameEventData GameEventData, FAwardedScore AwardedScore); // [0x58553e0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerState.Client_RemotelyDispatchGameEvent
	// void Client_RemotelyDispatchGameEvent(FGameplayTag gameEventType, FGameEventData GameEventData);                      // [0x58552f0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerState.Client_InvalidateIncentives
	// void Client_InvalidateIncentives();                                                                                   // [0x58552d0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerState.Client_HandleEscapeScoreEvent
	// void Client_HandleEscapeScoreEvent();                                                                                 // [0x58552b0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerState.Client_HandleEndOfMatch
	// void Client_HandleEndOfMatch(bool success, FEndOfMatchRPCData Response);                                              // [0x58551b0] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerState.Client_FetchCoreRituals
	// void Client_FetchCoreRituals(bool hasClaimableRitual);                                                                // [0x5855120] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.DBDPlayerState.ChangeStartingGameRole
	// void ChangeStartingGameRole(EPlayerRole GameRole);                                                                    // [0x58550a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayerState.Authority_SetPlayerGameState
	// void Authority_SetPlayerGameState(EGameState newGameState, bool isEscapeHatch);                                       // [0x5854fd0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DBDPlayerState.Authority_HandleScoreEvent
	// void Authority_HandleScoreEvent(FGameplayTag scoreTypeTag, FScoreEventData ScoreEventData);                           // [0x5854eb0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayerState.Authority_EndOngoingScoreEvent
	// void Authority_EndOngoingScoreEvent(FGameplayTag scoreTypeTag);                                                       // [0x5854e10] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDPlayerState.Authority_CancelOngoingScoreEvent
	// void Authority_CancelOngoingScoreEvent(FGameplayTag scoreTypeTag);                                                    // [0x5854d70] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDPlayerState_Menu
/// Size: 0x0000 (0x000740 - 0x000740)
class ADBDPlayerState_Menu : public ADBDPlayerState
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDPlayerState_Menu.Server_SetSelectedCharacterId
	// void Server_SetSelectedCharacterId(int32_t ID, bool updateDisplayData);                                               // [0x5856d60] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerState_Menu.Server_SetSelectedCharacterCustomization
	// void Server_SetSelectedCharacterCustomization(EPlayerRole forRole, int32_t ID, FEquippedPlayerCustomization Customization); // [0x5856b50] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerState_Menu.Server_SetEquipmentAddons
	// void Server_SetEquipmentAddons(TArray<FName> addonItemIds, bool callOnRep);                                           // [0x5856a30] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerState_Menu.Server_SetEquipment
	// void Server_SetEquipment(ELoadoutSlot Slot, FName ItemId, bool callOnRep);                                            // [0x58568c0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerState_Menu.Server_NotifyOnRep
	// void Server_NotifyOnRep();                                                                                            // [0x5856870] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.DBDPlayerState_Menu.Multicast_SetSelectedCharacterId
	// void Multicast_SetSelectedCharacterId(EPlayerRole forRole, int32_t ID, bool updateDisplayData);                       // [0x5856560] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.DBDPlayerState_Menu.Multicast_SetSelectedCharacterCustomization
	// void Multicast_SetSelectedCharacterCustomization(EPlayerRole forRole, int32_t ID, FEquippedPlayerCustomization Customization); // [0x58563d0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/DeadByDaylight.DBDPlayerState_Lobby
/// Size: 0x0008 (0x000740 - 0x000748)
class ADBDPlayerState_Lobby : public ADBDPlayerState_Menu
{ 
public:
	bool                                               IsOwnershipValidated;                                       // 0x0740   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0741   (0x0007)  MISSED
};

/// Class /Script/DeadByDaylight.DBDPrimaryDataAsset
/// Size: 0x0010 (0x000038 - 0x000048)
class UDBDPrimaryDataAsset : public UPrimaryDataAsset
{ 
public:
	FPrimaryAssetType                                  AssetType;                                                  // 0x0038   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.DBDProjectileUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDProjectileUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDProjectileUtilities.CreateProjectilePoolAdapter
	// class UAuthoritativePoolProjectileProviderAdapter* CreateProjectilePoolAdapter(class UObject* Outer, class UAuthoritativeActorPoolComponent* pool); // [0x5855820] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDRankDesignTunables
/// Size: 0x0030 (0x000030 - 0x000060)
class UDBDRankDesignTunables : public UObject
{ 
public:
	class UCurveFloat*                                 UnbrokenTimeAlivePointsCurve;                               // 0x0030   (0x0008)  
	class UCurveFloat*                                 EvaderStealthPointsByDistanceWhileKillerNotChasingCurve;    // 0x0038   (0x0008)  
	class UCurveFloat*                                 EvaderStealthPointsByDistanceWhileKillerIsChasingCurve;     // 0x0040   (0x0008)  
	class UCurveFloat*                                 EvaderChasePointsByDurationCurve;                           // 0x0048   (0x0008)  
	class UCurveFloat*                                 EvaderZAxisDistanceScalingCurve;                            // 0x0050   (0x0008)  
	class UCurveFloat*                                 ChaserChasePointsByDurationCurve;                           // 0x0058   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDRemotePlayer
/// Size: 0x0000 (0x001C68 - 0x001C68)
class UDBDRemotePlayer : public UIpConnection
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDRichPresenceSubsystem
/// Size: 0x0018 (0x000038 - 0x000050)
class UDBDRichPresenceSubsystem : public UGameInstanceSubsystem
{ 
public:
	ERichPresenceUserType                              _userType;                                                  // 0x0038   (0x0001)  
	ERichPresenceStatus                                _richPresenceStatus;                                        // 0x0039   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x003A   (0x0002)  MISSED
	float                                              _timerRate;                                                 // 0x003C   (0x0004)  
	float                                              _timerDelay;                                                // 0x0040   (0x0004)  
	bool                                               _isValidSetup;                                              // 0x0044   (0x0001)  
	unsigned char                                      UnknownData01_6[0xB];                                       // 0x0045   (0x000B)  MISSED
};

/// Class /Script/DeadByDaylight.DBDHostSettingsParamsBase
/// Size: 0x0010 (0x000030 - 0x000040)
class UDBDHostSettingsParamsBase : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.DBDHostSettingsParamsSessionInvalid
/// Size: 0x0000 (0x000040 - 0x000040)
class UDBDHostSettingsParamsSessionInvalid : public UDBDHostSettingsParamsBase
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDHostSettingsParamsJoinabilityPreset
/// Size: 0x0008 (0x000040 - 0x000048)
class UDBDHostSettingsParamsJoinabilityPreset : public UDBDHostSettingsParamsBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0040   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.DBDHostSettingsParamsRanking
/// Size: 0x0008 (0x000040 - 0x000048)
class UDBDHostSettingsParamsRanking : public UDBDHostSettingsParamsBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0040   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.DBDServerInstance
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UDBDServerInstance : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x68];                                      // 0x0030   (0x0068)  MISSED
	TArray<class UDBDHostSettingsParamsBase*>          _pendingSessionUpdates;                                     // 0x0098   (0x0010)  
	SDK_UNDEFINED(8,2100) /* TWeakObjectPtr<UDBDGameInstance*> */ __um(_gameInstance);                             // 0x00A8   (0x0008)  
};

/// Class /Script/DeadByDaylight.DBDSignificanceStrategy
/// Size: 0x01E0 (0x000030 - 0x000210)
class UDBDSignificanceStrategy : public USignificanceStrategy
{ 
public:
	FBHVRPerDetailModeFloat                            _farDistance;                                               // 0x0030   (0x00A0)  
	FBHVRPerDetailModeFloat                            _auraRevealedMultiplier;                                    // 0x00D0   (0x00A0)  
	FBHVRPerDetailModeFloat                            _auraRevealedMinimumSignificance;                           // 0x0170   (0x00A0)  
};

/// Class /Script/DeadByDaylight.DBDSocialNotificationFactory
/// Size: 0x0040 (0x000030 - 0x000070)
class UDBDSocialNotificationFactory : public UObject
{ 
public:
	SDK_UNDEFINED(8,2101) /* TWeakObjectPtr<UDBDGameInstance*> */ __um(_gameInstance);                             // 0x0030   (0x0008)  
	class UToastManager*                               _toastMgr;                                                  // 0x0038   (0x0008)  
	class UDBDPartyFacade*                             _partyFacade;                                               // 0x0040   (0x0008)  
	class UFriendManager*                              _friendManager;                                             // 0x0048   (0x0008)  
	class UDataTable*                                  _toastTable;                                                // 0x0050   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0058   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.DBDSpecialEventUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDSpecialEventUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDSpecialEventUtilities.DoesPlayerHasEventOffering
	// bool DoesPlayerHasEventOffering(class ADBDPlayer* Player, EOfferingEffectType offeringEffectType);                    // [0x585e0f0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.DBDSpectator
/// Size: 0x0020 (0x0002C0 - 0x0002E0)
class ADBDSpectator : public ASpectatorPawn
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x02C0   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.DBDSpringArmComponent
/// Size: 0x0080 (0x0002A0 - 0x000320)
class UDBDSpringArmComponent : public USpringArmComponent
{ 
public:
	bool                                               bEnableComponentwiseCameraLag : 1;                          // 0x02A0:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x02A1   (0x0003)  MISSED
	FVector                                            ComponenwiseCameraLagSpeed;                                 // 0x02A4   (0x000C)  
	float                                              TargetArmMinLength;                                         // 0x02B0   (0x0004)  
	bool                                               bEnableDistanceCameraLag : 1;                               // 0x02B4:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x02B5   (0x0003)  MISSED
	float                                              CameraDistanceLagSpeed;                                     // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02BC   (0x0004)  MISSED
	bool                                               bDrawDebugTraceMarkers : 1;                                 // 0x02C0:0 (0x0001)  
	unsigned char                                      UnknownData03_4[0x7];                                       // 0x02C1   (0x0007)  MISSED
	SDK_UNDEFINED(16,2102) /* TArray<TWeakObjectPtr<AActor*>> */ __um(ignoreActors);                               // 0x02C8   (0x0010)  
	unsigned char                                      UnknownData04_6[0x48];                                      // 0x02D8   (0x0048)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDSpringArmComponent.IgnoreActor
	// void IgnoreActor(class AActor* Actor, bool bShouldIgnore);                                                            // [0x58619d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDSpringArmComponent.ClearIgnoreActors
	// void ClearIgnoreActors();                                                                                             // [0x585dac0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDSurfaceTypeName
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDSurfaceTypeName : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDSurfaceTypeName.GetSurfaceType
	// TEnumAsByte<EPhysicalSurface> GetSurfaceType(class UPhysicalMaterial* PhysicalMaterial);                              // [0x5860b90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDSurfaceTypeName.GetSurfaceName
	// FString GetSurfaceName(class UPhysicalMaterial* PhysicalMaterial);                                                    // [0x5860ac0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDSurfaceTypeName.ConvertFromPhysicalMaterial
	// FName ConvertFromPhysicalMaterial(class UPhysicalMaterial* Material);                                                 // [0x585db70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDSurfaceTypeName.Convert
	// FName Convert(TEnumAsByte<EPhysicalSurface> SurfaceType);                                                             // [0x585dae0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.DBDTags
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDTags : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDTimerComponent
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class UDBDTimerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x00B8   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDTimerComponent.Update
	// void Update(float DeltaTime);                                                                                         // [0x5862b00] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDTimerComponent.Unpause
	// void Unpause();                                                                                                       // [0x5862ae0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDTimerComponent.Stop
	// void Stop();                                                                                                          // [0x5862a30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDTimerComponent.ResetTo
	// void ResetTo(float Time);                                                                                             // [0x5862450] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDTimerComponent.Reset
	// void Reset();                                                                                                         // [0x5862430] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDTimerComponent.Pause
	// void Pause();                                                                                                         // [0x58621a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDTimerComponent.IsOnPause
	// bool IsOnPause();                                                                                                     // [0x5861e60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDTimerComponent.IsDone
	// bool IsDone();                                                                                                        // [0x5861b90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDTimerComponent.GetTimeLeft
	// float GetTimeLeft();                                                                                                  // [0x5860de0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDTimerComponent.GetTimeElapsed
	// float GetTimeElapsed();                                                                                               // [0x5860db0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDTimerComponent.GetStartTime
	// float GetStartTime();                                                                                                 // [0x5860a90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDTimerComponent.GetPercentTimeLeft
	// float GetPercentTimeLeft();                                                                                           // [0x5860720] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DBDTimerComponent.GetPercentTimeElapsed
	// float GetPercentTimeElapsed();                                                                                        // [0x58606f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.DBDTunableUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDTunableUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDTunableUtilities.GetTunableValue
	// float GetTunableValue(class UObject* WorldContextObject, FName valueName);                                            // [0x5860fb0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDTunableUtilities.GetTunableRowHandleValue
	// float GetTunableRowHandleValue(FDBDTunableRowHandle& rowHandle);                                                      // [0x5860ee0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDTunableUtilities.GetSlasherTunableValue
	// float GetSlasherTunableValue(class UObject* WorldContextObject, FName valueName);                                     // [0x5860910] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDTunableUtilities.GetEndGameTunableValue
	// float GetEndGameTunableValue(class UObject* WorldContextObject, FName valueName);                                     // [0x585ed40] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.DBDUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDUtilities.WithinRangeExclusive
	// bool WithinRangeExclusive(float Min, float Max, float value);                                                         // [0x5862c90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.WithinRange
	// bool WithinRange(float Min, float Max, float value);                                                                  // [0x5862b80] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.ToAngle_negative180to180
	// float ToAngle_negative180to180(float Angle);                                                                          // [0x5862a50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.SphereTraceSingle
	// bool SphereTraceSingle(FVector Start, FVector End, class USphereComponent* Sphere, FHitResult& outHitResult, TArray<AActor*>& IgnoredActors); // [0x5862810] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.SphereTraceAgainstActor
	// bool SphereTraceAgainstActor(FVector Start, FVector End, class USphereComponent* Sphere, class AActor* Actor, FHitResult& outHitResult); // [0x5862620] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.SetComponentCastHiddenShadow
	// void SetComponentCastHiddenShadow(class UPrimitiveComponent* Component, bool CastShadow);                             // [0x5862560] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.ResolveCharacterIdFromPlayerState
	// int32_t ResolveCharacterIdFromPlayerState(class ADBDPlayerState* PlayerState);                                        // [0x58624d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.PrintStringEmbiggened
	// void PrintStringEmbiggened(class UObject* WorldContextObject, FString inString, FLinearColor TextColor, float Duration, int32_t Key, float Scale); // [0x5862250] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.PointerToInt
	// int64_t PointerToInt(class UObject* Obj);                                                                             // [0x58621c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.NormalizeXY
	// bool NormalizeXY(FVector& Vector, float Tolerance);                                                                   // [0x58620b0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.LogString
	// void LogString(FString inStr);                                                                                        // [0x5862020] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.LogMeshMaterialInfo
	// void LogMeshMaterialInfo(FString inStr, class UMeshComponent* Root);                                                  // [0x5861f50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.IsSteamPIEGame
	// bool IsSteamPIEGame(class UObject* contextObject);                                                                    // [0x4c0a230] Final|Native|Static|Public 
	// Function /Script/DeadByDaylight.DBDUtilities.IsServer
	// bool IsServer(class UObject* WorldContextObject);                                                                     // [0x5861ec0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.IsReplaceDisconnectedPlayersWithBotsActive
	// bool IsReplaceDisconnectedPlayersWithBotsActive();                                                                    // [0x5861e90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.IsNonViolent
	// bool IsNonViolent();                                                                                                  // [0x5861e30] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.IsLocallyObservingASurvivor
	// bool IsLocallyObservingASurvivor(class UObject* WorldContextObject);                                                  // [0x5861da0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.IsLocallyObservingAKiller
	// bool IsLocallyObservingAKiller(class UObject* WorldContextObject);                                                    // [0x5861d10] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.IsInTutorialLevel
	// bool IsInTutorialLevel();                                                                                             // [0x5861ce0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.IsInSurvivorTeam
	// bool IsInSurvivorTeam(class UObject* WorldContextObject);                                                             // [0x5861c50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.IsInKillerTeam
	// bool IsInKillerTeam(class UObject* WorldContextObject);                                                               // [0x5861bc0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.IsClassChildOfOtherClasses
	// bool IsClassChildOfOtherClasses(class UClass* classToCheck, TArray<UClass*>& otherClasses);                           // [0x5861aa0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.HasWalkableSurfaceForward
	// bool HasWalkableSurfaceForward(class UObject* WorldContextObject, FVector Location, FVector fowardVector, float distance, float raycastStartHeight, float raycastEndHeight, TArray<FHitResult>& OutHits, FVector& raycastStart); // [0x5861730] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.HasLineOfSightToTarget
	// bool HasLineOfSightToTarget(class UObject* WorldContextObject, FVector& StartPosition, FVector& targetPosition, class AActor* ignoredActor, bool useComplex, bool useDebugLogs); // [0x5861510] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.HasFloorForward
	// bool HasFloorForward(class UObject* WorldContextObject, FVector Location, FVector fowardVector, float distance, float raycastStartHeight, float raycastEndHeight, TArray<FHitResult>& OutHits, FVector& raycastStart); // [0x5861270] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetYawOnly
	// FRotator GetYawOnly(FRotator& Rotation);                                                                              // [0x58611d0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetXYVector
	// FVector GetXYVector(FVector& Vector);                                                                                 // [0x5861130] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetVelocityXYAngleDegrees
	// float GetVelocityXYAngleDegrees(class AActor* Actor);                                                                 // [0x58610a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetTotalPlaytime
	// FTimespan GetTotalPlaytime(class UObject* WorldContextObject, bool Update);                                           // [0x5860e10] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetTileSpawnPoints
	// void GetTileSpawnPoints(TArray<UTileSpawnPoint*>& tileSpawnPoints);                                                   // [0x5860d10] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetThreeClosestGenerators
	// TArray<AGenerator*> GetThreeClosestGenerators(TArray<AGenerator*>& unrevealedGenerators);                             // [0x5860c20] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetSquaredDistanceToKiller
	// float GetSquaredDistanceToKiller(class AActor* Actor);                                                                // [0x5860a00] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetSlasherTunableValue
	// float GetSlasherTunableValue(class UObject* WorldContextObject, FName valueName);                                     // [0x5860910] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetSimilarVector
	// FVector GetSimilarVector(FVector Vector, float maximumDeviation);                                                     // [0x5860820] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetPlayRateForMontage
	// float GetPlayRateForMontage(class UAnimMontage* Montage, float Time);                                                 // [0x5860750] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetPercentOfRange
	// float GetPercentOfRange(float Val, float Min, float Max);                                                             // [0x58605d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetOwningSlasher
	// class ASlasherPlayer* GetOwningSlasher(class UAnimInstance* AnimInstance);                                            // [0x5860540] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetOwningDBDBasePlayer
	// class ADBDBasePlayer* GetOwningDBDBasePlayer(class UAnimInstance* AnimInstance);                                      // [0x58604b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetOwningCamper
	// class ACamperPlayer* GetOwningCamper(class UAnimInstance* AnimInstance);                                              // [0x5860420] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetOuterMostActor
	// class AActor* GetOuterMostActor(class UAnimInstance* AnimInstance);                                                   // [0x5860390] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetNearbyCampers
	// void GetNearbyCampers(class UWorld* World, FVector Center, float Radius, TArray<ACamperPlayer*>& outNearbyCampers, TArray<AActor*>& ignoredCampers); // [0x58601c0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetNearbyActorsOfType
	// bool GetNearbyActorsOfType(class UWorld* World, FVector Center, float Radius, TArray<AActor*>& outNearbyActors, class UClass* actorClassType, TEnumAsByte<ECollisionChannel> CollisionChannel, class AActor* IgnoreActor); // [0x585ff80] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetMontageLength
	// float GetMontageLength(class UAnimMontage* Montage);                                                                  // [0x585fef0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetMaterialHelpersAttachedToPlayerMesh
	// TArray<UMaterialHelper*> GetMaterialHelpersAttachedToPlayerMesh(class ADBDPlayer* Player);                            // [0x585fe20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetLogStringMaterialInfo
	// FString GetLogStringMaterialInfo(FString inStr, class UMaterialInterface* Root);                                      // [0x585fd00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetLocallyObservedCharacterRole
	// EPlayerRole GetLocallyObservedCharacterRole(class UObject* WorldContextObject);                                       // [0x5821220] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetLocallyObservedCharacter
	// class ADBDPlayer* GetLocallyObservedCharacter(class UObject* WorldContextObject);                                     // [0x585fc70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetLocallyControlledSurvivor
	// class ACamperPlayer* GetLocallyControlledSurvivor(class UObject* WorldContextObject);                                 // [0x585fbe0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetLocallyControlledKiller
	// class ASlasherPlayer* GetLocallyControlledKiller(class UObject* WorldContextObject);                                  // [0x585fb50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetLocallyControlledCharacterRole
	// EPlayerRole GetLocallyControlledCharacterRole(class UObject* WorldContextObject);                                     // [0x585fac0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetLocallyControlledCharacter
	// class ADBDPlayer* GetLocallyControlledCharacter(class UObject* WorldContextObject);                                   // [0x585fa30] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetLocalDBDPlayerController
	// class ADBDPlayerControllerBase* GetLocalDBDPlayerController(class UObject* WorldContextObject);                       // [0x585f9a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetLocalDBDCameraManager
	// class ADBDPlayerCameraManager* GetLocalDBDCameraManager(class UObject* WorldContextObject);                           // [0x585f910] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetInventoryCountForMultipleCharacters
	// int32_t GetInventoryCountForMultipleCharacters(class UObject* WorldContextObject, TArray<int32_t> characterIndexes, FName ItemId); // [0x585f7a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetInventoryCount
	// int32_t GetInventoryCount(class UObject* WorldContextObject, int32_t CharacterIndex, FName ItemId);                   // [0x585f670] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetImpactCollisionResponseContainer
	// FCollisionResponseContainer GetImpactCollisionResponseContainer(class UPrimitiveComponent* Primitive);                // [0x585f5d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetImpactCollisionObjectType
	// TEnumAsByte<ECollisionChannel> GetImpactCollisionObjectType(class UPrimitiveComponent* Primitive);                    // [0x585f540] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetFormattedNumberText
	// FText GetFormattedNumberText(float value, int32_t maxDecimals, int32_t minDecimals, bool leadingZero);                // [0x585f380] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetFormattedNumberString
	// FString GetFormattedNumberString(float value, int32_t maxDecimals, int32_t minDecimals, bool leadingZero);            // [0x585f1d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetFloorLocationAt
	// FVector GetFloorLocationAt(class UObject* WorldContextObject, FVector Location, float raycastStartHeight, float raycastEndHeight, bool useComplex); // [0x585f020] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetFirstActorWithTag
	// class AActor* GetFirstActorWithTag(FName Tag, TArray<AActor*>& actorsArray);                                          // [0x585ef20] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetEndGameTunableValue
	// float GetEndGameTunableValue(class UObject* WorldContextObject, FName valueName);                                     // [0x585ee30] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetDistanceToNearestHookedSurvivor
	// float GetDistanceToNearestHookedSurvivor(class ADBDPlayer* Player);                                                   // [0x585ecb0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetDBDGameState
	// class ADBDGameState* GetDBDGameState(class UObject* WorldContextObject);                                              // [0x585ec20] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetDBDGameMode
	// class ADBDGameMode* GetDBDGameMode(class UObject* WorldContextObject);                                                // [0x585eb90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetDBDGameInstance
	// class UDBDGameInstance* GetDBDGameInstance(class UObject* WorldContextObject);                                        // [0x585eb00] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetDBDAIPlayerController
	// class ADBDAIPlayerController* GetDBDAIPlayerController(class ADBDPlayer* Player);                                     // [0x585ea70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetComponentOwnerName
	// FString GetComponentOwnerName(class UActorComponent* ActorComponent);                                                 // [0x585e9a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetClosestSnapTransformOnOrbit
	// FTransform GetClosestSnapTransformOnOrbit(FVector& centerPoint, FVector& orbitterPosition, float distance);           // [0x585e830] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetClosestPointOnOrbit
	// FVector GetClosestPointOnOrbit(FVector& centerPoint, FVector& orbitterPosition, float distance);                      // [0x585e6f0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetBuilder
	// class AProceduralLevelBuilder* GetBuilder(class UObject* WorldContextObject);                                         // [0x585e660] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetAnimSequenceLength
	// float GetAnimSequenceLength(class UAnimSequence* Sequence);                                                           // [0x585e5d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetActorSpawners
	// void GetActorSpawners(TArray<UActorSpawner*>& actorSpawners);                                                         // [0x585e530] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.GetActorOwnerName
	// FString GetActorOwnerName(class AActor* Actor);                                                                       // [0x585e460] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.GetActiveShadowSystem
	// EShadowSystem GetActiveShadowSystem();                                                                                // [0x585e430] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.FindParentOfClass
	// class AActor* FindParentOfClass(class AActor* InChild, class UClass* InClass);                                        // [0x585e360] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.FindFloorSingle
	// bool FindFloorSingle(class UObject* WorldContextObject, FVector& Location, float raycastLength, FHitResult& OutHit);  // [0x585e1c0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.DistanceFromPointToPane
	// float DistanceFromPointToPane(FVector Point, FPlane Plane);                                                           // [0x585e010] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.DBDCapsuleTraceSingle
	// bool DBDCapsuleTraceSingle(class UObject* WorldContextObject, FVector Start, FVector End, float Radius, float HalfHeight, TEnumAsByte<ECollisionChannel> TraceChannel, bool bTraceComplex, TArray<AActor*>& ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, FHitResult& OutHit, bool bIgnoreSelf); // [0x585dc30] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.CrashGameCausingInterrupt
	// void CrashGameCausingInterrupt();                                                                                     // [0x585dc10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilities.BoxTraceAgainstActor
	// bool BoxTraceAgainstActor(FVector Start, FVector End, class UBoxComponent* Box, class AActor* Actor, FHitResult& outHitResult); // [0x585d8d0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilities.AddComponentToActor
	// class UActorComponent* AddComponentToActor(class UClass* compClass, FName compName, class AActor* Actor);             // [0x585d7a0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDUtilTimer
/// Size: 0x0000 (0x000030 - 0x000030)
class UDBDUtilTimer : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DBDUtilTimer.Update
	// void Update(FDBDTimer& Timer, float DeltaTime);                                                                       // [0x5867940] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilTimer.Stop
	// void Stop(FDBDTimer& Timer);                                                                                          // [0x58678b0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilTimer.ResetTo
	// void ResetTo(FDBDTimer& Timer, float Time);                                                                           // [0x5867550] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilTimer.Reset
	// void Reset(FDBDTimer& Timer);                                                                                         // [0x58674c0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.DBDUtilTimer.IsDone
	// bool IsDone(FDBDTimer& Timer);                                                                                        // [0x58670f0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilTimer.GetTimeLeft
	// float GetTimeLeft(FDBDTimer& Timer);                                                                                  // [0x5867050] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilTimer.GetTimeElapsed
	// float GetTimeElapsed(FDBDTimer& Timer);                                                                               // [0x5866fb0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilTimer.GetStartTime
	// float GetStartTime(FDBDTimer& Timer);                                                                                 // [0x5866f10] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilTimer.GetPercentTimeLeft
	// float GetPercentTimeLeft(FDBDTimer& Timer);                                                                           // [0x5866e40] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.DBDUtilTimer.GetPercentTimeElapsed
	// float GetPercentTimeElapsed(FDBDTimer& Timer);                                                                        // [0x5866da0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.DecalMaskedMaterialsList
/// Size: 0x0060 (0x000038 - 0x000098)
class UDecalMaskedMaterialsList : public UDataAsset
{ 
public:
	class UStaticMesh*                                 decalPlaneStaticMesh;                                       // 0x0038   (0x0008)  
	float                                              decalPlaneExtent;                                           // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	SDK_UNDEFINED(80,2103) /* TMap<FName, UMaterialInterface*> */ __um(decalMaskedMaterials);                      // 0x0048   (0x0050)  
};

/// Class /Script/DeadByDaylight.DecalCollection
/// Size: 0x0120 (0x000030 - 0x000150)
class UDecalCollection : public UObject
{ 
public:
	TArray<class UDBDDecalComponent*>                  _decalComponentsArray;                                      // 0x0030   (0x0010)  
	SDK_UNDEFINED(80,2104) /* TSet<UDBDDecalComponent*> */ __um(_activeDecalComponents);                           // 0x0040   (0x0050)  
	SDK_UNDEFINED(80,2105) /* TSet<UDBDDecalComponent*> */ __um(_inactiveDecalComponents);                         // 0x0090   (0x0050)  
	TArray<bool>                                       _DeltaZPool;                                                // 0x00E0   (0x0010)  
	SDK_UNDEFINED(80,2106) /* TMap<UStaticMeshComponent*, int32_t> */ __um(_deltaZMultipliers);                    // 0x00F0   (0x0050)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0140   (0x0008)  MISSED
	class UDecalMaskedMaterialsList*                   _decalProperties;                                           // 0x0148   (0x0008)  
};

/// Class /Script/DeadByDaylight.DecalSpawner
/// Size: 0x0018 (0x000030 - 0x000048)
class UDecalSpawner : public UObject
{ 
public:
	class UDecalCollection*                            _decalCollection;                                           // 0x0030   (0x0008)  
	class USpawnerStrategy*                            _spawnerStrategy;                                           // 0x0038   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0040   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DecalSpawner.GetSpawnerStrategy
	// class USpawnerStrategy* GetSpawnerStrategy();                                                                         // [0x5866ee0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DecalSpawnerCollection
/// Size: 0x0050 (0x000030 - 0x000080)
class UDecalSpawnerCollection : public UObject
{ 
public:
	SDK_UNDEFINED(80,2107) /* TMap<FName, UDecalSpawner*> */ __um(_decalSpawners);                                 // 0x0030   (0x0050)  


	/// Functions
	// Function /Script/DeadByDaylight.DecalSpawnerCollection.SpawnDecalAtLocation
	// class UDBDDecalComponent* SpawnDecalAtLocation(FName decalSpawnerName, FVector& DecalSize, FVector& Location, FRotator& Rotation, float LifeSpan, FName decalType, int32_t SortOrder); // [0x5867630] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.DecalSpawnerCollection.ReleaseDecalSpawner
	// void ReleaseDecalSpawner(FName decalSpawnerName);                                                                     // [0x5867420] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DecalSpawnerCollection.CreateDecalSpawner
	// class UDecalSpawner* CreateDecalSpawner(class UObject* WorldContextObject, FName decalSpawnerName, class UMaterialInterface* DecalMaterial, int32_t PoolSize, ESpawnerStrategyType spawnerStrateryType); // [0x5866a00] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.AtlantaRitualDifficulty
/// Size: 0x000C (0x000000 - 0x00000C)
struct FAtlantaRitualDifficulty
{ 
	float                                              Threshold;                                                  // 0x0000   (0x0004)  
	float                                              Tolerance;                                                  // 0x0004   (0x0004)  
	float                                              DisplayThreshold;                                           // 0x0008   (0x0004)  
};

/// Struct /Script/DeadByDaylight.AtlantaRitualInstance
/// Size: 0x0060 (0x000000 - 0x000060)
struct FAtlantaRitualInstance
{ 
	FName                                              RitualKey;                                                  // 0x0000   (0x000C)  
	int32_t                                            characterId;                                                // 0x000C   (0x0004)  
	EPlayerRole                                        Role;                                                       // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	TArray<EDBDScoreTypes>                             TrackedEvents;                                              // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,2108) /* TArray<FString> */       __um(TrackedGameEvents);                                    // 0x0028   (0x0010)  
	class UAtlantaRitualEvaluatorBase*                 Evaluator;                                                  // 0x0038   (0x0008)  
	FAtlantaRitualDifficulty                           Difficulty;                                                 // 0x0040   (0x000C)  
	float                                              progress;                                                   // 0x004C   (0x0004)  
	bool                                               Active;                                                     // 0x0050   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0051   (0x0007)  MISSED
	FDateTime                                          ExpiryDate;                                                 // 0x0058   (0x0008)  
};

/// Struct /Script/DeadByDaylight.AtlantaRitualSet
/// Size: 0x0038 (0x000000 - 0x000038)
struct FAtlantaRitualSet
{ 
	TArray<FAtlantaRitualInstance>                     Instances;                                                  // 0x0000   (0x0010)  
	TArray<FRewardItem>                                RewardItems;                                                // 0x0010   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0020   (0x0018)  MISSED
};

/// Struct /Script/DeadByDaylight.DailyRitualInstance
/// Size: 0x0078 (0x000000 - 0x000078)
struct FDailyRitualInstance
{ 
	SDK_UNDEFINED(16,2109) /* FString */               __um(ritualId);                                             // 0x0000   (0x0010)  
	TArray<EDBDScoreTypes>                             TrackedEvents;                                              // 0x0010   (0x0010)  
	TArray<FGameplayTag>                               TrackedGameEvents;                                          // 0x0020   (0x0010)  
	TArray<int32_t>                                    CharacterIDs;                                               // 0x0030   (0x0010)  
	TArray<EPlayerRole>                                Roles;                                                      // 0x0040   (0x0010)  
	float                                              progress;                                                   // 0x0050   (0x0004)  
	float                                              Threshold;                                                  // 0x0054   (0x0004)  
	float                                              Tolerance;                                                  // 0x0058   (0x0004)  
	float                                              DisplayThreshold;                                           // 0x005C   (0x0004)  
	float                                              ExpReward;                                                  // 0x0060   (0x0004)  
	bool                                               Active;                                                     // 0x0064   (0x0001)  
	bool                                               IsTemporary;                                                // 0x0065   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0066   (0x0002)  MISSED
	FDateTime                                          DateAssigned;                                               // 0x0068   (0x0008)  
	class URitualEvaluatorBase*                        Evaluator;                                                  // 0x0070   (0x0008)  
};

/// Class /Script/DeadByDaylight.DedicatedServerHandlerComponent
/// Size: 0x0058 (0x0000B8 - 0x000110)
class UDedicatedServerHandlerComponent : public UActorComponent
{ 
public:
	FAtlantaRitualSet                                  _atlantaRituals;                                            // 0x00B8   (0x0038)  
	TArray<FDailyRitualInstance>                       _coreRituals;                                               // 0x00F0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0100   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DedicatedServerHandlerComponent.ReceiveGameEvent
	// void ReceiveGameEvent(EDBDScoreTypes scoreType, float Amount, class AActor* Instigator, class AActor* Target);        // [0x58672c0] Final|Native|Public  
	// Function /Script/DeadByDaylight.DedicatedServerHandlerComponent.OnGameEvent
	// void OnGameEvent(FGameplayTag gameEventType, FGameEventData& GameEventData);                                          // [0x5867190] Final|Native|Public|HasOutParms 
};

/// Class /Script/DeadByDaylight.DedicatedServerManager
/// Size: 0x0048 (0x000038 - 0x000080)
class UDedicatedServerManager : public UGameInstanceSubsystem
{ 
public:
	SDK_UNDEFINED(16,2110) /* TScriptInterface<Class> */ __um(_startupInitializer);                                // 0x0038   (0x0010)  
	class UOnlineSystemHandler*                        _onlineSystemHandler;                                       // 0x0048   (0x0008)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x0050   (0x0030)  MISSED
};

/// Class /Script/DeadByDaylight.DedicatedServerStartupInitializerInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UDedicatedServerStartupInitializerInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.DemogorgonAnimProxy
/// Size: 0x0000 (0x000030 - 0x000030)
class UDemogorgonAnimProxy : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.SearchableItemStrategy
/// Size: 0x0008 (0x000030 - 0x000038)
class USearchableItemStrategy : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.DesignTunablesSearchableItemStrategy
/// Size: 0x0010 (0x000038 - 0x000048)
class UDesignTunablesSearchableItemStrategy : public USearchableItemStrategy
{ 
public:
	EItemRarity                                        ItemRarity;                                                 // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	FName                                              _itemIdToSpawn;                                             // 0x003C   (0x000C)  
};

/// Class /Script/DeadByDaylight.DestroyBreakableDefinition
/// Size: 0x0060 (0x000650 - 0x0006B0)
class UDestroyBreakableDefinition : public UInteractionDefinition
{ 
public:
	float                                              _interactionTimePercentForDestroyEvent;                     // 0x0648   (0x0004)  
	unsigned char                                      UnknownData00_5[0x2C];                                      // 0x064C   (0x002C)  MISSED
	class ABreakableBase*                              _breakable;                                                 // 0x0678   (0x0008)  
	FDBDTunableRowHandle                               _fastInteractionAnimThreshold;                              // 0x0680   (0x0028)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x06A8   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DestroyBreakableDefinition.GetBreakable
	// class ABreakableBase* GetBreakable();                                                                                 // [0x5866d70] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.DetectionZoneUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UDetectionZoneUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DetectionZoneUtilities.DetectObstruction
	// bool DetectObstruction(class ADBDPlayer* Player, EDetectionZone detectionZoneID, class UPhysicalMaterial*& physicalMaterialOut, FVector& positionOut, FVector& normalOut); // [0x5866ba0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
};

/// Struct /Script/DeadByDaylight.DialogClipSettings
/// Size: 0x0028 (0x000000 - 0x000028)
struct FDialogClipSettings
{ 
	class UAkAudioEvent*                               Clip;                                                       // 0x0000   (0x0008)  
	class UClass*                                      ConditionClass;                                             // 0x0008   (0x0008)  
	class UDialogHandlerCondition*                     Condition;                                                  // 0x0010   (0x0008)  
	int32_t                                            Priority;                                                   // 0x0018   (0x0004)  
	int32_t                                            Weight;                                                     // 0x001C   (0x0004)  
	bool                                               IsOnlyPlayingOnce;                                          // 0x0020   (0x0001)  
	bool                                               HasSubtitles;                                               // 0x0021   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0022   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.DialogEventSettings
/// Size: 0x0030 (0x000000 - 0x000030)
struct FDialogEventSettings
{ 
	FGameplayTag                                       GameEventTrigger;                                           // 0x0000   (0x000C)  
	EDialogConditionSubject                            ConditionSubject;                                           // 0x000C   (0x0001)  
	bool                                               OnlyPlayIfLocallyObserved;                                  // 0x000D   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x000E   (0x0002)  MISSED
	TArray<FDialogClipSettings>                        Clips;                                                      // 0x0010   (0x0010)  
	bool                                               OverrideCurrentAudio;                                       // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0021   (0x0003)  MISSED
	float                                              DelayUntilPlay;                                             // 0x0024   (0x0004)  
	float                                              PlayProbability;                                            // 0x0028   (0x0004)  
	int32_t                                            EventPriority;                                              // 0x002C   (0x0004)  
};

/// Class /Script/DeadByDaylight.DialogHandlerComponent
/// Size: 0x00F8 (0x0000B8 - 0x0001B0)
class UDialogHandlerComponent : public UActorComponent
{ 
public:
	float                                              _minimumDelayBetweenDialog;                                 // 0x00B8   (0x0004)  
	float                                              _maxSubtitleDistance;                                       // 0x00BC   (0x0004)  
	TArray<FDialogEventSettings>                       _dialogEvents;                                              // 0x00C0   (0x0010)  
	TArray<FGameplayTag>                               _stopAudioGameplayEvents;                                   // 0x00D0   (0x0010)  
	FGameplayTagQuery                                  _allowingDialogueStartStateTagQuery;                        // 0x00E0   (0x0048)  
	class UAkAudioEvent*                               _stopAudioClip;                                             // 0x0128   (0x0008)  
	unsigned char                                      UnknownData00_6[0x80];                                      // 0x0130   (0x0080)  MISSED
};

/// Class /Script/DeadByDaylight.DialogHandlerCondition
/// Size: 0x0000 (0x000030 - 0x000030)
class UDialogHandlerCondition : public UObject
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.DialogHandlerCondition.IsTrue
	// bool IsTrue(FGameplayTag gameEventType, FGameEventData& GameEventData);                                               // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.DirectionalMinigameComponent
/// Size: 0x0068 (0x0000B8 - 0x000120)
class UDirectionalMinigameComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x00B8   (0x0020)  MISSED
	class ACamperPlayer*                               _currentlyEngagedSurvivor;                                  // 0x00D8   (0x0008)  
	TArray<EDirectionalInputKey>                       _currentSequence;                                           // 0x00E0   (0x0010)  
	bool                                               _isInProgress;                                              // 0x00F0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x00F1   (0x0003)  MISSED
	int32_t                                            _currentKeyIndex;                                           // 0x00F4   (0x0004)  
	FDirectionalMiniGameDefinition                     _miniGameDefinition;                                        // 0x00F8   (0x0020)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0118   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DirectionalMinigameComponent.Server_EnterKey
	// void Server_EnterKey(EDirectionalInputKey enteredKey);                                                                // [0x57e89b0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DirectionalMinigameComponent.Server_CancelMinigame
	// void Server_CancelMinigame();                                                                                         // [0x4dd4860] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DirectionalMinigameComponent.OnRep_IsInProgress
	// void OnRep_IsInProgress();                                                                                            // [0x58672a0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DirectionalMinigameComponent.Authority_StartMinigameForSurvivor
	// void Authority_StartMinigameForSurvivor(class ACamperPlayer* Survivor, FDirectionalMiniGameDefinition& miniGameDefinition); // [0x5866900] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DirectionalMinigameSurvivorComponent
/// Size: 0x0068 (0x0000B8 - 0x000120)
class UDirectionalMinigameSurvivorComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x68];                                      // 0x00B8   (0x0068)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DirectionalMinigameSurvivorComponent.Server_EnterKey
	// void Server_EnterKey(class UDirectionalMinigameComponent* directionalMinigame, EDirectionalInputKey Key);             // [0x57f4560] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DirectionalMinigameSurvivorComponent.Server_CancelMinigame
	// void Server_CancelMinigame(class UDirectionalMinigameComponent* directionalMinigame);                                 // [0x505fd60] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.DirectionalMinigameSurvivorComponent.Client_StopInteraction
	// void Client_StopInteraction(class UDirectionalMinigameComponent* directionalMinigame, EDirectionalMinigameResult Result); // [0x586e020] Net|NetReliableNative|Event|Public|NetClient 
};

/// Class /Script/DeadByDaylight.DisableOutlineComponent
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UDisableOutlineComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	TArray<FGameplayTag>                               _enableOutlineEvents;                                       // 0x00D0   (0x0010)  
};

/// Class /Script/DeadByDaylight.DisableTerrorRadiusAudioGameplayMutator
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UDisableTerrorRadiusAudioGameplayMutator : public UGameplayMutator
{ 
public:
	bool                                               _isInitialized;                                             // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B9   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DisableTerrorRadiusAudioGameplayMutator.OnRep_IsInitialized
	// void OnRep_IsInitialized();                                                                                           // [0x586e680] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.DischargeUntilThresholdIsReachedComponent
/// Size: 0x0058 (0x0000B8 - 0x000110)
class UDischargeUntilThresholdIsReachedComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	FDBDTunableRowHandle                               _threshold;                                                 // 0x00D0   (0x0028)  
	class UChargeableComponent*                        _chargeableComponent;                                       // 0x00F8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0100   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DischargeUntilThresholdIsReachedComponent.OnChargePercentChanged
	// void OnChargePercentChanged(class UChargeableComponent* ChargeableComponent, float TotalPercentComplete);             // [0x586e2f0] Final|Native|Private 
	// Function /Script/DeadByDaylight.DischargeUntilThresholdIsReachedComponent.Authority_OnChargePercentChanged
	// void Authority_OnChargePercentChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete); // [0x586de80] Final|Native|Private 
};

/// Struct /Script/DeadByDaylight.GeneratorQueryHandlePair
/// Size: 0x0028 (0x000000 - 0x000028)
struct FGeneratorQueryHandlePair
{ 
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0000   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.DiscordancePerk
/// Size: 0x0060 (0x0003C8 - 0x000428)
class UDiscordancePerk : public UPerk
{ 
public:
	TArray<FGeneratorQueryHandlePair>                  _generatorQueryHandlePairs;                                 // 0x03C8   (0x0010)  
	unsigned char                                      UnknownData00_5[0x30];                                      // 0x03D8   (0x0030)  MISSED
	float                                              _effectRange;                                               // 0x0408   (0x000C)  
	float                                              _auraLingerDuration;                                        // 0x0414   (0x0004)  
	int32_t                                            _numSurvivorsRepairingToReveal;                             // 0x0418   (0x0004)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x041C   (0x0001)  MISSED
	bool                                               _isPerkConsideredActive;                                    // 0x041D   (0x0001)  
	unsigned char                                      UnknownData02_6[0xA];                                       // 0x041E   (0x000A)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DiscordancePerk.Multicast_AddLingeringGeneratorAura
	// void Multicast_AddLingeringGeneratorAura(class AGenerator* Generator);                                                // [0x4ff91d0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DiscordancePerk.Multicast_AddGeneratorAura
	// void Multicast_AddGeneratorAura(class AGenerator* Generator);                                                         // [0x586e260] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.DiscordancePerk.GetEffectRangeAtLevel
	// float GetEffectRangeAtLevel();                                                                                        // [0x586e110] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.DiscordancePerk.GetAuraLingerDuration
	// float GetAuraLingerDuration();                                                                                        // [0x586e0f0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.DisplayStandCharmRequesterComponent
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UDisplayStandCharmRequesterComponent : public UActorComponent
{ 
public:
	class UClass*                                      _menuCharmClass;                                            // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x00C0   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DisplayStandCharmRequesterComponent.OnCharmDisplayed
	// void OnCharmDisplayed(class AActor* Actor);                                                                           // [0x586e3c0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.DisplayStandController
/// Size: 0x0160 (0x000030 - 0x000190)
class UDisplayStandController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x160];                                     // 0x0030   (0x0160)  MISSED
};

/// Class /Script/DeadByDaylight.DisplayStandCurrencyRequesterComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UDisplayStandCurrencyRequesterComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00B8   (0x0008)  MISSED
	class UClass*                                      _menuCurrencyDisplayableClass;                              // 0x00C0   (0x0008)  
};

/// Class /Script/DeadByDaylight.DisplayStandItemRequesterComponent
/// Size: 0x0058 (0x0000B8 - 0x000110)
class UDisplayStandItemRequesterComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x00B8   (0x0058)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DisplayStandItemRequesterComponent.LoadItemsOnCharacter
	// void LoadItemsOnCharacter(class AActor* Actor);                                                                       // [0x586e1d0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.DisplayStandMeatHookRequesterComponent
/// Size: 0x0018 (0x0000B8 - 0x0000D0)
class UDisplayStandMeatHookRequesterComponent : public UActorComponent
{ 
public:
	class UClass*                                      _meatHookClass;                                             // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00C0   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.DistanceCheckPawnLocationOverride
/// Size: 0x0000 (0x000030 - 0x000030)
class UDistanceCheckPawnLocationOverride : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.DlcHelper
/// Size: 0x0000 (0x000030 - 0x000030)
class UDlcHelper : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.DLCManager
/// Size: 0x0060 (0x000038 - 0x000098)
class UDLCManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0038   (0x0060)  MISSED
};

/// Class /Script/DeadByDaylight.DoctorPowerAnimStateComponent
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UDoctorPowerAnimStateComponent : public UActorComponent
{ 
public:
	EDoctorAbilityType                                 _abilityType;                                               // 0x00B8   (0x0001)  
	EDoctorAbilityPhase                                _abilityPhase;                                              // 0x00B9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00BA   (0x0006)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DoctorPowerAnimStateComponent.SetCurrentAbilityType
	// void SetCurrentAbilityType(EDoctorAbilityType abilityType);                                                           // [0x586e720] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.DoctorPowerAnimStateComponent.SetCurrentAbilityPhase
	// void SetCurrentAbilityPhase(EDoctorAbilityPhase abilityPhase);                                                        // [0x586e6a0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DragDropOperation_Widget
/// Size: 0x00B8 (0x000090 - 0x000148)
class UDragDropOperation_Widget : public UDragDropOperation
{ 
public:
	class UUMGDragWidget*                              Widget;                                                     // 0x0090   (0x0008)  
	class UPanelWidget*                                WidgetParent;                                               // 0x0098   (0x0008)  
	FVector2D                                          StartPosition;                                              // 0x00A0   (0x0008)  
	FVector2D                                          WidgetLocalScale;                                           // 0x00A8   (0x0008)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x00B0   (0x0018)  MISSED
	float                                              WidgetLocalOpacity;                                         // 0x00C8   (0x0004)  
	FVector2D                                          OnDropOffset;                                               // 0x00CC   (0x0008)  
	FVector2D                                          OnDragOffset;                                               // 0x00D4   (0x0008)  
	FAnchors                                           WidgetSlotAnchors;                                          // 0x00DC   (0x0010)  
	FMargin                                            WidgetSlotOffsets;                                          // 0x00EC   (0x0010)  
	FVector2D                                          WidgetSlotPosition;                                         // 0x00FC   (0x0008)  
	FVector2D                                          WidgetSlotSize;                                             // 0x0104   (0x0008)  
	bool                                               WidgetSlotAutoSize;                                         // 0x010C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x010D   (0x0003)  MISSED
	FVector2D                                          WidgetSlotAlignment;                                        // 0x0110   (0x0008)  
	int32_t                                            WidgetSlotZOrder;                                           // 0x0118   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x011C   (0x0004)  MISSED
	class UUMGDragWidget*                              ChildLinkWidget;                                            // 0x0120   (0x0008)  
	unsigned char                                      UnknownData03_6[0x20];                                      // 0x0128   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.VaultableOutlineUpdateStrategy
/// Size: 0x0008 (0x000158 - 0x000160)
class UVaultableOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{ 
public:
	bool                                               _canBeRevealedToLocalPlayer;                                // 0x0158   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0159   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.VaultableOutlineUpdateStrategy.SetCanBeRevealedToLocalPlayer
	// void SetCanBeRevealedToLocalPlayer(bool canBeRevealedToLocalPlayer);                                                  // [0x5965280] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PalletOutlineUpdateStrategy
/// Size: 0x0010 (0x000160 - 0x000170)
class UPalletOutlineUpdateStrategy : public UVaultableOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       _revealedByPowerColor;                                      // 0x0160   (0x0010)  
};

/// Class /Script/DeadByDaylight.DreamPalletOutlineUpdateStrategy
/// Size: 0x0028 (0x000170 - 0x000198)
class UDreamPalletOutlineUpdateStrategy : public UPalletOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       _revealedByMapColor;                                        // 0x0170   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0180   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DreamPalletOutlineUpdateStrategy.InitializeTunableValues
	// void InitializeTunableValues(class ASlasherPlayer* killer);                                                           // [0x586e140] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.DreamSnareOutlineUpdateStrategy
/// Size: 0x0018 (0x000100 - 0x000118)
class UDreamSnareOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0100   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.ObjectPlacementValidationStrategy
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UObjectPlacementValidationStrategy : public UActorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.DefaultObjectPlacementValidationStrategy
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UDefaultObjectPlacementValidationStrategy : public UObjectPlacementValidationStrategy
{ 
public:
	FVector                                            _objectPlacementRaycastStart;                               // 0x00B8   (0x000C)  
	FVector                                            _objectPlacementRaycastEnd;                                 // 0x00C4   (0x000C)  
	FFloatRange                                        _objectHeightRangeAroundBaseLocation;                       // 0x00D0   (0x0010)  
};

/// Class /Script/DeadByDaylight.DreamSnareTrapPlacementValidationStrategy
/// Size: 0x0010 (0x0000E0 - 0x0000F0)
class UDreamSnareTrapPlacementValidationStrategy : public UDefaultObjectPlacementValidationStrategy
{ 
public:
	float                                              _numberOfGroundTest;                                        // 0x00E0   (0x0004)  
	float                                              _trapRadius;                                                // 0x00E4   (0x0004)  
	float                                              _maxElevationDifferentialOnTrapEdge;                        // 0x00E8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00EC   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.DreamworldOnlyComponent
/// Size: 0x0010 (0x000220 - 0x000230)
class UDreamworldOnlyComponent : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0220   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.DynamicGrass
/// Size: 0x0018 (0x000230 - 0x000248)
class ADynamicGrass : public AActor
{ 
public:
	class UMaterialParameterCollection*                _worldSettings;                                             // 0x0230   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0238   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.DynamicGrassEffectorInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UDynamicGrassEffectorInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.EdgeObjectHandlingStrategy
/// Size: 0x0128 (0x000030 - 0x000158)
class UEdgeObjectHandlingStrategy : public UObject
{ 
public:
	TArray<class UActorSpawner*>                       _edgeObjectSpawners;                                        // 0x0030   (0x0010)  
	TArray<class UActorSpawner*>                       _edgeObjectBlockers;                                        // 0x0040   (0x0010)  
	unsigned char                                      UnknownData00_6[0x108];                                     // 0x0050   (0x0108)  MISSED
};

/// Class /Script/DeadByDaylight.EditorActorVisualization
/// Size: 0x0060 (0x000220 - 0x000280)
class UEditorActorVisualization : public USceneComponent
{ 
public:
	SDK_UNDEFINED(48,2111) /* TWeakObjectPtr<UClass*> */ __um(ActorVisualization);                                 // 0x0218   (0x0030)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0248   (0x0008)  MISSED
	FTransform                                         RelativeTransform;                                          // 0x0250   (0x0030)  
};

/// Class /Script/DeadByDaylight.EditorMeshVisualization
/// Size: 0x0060 (0x000220 - 0x000280)
class UEditorMeshVisualization : public USceneComponent
{ 
public:
	SDK_UNDEFINED(48,2112) /* TWeakObjectPtr<USkeletalMesh*> */ __um(MeshVisualization);                           // 0x0218   (0x0030)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0248   (0x0008)  MISSED
	FTransform                                         RelativeTransform;                                          // 0x0250   (0x0030)  
};

/// Struct /Script/DeadByDaylight.EffectsLocatorTargets
/// Size: 0x0008 (0x000000 - 0x000008)
struct FEffectsLocatorTargets
{ 
	class UClass*                                      TargetActorClass;                                           // 0x0000   (0x0008)  
};

/// Class /Script/DeadByDaylight.EffectsLocator
/// Size: 0x0068 (0x000230 - 0x000298)
class AEffectsLocator : public AActor
{ 
public:
	TArray<FEffectsLocatorTargets>                     AffectedActors;                                             // 0x0230   (0x0010)  
	float                                              ActorCaptureRadius;                                         // 0x0240   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0244   (0x0004)  MISSED
	SDK_UNDEFINED(80,2113) /* TSet<AActor*> */         __um(_encountered);                                         // 0x0248   (0x0050)  


	/// Functions
	// Function /Script/DeadByDaylight.EffectsLocator.OnLostActor
	// void OnLostActor(class AActor* lostActor);                                                                            // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.EffectsLocator.OnLeaveCollisionArea
	// void OnLeaveCollisionArea(class AActor* OverlappedActor, class AActor* OtherActor);                                   // [0x586e5b0] Final|Native|Public  
	// Function /Script/DeadByDaylight.EffectsLocator.OnFoundActor
	// void OnFoundActor(class AActor* foundActor);                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.EffectsLocator.OnEnterCollisionArea
	// void OnEnterCollisionArea(class AActor* OverlappedActor, class AActor* OtherActor);                                   // [0x586e4e0] Final|Native|Public  
	// Function /Script/DeadByDaylight.EffectsLocator.OnActorTick
	// void OnActorTick(class UMaterialInstanceDynamic* actorMaterialInstanceDynamic);                                       // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.EmblemRankContainer
/// Size: 0x0210 (0x000038 - 0x000248)
class UEmblemRankContainer : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x210];                                     // 0x0038   (0x0210)  MISSED
};

/// Class /Script/DeadByDaylight.EmblemRankUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UEmblemRankUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.EmblemTooltipWidget
/// Size: 0x0058 (0x000370 - 0x0003C8)
class UEmblemTooltipWidget : public UBaseTooltipWidget
{ 
public:
	class UImage*                                      HeaderBackground;                                           // 0x0370   (0x0008)  
	class UTextBlock*                                  SubTitleLabel;                                              // 0x0378   (0x0008)  
	class UImage*                                      HeaderSmoke;                                                // 0x0380   (0x0008)  
	class UVerticalBox*                                DataContainer;                                              // 0x0388   (0x0008)  
	class UUMGTallyEmblemProgressBar*                  TallyEmblemProgressBar;                                     // 0x0390   (0x0008)  
	SDK_UNDEFINED(48,2114) /* TWeakObjectPtr<UClass*> */ __um(ProgressionDataWidgetClass);                         // 0x0398   (0x0030)  
};

/// Class /Script/DeadByDaylight.EndGameComponent
/// Size: 0x00A0 (0x0000B8 - 0x000158)
class UEndGameComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x00B8   (0x00A0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.EndGameComponent.UnpauseEndGameTimer
	// void UnpauseEndGameTimer();                                                                                           // [0x5873140] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.EndGameComponent.StartEndGame_Cheat
	// void StartEndGame_Cheat();                                                                                            // [0x5873120] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.EndGameComponent.PauseEndGameTimer
	// void PauseEndGameTimer();                                                                                             // [0x5872cf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.EndGameComponent.GetHasEndGameBegun
	// bool GetHasEndGameBegun();                                                                                            // [0x4dc87d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EndGameComponent.FireEndGameSacrificeScoreEvent
	// void FireEndGameSacrificeScoreEvent(FGameEventData GameEventData);                                                    // [0x5872100] Final|Native|Private 
	// Function /Script/DeadByDaylight.EndGameComponent.DisableEndGameScenario
	// void DisableEndGameScenario();                                                                                        // [0x58720e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.EndGameEntity
/// Size: 0x0008 (0x000230 - 0x000238)
class AEndGameEntity : public AActor
{ 
public:
	class UDBDSkeletalMeshComponentBudgeted*           _skeletalMeshComponent;                                     // 0x0230   (0x0008)  
};

/// Class /Script/DeadByDaylight.EndGameEntityAnimInstance
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UEndGameEntityAnimInstance : public UAnimInstance
{ 
public:
	bool                                               _isFront;                                                   // 0x02C0   (0x0001)  
	bool                                               _isBack;                                                    // 0x02C1   (0x0001)  
	unsigned char                                      UnknownData00_6[0xE];                                       // 0x02C2   (0x000E)  MISSED
};

/// Class /Script/DeadByDaylight.EndGameStateComponent
/// Size: 0x0068 (0x0000B8 - 0x000120)
class UEndGameStateComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0xC];                                       // 0x00B8   (0x000C)  MISSED
	bool                                               _isEndGameOver;                                             // 0x00C4   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x00C5   (0x0003)  MISSED
	float                                              _worldTimeAtLastModification;                               // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x44];                                      // 0x00CC   (0x0044)  MISSED
	float                                              _timeDilation;                                              // 0x0110   (0x0004)  
	bool                                               _isTimerPaused;                                             // 0x0114   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0115   (0x0003)  MISSED
	float                                              _normalTotalTimeElapsedAtLastTimeModification;              // 0x0118   (0x0004)  
	EEndGameScenarioTrigger                            _endGameScenarioTrigger;                                    // 0x011C   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x011D   (0x0003)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.EndGameStateComponent.OnRep_WorldTimeAtLastDilationModification
	// void OnRep_WorldTimeAtLastDilationModification();                                                                     // [0x5872cd0] Final|Native|Private 
	// Function /Script/DeadByDaylight.EndGameStateComponent.OnRep_TimeDilation
	// void OnRep_TimeDilation();                                                                                            // [0x5872cb0] Final|Native|Private 
	// Function /Script/DeadByDaylight.EndGameStateComponent.OnRep_IsTimerPaused
	// void OnRep_IsTimerPaused();                                                                                           // [0x5872c90] Final|Native|Private 
	// Function /Script/DeadByDaylight.EndGameStateComponent.OnRep_IsEndGameOver
	// void OnRep_IsEndGameOver();                                                                                           // [0x5872c70] Final|Native|Private 
	// Function /Script/DeadByDaylight.EndGameStateComponent.Multicast_SetIsInEndGameSimulation
	// void Multicast_SetIsInEndGameSimulation(bool endGameSimulation);                                                      // [0x58723c0] Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate 
	// Function /Script/DeadByDaylight.EndGameStateComponent.IsTimerSlowedDown
	// bool IsTimerSlowedDown();                                                                                             // [0x5872390] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EndGameStateComponent.IsEndGameOver
	// bool IsEndGameOver();                                                                                                 // [0x5872360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EndGameStateComponent.HasEndGameBegun
	// bool HasEndGameBegun();                                                                                               // [0x58722d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EndGameStateComponent.GetElapsedTimePercent
	// float GetElapsedTimePercent();                                                                                        // [0x5872200] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.EnduranceVFXComponent
/// Size: 0x0020 (0x0000B8 - 0x0000D8)
class UEnduranceVFXComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x00B8   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.EnduranceVFXComponent.ShowHighlight
	// void ShowHighlight(class UGameplayModifierContainer* preventKOSource);                                                // [0x5873090] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.EnergyPoweredInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UEnergyPoweredInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.EnsureLoggingSubsystem
/// Size: 0x0038 (0x000038 - 0x000070)
class UEnsureLoggingSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/DeadByDaylight.Entity
/// Size: 0x0020 (0x000230 - 0x000250)
class AEntity : public AActor
{ 
public:
	class UCurveFloat*                                 _dissolveCurve;                                             // 0x0230   (0x0008)  
	class UCurveFloat*                                 _revealsCurve;                                              // 0x0238   (0x0008)  
	class UMaterialHelper*                             _materialHelper;                                            // 0x0240   (0x0008)  
	class USkeletalMeshComponent*                      _skeletalMesh;                                              // 0x0248   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.Entity.SetAnimationStrugglePercent
	// void SetAnimationStrugglePercent(float percent);                                                                      // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Entity.SetAnimationIsStruggling
	// void SetAnimationIsStruggling(bool isStruggling);                                                                     // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Entity.OnReactionStart
	// void OnReactionStart();                                                                                               // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Entity.InitEntity
	// void InitEntity(class AMeatHook* MeatHook);                                                                           // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Entity.HideEntity
	// void HideEntity();                                                                                                    // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Entity.CompleteSacrifice
	// void CompleteSacrifice(bool isBasementHook);                                                                          // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Entity.ChangeToStruggleState
	// void ChangeToStruggleState();                                                                                         // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Entity.ChangeToSacrificeState
	// void ChangeToSacrificeState();                                                                                        // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Entity.ChangeToIdleState
	// void ChangeToIdleState();                                                                                             // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.EnvironmentAnimatedObject
/// Size: 0x0000 (0x0002B8 - 0x0002B8)
class AEnvironmentAnimatedObject : public ASkeletalMeshActorBudgeted
{ 
public:
};

/// Class /Script/DeadByDaylight.PlayerProfileDAL
/// Size: 0x0058 (0x000030 - 0x000088)
class UPlayerProfileDAL : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0030   (0x0058)  MISSED
};

/// Class /Script/DeadByDaylight.EpicProfileDAL
/// Size: 0x0000 (0x000088 - 0x000088)
class UEpicProfileDAL : public UPlayerProfileDAL
{ 
public:
};

/// Class /Script/DeadByDaylight.EscapeBlocker
/// Size: 0x0038 (0x000230 - 0x000268)
class AEscapeBlocker : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0230   (0x0008)  MISSED
	class UBoxComponent*                               _camperBlocker;                                             // 0x0238   (0x0008)  
	class UBoxComponent*                               _playerDetectionZone;                                       // 0x0240   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0248   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.EscapeBlocker.SetPlayerDetectionZone
	// void SetPlayerDetectionZone(class UBoxComponent* playerDetectionZone);                                                // [0x5873000] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.EscapeBlocker.SetCamperBlocker
	// void SetCamperBlocker(class UBoxComponent* camperBlocker);                                                            // [0x5872da0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.EscapeBlocker.OnPlayerDetectionZoneEndOverlap
	// void OnPlayerDetectionZoneEndOverlap(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x5872960] Final|Native|Private 
	// Function /Script/DeadByDaylight.EscapeBlocker.OnPlayerDetectionZoneBeginOverlap
	// void OnPlayerDetectionZoneBeginOverlap(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x5872740] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.EscapeBlocker.DeactivatePlayerBlockerFX
	// void DeactivatePlayerBlockerFX();                                                                                     // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.EscapeBlocker.ActivatePlayerBlockerFX
	// void ActivatePlayerBlockerFX();                                                                                       // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.EscapeDoor
/// Size: 0x00F8 (0x000338 - 0x000430)
class AEscapeDoor : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	TArray<FVector>                                    EscapePositions;                                            // 0x0340   (0x0010)  
	TArray<class UObject*>                             EscapeFire;                                                 // 0x0350   (0x0010)  
	class UChargeableComponent*                        _killerOpenChargeable;                                      // 0x0360   (0x0008)  
	class UChargeableComponent*                        _openChargeable;                                            // 0x0368   (0x0008)  
	class UAkComponent*                                _ak_audio_escape;                                           // 0x0370   (0x0008)  
	class UEscapeDoorAnimInstance*                     _escapeDoorAnimInstance;                                    // 0x0378   (0x0008)  
	class USceneComponent*                             _rootComponent;                                             // 0x0380   (0x0008)  
	bool                                               _activated;                                                 // 0x0388   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0389   (0x0007)  MISSED
	class USpotLightComponent*                         _spotlight;                                                 // 0x0390   (0x0008)  
	unsigned char                                      UnknownData02_5[0x50];                                      // 0x0398   (0x0050)  MISSED
	SDK_UNDEFINED(16,2115) /* TArray<TWeakObjectPtr<ACamperPlayer*>> */ __um(_localOverlappingSurvivors);          // 0x03E8   (0x0010)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x03F8   (0x0008)  MISSED
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                                // 0x0400   (0x0008)  
	class UBlockableComponent*                         _doorSwitchBlockableComponent;                              // 0x0408   (0x0008)  
	unsigned char                                      UnknownData04_6[0x20];                                      // 0x0410   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.EscapeDoor.SetIsActivated
	// void SetIsActivated(bool IsActivated);                                                                                // [0x5872e30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.EscapeDoor.OnUnblockDoorSwitchCosmetic
	// void OnUnblockDoorSwitchCosmetic();                                                                                   // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.EscapeDoor.OnRep_Activated
	// void OnRep_Activated(bool oldActivated);                                                                              // [0x5872be0] Final|Native|Private 
	// Function /Script/DeadByDaylight.EscapeDoor.OnPlayerExitExitArea
	// void OnPlayerExitExitArea(class ADBDPlayer* Player);                                                                  // [0x5872b50] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.EscapeDoor.OnPlayerEnterExitArea
	// void OnPlayerEnterExitArea(class ADBDPlayer* Player);                                                                 // [0x5872ac0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.EscapeDoor.OnExitOpenChanged
	// void OnExitOpenChanged(bool OPENED);                                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.EscapeDoor.OnExitGateOpened
	// void OnExitGateOpened(class ADBDPlayer* Player);                                                                      // [0x58725a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.EscapeDoor.OnExitActivationChanged
	// void OnExitActivationChanged(bool activated);                                                                         // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.EscapeDoor.OnEscapeZoneEndOverlap
	// void OnEscapeZoneEndOverlap(class AActor* overlappingActor);                                                          // [0x5872510] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.EscapeDoor.OnEscapeZoneBeginOverlap
	// void OnEscapeZoneBeginOverlap(class AActor* overlappingActor);                                                        // [0x5872480] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.EscapeDoor.OnBlockDoorSwitchCosmetic
	// void OnBlockDoorSwitchCosmetic();                                                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.EscapeDoor.LightAllLights
	// void LightAllLights();                                                                                                // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.EscapeDoor.IsDoorSwitchBlocked
	// bool IsDoorSwitchBlocked();                                                                                           // [0x5872330] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EscapeDoor.IsActivated
	// bool IsActivated();                                                                                                   // [0x5872300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EscapeDoor.GetSwitchSceneComponent
	// class USceneComponent* GetSwitchSceneComponent();                                                                     // [0x61d2f50] Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.EscapeDoor.GetParadiseServerLocation
	// FVector GetParadiseServerLocation();                                                                                  // [0x5872290] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EscapeDoor.GetOpenTime
	// float GetOpenTime();                                                                                                  // [0x5872260] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EscapeDoor.GetOpenEscapeInteraction
	// class UChargeableInteractionDefinition* GetOpenEscapeInteraction();                                                   // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.EscapeDoor.GetIsOpen
	// bool GetIsOpen();                                                                                                     // [0x5872230] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EscapeDoor.GetExitArea
	// class UBoxComponent* GetExitArea();                                                                                   // [0x61d2f50] Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.EscapeDoor.GetEscapeSwitchFloorLocation
	// FVector GetEscapeSwitchFloorLocation();                                                                               // [0x61d2f50] Event|Public|HasDefaults|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.EscapeDoor.GetDoorSkeletalMeshComponent
	// class USkeletalMeshComponent* GetDoorSkeletalMeshComponent();                                                         // [0x58721d0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.EscapeDoorAnimInstance
/// Size: 0x0010 (0x0002D0 - 0x0002E0)
class UEscapeDoorAnimInstance : public USleepingAnimInstance
{ 
public:
	bool                                               _isOpen;                                                    // 0x02D0   (0x0001)  
	bool                                               _isOpenByKiller;                                            // 0x02D1   (0x0001)  
	unsigned char                                      UnknownData00_6[0xE];                                       // 0x02D2   (0x000E)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.EscapeDoorAnimInstance.SetIsOpenByKiller
	// void SetIsOpenByKiller(bool isOpenByKiller);                                                                          // [0x5872f50] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.EscapeDoorAnimInstance.SetIsOpen
	// void SetIsOpen(bool IsOpen);                                                                                          // [0x5872ec0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.EscapeDoorAnimInstance.PlaySound
	// void PlaySound(class UAkAudioEvent* AkEvent);                                                                         // [0x5872d10] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.EscapeOutlineUpdateStrategy
/// Size: 0x0020 (0x0000E0 - 0x000100)
class UEscapeOutlineUpdateStrategy : public UOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       _doorOpenColorForSurvivor;                                  // 0x00E0   (0x0010)  
	FLinearColor                                       _doorOpenColorForKiller;                                    // 0x00F0   (0x0010)  
};

/// Class /Script/DeadByDaylight.EscapeRequirementTracker
/// Size: 0x0038 (0x000030 - 0x000068)
class UEscapeRequirementTracker : public UObject
{ 
public:
	TArray<class AGenerator*>                          _escapeGenerators;                                          // 0x0030   (0x0010)  
	class ADBDGameState*                               _dbdGameState;                                              // 0x0040   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0048   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.EscapeRequirementTracker.OnGameEventDispatched
	// void OnGameEventDispatched(FGameplayTag gameEventType, FGameEventData& GameEventData);                                // [0x5872630] Final|Native|Private|HasOutParms 
};

/// Class /Script/DeadByDaylight.EscapeThroughHatch
/// Size: 0x0000 (0x000650 - 0x000650)
class UEscapeThroughHatch : public UBaseEscapeThroughHatch
{ 
public:
};

/// Class /Script/DeadByDaylight.EscapeTile
/// Size: 0x0008 (0x0003D0 - 0x0003D8)
class AEscapeTile : public ATile
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x03D0   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.EscapeTile2
/// Size: 0x0000 (0x000290 - 0x000290)
class AEscapeTile2 : public ATile2
{ 
public:
};

/// Class /Script/DeadByDaylight.EventCustomizationHelper
/// Size: 0x0000 (0x000030 - 0x000030)
class UEventCustomizationHelper : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.EventObjectComponent
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UEventObjectComponent : public UActorComponent
{ 
public:
	FColor                                             _eventOutlineColour;                                        // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.EventGeneratorComponent
/// Size: 0x0020 (0x0000C0 - 0x0000E0)
class UEventGeneratorComponent : public UEventObjectComponent
{ 
public:
	FGameplayTag                                       _genCompletedScoreEvent;                                    // 0x00C0   (0x000C)  
	FGameplayTag                                       _genCompletedNoOfferingScoreEvent;                          // 0x00CC   (0x000C)  
	EOfferingEffectType                                _offeringEffectTypeNeeded;                                  // 0x00D8   (0x0001)  
	bool                                               _updateOutlineForSurvivor;                                  // 0x00D9   (0x0001)  
	bool                                               _updateOutlineForSlasher;                                   // 0x00DA   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x00DB   (0x0005)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.EventGeneratorComponent.Authority_FireGenCompletedEventScore
	// void Authority_FireGenCompletedEventScore(bool isAutoCompleted);                                                      // [0x5871fc0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.EventHookComponent
/// Size: 0x0030 (0x0000C0 - 0x0000F0)
class UEventHookComponent : public UEventObjectComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x00C0   (0x0010)  MISSED
	FGameplayTag                                       _hookedOnEventHookScoreEvent;                               // 0x00D0   (0x000C)  
	FGameplayTag                                       _hookedOnEventHookNoOfferingScoreEvent;                     // 0x00DC   (0x000C)  
	EOfferingEffectType                                _offeringEffectTypeNeeded;                                  // 0x00E8   (0x0001)  
	bool                                               _rewardScoreOnFirstHookOnly;                                // 0x00E9   (0x0001)  
	bool                                               _updateOutlineForSurvivor;                                  // 0x00EA   (0x0001)  
	bool                                               _updateOutlineForSlasher;                                   // 0x00EB   (0x0001)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00EC   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.EventHookComponent.SetOutlineCarryingColorToDefault
	// void SetOutlineCarryingColorToDefault();                                                                              // [0x5872fe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.EventHookComponent.Authority_FireHookedScoreEvent
	// void Authority_FireHookedScoreEvent(class ADBDPlayer* hookedPlayer);                                                  // [0x5872050] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.EventObjectItemWidgetInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UEventObjectItemWidgetInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.EventsFactory
/// Size: 0x0000 (0x000038 - 0x000038)
class UEventsFactory : public UGameInstanceSubsystem
{ 
public:
};

/// Class /Script/DeadByDaylight.EventSpawnableComponent
/// Size: 0x0040 (0x000220 - 0x000260)
class UEventSpawnableComponent : public USceneComponent
{ 
public:
	TArray<FEventSpawnablePositionDropdown>            SpawnPositionPreferences;                                   // 0x0218   (0x0010)  
	FVector                                            Bound;                                                      // 0x0228   (0x000C)  
	float                                              BudgetOverride;                                             // 0x0234   (0x0004)  
	class UBoxComponent*                               _boundBox;                                                  // 0x0238   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0240   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.EventSpawnableStaticMeshActor
/// Size: 0x0008 (0x000240 - 0x000248)
class AEventSpawnableStaticMeshActor : public AStaticMeshActor
{ 
public:
	class UEventSpawnableComponent*                    _eventSpawnableComponent;                                   // 0x0240   (0x0008)  
};

/// Class /Script/DeadByDaylight.EventSpawner
/// Size: 0x0000 (0x000390 - 0x000390)
class UEventSpawner : public UActorSpawner
{ 
public:
};

/// Class /Script/DeadByDaylight.EvilWithinComponent
/// Size: 0x0088 (0x0000B8 - 0x000140)
class UEvilWithinComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2116) /* FMulticastInlineDelegate */ __um(OnTierChange);                                      // 0x00B8   (0x0010)  
	int32_t                                            _currentTier;                                               // 0x00C8   (0x0004)  
	float                                              _lastTierTimeStart;                                         // 0x00CC   (0x0004)  
	unsigned char                                      UnknownData00_5[0x60];                                      // 0x00D0   (0x0060)  MISSED
	SDK_UNDEFINED(16,2117) /* TArray<FString> */       __um(_allowedSurvivorInteractionsForKill);                  // 0x0130   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.EvilWithinComponent.OnRep_CurrentTier
	// void OnRep_CurrentTier(int32_t previousTier);                                                                         // [0x5878cd0] Final|Native|Private 
	// Function /Script/DeadByDaylight.EvilWithinComponent.OnLevelReadyToPlay
	// void OnLevelReadyToPlay();                                                                                            // [0x5878cb0] Final|Native|Private 
	// Function /Script/DeadByDaylight.EvilWithinComponent.IsAtLastTier
	// bool IsAtLastTier();                                                                                                  // [0x5878990] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EvilWithinComponent.GetRequirementForTier
	// float GetRequirementForTier(int32_t tier);                                                                            // [0x58786a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EvilWithinComponent.GetPercentStalkingPointsInCurrentTier
	// float GetPercentStalkingPointsInCurrentTier();                                                                        // [0x5878670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EvilWithinComponent.GetMaxTier
	// int32_t GetMaxTier();                                                                                                 // [0x5878640] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EvilWithinComponent.GetCurrentTier
	// int32_t GetCurrentTier();                                                                                             // [0x5878610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EvilWithinComponent.CanStandKill
	// bool CanStandKill(class ADBDPlayer* Player);                                                                          // [0x5877d70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EvilWithinComponent.CanBeStandingKilled
	// bool CanBeStandingKilled(class ADBDPlayer* Player);                                                                   // [0x5877cd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.EvilWithinComponent.Authority_OnStalkPointsAdded
	// void Authority_OnStalkPointsAdded(float stalkPoints);                                                                 // [0x5877c50] Final|Native|Private 
	// Function /Script/DeadByDaylight.EvilWithinComponent.Authority_OnPlayerDisconnect
	// void Authority_OnPlayerDisconnect(class ADBDPlayer* Player);                                                          // [0x5877bc0] Final|Native|Private 
	// Function /Script/DeadByDaylight.EvilWithinComponent.Authority_NotifyKill
	// void Authority_NotifyKill();                                                                                          // [0x5877ba0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.RestrictedPlacementAreaStrategy
/// Size: 0x0070 (0x000030 - 0x0000A0)
class URestrictedPlacementAreaStrategy : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0030   (0x0010)  MISSED
	FDBDTunableRowHandle                               RestrictedRadius;                                           // 0x0040   (0x0028)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0068   (0x0004)  MISSED
	bool                                               _useTunableForHeight;                                       // 0x006C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x006D   (0x0003)  MISSED
	float                                              _maxHeightRestriction;                                      // 0x0070   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0074   (0x0004)  MISSED
	FDBDTunableRowHandle                               _maxHeightRestrictionTunable;                               // 0x0078   (0x0028)  
};

/// Class /Script/DeadByDaylight.ExitGateSwitchesRestrictedPlacementAreaStrategy
/// Size: 0x0000 (0x0000A0 - 0x0000A0)
class UExitGateSwitchesRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ExitOpenedIndicatorWidget
/// Size: 0x0000 (0x000380 - 0x000380)
class UExitOpenedIndicatorWidget : public UBaseIndicatorWidget
{ 
public:
};

/// Class /Script/DeadByDaylight.ExperimentsHelper
/// Size: 0x0000 (0x000030 - 0x000030)
class UExperimentsHelper : public UObject
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.ExperimentsHelper.IsActive
	// bool IsActive(class UObject* contextObject, FName experimentId);                                                      // [0x58788b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ExperimentsHelper.GetCombinedData
	// bool GetCombinedData(class UObject* contextObject, FName experimentId, FCombinedExperimentData& outData);             // [0x58784a0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ExperimentsHelper.GetAllActive
	// bool GetAllActive(class UObject* contextObject, TArray<FCombinedExperimentData>& outData);                            // [0x5877fe0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.ExperimentsSubsystem
/// Size: 0x0070 (0x000038 - 0x0000A8)
class UExperimentsSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x0038   (0x0070)  MISSED
};

/// Class /Script/DeadByDaylight.ExposerCirclingComponent
/// Size: 0x0050 (0x000220 - 0x000270)
class UExposerCirclingComponent : public USceneComponent
{ 
public:
	bool                                               DirectionFollows;                                           // 0x0218   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0219   (0x0003)  MISSED
	float                                              MinHeight;                                                  // 0x021C   (0x0004)  
	float                                              MaxHeight;                                                  // 0x0220   (0x0004)  
	float                                              MinRadius;                                                  // 0x0224   (0x0004)  
	float                                              MaxRadius;                                                  // 0x0228   (0x0004)  
	float                                              CirclingSpeed;                                              // 0x022C   (0x0004)  
	float                                              DistanceBetweenPoints;                                      // 0x0230   (0x0004)  
	float                                              BezierModifier;                                             // 0x0234   (0x0004)  
	int32_t                                            Samples;                                                    // 0x0238   (0x0004)  
	unsigned char                                      UnknownData01_6[0x34];                                      // 0x023C   (0x0034)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ExposerCirclingComponent.SetIsCircling
	// void SetIsCircling(bool circling);                                                                                    // [0x5878ea0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ExposerCirclingComponent.Reset
	// void Reset();                                                                                                         // [0x5878e80] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ExposerInteriorZoneComponent
/// Size: 0x0010 (0x0004B0 - 0x0004C0)
class UExposerInteriorZoneComponent : public UBoxComponent
{ 
public:
	TArray<class USceneComponent*>                     ExposerSpawnPoints;                                         // 0x04A8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x04B8   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ExposerInteriorZoneComponent.AddExposerSpawnPoint
	// void AddExposerSpawnPoint(class USceneComponent* Point);                                                              // [0x5877ae0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.Fadeable
/// Size: 0x0000 (0x000030 - 0x000030)
class UFadeable : public UInterface
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.Fadeable.OnFadeEnd
	// void OnFadeEnd(class AActor* Other);                                                                                  // [0x5878c20] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Fadeable.OnFadeBegin
	// void OnFadeBegin(class AActor* Other);                                                                                // [0x49c1560] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Fadeable.OnAlphaChanged
	// void OnAlphaChanged(float newAlpha, class AActor* Other);                                                             // [0x5878b50] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Struct /Script/DeadByDaylight.OriginalMaterials
/// Size: 0x0030 (0x000000 - 0x000030)
struct FOriginalMaterials
{ 
	TArray<int32_t>                                    OriginalMaterialIndex;                                      // 0x0000   (0x0010)  
	TArray<class UMaterialInterface*>                  OriginalMaterial;                                           // 0x0010   (0x0010)  
	class UMeshComponent*                              MeshWithChangedMaterials;                                   // 0x0020   (0x0008)  
	float                                              OcclusionRefreshInterval;                                   // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.FadeManager
/// Size: 0x00B8 (0x000230 - 0x0002E8)
class AFadeManager : public AActor
{ 
public:
	SDK_UNDEFINED(80,2118) /* TSet<UMeshComponent*> */ __um(_meshComponents);                                      // 0x0230   (0x0050)  
	class UDataTable*                                  _fadeMaterials;                                             // 0x0280   (0x0008)  
	TArray<FOriginalMaterials>                         _fadedMeshes;                                               // 0x0288   (0x0010)  
	SDK_UNDEFINED(80,2119) /* TSet<UActorComponent*> */ __um(_excludedActors);                                     // 0x0298   (0x0050)  


	/// Functions
	// Function /Script/DeadByDaylight.FadeManager.RemoveFadeMaterials
	// void RemoveFadeMaterials(bool adjustAudioOcclusions);                                                                 // [0x5878df0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.FadeManager.FadeAt
	// void FadeAt(FVector Location, bool adjustAudioOcclusions);                                                            // [0x5877e10] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.FadeManager.DBD_TurnCameraAroundPlayerWithFading
	// void DBD_TurnCameraAroundPlayerWithFading(bool isTurning);                                                            // [0x581c030] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.FadeManager.DBD_FadeAtCurrentCameraLocation
	// void DBD_FadeAtCurrentCameraLocation(bool IsEnabled);                                                                 // [0x581c030] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.FadeManager.AreAnyMaterialsFaded
	// bool AreAnyMaterialsFaded();                                                                                          // [0x5877b70] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.FasterChestSearch
/// Size: 0x0000 (0x000350 - 0x000350)
class UFasterChestSearch : public UStatusEffect
{ 
public:
};

/// Class /Script/DeadByDaylight.FearMarketManager
/// Size: 0x00E0 (0x000030 - 0x000110)
class UFearMarketManager : public UObject
{ 
public:
	FFearMarketItemInstance                            PendingPurchaseFearMarketItem;                              // 0x0030   (0x0030)  
	unsigned char                                      UnknownData00_5[0x48];                                      // 0x0060   (0x0048)  MISSED
	FFearMarketOfferingInstance                        _existingFearMarket;                                        // 0x00A8   (0x0020)  
	SDK_UNDEFINED(8,2120) /* TWeakObjectPtr<UDBDGameInstance*> */ __um(_gameInstance);                             // 0x00C8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x40];                                      // 0x00D0   (0x0040)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.FearMarketManager.ReceivedFearMarketData
	// void ReceivedFearMarketData(bool success);                                                                            // [0x5878d60] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.FearMarketPopupScreen
/// Size: 0x0000 (0x000140 - 0x000140)
class UFearMarketPopupScreen : public UGenericPopupScreen
{ 
public:
};

/// Class /Script/DeadByDaylight.FeatureGate
/// Size: 0x0140 (0x000038 - 0x000178)
class UFeatureGate : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x140];                                     // 0x0038   (0x0140)  MISSED
};

/// Class /Script/DeadByDaylight.FeatureGateHelper
/// Size: 0x0000 (0x000030 - 0x000030)
class UFeatureGateHelper : public UObject
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.FeatureGateHelper.WasSeen
	// bool WasSeen(class UObject* contextObject, EDBDFeatureType featureType, EPlayerRole Role);                            // [0x5878f30] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.FeatureGateHelper.IsLocked
	// bool IsLocked(class UObject* contextObject, EDBDFeatureType featureType, EPlayerRole Role);                           // [0x5878a50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.FeatureGateHelper.IsEnabled
	// bool IsEnabled(class UObject* contextObject);                                                                         // [0x58789c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.FeatureGateHelper.GetSingle
	// bool GetSingle(class UObject* contextObject, FDBDFeatureLockProgress& outData, EDBDFeatureType featureType, EPlayerRole Role); // [0x5878740] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.FeatureGateHelper.GetAllBySeenState
	// bool GetAllBySeenState(class UObject* contextObject, TArray<FDBDFeatureLockProgress>& outData, bool WasSeen);         // [0x5878370] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.FeatureGateHelper.GetAllByRole
	// bool GetAllByRole(class UObject* contextObject, TArray<FDBDFeatureLockProgress>& outData, EPlayerRole Role);          // [0x5878240] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.FeatureGateHelper.GetAllByLockState
	// bool GetAllByLockState(class UObject* contextObject, TArray<FDBDFeatureLockProgress>& outData, bool locked);          // [0x5878110] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.FeatureGateHelper.GetAll
	// bool GetAll(class UObject* contextObject, TArray<FDBDFeatureLockProgress>& outData);                                  // [0x5877ef0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.FinisherMoriTrackerComponent
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class UFinisherMoriTrackerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	TArray<class ACamperPlayer*>                       _survivorsDowned;                                           // 0x00D0   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x00E0   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.Firecracker
/// Size: 0x0058 (0x000338 - 0x000390)
class AFirecracker : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0338   (0x0018)  MISSED
	class USphereComponent*                            _effectArea;                                                // 0x0350   (0x0008)  
	bool                                               DebugDisplayEnabled;                                        // 0x0358   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0359   (0x0007)  MISSED
	TArray<class UGameplayModifierContainer*>          _effectModifiers;                                           // 0x0360   (0x0010)  
	class ADBDPlayer*                                  _playerOwner;                                               // 0x0370   (0x0008)  
	bool                                               _isExploding;                                               // 0x0378   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0379   (0x0007)  MISSED
	TArray<class AActor*>                              _actorsInRange;                                             // 0x0380   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.Firecracker.ShouldDeafen
	// bool ShouldDeafen(class ADBDPlayer* Player, float& outDuration);                                                      // [0x587dd70] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Firecracker.ShouldBlind
	// bool ShouldBlind(class ADBDPlayer* Player, float& outDuration);                                                       // [0x587dc90] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Firecracker.OnFuseBurnUpdate
	// void OnFuseBurnUpdate(float DeltaSeconds, float fuseTimeLeftPercent);                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Firecracker.OnFuseBurnExit
	// void OnFuseBurnExit();                                                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Firecracker.OnFuseBurnEnter
	// void OnFuseBurnEnter();                                                                                               // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Firecracker.OnExplode
	// void OnExplode();                                                                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Firecracker.OnEffectsInitialized
	// void OnEffectsInitialized();                                                                                          // [0x4360f30] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Firecracker.Multicast_InitFromSpawningPlayer
	// void Multicast_InitFromSpawningPlayer(class ADBDPlayer* spawner);                                                     // [0x58005f0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.Firecracker.HasModifierOfType
	// bool HasModifierOfType(FGameplayTag Type);                                                                            // [0x587d170] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Firecracker.HasFlag
	// bool HasFlag(FGameplayTag flag);                                                                                      // [0x587d0c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Firecracker.GetModifierValue
	// float GetModifierValue(FGameplayTag Type);                                                                            // [0x587cfb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Firecracker.GetExplosionRange
	// float GetExplosionRange();                                                                                            // [0x587cf80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Firecracker.GetExplosionEffectDuration
	// float GetExplosionEffectDuration();                                                                                   // [0x587cf50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Firecracker.GetExplosionDelay
	// float GetExplosionDelay();                                                                                            // [0x587cf20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Firecracker.GetExploded
	// bool GetExploded();                                                                                                   // [0x587cf00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Firecracker.GetEffects
	// TArray<UGameplayModifierContainer*> GetEffects();                                                                     // [0x587ce70] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Firecracker.GetDeafnessEffectDuration
	// float GetDeafnessEffectDuration(class ADBDPlayer* Player);                                                            // [0x587cdd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Firecracker.GetBlindnessEffectDuration
	// float GetBlindnessEffectDuration(class AActor* Player);                                                               // [0x587cd30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.FirecrackerEffectHandlerComponent
/// Size: 0x0070 (0x0000B8 - 0x000128)
class UFirecrackerEffectHandlerComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2121) /* FMulticastInlineDelegate */ __um(OnFirecrackerInRangeBegin);                         // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,2122) /* FMulticastInlineDelegate */ __um(OnFirecrackerInRangeEnd);                           // 0x00C8   (0x0010)  
	SDK_UNDEFINED(80,2123) /* TSet<AFirecracker*> */   __um(_inRangeFirecrackers);                                 // 0x00D8   (0x0050)  


	/// Functions
	// Function /Script/DeadByDaylight.FirecrackerEffectHandlerComponent.OnFirecrackerDestroyed
	// void OnFirecrackerDestroyed(class AActor* DestroyedActor);                                                            // [0x587d560] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.FirecrackerScoreComponent
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UFirecrackerScoreComponent : public UActorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.FirecrackerStateMachine
/// Size: 0x0000 (0x000130 - 0x000130)
class UFirecrackerStateMachine : public UStateMachine
{ 
public:
};

/// Class /Script/DeadByDaylight.FirstPersonViewComponent
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UFirstPersonViewComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x00B8   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.FleeComponent
/// Size: 0x0020 (0x0000B8 - 0x0000D8)
class UFleeComponent : public UActorComponent
{ 
public:
	class AActor*                                      _threat;                                                    // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x00C0   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.FlickeringLight
/// Size: 0x03A8 (0x000258 - 0x000600)
class AFlickeringLight : public AGeneratorDrivenActor
{ 
public:
	FlickeringLightType                                _lightComponentType;                                        // 0x0258   (0x0004)  
	SDK_UNDEFINED(1,2124) /* TEnumAsByte<EDetailMode> */ __um(_detailLevelBeforeCastShadows);                      // 0x025C   (0x0001)  
	FPerPlatformBool                                   _castShadow;                                                // 0x025D   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x025E   (0x0002)  MISSED
	FBHVRPerDetailModeBool                             _isCastingShadow;                                           // 0x0260   (0x00A0)  
	FBHVRPerDetailModeFloat                            _maxDrawDistance;                                           // 0x0300   (0x00A0)  
	FBHVRPerDetailModeFloat                            _maxDistanceFadeRange;                                      // 0x03A0   (0x00A0)  
	FBHVRPerDetailModeBool                             _castCinematicShadowsOnly;                                  // 0x0440   (0x00A0)  
	float                                              _innerConneAngle;                                           // 0x04E0   (0x0004)  
	float                                              _outerConneAngle;                                           // 0x04E4   (0x0004)  
	float                                              _sourceLength;                                              // 0x04E8   (0x0004)  
	float                                              _sourceRadius;                                              // 0x04EC   (0x0004)  
	float                                              _intensity;                                                 // 0x04F0   (0x0004)  
	bool                                               _generatorActivated;                                        // 0x04F4   (0x0001)  
	bool                                               _isTimelineSpeedRandom;                                     // 0x04F5   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x04F6   (0x0002)  MISSED
	float                                              _maximumTimelimeSpeed;                                      // 0x04F8   (0x0004)  
	float                                              _minimumTimelimeSpeed;                                      // 0x04FC   (0x0004)  
	FBHVRPerDetailModeBool                             _secondaryLightVisibility;                                  // 0x0500   (0x00A0)  
	float                                              _secondaryLightIntensity;                                   // 0x05A0   (0x0004)  
	FVector                                            _secondaryLightTransform;                                   // 0x05A4   (0x000C)  
	FRotator                                           _secondaryLightRotation;                                    // 0x05B0   (0x000C)  
	float                                              _secondaryLightAttenuationRadius;                           // 0x05BC   (0x0004)  
	FLinearColor                                       _secondaryLightColor;                                       // 0x05C0   (0x0010)  
	float                                              _secondaryLightSpecularScale;                               // 0x05D0   (0x0004)  
	bool                                               _isAlwaysCapturedAsON : 1;                                  // 0x05D4:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x05D5   (0x0003)  MISSED
	class ULightIntensityTimelineComponent*            _lightIntensityTimeline;                                    // 0x05D8   (0x0008)  
	class UPointLightComponent*                        _pointLightComponent;                                       // 0x05E0   (0x0008)  
	class UPointLightComponent*                        _secondaryPointLightComponent;                              // 0x05E8   (0x0008)  
	class URectLightComponent*                         _rectLightComponent;                                        // 0x05F0   (0x0008)  
	class USpotLightComponent*                         _spotLightComponent;                                        // 0x05F8   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.FlickeringLight.StopFlickering
	// void StopFlickering();                                                                                                // [0x587de70] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.FlickeringLight.StartFlickering
	// void StartFlickering();                                                                                               // [0x587de50] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.FlickeringLight.Init
	// void Init();                                                                                                          // [0x587d220] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.FlickeringLight.GetSecondaryLightVisibilty
	// bool GetSecondaryLightVisibilty();                                                                                    // [0x587d090] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.FlickeringLight.GetSecondaryLightComponent
	// class ULocalLightComponent* GetSecondaryLightComponent();                                                             // [0x587d060] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.FlickeringLight.GetActiveLightComponent
	// class ULocalLightComponent* GetActiveLightComponent();                                                                // [0x587cd00] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.FoliageActor
/// Size: 0x0008 (0x000230 - 0x000238)
class AFoliageActor : public AActor
{ 
public:
	class UFoliageDensityHISM*                         _foliageHISM;                                               // 0x0230   (0x0008)  
};

/// Class /Script/DeadByDaylight.FoliageDensityContainer
/// Size: 0x00F8 (0x000230 - 0x000328)
class AFoliageDensityContainer : public AActor
{ 
public:
	SDK_UNDEFINED(80,2125) /* TMap<FName, AFoliageActor*> */ __um(_foliageActors);                                 // 0x0230   (0x0050)  
	SDK_UNDEFINED(80,2126) /* TMap<FName, UFoliageDensityHISM*> */ __um(_foliageHISMs);                            // 0x0280   (0x0050)  
	unsigned char                                      UnknownData00_5[0x50];                                      // 0x02D0   (0x0050)  MISSED
	class UDBDMapFoliageDensityTunables*               _mapFoliageDensityTunables;                                 // 0x0320   (0x0008)  
};

/// Class /Script/DeadByDaylight.FoliageDensityHISM
/// Size: 0x0000 (0x0006F0 - 0x0006F0)
class UFoliageDensityHISM : public UHierarchicalInstancedStaticMeshComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.FranklinsDemiseConsumedByEntityComponent
/// Size: 0x0078 (0x0000B8 - 0x000130)
class UFranklinsDemiseConsumedByEntityComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	class UTimerObject*                                _consumeTimer;                                              // 0x00D0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x00D8   (0x0010)  MISSED
	class UStatusEffect*                               _camperStatus;                                              // 0x00E8   (0x0008)  
	class ADBDPlayer*                                  _previousOwner;                                             // 0x00F0   (0x0008)  
	class ADBDPlayer*                                  _originatingPerkOwner;                                      // 0x00F8   (0x0008)  
	class UChargerComponent*                           _itemChargerComponent;                                      // 0x0100   (0x0008)  
	unsigned char                                      UnknownData02_6[0x28];                                      // 0x0108   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.FranklinsDemiseConsumedByEntityComponent.OnRep_ConsumeTimer
	// void OnRep_ConsumeTimer();                                                                                            // [0x587d950] Final|Native|Private 
	// Function /Script/DeadByDaylight.FranklinsDemiseConsumedByEntityComponent.OnConsumedByEntity
	// void OnConsumedByEntity();                                                                                            // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.FranklinsDemiseConsumedByEntityComponent.Authority_StartConsume
	// void Authority_StartConsume(float Duration, class ADBDPlayer* previousOwner, class ADBDPlayer* Slasher);              // [0x587cbe0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.FreeSpotAroundLocationSpawnStrategy
/// Size: 0x0028 (0x000030 - 0x000058)
class UFreeSpotAroundLocationSpawnStrategy : public UCommentatorSpawnStrategy
{ 
public:
	float                                              _minSpawnRadius;                                            // 0x0030   (0x0004)  
	float                                              _maxSpawnRadius;                                            // 0x0034   (0x0004)  
	float                                              _floorDepth;                                                // 0x0038   (0x0004)  
	float                                              _collisionSphereRadius;                                     // 0x003C   (0x0004)  
	float                                              _checkForEveryAngleDegrees;                                 // 0x0040   (0x0004)  
	float                                              _numberOfPositionToCheckInAnAngle;                          // 0x0044   (0x0004)  
	TArray<class UClass*>                              _actorsToIgnore;                                            // 0x0048   (0x0010)  
};

/// Class /Script/DeadByDaylight.FrenzyData
/// Size: 0x0000 (0x000030 - 0x000030)
class UFrenzyData : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.FriendManager
/// Size: 0x0238 (0x000030 - 0x000268)
class UFriendManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x238];                                     // 0x0030   (0x0238)  MISSED
};

/// Class /Script/DeadByDaylight.FriendSearchPopupScreen
/// Size: 0x0060 (0x000140 - 0x0001A0)
class UFriendSearchPopupScreen : public UGenericPopupScreen
{ 
public:
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0140   (0x0060)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.FriendSearchPopupScreen.OnUnblockPlayer
	// void OnUnblockPlayer(FString friendKrakenID);                                                                         // [0x587dab0] Final|Native|Public  
	// Function /Script/DeadByDaylight.FriendSearchPopupScreen.OnInviteFriend
	// void OnInviteFriend(FString friendKrakenID, bool IsOffNetwork);                                                       // [0x587d730] Final|Native|Public  
	// Function /Script/DeadByDaylight.FriendSearchPopupScreen.OnFriendSearchStart
	// void OnFriendSearchStart(FString SearchText);                                                                         // [0x587d5f0] Final|Native|Public  
	// Function /Script/DeadByDaylight.FriendSearchPopupScreen.OnAcceptFriendInvite
	// void OnAcceptFriendInvite(FString friendKrakenID);                                                                    // [0x587d240] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.FriendsListScreen
/// Size: 0x0120 (0x000120 - 0x000240)
class UFriendsListScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x120];                                     // 0x0120   (0x0120)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.FriendsListScreen.OnViewProfile
	// void OnViewProfile(FString friendId);                                                                                 // [0x587dbf0] Final|Native|Private 
	// Function /Script/DeadByDaylight.FriendsListScreen.OnUnblockPlayer
	// void OnUnblockPlayer(FString playerID);                                                                               // [0x587db50] Final|Native|Private 
	// Function /Script/DeadByDaylight.FriendsListScreen.OnShowNameSelected
	// void OnShowNameSelected(FString playerID);                                                                            // [0x587da10] Final|Native|Private 
	// Function /Script/DeadByDaylight.FriendsListScreen.OnSendPartyInvite
	// void OnSendPartyInvite(FString friendId);                                                                             // [0x587d970] Final|Native|Private 
	// Function /Script/DeadByDaylight.FriendsListScreen.OnSearchForFriend
	// void OnSearchForFriend();                                                                                             // [0x57c4110] Final|Native|Private 
	// Function /Script/DeadByDaylight.FriendsListScreen.OnRemoveFriend
	// void OnRemoveFriend(FString friendId);                                                                                // [0x587d8b0] Final|Native|Private 
	// Function /Script/DeadByDaylight.FriendsListScreen.OnPartyJoinRequest
	// void OnPartyJoinRequest(FString friendId);                                                                            // [0x587d810] Final|Native|Private 
	// Function /Script/DeadByDaylight.FriendsListScreen.OnHideNameSelected
	// void OnHideNameSelected(FString playerID);                                                                            // [0x587d690] Final|Native|Private 
	// Function /Script/DeadByDaylight.FriendsListScreen.OnDeclineFriendInvite
	// void OnDeclineFriendInvite(FString friendId);                                                                         // [0x587d4c0] Final|Native|Private 
	// Function /Script/DeadByDaylight.FriendsListScreen.OnCancelFriendInvite
	// void OnCancelFriendInvite(FString friendId);                                                                          // [0x587d420] Final|Native|Private 
	// Function /Script/DeadByDaylight.FriendsListScreen.OnBlockPlayer
	// void OnBlockPlayer(FString playerID);                                                                                 // [0x587d380] Final|Native|Private 
	// Function /Script/DeadByDaylight.FriendsListScreen.OnAcceptFriendInvite
	// void OnAcceptFriendInvite(FString friendId);                                                                          // [0x587d2e0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.GameAssetLibrary
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UGameAssetLibrary : public UAssetLibrary
{ 
public:
	class UDBDGameInstance*                            _gameInstance;                                              // 0x00B0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00B8   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.GameEventData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FGameEventData
{ 
	class ADBDPlayer*                                  Instigator;                                                 // 0x0000   (0x0008)  
	class AActor*                                      Target;                                                     // 0x0008   (0x0008)  
	float                                              CustomValue;                                                // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	class UObject*                                     CustomObjectParameter;                                      // 0x0018   (0x0008)  
	int32_t                                            CustomIntValue;                                             // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.OngoingGameEvent
/// Size: 0x0070 (0x000030 - 0x0000A0)
class UOngoingGameEvent : public UObject
{ 
public:
	FGameEventData                                     _eventData;                                                 // 0x0030   (0x0028)  
	unsigned char                                      UnknownData00_6[0x48];                                      // 0x0058   (0x0048)  MISSED
};

/// Class /Script/DeadByDaylight.GameEventDispatcher
/// Size: 0x00B0 (0x000038 - 0x0000E8)
class UGameEventDispatcher : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0038   (0x0050)  MISSED
	TArray<class UOngoingGameEvent*>                   _ongoingEvents;                                             // 0x0088   (0x0010)  
	unsigned char                                      UnknownData01_6[0x50];                                      // 0x0098   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.GameEventDispatcher.UnregisterListener
	// void UnregisterListener(FGameEventDispatcherHandleBP& GameEventDispatcherHandle);                                     // [0x5882a60] Final|Native|Private|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameEventDispatcher.RemotelyDispatch
	// void RemotelyDispatch(FGameplayTag gameEventType, FGameEventData& GameEventData);                                     // [0x5881170] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameEventDispatcher.RegisterListener
	// void RegisterListener(FGameEventDispatcherHandleBP& GameEventDispatcherHandle);                                       // [0x5882450] Final|Native|Private|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameEventDispatcher.LocallyDispatch
	// void LocallyDispatch(FGameplayTag gameEventType, FGameEventData& GameEventData);                                      // [0x5882100] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameEventDispatcher.Authority_RemotelyDispatch
	// void Authority_RemotelyDispatch(FGameplayTag gameEventType, FGameEventData& GameEventData);                           // [0x5881170] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameEventDispatcher.Authority_AccumulateOngoingGameEvent
	// void Authority_AccumulateOngoingGameEvent(FGameplayTag gameEventType, FGameEventData& GameEventData, float OngoingWaitTime); // [0x5880d00] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.GameEventListenerCollectionComponent
/// Size: 0x0018 (0x0000B8 - 0x0000D0)
class UGameEventListenerCollectionComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00B8   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.GameEventListenerCollectionComponent.UnlistenToGameEvent
	// void UnlistenToGameEvent(FGameplayTag EventType);                                                                     // [0x58829c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameEventListenerCollectionComponent.UnlistenToAllGameEvents
	// void UnlistenToAllGameEvents();                                                                                       // [0x5882900] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameEventListenerCollectionComponent.ListenToGameEvent
	// void ListenToGameEvent(FGameplayTag EventType, FDelegateProperty delegateToBind);                                     // [0x5881ff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameEventListenerCollectionComponent.AttachGameEventDispatcher
	// void AttachGameEventDispatcher(class UGameEventDispatcher* GameEventDispatcher);                                      // [0x5880c70] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.GameEventTracker
/// Size: 0x0038 (0x000030 - 0x000068)
class UGameEventTracker : public UObject
{ 
public:
	SDK_UNDEFINED(16,2127) /* FMulticastInlineDelegate */ __um(OnGameplayEvent);                                   // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,2128) /* FMulticastInlineDelegate */ __um(OnGameflowEvent);                                   // 0x0040   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0050   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.GameEventTracker.FireGameflowEvent
	// void FireGameflowEvent(EDBDScoreTypes EventType, float Amount, class ADBDPlayerState* Instigator, FName Data);        // [0x5881860] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameEventTracker.FireGameEvent
	// void FireGameEvent(EDBDScoreTypes EventType, float Amount, class AActor* Instigator, class AActor* Target);           // [0x5881700] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.GameFlowContextSystem
/// Size: 0x00F0 (0x000038 - 0x000128)
class UGameFlowContextSystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_2[0xD8];                                      // 0x0038   (0x00D8)  MISSED
	class URootMovie*                                  m_RootMovie;                                                // 0x0110   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0118   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.GameplayModifierContainerDataAsset
/// Size: 0x0040 (0x000048 - 0x000088)
class UGameplayModifierContainerDataAsset : public UDBDPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(48,2129) /* TWeakObjectPtr<UClass*> */ __um(ModifierContainerComponent);                         // 0x0048   (0x0030)  
	SDK_UNDEFINED(16,2130) /* TArray<TWeakObjectPtr<UGameplayModifierContainerDataAsset*>> */ __um(RequiredModifierContainers); // 0x0078   (0x0010)  
};

/// Class /Script/DeadByDaylight.GameplayModifierFunctionLibrary
/// Size: 0x0000 (0x000030 - 0x000030)
class UGameplayModifierFunctionLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.GameplayModifierFunctionLibrary.Authority_SetPlayerGameplayModifier
	// void Authority_SetPlayerGameplayModifier(class ADBDPlayer* TargetPlayer, FGameplayTag modifierType, float ModifierValue); // [0x58813f0] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierFunctionLibrary.Authority_SetPlayerGameplayFlag
	// void Authority_SetPlayerGameplayFlag(class ADBDPlayer* TargetPlayer, FGameplayTag FlagType);                          // [0x5881310] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierFunctionLibrary.Authority_ClearPlayerGameplayModifier
	// void Authority_ClearPlayerGameplayModifier(class ADBDPlayer* TargetPlayer, FGameplayTag modifierType);                // [0x5881070] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierFunctionLibrary.Authority_ClearPlayerGameplayFlag
	// void Authority_ClearPlayerGameplayFlag(class ADBDPlayer* TargetPlayer, FGameplayTag FlagType);                        // [0x5880f90] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierFunctionLibrary.Authority_ClearAllPlayerGameplayModifiers
	// void Authority_ClearAllPlayerGameplayModifiers(class ADBDPlayer* TargetPlayer);                                       // [0x5880f10] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GameplayModifierFunctionLibrary.Authority_ClearAllPlayerGameplayFlags
	// void Authority_ClearAllPlayerGameplayFlags(class ADBDPlayer* TargetPlayer);                                           // [0x5880e90] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.GameplayModifierFunctionLibraryStatusEffect
/// Size: 0x0000 (0x000350 - 0x000350)
class UGameplayModifierFunctionLibraryStatusEffect : public UStatusEffect
{ 
public:
};

/// Class /Script/DeadByDaylight.GameplayNotificationManager
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UGameplayNotificationManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x00B8   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.GameplayNotificationManager.Multicast_FireGameplayNotification
	// void Multicast_FireGameplayNotification(class UGameplayModifierContainer* modifierContainer, bool addToHistory);      // [0x5886580] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.GameplayNotificationManager.FireGameplayNotification
	// void FireGameplayNotification(FGameplayNotificationData& notificationData, bool addToHistory);                        // [0x5885e90] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.GameplayNotificationUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UGameplayNotificationUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.GameplaySpawnerComponent
/// Size: 0x0038 (0x0000B8 - 0x0000F0)
class UGameplaySpawnerComponent : public UActorComponent
{ 
public:
	TArray<class UActorComponent*>                     _spawnedComponents;                                         // 0x00B8   (0x0010)  
	int32_t                                            _numComponentsSpawned;                                      // 0x00C8   (0x0004)  
	int32_t                                            _numComponentsToSpawn;                                      // 0x00CC   (0x0004)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x00D0   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.GameplaySpawnerComponent.OnRep_SpawnedComponents
	// void OnRep_SpawnedComponents();                                                                                       // [0x5886b00] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.GateFactory
/// Size: 0x0000 (0x000230 - 0x000230)
class AGateFactory : public AActor
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.GateFactory.GetGate
	// class AGate* GetGate(EGateType GateType);                                                                             // [0x5885ff0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.CoopRepairTracker
/// Size: 0x0010 (0x000030 - 0x000040)
class UCoopRepairTracker : public UObject
{ 
public:
	TArray<class ADBDPlayer*>                          _coopRepairerHistory;                                       // 0x0030   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.CoopRepairTracker.SetHasEverCoopRepaired
	// void SetHasEverCoopRepaired(class ADBDPlayer* Player);                                                                // [0x5886e40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.CoopRepairTracker.HasEverCoopRepaired
	// bool HasEverCoopRepaired(class ADBDPlayer* Player);                                                                   // [0x58862c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Struct /Script/DeadByDaylight.DamageData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FDamageData
{ 
	bool                                               _damagedWithoutStartingGradualRegression;                   // 0x0000   (0x0001)  
	bool                                               _isRegressing;                                              // 0x0001   (0x0001)  
	bool                                               _isIntense;                                                 // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0003   (0x0001)  MISSED
	SDK_UNDEFINED(8,2131) /* TWeakObjectPtr<ADBDPlayer*> */ __um(_lastDamageChangeSource);                         // 0x0004   (0x0008)  
	unsigned char                                      UnknownData01_6[0x14];                                      // 0x000C   (0x0014)  MISSED
};

/// Struct /Script/DeadByDaylight.PlayerFloatTuple
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPlayerFloatTuple
{ 
	class ACharacter*                                  Player;                                                     // 0x0000   (0x0008)  
	float                                              value;                                                      // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.Generator
/// Size: 0x0368 (0x000338 - 0x0006A0)
class AGenerator : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0338   (0x0010)  MISSED
	bool                                               activated;                                                  // 0x0348   (0x0001)  
	bool                                               WasASMCachePreWarmTriggered;                                // 0x0349   (0x0001)  
	bool                                               IsPlaySkillcheckAesthetic;                                  // 0x034A   (0x0001)  
	unsigned char                                      UnknownData01_5[0x5];                                       // 0x034B   (0x0005)  MISSED
	class UCurveLinearColor*                           KillerOutlineFadeCurve;                                     // 0x0350   (0x0008)  
	float                                              NativePercentComplete;                                      // 0x0358   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x035C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2132) /* FMulticastInlineDelegate */ __um(OnGeneratorRepaired);                               // 0x0360   (0x0010)  
	SDK_UNDEFINED(16,2133) /* FMulticastInlineDelegate */ __um(OnGeneratorRepairedBySurvivor);                     // 0x0370   (0x0010)  
	SDK_UNDEFINED(16,2134) /* FMulticastInlineDelegate */ __um(OnIsDamagedChanged);                                // 0x0380   (0x0010)  
	unsigned char                                      UnknownData03_5[0x48];                                      // 0x0390   (0x0048)  MISSED
	bool                                               fireLevelScoreEventOnFix;                                   // 0x03D8   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x03D9   (0x0007)  MISSED
	SDK_UNDEFINED(80,2135) /* TMap<FName, FTransform> */ __um(_activatedTopLightsTransformMap);                    // 0x03E0   (0x0050)  
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                                // 0x0430   (0x0008)  
	class UDischargeUntilThresholdIsReachedComponent*  _regressChargeUntilThresholdIsReached;                      // 0x0438   (0x0008)  
	FDBDTunableRowHandle                               _gradualRegressionPercentPerDamage;                         // 0x0440   (0x0028)  
	FDBDTunableRowHandle                               _regressionSpeedWhileDamaged;                               // 0x0468   (0x0028)  
	unsigned char                                      UnknownData05_5[0x1C];                                      // 0x0490   (0x001C)  MISSED
	FGameplayTag                                       _repairSemanticTag;                                         // 0x04AC   (0x000C)  
	FDamageData                                        _damageData;                                                // 0x04B8   (0x0020)  
	unsigned char                                      UnknownData06_5[0x38];                                      // 0x04D8   (0x0038)  MISSED
	bool                                               _isBlocked;                                                 // 0x0510   (0x0001)  
	bool                                               _isBlockedFromCharging;                                     // 0x0511   (0x0001)  
	unsigned char                                      UnknownData07_5[0x6];                                       // 0x0512   (0x0006)  MISSED
	SDK_UNDEFINED(80,2136) /* TSet<UObject*> */        __um(_blockingSources);                                     // 0x0518   (0x0050)  
	unsigned char                                      UnknownData08_5[0x30];                                      // 0x0568   (0x0030)  MISSED
	class UChargeableComponent*                        _generatorCharge;                                           // 0x0598   (0x0008)  
	TArray<FPlayerFloatTuple>                          _playerStartTimes;                                          // 0x05A0   (0x0010)  
	unsigned char                                      UnknownData09_5[0x18];                                      // 0x05B0   (0x0018)  MISSED
	bool                                               _isAutoCompleted;                                           // 0x05C8   (0x0001)  
	bool                                               _isOvercharged;                                             // 0x05C9   (0x0001)  
	unsigned char                                      UnknownData10_5[0x6];                                       // 0x05CA   (0x0006)  MISSED
	class UCoopRepairTracker*                          _coopRepairTracker;                                         // 0x05D0   (0x0008)  
	unsigned char                                      UnknownData11_5[0x14];                                      // 0x05D8   (0x0014)  MISSED
	float                                              _VFX_LightDistanceDefault;                                  // 0x05EC   (0x0004)  
	unsigned char                                      UnknownData12_5[0x60];                                      // 0x05F0   (0x0060)  MISSED
	TArray<class UInteractionDefinition*>              _damagingInteractions;                                      // 0x0650   (0x0010)  
	TArray<class ADBDPlayer*>                          _authority_cachedInteractingPlayersOnCompletion;            // 0x0660   (0x0010)  
	FDBDTunableRowHandle                               _defaultImmediateRegressionPercentage;                      // 0x0670   (0x0028)  
	unsigned char                                      UnknownData13_6[0x8];                                       // 0x0698   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.Generator.VFXClampTopActivationSingleLight
	// void VFXClampTopActivationSingleLight(float distance, FName ParameterName);                                           // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.TriggerSkillCheckFailureLoudNoise
	// void TriggerSkillCheckFailureLoudNoise(class ADBDPlayer* instigatingPlayer);                                          // [0x58870d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.TriggerSkillCheck
	// void TriggerSkillCheck(class ADBDPlayer* instigatingPlayer);                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.StopDischarge
	// void StopDischarge();                                                                                                 // [0x58870b0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Generator.SpawnBloodEffectToSocket
	// void SpawnBloodEffectToSocket(FName Name);                                                                            // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.ShouldDoOverchargeSkillcheck
	// bool ShouldDoOverchargeSkillcheck();                                                                                  // [0x5887080] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.SetIsOvercharged
	// void SetIsOvercharged(bool overcharged);                                                                              // [0x5886ff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.SetIsBlockedFromCharging
	// void SetIsBlockedFromCharging(bool isBlockedFromCharging);                                                            // [0x5886f60] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.SetIsAutoCompleted
	// void SetIsAutoCompleted(bool isAutoCompleted);                                                                        // [0x5886ed0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.SetFireLevelScoreEventOnFix
	// void SetFireLevelScoreEventOnFix(bool fireLevelScoreEventOnFix);                                                      // [0x5886db0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.SetComplete
	// void SetComplete(bool complete);                                                                                      // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.ResetGenerator
	// void ResetGenerator();                                                                                                // [0x5886d90] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.RemovePlayerStartTime
	// void RemovePlayerStartTime(class ADBDPlayer* Player);                                                                 // [0x5886d00] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.PostAkEvent
	// int32_t PostAkEvent(class UAkAudioEvent* AkEvent, int32_t CallbackMask, FDelegateProperty& PostEventCallback);        // [0x5886bb0] Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.PlayFailSparksFX
	// void PlayFailSparksFX(class ADBDPlayer* interactingPlayer, bool Explode);                                             // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.OnUpdateChargeProgress
	// void OnUpdateChargeProgress(float newPercentComplete);                                                                // [0x5886b20] Native|Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.OnResetGenerator
	// void OnResetGenerator();                                                                                              // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.OnRepairedBP
	// void OnRepairedBP(bool showGeneratorCloneLoudNoise, bool isAutoCompleted);                                            // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.OnRep_IsBlocked
	// void OnRep_IsBlocked();                                                                                               // [0x5886ae0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Generator.OnRep_DamageData
	// void OnRep_DamageData();                                                                                              // [0x5886ac0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Generator.OnPreWarmASMCache
	// void OnPreWarmASMCache();                                                                                             // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.OnEscapeDoorActivated
	// void OnEscapeDoorActivated();                                                                                         // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.OnDamageCosmetic
	// void OnDamageCosmetic(bool intense);                                                                                  // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.OnChargeChanged
	// void OnChargeChanged(class UChargeableComponent* ChargeableComponent, float percent);                                 // [0x58869f0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Generator.OnChargeApplied
	// void OnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime); // [0x5886840] Final|Native|Private 
	// Function /Script/DeadByDaylight.Generator.OnCaptureProbeSecondState
	// void OnCaptureProbeSecondState();                                                                                     // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.OnBlockingStatusChanged
	// void OnBlockingStatusChanged(bool IsBlocked);                                                                         // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.NotifyRepairStart
	// void NotifyRepairStart(class ADBDPlayer* Player);                                                                     // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.NotifyRepairFinish
	// void NotifyRepairFinish(class ADBDPlayer* Player, class UInteractor* Interactor);                                     // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.Multicast_PlayFailSparksFX
	// void Multicast_PlayFailSparksFX(class ADBDPlayer* Player, bool Explode);                                              // [0x5886770] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.Generator.Multicast_OnRepaired
	// void Multicast_OnRepaired(bool showGeneratorCloneLoudNoise, bool isAutoCompleted, int32_t updatedRemainingGeneratorCount); // [0x5886650] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.Generator.Multicast_DamageCosmetic
	// void Multicast_DamageCosmetic(bool intense, TArray<ADBDPlayer*> repairers);                                           // [0x5886480] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.Generator.IsRepaired
	// bool IsRepaired();                                                                                                    // [0x5886450] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.IsRegressing
	// bool IsRegressing();                                                                                                  // [0x5886420] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.IsIntenseDamage
	// bool IsIntenseDamage();                                                                                               // [0x58863f0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.IsBlocked
	// bool IsBlocked();                                                                                                     // [0x58863c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.IsBeingRepaired
	// bool IsBeingRepaired();                                                                                               // [0x5886390] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.IsBeingDamagedByKiller
	// bool IsBeingDamagedByKiller();                                                                                        // [0x5886360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.GetSkeletalMesh
	// class USkeletalMeshComponent* GetSkeletalMesh();                                                                      // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.GetRepairPercentComplete
	// float GetRepairPercentComplete();                                                                                     // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.GetRepairers
	// TArray<ADBDPlayer*> GetRepairers();                                                                                   // [0x5886240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.GetPlayerStartTimes
	// TArray<FPlayerFloatTuple> GetPlayerStartTimes();                                                                      // [0x58861b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.GetPlayerStartTime
	// float GetPlayerStartTime(class ADBDPlayer* Player);                                                                   // [0x5886110] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.GetIsBlockedFromCharging
	// bool GetIsBlockedFromCharging();                                                                                      // [0x58860e0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.Generator.GetIsAutoCompleted
	// bool GetIsAutoCompleted();                                                                                            // [0x58860b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.GetGeneratorChargeComponent
	// class UChargeableComponent* GetGeneratorChargeComponent();                                                            // [0x5886080] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.GetGeneratorAudioComponent
	// class UAkComponent* GetGeneratorAudioComponent();                                                                     // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.GetChargePercentComplete
	// float GetChargePercentComplete();                                                                                     // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.DisableInaccessibleInteractors
	// void DisableInaccessibleInteractors();                                                                                // [0x5885e70] Final|Native|Private 
	// Function /Script/DeadByDaylight.Generator.Cosmetic_MakeSurvivorScream
	// void Cosmetic_MakeSurvivorScream(class ADBDPlayer* screamingSurvivor);                                                // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Generator.CanSurvivorReactToBlockingEntity
	// bool CanSurvivorReactToBlockingEntity(class ACamperPlayer* Survivor);                                                 // [0x5885dd0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.BroadcastIsDamagedChangedEvent
	// void BroadcastIsDamagedChangedEvent(class ADBDPlayer* Player);                                                        // [0x5885d40] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.BroadcastGeneratorRepairedBySurvivor
	// void BroadcastGeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor);                                       // [0x5885cb0] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/DeadByDaylight.Generator.Authority_SetRepaired
	// void Authority_SetRepaired(bool showGeneratorCloneLoudNoise, bool isAutoCompleted);                                   // [0x5885be0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.Authority_RepairDamage
	// void Authority_RepairDamage(class ADBDPlayer* repairedBy);                                                            // [0x5885b50] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.Authority_RemoveBlockingSource
	// void Authority_RemoveBlockingSource(class UObject* Source);                                                           // [0x5885ac0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.Authority_OnChargeChanged
	// void Authority_OnChargeChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete); // [0x58859b0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Generator.Authority_OnChargeApplied
	// void Authority_OnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime); // [0x5885800] Final|Native|Private 
	// Function /Script/DeadByDaylight.Generator.Authority_HasRepairedDamage
	// bool Authority_HasRepairedDamage(class ADBDPlayer* Player);                                                           // [0x5885760] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.Authority_GetRepairingCampers
	// TArray<ADBDPlayer*> Authority_GetRepairingCampers();                                                                  // [0x58856e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Generator.Authority_CancelRepairInteractions
	// void Authority_CancelRepairInteractions();                                                                            // [0x58856c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.Authority_AddTimedBlockingSource
	// void Authority_AddTimedBlockingSource(class UObject* Source, float blockingTime);                                     // [0x58855f0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.Authority_AddBlockingSource
	// void Authority_AddBlockingSource(class UObject* Source);                                                              // [0x5885560] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.AddPlayerStartTime
	// void AddPlayerStartTime(class ADBDPlayer* Player, float starttime);                                                   // [0x5885490] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.AddDamagingInteraction
	// void AddDamagingInteraction(class UInteractionDefinition* Interaction);                                               // [0x5885400] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Generator.ActivateTeleportGeneratorIndicator
	// void ActivateTeleportGeneratorIndicator(bool Activate);                                                               // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|Const 
};

/// Class /Script/DeadByDaylight.DBDGeneratorDrivenReflectionCaptureActor
/// Size: 0x0018 (0x000258 - 0x000270)
class ADBDGeneratorDrivenReflectionCaptureActor : public AGeneratorDrivenActor
{ 
public:
	class UGenyReflectionCaptureComponent*             genyReflectionCapture;                                      // 0x0258   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0260   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.DBDGeneratorDrivenReflectionCaptureActor.SwapToSecondState
	// void SwapToSecondState();                                                                                             // [0x588c270] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.GeneratorEntity
/// Size: 0x0030 (0x000230 - 0x000260)
class AGeneratorEntity : public AActor
{ 
public:
	class AGenerator*                                  _associatedGenerator;                                       // 0x0230   (0x0008)  
	class UMontagePlayer*                              _montagePlayer;                                             // 0x0238   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0240   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.GeneratorEntity.SetSkeletalMeshActive
	// void SetSkeletalMeshActive(bool Active);                                                                              // [0x588c110] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GeneratorEntity.SetAssociatedGenerator
	// void SetAssociatedGenerator(class AGenerator* Generator);                                                             // [0x588c080] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GeneratorEntity.PlayMontage
	// void PlayMontage(FAnimationMontageDescriptor animMontageID, float PlayRate, bool isFollower);                         // [0x588be40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.GeneratorEntity.GetMontagePlayer
	// class UMontagePlayer* GetMontagePlayer();                                                                             // [0x588afa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.GeneratorEntityAnimInstance
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UGeneratorEntityAnimInstance : public UAnimInstance
{ 
public:
	bool                                               IsCorrupted;                                                // 0x02C0   (0x0001)  
	bool                                               IsCorrupted_End;                                            // 0x02C1   (0x0001)  
	bool                                               IsUncorrupted;                                              // 0x02C2   (0x0001)  
	bool                                               IsUncorrupted_End;                                          // 0x02C3   (0x0001)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x02C4   (0x000C)  MISSED
};

/// Class /Script/DeadByDaylight.GeneratorIndicatorWidget
/// Size: 0x0000 (0x000380 - 0x000380)
class UGeneratorIndicatorWidget : public UBaseIndicatorWidget
{ 
public:
};

/// Class /Script/DeadByDaylight.GeneratorOutlineUpdateStrategy
/// Size: 0x0048 (0x000158 - 0x0001A0)
class UGeneratorOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       _unrepairedAuraColor;                                       // 0x0158   (0x0010)  
	FLinearColor                                       _fullyRepairedAuraColor;                                    // 0x0168   (0x0010)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0178   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.GeneratorOutlineUpdateStrategy.GetYellowColor
	// FLinearColor GetYellowColor();                                                                                        // [0x588b050] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GeneratorOutlineUpdateStrategy.GetWhiteColor
	// FLinearColor GetWhiteColor();                                                                                         // [0x588b030] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.GeneratorRepairWithGenericPerksEscapeAchievement
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UGeneratorRepairWithGenericPerksEscapeAchievement : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x00B8   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.SurvivorTrapPerk
/// Size: 0x0080 (0x0003C8 - 0x000448)
class USurvivorTrapPerk : public UPerk
{ 
public:
	ETrapType                                          _trapType;                                                  // 0x03C8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x03C9   (0x0007)  MISSED
	class UClass*                                      _trappableInteractableType;                                 // 0x03D0   (0x0008)  
	float                                              _progressPercentRequirementLevels;                          // 0x03D8   (0x000C)  
	float                                              _trapDurationLevels;                                        // 0x03E4   (0x000C)  
	class AInteractable*                               _trappedInteractable;                                       // 0x03F0   (0x0008)  
	class UClass*                                      _trapInstallerComponentClass;                               // 0x03F8   (0x0008)  
	unsigned char                                      UnknownData01_5[0x38];                                      // 0x0400   (0x0038)  MISSED
	float                                              _progressPercent;                                           // 0x0438   (0x0004)  
	bool                                               _isTrapReady;                                               // 0x043C   (0x0001)  
	unsigned char                                      UnknownData02_6[0xB];                                       // 0x043D   (0x000B)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SurvivorTrapPerk.OnRep_TrappedInteractable
	// void OnRep_TrappedInteractable(class AInteractable* oldInteractable);                                                 // [0x5921810] Final|Native|Private 
	// Function /Script/DeadByDaylight.SurvivorTrapPerk.GetTrapDuration
	// float GetTrapDuration();                                                                                              // [0x4fe8140] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorTrapPerk.GetRequiredRepairProgressForSettingTrap
	// float GetRequiredRepairProgressForSettingTrap();                                                                      // [0x4fed0b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorTrapPerk.GetRepairProgressPercent
	// float GetRepairProgressPercent();                                                                                     // [0x5921540] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorTrapPerk.GetPerkTrappableComponent
	// class UPerkTrappableComponent* GetPerkTrappableComponent(class AInteractable* Interactable);                          // [0x59214a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorTrapPerk.Authority_OnTrapTimerDone
	// void Authority_OnTrapTimerDone();                                                                                     // [0x5921480] Final|Native|Private 
	// Function /Script/DeadByDaylight.SurvivorTrapPerk.Authority_OnTrapInteractionEvent
	// void Authority_OnTrapInteractionEvent(FGameplayTag GameEvent, FGameEventData& GameEventData);                         // [0x5921370] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.SurvivorTrapPerk.Authority_OnSurvivorRemoved
	// void Authority_OnSurvivorRemoved(class ACamperPlayer* Survivor);                                                      // [0x59212e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.SurvivorTrapPerk.Authority_OnRepairProgress
	// void Authority_OnRepairProgress(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime); // [0x5921130] Final|Native|Private 
	// Function /Script/DeadByDaylight.SurvivorTrapPerk.Authority_OnKillerInteracted
	// void Authority_OnKillerInteracted(FGameplayTag GameEventTag, FGameEventData& GameEventData);                          // [0x5921020] Native|Protected|HasOutParms 
};

/// Class /Script/DeadByDaylight.GeneratorTrapPerk
/// Size: 0x0000 (0x000448 - 0x000448)
class UGeneratorTrapPerk : public USurvivorTrapPerk
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.GeneratorTrapPerk.GetGeneratorTrapDuration
	// float GetGeneratorTrapDuration();                                                                                     // [0x4fe8140] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.GeneratorTrapPerk.Cosmetic_TrapDestroyed
	// void Cosmetic_TrapDestroyed(class AGenerator* Generator, ETrapRemovedReason Reason);                                  // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.GeneratorTrapPerk.Cosmetic_TrapActivated
	// void Cosmetic_TrapActivated(class AGenerator* Generator);                                                             // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.GeneratorTrapPerk.Client_OnTrapDestroyed
	// void Client_OnTrapDestroyed(class AGenerator* Generator, ETrapRemovedReason Reason);                                  // [0x588aed0] Final|Net|Native|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.GeneratorTrapPerk.Client_OnTrapActivated
	// void Client_OnTrapActivated(class AGenerator* Generator);                                                             // [0x588ae40] Final|Net|Native|Event|Private|NetClient 
	// Function /Script/DeadByDaylight.GeneratorTrapPerk.Authority_OnGeneratorCompleted
	// void Authority_OnGeneratorCompleted(bool isAutoCompleted);                                                            // [0x588ab00] Final|Native|Private 
	// Function /Script/DeadByDaylight.GeneratorTrapPerk.Authority_OnExitGatesPowered
	// void Authority_OnExitGatesPowered(FGameplayTag GameEventTag, FGameEventData& GameEventData);                          // [0x588a9f0] Final|Native|Private|HasOutParms 
};

/// Struct /Script/DeadByDaylight.ReflectionCaptureTwoStates
/// Size: 0x0030 (0x000000 - 0x000030)
struct FReflectionCaptureTwoStates
{ 
	FComponentReference                                ComponentReference;                                         // 0x0000   (0x0030)  
};

/// Class /Script/DeadByDaylight.GenyReflectionCaptureComponent
/// Size: 0x0010 (0x000220 - 0x000230)
class UGenyReflectionCaptureComponent : public USceneComponent
{ 
public:
	TArray<FReflectionCaptureTwoStates>                generatorDrivenReflectionCapture;                           // 0x0218   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0228   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.GestureInteractionDefinition
/// Size: 0x0000 (0x000650 - 0x000650)
class UGestureInteractionDefinition : public UInteractionDefinition
{ 
public:
};

/// Class /Script/DeadByDaylight.GhostStalkedUIData
/// Size: 0x0000 (0x000030 - 0x000030)
class UGhostStalkedUIData : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.GhostStealthUIData
/// Size: 0x0000 (0x000030 - 0x000030)
class UGhostStealthUIData : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.GiftManager
/// Size: 0x0038 (0x000038 - 0x000070)
class UGiftManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/DeadByDaylight.GlassStaticMesh
/// Size: 0x0050 (0x000550 - 0x0005A0)
class UGlassStaticMesh : public UStaticMeshComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x40];                                      // 0x0550   (0x0040)  MISSED
	FVector                                            defaultGlassNormalVector;                                   // 0x0590   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x059C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.GlassCollectionSubsystem
/// Size: 0x0010 (0x000038 - 0x000048)
class UGlassCollectionSubsystem : public UGameInstanceSubsystem
{ 
public:
	TArray<class UGlassStaticMesh*>                    _glassCollection;                                           // 0x0038   (0x0010)  
};

/// Class /Script/DeadByDaylight.PS4GRDKBaseProfileDAL
/// Size: 0x0000 (0x000088 - 0x000088)
class UPS4GRDKBaseProfileDAL : public UPlayerProfileDAL
{ 
public:
};

/// Class /Script/DeadByDaylight.GRDKProfileDAL
/// Size: 0x0000 (0x000088 - 0x000088)
class UGRDKProfileDAL : public UPS4GRDKBaseProfileDAL
{ 
public:
};

/// Class /Script/DeadByDaylight.HalloweenEventComponent
/// Size: 0x0088 (0x0000B8 - 0x000140)
class UHalloweenEventComponent : public UActorComponent
{ 
public:
	class USectionnedChargeableComponent*              _toxinVialComponent;                                        // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x80];                                      // 0x00C0   (0x0080)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.HalloweenEventComponent.Server_SpawnVial
	// void Server_SpawnVial(float initialCharge);                                                                           // [0x588bfc0] Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.HalloweenEventComponent.OnRep_Vial
	// void OnRep_Vial();                                                                                                    // [0x588be20] Final|Native|Private 
	// Function /Script/DeadByDaylight.HalloweenEventComponent.OnFinishedPlaying
	// void OnFinishedPlaying(FGameplayTag gameEventType, FGameEventData& GameEventData);                                    // [0x588b490] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.HalloweenEventComponent.IsVialFull
	// bool IsVialFull();                                                                                                    // [0x588b1e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.HalloweenEventComponent.GetVial
	// class USectionnedChargeableComponent* GetVial();                                                                      // [0x588b000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.HangDiagnosticSubsystem
/// Size: 0x0040 (0x000038 - 0x000078)
class UHangDiagnosticSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x0038   (0x0040)  MISSED
};

/// Class /Script/DeadByDaylight.HasTokenOrActivationTimerElapsedIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UHasTokenOrActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.HasTokenOrCooldownTimerRemainingActivationElapsedIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UHasTokenOrCooldownTimerRemainingActivationElapsedIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.HasTokenPerkIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UHasTokenPerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.Hatch
/// Size: 0x00B8 (0x000338 - 0x0003F0)
class AHatch : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0338   (0x0050)  MISSED
	EHatchState                                        _hatchState;                                                // 0x0388   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0389   (0x0001)  MISSED
	bool                                               _isEndGameOver;                                             // 0x038A   (0x0001)  
	bool                                               _isForceOpen;                                               // 0x038B   (0x0001)  
	bool                                               _attemptToCloseHatchOnNextEscape;                           // 0x038C   (0x0001)  
	unsigned char                                      UnknownData02_5[0xB];                                       // 0x038D   (0x000B)  MISSED
	class UPrimitiveComponent*                         _baseCollision;                                             // 0x0398   (0x0008)  
	unsigned char                                      UnknownData03_5[0x18];                                      // 0x03A0   (0x0018)  MISSED
	FDBDTunableRowHandle                               _hatchOpenDuration;                                         // 0x03B8   (0x0028)  
	unsigned char                                      UnknownData04_6[0x10];                                      // 0x03E0   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.Hatch.OnRep_HatchState
	// void OnRep_HatchState(EHatchState oldState);                                                                          // [0x588bda0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Hatch.OnHatchStateUnhidden
	// void OnHatchStateUnhidden();                                                                                          // [0x588bd80] Final|Native|Private 
	// Function /Script/DeadByDaylight.Hatch.OnHatchStateModified
	// void OnHatchStateModified(EHatchState oldState, EHatchState NewState);                                                // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Hatch.IsOpen
	// bool IsOpen();                                                                                                        // [0x588b110] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Hatch.GetHatchState
	// EHatchState GetHatchState();                                                                                          // [0x5872300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Hatch.GetHatchCenter
	// class USceneComponent* GetHatchCenter();                                                                              // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Hatch.GetEscapeFocalPoint
	// class USceneComponent* GetEscapeFocalPoint();                                                                         // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Hatch.GetAnimationMontageSlave
	// class UAnimationMontageSlave* GetAnimationMontageSlave();                                                             // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Hatch.FXOpenHatch
	// void FXOpenHatch();                                                                                                   // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Hatch.FXEndSmoke
	// void FXEndSmoke();                                                                                                    // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Hatch.FXCloseHatch
	// void FXCloseHatch();                                                                                                  // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Hatch.Authority_SetIsForceOpen
	// void Authority_SetIsForceOpen(bool isForcedOpen);                                                                     // [0x588adb0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Hatch.Authority_SetHatchState
	// void Authority_SetHatchState(EHatchState NewState);                                                                   // [0x588ad30] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Hatch.Authority_ResetTimer
	// void Authority_ResetTimer(float Duration);                                                                            // [0x588acb0] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.Hatch.Authority_OnSurvivorsLeftChanged
	// void Authority_OnSurvivorsLeftChanged(int32_t survivorRemaining);                                                     // [0x588ac20] Final|Native|Private 
	// Function /Script/DeadByDaylight.Hatch.Authority_OnHatchVisibilityChanged
	// void Authority_OnHatchVisibilityChanged(bool IsVisible);                                                              // [0x588ab90] Final|Native|Private 
	// Function /Script/DeadByDaylight.Hatch.Authority_OnEndGameOver
	// void Authority_OnEndGameOver(FGameplayTag gameEventType, FGameEventData& GameEventData);                              // [0x588a8e0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.Hatch.Authority_OnCloseTimerComplete
	// void Authority_OnCloseTimerComplete();                                                                                // [0x588a8c0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Hatch.Authority_CheckedOpenHatch
	// void Authority_CheckedOpenHatch();                                                                                    // [0x588a8a0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Hatch.Authority_CheckedOpenForceClosedHatch
	// void Authority_CheckedOpenForceClosedHatch();                                                                         // [0x588a880] Final|Native|Private 
	// Function /Script/DeadByDaylight.Hatch.Authority_CheckedCloseHatch
	// void Authority_CheckedCloseHatch();                                                                                   // [0x588a860] Final|Native|Private 
	// Function /Script/DeadByDaylight.Hatch.Authority_CheckedChangeActiveState
	// void Authority_CheckedChangeActiveState();                                                                            // [0x588a840] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.HatchOutlineUpdateStrategy
/// Size: 0x0000 (0x000100 - 0x000100)
class UHatchOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.HeldInputInteractionStarter
/// Size: 0x00F0 (0x0000B8 - 0x0001A8)
class UHeldInputInteractionStarter : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0xF0];                                      // 0x00B8   (0x00F0)  MISSED
};

/// Class /Script/DeadByDaylight.HideHUDGameplayMutator
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UHideHUDGameplayMutator : public UGameplayMutator
{ 
public:
};

/// Class /Script/DeadByDaylight.PlayerOverlapHISMComponent
/// Size: 0x0010 (0x000710 - 0x000720)
class UPlayerOverlapHISMComponent : public UHISMMaterialHelperComponent
{ 
public:
	int32_t                                            _playerInfluenceRadius;                                     // 0x0708   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x070C   (0x0004)  MISSED
	TArray<class UMaterialInterface*>                  _playerOverlapOverrides;                                    // 0x0710   (0x0010)  
};

/// Class /Script/DeadByDaylight.HitValidationConfigsComponent
/// Size: 0x0040 (0x0000B8 - 0x0000F8)
class UHitValidationConfigsComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x00B8   (0x0040)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.HitValidationConfigsComponent.DBD_PrintInGameHitValidationConfigs
	// void DBD_PrintInGameHitValidationConfigs();                                                                           // [0x4592da0] Final|Exec|Native|Public 
};

/// Class /Script/DeadByDaylight.HitValidatorComponent
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class UHitValidatorComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x00B8   (0x0028)  MISSED
	SDK_UNDEFINED(8,2137) /* TWeakObjectPtr<UHitValidationConfigsComponent*> */ __um(_hitValidationConfigComponent); // 0x00E0   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.HitValidatorComponent.Multicast_DrawDebugHit
	// void Multicast_DrawDebugHit(FHitValidationReport report);                                                             // [0x5891c70] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/DeadByDaylight.HitValidatorConfigurator
/// Size: 0x0018 (0x0000C0 - 0x0000D8)
class UHitValidatorConfigurator : public UBaseHitValidationConfigurator
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00C0   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.HookableComponent
/// Size: 0x00B0 (0x0000B8 - 0x000168)
class UHookableComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2138) /* FMulticastInlineDelegate */ __um(Cosmetic_OnDrainStateChanged);                      // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_6[0xA0];                                      // 0x00C8   (0x00A0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.HookableComponent.OnDrainStateChangeFX__DelegateSignature
	// void OnDrainStateChangeFX__DelegateSignature(int32_t drainState);                                                     // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.HookableComponent.Multicast_SetDrainTimerPercentLeft
	// void Multicast_SetDrainTimerPercentLeft(float percentTime);                                                           // [0x4dfb440] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.HookableComponent.Multicast_DebugSetHookDrainStage
	// void Multicast_DebugSetHookDrainStage(int32_t drainStage);                                                            // [0x5891be0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.HookableComponent.GetSacrificeStageIndex
	// int32_t GetSacrificeStageIndex();                                                                                     // [0x58913a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.HookableComponent.GetHookedCount
	// int32_t GetHookedCount();                                                                                             // [0x5891140] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.HookableComponent.GetDrainTimerPercentLeft
	// float GetDrainTimerPercentLeft();                                                                                     // [0x5890fa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.HookableComponent.GetDrainStage
	// int32_t GetDrainStage();                                                                                              // [0x5890f70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.HookableComponent.Authority_DebugSetHookEscapeAutoSuccess
	// void Authority_DebugSetHookEscapeAutoSuccess(bool success);                                                           // [0x581c030] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.HookableComponent.Authority_DebugSetHookEscapeAutoFail
	// void Authority_DebugSetHookEscapeAutoFail(bool fail);                                                                 // [0x581c030] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.HookableComponent.Authority_DebugSetHookDrainStage
	// void Authority_DebugSetHookDrainStage(int32_t drainStage);                                                            // [0x4dd9ef0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.HookedIndicatorWidget
/// Size: 0x0010 (0x000380 - 0x000390)
class UHookedIndicatorWidget : public UBaseIndicatorWidget
{ 
public:
	float                                              HookedIndicatorDuration;                                    // 0x0380   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0384   (0x000C)  MISSED
};

/// Class /Script/DeadByDaylight.HooksWithSurvivorRestrictedPlacementAreaStrategy
/// Size: 0x0098 (0x0000A0 - 0x000138)
class UHooksWithSurvivorRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
{ 
public:
	FDBDTunableRowHandle                               RestrictedSphericalRadius;                                  // 0x00A0   (0x0028)  
	bool                                               _isRestrictionLingeringEnabled;                             // 0x00C8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00C9   (0x0007)  MISSED
	FDBDTunableRowHandle                               _restrictionLingerTime;                                     // 0x00D0   (0x0028)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00F8   (0x0004)  MISSED
	bool                                               _useSphericalZoneForBasementHooks;                          // 0x00FC   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1B];                                      // 0x00FD   (0x001B)  MISSED
	TArray<FVector>                                    RestrictedSphericalLocations;                               // 0x0118   (0x0010)  
	unsigned char                                      UnknownData03_6[0x10];                                      // 0x0128   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.HudScreen
/// Size: 0x05D0 (0x000120 - 0x0006F0)
class UHudScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_2[0xD8];                                      // 0x0120   (0x00D8)  MISSED
	class UCoreHudRootWidget*                          _rootWidget;                                                // 0x01F8   (0x0008)  
	unsigned char                                      UnknownData01_5[0xD0];                                      // 0x0200   (0x00D0)  MISSED
	class ATutorialsUtilities*                         _tutorialsUtilities;                                        // 0x02D0   (0x0008)  
	SDK_UNDEFINED(16,2139) /* TArray<TScriptInterface<Class>> */ __um(_playerStatusInterfaces);                    // 0x02D8   (0x0010)  
	FInteractionProgressViewData                       _interactionProgressViewData;                               // 0x02E8   (0x0070)  
	FItemBundleViewData                                _itemBundleViewData;                                        // 0x0358   (0x0160)  
	unsigned char                                      UnknownData02_5[0x50];                                      // 0x04B8   (0x0050)  MISSED
	FPowerBundleViewData                               _powerBundleViewData;                                       // 0x0508   (0x0158)  
	TArray<FPlayerStatusViewData>                      _playerStatusViewData;                                      // 0x0660   (0x0010)  
	unsigned char                                      UnknownData03_6[0x80];                                      // 0x0670   (0x0080)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.HudScreen.OnTutorialHudFadeOutTriggered
	// void OnTutorialHudFadeOutTriggered();                                                                                 // [0x58920d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.HudScreen.OnTutorialHudFadeInTriggered
	// void OnTutorialHudFadeInTriggered();                                                                                  // [0x58920b0] Final|Native|Private 
	// Function /Script/DeadByDaylight.HudScreen.OnHUDWidgetFadeOutCompleted
	// void OnHUDWidgetFadeOutCompleted();                                                                                   // [0x5891ed0] Final|Native|Private 
	// Function /Script/DeadByDaylight.HudScreen.OnHUDWidgetDelayCompleted
	// void OnHUDWidgetDelayCompleted();                                                                                     // [0x5891eb0] Final|Native|Private|Const 
	// Function /Script/DeadByDaylight.HudScreen.OnHideStartSequenceCompleted
	// void OnHideStartSequenceCompleted();                                                                                  // [0x5891f10] Final|Native|Private 
	// Function /Script/DeadByDaylight.HudScreen.OnHemorrhageAnimationComplete
	// void OnHemorrhageAnimationComplete();                                                                                 // [0x5891ef0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.HudStateComponent
/// Size: 0x0020 (0x0000B8 - 0x0000D8)
class UHudStateComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	bool                                               _isHudVisible;                                              // 0x00D0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x00D1   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.HudStateComponent.OnRep_IsHudVisible
	// void OnRep_IsHudVisible(bool oldValue);                                                                               // [0x5892020] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.HudUIUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UHudUIUtilities : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.ButtonPromptSource
/// Size: 0x0000 (0x000030 - 0x000030)
class UButtonPromptSource : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.CannibalChainsawPower
/// Size: 0x0000 (0x000030 - 0x000030)
class UCannibalChainsawPower : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.ChainLinkable
/// Size: 0x0000 (0x000030 - 0x000030)
class UChainLinkable : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.ChargeableProgressSource
/// Size: 0x0000 (0x000030 - 0x000030)
class UChargeableProgressSource : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.IdentityValidation
/// Size: 0x0000 (0x000030 - 0x000030)
class UIdentityValidation : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.Ethereal
/// Size: 0x0000 (0x000030 - 0x000030)
class UEthereal : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.IgnorePlayersCollisionsComponent
/// Size: 0x0068 (0x0000B8 - 0x000120)
class UIgnorePlayersCollisionsComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x68];                                      // 0x00B8   (0x0068)  MISSED
};

/// Class /Script/DeadByDaylight.Highlightable
/// Size: 0x0000 (0x000030 - 0x000030)
class UHighlightable : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.KillerControls
/// Size: 0x0000 (0x000030 - 0x000030)
class UKillerControls : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.ImmobilizeUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UImmobilizeUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.ImmobilizeUtilities.StopGuiding
	// void StopGuiding(class ADBDPlayer* Player, class ADBDPlayer* previouslyGuidingPlayer);                                // [0x5892510] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ImmobilizeUtilities.StartGuiding
	// void StartGuiding(class ADBDPlayer* Player, EGuidedState guidedState, class ADBDPlayer* guidingPlayer);               // [0x5892410] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ImmobilizeUtilities.SetImmobilizeState
	// void SetImmobilizeState(class ADBDPlayer* Player, EImmobilizedState ImmobilizeState);                                 // [0x5892170] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ImmobilizeUtilities.RemoveAllGuidingPlayers
	// void RemoveAllGuidingPlayers(class ADBDPlayer* Player);                                                               // [0x58920f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ImmobilizeUtilities.IsImmobilized
	// bool IsImmobilized(class ADBDPlayer* Player);                                                                         // [0x5891700] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ImmobilizeUtilities.IsGuidedByPlayer
	// bool IsGuidedByPlayer(class ADBDPlayer* Player, class ADBDPlayer* guidingPlayer);                                     // [0x5891630] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ImmobilizeUtilities.IsGuided
	// bool IsGuided(class ADBDPlayer* Player);                                                                              // [0x58915a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ImmobilizeUtilities.HasImmobilizeState
	// bool HasImmobilizeState(class ADBDPlayer* Player, EImmobilizedState ImmobilizeState);                                 // [0x58914d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ImmobilizeUtilities.HasGuidedState
	// bool HasGuidedState(class ADBDPlayer* Player, EGuidedState guidedState);                                              // [0x5891400] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ImmobilizeUtilities.GetImmobilizeState
	// EImmobilizedState GetImmobilizeState(class ADBDPlayer* Player);                                                       // [0x5891170] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.ImmobilizeUtilities.GetGuidedState
	// EGuidedState GetGuidedState(class ADBDPlayer* Player);                                                                // [0x58910b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.MovementSettings
/// Size: 0x0000 (0x000030 - 0x000030)
class UMovementSettings : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.InactiveCooldownTimerPerkIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UInactiveCooldownTimerPerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Struct /Script/DeadByDaylight.InboxMessageUIData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FInboxMessageUIData
{ 
	SDK_UNDEFINED(16,2140) /* FString */               __um(MessageId);                                            // 0x0000   (0x0010)  
	FDateTime                                          ReceivedTime;                                               // 0x0010   (0x0008)  
	EInboxMessageUIType                                MessageType;                                                // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	SDK_UNDEFINED(16,2141) /* FString */               __um(MessageTitle);                                         // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2142) /* FString */               __um(MessageBody);                                          // 0x0030   (0x0010)  
	EInboxMessageUIState                               MessageState;                                               // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0041   (0x0007)  MISSED
	FClaimableInboxMessage                             AttachedClaimable;                                          // 0x0048   (0x0018)  
};

/// Class /Script/DeadByDaylight.InboxScreen
/// Size: 0x00D0 (0x000120 - 0x0001F0)
class UInboxScreen : public UScreenBase
{ 
public:
	class UUMGInboxScreen*                             _umgScreen;                                                 // 0x0120   (0x0008)  
	TArray<FInboxMessageUIData>                        _newsMessages;                                              // 0x0128   (0x0010)  
	TArray<FInboxMessageUIData>                        _rewardsMessages;                                           // 0x0138   (0x0010)  
	TArray<FInboxMessageUIData>                        _socialMessages;                                            // 0x0148   (0x0010)  
	unsigned char                                      UnknownData00_6[0x98];                                      // 0x0158   (0x0098)  MISSED
};

/// Class /Script/DeadByDaylight.InboxUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UInboxUtilities : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.InfectedInteractableComponent
/// Size: 0x00F0 (0x0000B8 - 0x0001A8)
class UInfectedInteractableComponent : public UActorComponent
{ 
public:
	class UCurveFloat*                                 VomitAlphaCurve;                                            // 0x00B8   (0x0008)  
	FName                                              VomitAlphaParameterName;                                    // 0x00C0   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	class UTimelineComponent*                          _vomitAlphaTimeline;                                        // 0x00D0   (0x0008)  
	unsigned char                                      UnknownData01_6[0xD0];                                      // 0x00D8   (0x00D0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.InfectedInteractableComponent.SetInteractableMeshAlpha
	// void SetInteractableMeshAlpha(float alpha);                                                                           // [0x5892230] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.InfectedInteractableComponent.OnVomitAlphaUpdate
	// void OnVomitAlphaUpdate(float alpha);                                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.InfectedInteractableComponent.Multicast_FadeOutVomit
	// void Multicast_FadeOutVomit();                                                                                        // [0x4d82970] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.InfectedInteractableComponent.Multicast_FadeInVomit
	// void Multicast_FadeInVomit();                                                                                         // [0x4dd4880] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.InfectedInteractableComponent.Multicast_DestroyComponent
	// void Multicast_DestroyComponent();                                                                                    // [0x4dd4860] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.InfectedInteractableComponent.Multicast_DebugDisplayLifetime
	// void Multicast_DebugDisplayLifetime(float RemainingLifeTime);                                                         // [0x5891b50] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.InfectedInteractableComponent.GetOwningInteractable
	// class AInteractable* GetOwningInteractable();                                                                         // [0x5891340] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InfectedInteractableComponent.Authority_OnOwningInteractableBeginOrEndUse
	// void Authority_OnOwningInteractableBeginOrEndUse(bool InUse, class ADBDPlayer* interactingPlayer);                    // [0x5890ea0] Final|Native|Public  
	// Function /Script/DeadByDaylight.InfectedInteractableComponent.Authority_OnHitWithVomit
	// void Authority_OnHitWithVomit();                                                                                      // [0x5890e80] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.InfectedInteractableComponent.Authority_IsAMaxSicknessSurvivorInteracting
	// bool Authority_IsAMaxSicknessSurvivorInteracting();                                                                   // [0x5890e50] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InfectedInteractableComponent.Authority_GetEquippingPlayer
	// class ACamperPlayer* Authority_GetEquippingPlayer();                                                                  // [0x5890da0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.InGameAssetPreloaderComponent
/// Size: 0x01A8 (0x0000B8 - 0x000260)
class UInGameAssetPreloaderComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	SDK_UNDEFINED(80,2143) /* TSet<FPrimaryAssetId> */ __um(_generalPrimaryAssetIds);                              // 0x00D0   (0x0050)  
	SDK_UNDEFINED(80,2144) /* TSet<TWeakObjectPtr<UClass*>> */ __um(_generalRegularAssets);                        // 0x0120   (0x0050)  
	TArray<class UClass*>                              _assetGathererClasses;                                      // 0x0170   (0x0010)  
	TArray<class UInGameAssetPreloaderGatherer*>       _assetGatherers;                                            // 0x0180   (0x0010)  
	unsigned char                                      UnknownData01_6[0xD0];                                      // 0x0190   (0x00D0)  MISSED
};

/// Class /Script/DeadByDaylight.InGameAssetPreloaderGatherer
/// Size: 0x0000 (0x000030 - 0x000030)
class UInGameAssetPreloaderGatherer : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.InGameLoadoutAssetGatherer
/// Size: 0x0000 (0x000030 - 0x000030)
class UInGameLoadoutAssetGatherer : public UInGameAssetPreloaderGatherer
{ 
public:
};

/// Class /Script/DeadByDaylight.IniAssetLibrary
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UIniAssetLibrary : public UAssetLibrary
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B0   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.InteractableTransformOptimizer
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UInteractableTransformOptimizer : public UActorComponent
{ 
public:
	bool                                               _optimizeTransformUpdate;                                   // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B9   (0x0007)  MISSED
};

/// Class /Script/DeadByDaylight.InteractionAnimNotify
/// Size: 0x0010 (0x000040 - 0x000050)
class UInteractionAnimNotify : public UAnimNotify
{ 
public:
	FName                                              NotifyId;                                                   // 0x0040   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.InteractionDetectorComponent
/// Size: 0x0100 (0x0000B8 - 0x0001B8)
class UInteractionDetectorComponent : public UActorComponent
{ 
public:
	class UPrimitiveComponent*                         _detectionPrimitive;                                        // 0x00B8   (0x0008)  
	SDK_UNDEFINED(80,2145) /* TSet<AInteractable*> */  __um(_overlappingInteractables);                            // 0x00C0   (0x0050)  
	SDK_UNDEFINED(80,2146) /* TSet<UPrimitiveComponent*> */ __um(_overlappingPrimitiveComponents);                 // 0x0110   (0x0050)  
	SDK_UNDEFINED(80,2147) /* TSet<AActor*> */         __um(_ignoredActors);                                       // 0x0160   (0x0050)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x01B0   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.InteractionDetectorComponent.SetDetectionPrimitive
	// void SetDetectionPrimitive(class UPrimitiveComponent* detectionPrimitive);                                            // [0x57d4740] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.InteractionDetectorComponent.OnLocallyObservedChanged
	// void OnLocallyObservedChanged(class ADBDPlayer* Player);                                                              // [0x589c370] Final|Native|Private 
	// Function /Script/DeadByDaylight.InteractionDetectorComponent.GetDetectionPrimitive
	// class UPrimitiveComponent* GetDetectionPrimitive();                                                                   // [0x588b000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionDetectorComponent.EndOverlapCallback
	// void EndOverlapCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x589b4a0] Final|Native|Private 
	// Function /Script/DeadByDaylight.InteractionDetectorComponent.BeginOverlapCallback
	// void BeginOverlapCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool fromSweep, FHitResult& SweepResult); // [0x589b190] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.InteractionDetectorComponent.AddIgnoredActor
	// void AddIgnoredActor(class AActor* ignored);                                                                          // [0x589ae30] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.InteractionProficiency
/// Size: 0x0018 (0x000030 - 0x000048)
class UInteractionProficiency : public UObject
{ 
public:
	SDK_UNDEFINED(16,2148) /* TArray<FString> */       __um(InteractionIds);                                       // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0040   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.InteractionProficiency.GetValue
	// float GetValue(class UChargeableInteractionDefinition* chargeableInteraction, class ADBDPlayer* Player);              // [0x589bbe0] Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionProficiency.GetType
	// EStatusEffectType GetType(float value);                                                                               // [0x589bb40] Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionProficiency.GetLevel
	// int32_t GetLevel(class UChargeableInteractionDefinition* chargeableInteraction, class ADBDPlayer* Player);            // [0x589ba10] Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InteractionProficiency.GetIsActive
	// bool GetIsActive(class UChargeableInteractionDefinition* chargeableInteraction, class ADBDPlayer* Player);            // [0x589b910] Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
};

/// Struct /Script/DeadByDaylight.ObjectLock
/// Size: 0x0008 (0x000000 - 0x000008)
struct FObjectLock
{ 
	SDK_UNDEFINED(8,2149) /* TWeakObjectPtr<UObject*> */ __um(_lockingObject);                                     // 0x0000   (0x0008)  
};

/// Class /Script/DeadByDaylight.Interactor
/// Size: 0x0070 (0x000220 - 0x000290)
class UInteractor : public USceneComponent
{ 
public:
	SDK_UNDEFINED(16,2150) /* FString */               __um(InteractorName);                                       // 0x0218   (0x0010)  
	unsigned char                                      UnknownData00_5[0x30];                                      // 0x0228   (0x0030)  MISSED
	bool                                               IsUsable;                                                   // 0x0258   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0259   (0x0003)  MISSED
	FObjectLock                                        _lock;                                                      // 0x025C   (0x0008)  
	FObjectLock                                        _reservation;                                               // 0x0264   (0x0008)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x026C   (0x0004)  MISSED
	class UInteractionDefinition*                      _currentInteraction;                                        // 0x0270   (0x0008)  
	TArray<class UInteractionDefinition*>              _interactionDefinitions;                                    // 0x0278   (0x0010)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x0288   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.Interactor.SetIsUsable
	// void SetIsUsable(bool isUsableParam);                                                                                 // [0x589c590] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Interactor.Multicast_ReservationStatus
	// void Multicast_ReservationStatus(class ADBDPlayer* Player, bool lock);                                                // [0x589c1b0] Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate 
	// Function /Script/DeadByDaylight.Interactor.Multicast_LockStatus
	// void Multicast_LockStatus(class ADBDPlayer* Player, class UInteractionDefinition* currentInteraction, bool lock);     // [0x589c060] Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate 
	// Function /Script/DeadByDaylight.Interactor.IsInterruptionPossible
	// bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInteractionDefinition* definition, class UInterruptionDefinition* interruption); // [0x589bdb0] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.Interactor.IsInteracting
	// bool IsInteracting();                                                                                                 // [0x589bd80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactor.GetIsUsable
	// bool GetIsUsable();                                                                                                   // [0x589b9e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactor.GetInteractionDefinitions
	// TArray<UInteractionDefinition*> GetInteractionDefinitions();                                                          // [0x589b6c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactor.GetInteractingPlayerRaw
	// class ADBDPlayer* GetInteractingPlayerRaw();                                                                          // [0x589b660] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactor.GetInteractable
	// class AInteractable* GetInteractable();                                                                               // [0x5891340] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactor.GetCurrentInteraction
	// class UInteractionDefinition* GetCurrentInteraction();                                                                // [0x589b600] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactor.CanPerformInteraction
	// bool CanPerformInteraction(class ADBDPlayer* Player, class UInteractionDefinition* definition);                       // [0x589b3d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Interactor.BPPostInitializeComponents
	// void BPPostInitializeComponents();                                                                                    // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.Interactor.Authority_GetInteractingPlayer
	// class ADBDPlayer* Authority_GetInteractingPlayer();                                                                   // [0x589af00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.InterruptionDefinition
/// Size: 0x00C0 (0x000220 - 0x0002E0)
class UInterruptionDefinition : public USceneComponent
{ 
public:
	FName                                              InterruptionID;                                             // 0x0218   (0x000C)  
	bool                                               _usesWorldCoordinates;                                      // 0x0224   (0x0001)  
	bool                                               _snapInterruptor;                                           // 0x0225   (0x0001)  
	unsigned char                                      UnknownData00_5[0xA];                                       // 0x0226   (0x000A)  MISSED
	FTransform                                         _interruptionSnapPointForInterruptor;                       // 0x0230   (0x0030)  
	FAnimationMontageDescriptor                        _animationMontageToPlayOnInterruptionEnterForInterruptor;   // 0x0260   (0x0020)  
	FAnimationMontageDescriptor                        _animationMontageToPlayOnInterruptionForInterruptorNew;     // 0x0280   (0x0020)  
	FAnimationMontageDescriptor                        _animationMontageToPlayOnInterruptionForInterrupteeNew;     // 0x02A0   (0x0020)  
	bool                                               _pickUpOnInterrupt;                                         // 0x02C0   (0x0001)  
	bool                                               _canInterruptWhileCarrying;                                 // 0x02C1   (0x0001)  
	bool                                               _useMontageFollower;                                        // 0x02C2   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x02C3   (0x0001)  MISSED
	float                                              _maxHeightDeltaBetweenCharacters;                           // 0x02C4   (0x0004)  
	FGameplayTag                                       _interruptionScoreEvent;                                    // 0x02C8   (0x000C)  
	unsigned char                                      UnknownData02_6[0xC];                                       // 0x02D4   (0x000C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.InterruptionDefinition.SetInterruptorSnapPoint
	// void SetInterruptorSnapPoint(FTransform& Point);                                                                      // [0x589c4b0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.InterruptionDefinition.OnInterruptionUpdateStart
	// void OnInterruptionUpdateStart(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);                         // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.InterruptionDefinition.OnInterruptionExitEnd
	// void OnInterruptionExitEnd(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);                             // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.InterruptionDefinition.OnInterruptionEnterStart
	// void OnInterruptionEnterStart(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.InterruptionDefinition.IsUsingMontageFollower
	// bool IsUsingMontageFollower();                                                                                        // [0x589c040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InterruptionDefinition.IsUsingAttack
	// bool IsUsingAttack();                                                                                                 // [0x48783e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InterruptionDefinition.IsInterruptionPossible
	// bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);                            // [0x589bf10] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.InterruptionDefinition.InteractionCheckHeightDelta
	// bool InteractionCheckHeightDelta(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);                       // [0x589bcb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointRotationForInterruptor
	// FRotator GetInterruptionSnapPointRotationForInterruptor(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee); // [0x589b830] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointPositionForInterruptor
	// FVector GetInterruptionSnapPointPositionForInterruptor(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee); // [0x589b750] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InterruptionDefinition.GetInteractionDefinition
	// class UInteractionDefinition* GetInteractionDefinition();                                                             // [0x589b690] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InterruptionDefinition.GetInteractable
	// class AInteractable* GetInteractable();                                                                               // [0x589b630] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.InterruptionDefinition.CanInterruptWhileCarrying
	// bool CanInterruptWhileCarrying();                                                                                     // [0x589b3b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.InventoryHandler
/// Size: 0x0060 (0x000038 - 0x000098)
class UInventoryHandler : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0038   (0x0060)  MISSED
};

/// Class /Script/DeadByDaylight.PalletPulldownBlockable
/// Size: 0x0000 (0x000030 - 0x000030)
class UPalletPulldownBlockable : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.IsMaximumInfected
/// Size: 0x0000 (0x0000D0 - 0x0000D0)
class UIsMaximumInfected : public UGameplayModifierCondition
{ 
public:
};

/// Class /Script/DeadByDaylight.IsNotSightedByAnyCharacter
/// Size: 0x0008 (0x0000F0 - 0x0000F8)
class UIsNotSightedByAnyCharacter : public UEventDrivenModifierCondition
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00F0   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.SpectatingActorLinker
/// Size: 0x0000 (0x000030 - 0x000030)
class USpectatingActorLinker : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.StruggleSkillCheck
/// Size: 0x0000 (0x000030 - 0x000030)
class UStruggleSkillCheck : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.ItemAddonDataAsset
/// Size: 0x0000 (0x000088 - 0x000088)
class UItemAddonDataAsset : public UGameplayModifierContainerDataAsset
{ 
public:
};

/// Class /Script/DeadByDaylight.ItemDataAsset
/// Size: 0x0040 (0x000048 - 0x000088)
class UItemDataAsset : public UDBDPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(48,2151) /* TWeakObjectPtr<UClass*> */ __um(ActorClass);                                         // 0x0048   (0x0030)  
	SDK_UNDEFINED(16,2152) /* TArray<TWeakObjectPtr<UGameplayModifierContainerDataAsset*>> */ __um(RequiredModifierContainers); // 0x0078   (0x0010)  
};

/// Class /Script/DeadByDaylight.ItemPerformedInteraction
/// Size: 0x0000 (0x000030 - 0x000030)
class UItemPerformedInteraction : public UInterface
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.ItemPerformedInteraction.IsInteractionPerformedWithItem
	// bool IsInteractionPerformedWithItem(class ADBDPlayer* Instigator);                                                    // [0x58a0e80] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.RecommendationsFilter
/// Size: 0x0008 (0x000030 - 0x000038)
class URecommendationsFilter : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.ItemRecommendationsFilter
/// Size: 0x0028 (0x000038 - 0x000060)
class UItemRecommendationsFilter : public URecommendationsFilter
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.ItemTooltipWidget
/// Size: 0x0020 (0x000370 - 0x000390)
class UItemTooltipWidget : public UBaseTooltipWidget
{ 
public:
	class UTextBlock*                                  RarityLabel;                                                // 0x0370   (0x0008)  
	class UUMGHtmlRichText*                            WarningText;                                                // 0x0378   (0x0008)  
	class UImage*                                      HeaderSmoke;                                                // 0x0380   (0x0008)  
	class UImage*                                      HeaderBackground;                                           // 0x0388   (0x0008)  
};

/// Class /Script/DeadByDaylight.ItemVfx
/// Size: 0x0010 (0x000238 - 0x000248)
class AItemVfx : public ABaseVFX
{ 
public:
	TArray<class UFXSystemComponent*>                  _particleSystems;                                           // 0x0238   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.ItemVfx.SpawnNiagaraSystemAttached
	// class UNiagaraComponent* SpawnNiagaraSystemAttached(class UNiagaraSystem* SystemTemplate, class USceneComponent* AttachToComponent, FName attachPointName, TEnumAsByte<EAttachLocation> LocationType, bool AutoDestroy, ENCPoolMethod PoolingMethod, FVector& Location, FRotator& Rotation, FVector& Scale, bool autoActivate, bool preCullCheck, bool absoluteRotation, bool hideInFPV); // [0x58a1470] Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemVfx.OnAttackEnd
	// void OnAttackEnd();                                                                                                   // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ItemVfx.OnAttackBegin
	// void OnAttackBegin();                                                                                                 // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ItemVfx.ClearParticleSystems
	// void ClearParticleSystems();                                                                                          // [0x58a0d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemVfx.AttachToSkeletalMesh
	// void AttachToSkeletalMesh(class USkeletalMeshComponent* SkeletonPart);                                                // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ItemVfx.AddParticleSystemComponent
	// void AddParticleSystemComponent(class UParticleSystemComponent* ParticleSystemComponent);                             // [0x58a0b00] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.ItemVfx.AddNiagaraComponent
	// void AddNiagaraComponent(class UNiagaraComponent* NiagaraComponent);                                                  // [0x58a0b00] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ItemWillBeConsumedEffect
/// Size: 0x0000 (0x000350 - 0x000350)
class UItemWillBeConsumedEffect : public UStatusEffect
{ 
public:
};

/// Class /Script/DeadByDaylight.ViewRotationStrategy
/// Size: 0x0000 (0x000030 - 0x000030)
class UViewRotationStrategy : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.K31UIDataInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UK31UIDataInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.KillerAtlantaTutorialLevel
/// Size: 0x0040 (0x000328 - 0x000368)
class AKillerAtlantaTutorialLevel : public AAtlantaTutorialLevel
{ 
public:
	SDK_UNDEFINED(8,2153) /* TWeakObjectPtr<ASlasherPlayer*> */ __um(LocallyControllerSlasherPlayer);              // 0x0328   (0x0008)  
	SDK_UNDEFINED(8,2154) /* TWeakObjectPtr<ACamperPlayer*> */ __um(ChaseCamper);                                  // 0x0330   (0x0008)  
	SDK_UNDEFINED(8,2155) /* TWeakObjectPtr<ACamperPlayer*> */ __um(BearTrapCamper);                               // 0x0338   (0x0008)  
	SDK_UNDEFINED(8,2156) /* TWeakObjectPtr<AGenerator*> */ __um(KickGenerator);                                   // 0x0340   (0x0008)  
	SDK_UNDEFINED(8,2157) /* TWeakObjectPtr<AWindow*> */ __um(VaultWindow);                                        // 0x0348   (0x0008)  
	SDK_UNDEFINED(8,2158) /* TWeakObjectPtr<AEscapeDoor*> */ __um(EscapeDoor);                                     // 0x0350   (0x0008)  
	SDK_UNDEFINED(8,2159) /* TWeakObjectPtr<AHatch*> */ __um(Hatch);                                               // 0x0358   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0360   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.KillerAtlantaTutorialLevel.TriggerExitGameSetup
	// void TriggerExitGameSetup();                                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.KillerAtlantaTutorialLevel.TriggerEndGameSequenceAnimation
	// void TriggerEndGameSequenceAnimation(EKillerTutorialEndGameType camperDeathType);                                     // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.KillerAtlantaTutorialLevel.SetVaultWindow
	// void SetVaultWindow(class AWindow* Window);                                                                           // [0x582e0a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.KillerAtlantaTutorialLevel.SetupEndGameTutorialPhase
	// void SetupEndGameTutorialPhase();                                                                                     // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.KillerAtlantaTutorialLevel.SetHatch
	// void SetHatch(class AHatch* targetHatch);                                                                             // [0x58a13e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.KillerAtlantaTutorialLevel.SetGenerator
	// void SetGenerator(class AGenerator* Generator);                                                                       // [0x58a1350] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.KillerAtlantaTutorialLevel.SetEscapeDoor
	// void SetEscapeDoor(class AEscapeDoor* targetEscapeDoor);                                                              // [0x58a12c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.KillerAtlantaTutorialLevel.SetControlledSlasherPlayer
	// void SetControlledSlasherPlayer(class ASlasherPlayer* SlasherPlayer);                                                 // [0x58a1230] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.KillerAtlantaTutorialLevel.SetChaseSurvivor
	// void SetChaseSurvivor(class ACamperPlayer* CamperPlayer);                                                             // [0x58a11a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.KillerAtlantaTutorialLevel.SetBearTrapSurvivor
	// void SetBearTrapSurvivor(class ACamperPlayer* CamperPlayer);                                                          // [0x58a1110] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.KillerAtlantaTutorialLevel.CompleteEscapeRequirements
	// void CompleteEscapeRequirements();                                                                                    // [0x58a0d40] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.KillerAudioHandlerComponent
/// Size: 0x0080 (0x000148 - 0x0001C8)
class UKillerAudioHandlerComponent : public UDBDPlayerAudioHandlerComponent
{ 
public:
	FDBDTunableRowHandle                               _killerMovingShockTime;                                     // 0x0148   (0x0028)  
	SDK_UNDEFINED(16,2160) /* FString */               __um(_shockEvent);                                          // 0x0170   (0x0010)  
	FGameplayTagQuery                                  _movingShockCondition;                                      // 0x0180   (0x0048)  


	/// Functions
	// Function /Script/DeadByDaylight.KillerAudioHandlerComponent.TriggerSurvivorDamageHitAudioSFX
	// void TriggerSurvivorDamageHitAudioSFX(class ACamperPlayer* camper, EAttackType attackType, bool CausedKO, bool IsWeaponHit, bool isLightHit); // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.KillerAudioHandlerComponent.TriggerKillerReactionSpecificSurvivorSFX
	// void TriggerKillerReactionSpecificSurvivorSFX(class ADBDPlayer* camper);                                              // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.KillerAudioHandlerComponent.OnChaseStart
	// void OnChaseStart(class ADBDPlayer* chasedSurvivor);                                                                  // [0x58a1040] Final|Native|Private 
	// Function /Script/DeadByDaylight.KillerAudioHandlerComponent.HitImpactOnSurvivorSFX
	// void HitImpactOnSurvivorSFX(class ACamperPlayer* camper, EAttackType attackType, bool IsWeaponHit);                   // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.KillerAudioHandlerComponent.ChaseTriggerKillerReactionSpecificSurvivorSFX
	// void ChaseTriggerKillerReactionSpecificSurvivorSFX(class ADBDPlayer* camper);                                         // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.KillerAudioMenuReactionComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UKillerAudioMenuReactionComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B8   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.KillerAudioMenuReactionComponent.OnLobbyTimeChanged
	// void OnLobbyTimeChanged();                                                                                            // [0x58a10d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.KillerAudioMenuReactionComponent.LobbyKillerReactionSpecificSurvivorSFX
	// void LobbyKillerReactionSpecificSurvivorSFX(TArray<ADBDMenuPlayer*>& menuPlayers);                                    // [0x61d2f50] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.KillerBlindingFXComponent
/// Size: 0x0048 (0x000108 - 0x000150)
class UKillerBlindingFXComponent : public UBlindingFXComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0108   (0x0018)  MISSED
	class UAkAudioEvent*                               _blindedSound;                                              // 0x0120   (0x0008)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x0128   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.KillerBlindingFXComponent.Multicast_OnBlindedByPlayersCosmetic
	// void Multicast_OnBlindedByPlayersCosmetic(TArray<ADBDPlayer*> Players);                                               // [0x58a0fa0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/DeadByDaylight.KillerBloodFXComponent
/// Size: 0x0018 (0x0000B8 - 0x0000D0)
class UKillerBloodFXComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00B8   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.KillerBloodFXComponent.StopBloodSplatter
	// void StopBloodSplatter();                                                                                             // [0x58a1870] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.KillerBloodFXComponent.PlayBloodSplatter
	// void PlayBloodSplatter();                                                                                             // [0x58a10f0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.KillerBloodFXInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UKillerBloodFXInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.KillerBloodFXInterface.StopBloodSplatter
	// void StopBloodSplatter();                                                                                             // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.KillerBloodFXInterface.PlayBloodSplatter
	// void PlayBloodSplatter();                                                                                             // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.KillerHitCosmeticHandler
/// Size: 0x0018 (0x000030 - 0x000048)
class UKillerHitCosmeticHandler : public UBaseReversibleInstantActionHandler
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0030   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.KillerInstinctInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UKillerInstinctInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.KillerIntroComponent
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class UKillerIntroComponent : public UActorComponent
{ 
public:
	float                                              _percentOfCameraPanInProgressRequiredToHideKiller;          // 0x00B8   (0x0004)  
	float                                              _cameraPanInAmountToSquish;                                 // 0x00BC   (0x0004)  
	EFPVTransitionStrategy                             _cameraPanInHidingStrategy;                                 // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00C1   (0x0003)  MISSED
	float                                              _startKillerIntroDelay;                                     // 0x00C4   (0x0004)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x00C8   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.KillerIntroComponent.OnLevelReadyToPlay
	// void OnLevelReadyToPlay();                                                                                            // [0x4d82970] Final|Native|Private 
	// Function /Script/DeadByDaylight.KillerIntroComponent.OnIntroCompleted
	// void OnIntroCompleted();                                                                                              // [0x4dd4860] Final|Native|Private 
	// Function /Script/DeadByDaylight.KillerIntroComponent.KillerCameraPanInUpdateNative
	// void KillerCameraPanInUpdateNative(float killerIntroCompletedPercent);                                                // [0x58a0f20] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.NoiseIndicatorWidget
/// Size: 0x0000 (0x000380 - 0x000380)
class UNoiseIndicatorWidget : public UBaseIndicatorWidget
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.NoiseIndicatorWidget.SetIndicatorPanel
	// void SetIndicatorPanel(class UCanvasPanel* panel);                                                                    // [0x58c2050] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.KillerNoiseIndicatorWidget
/// Size: 0x0000 (0x000380 - 0x000380)
class UKillerNoiseIndicatorWidget : public UNoiseIndicatorWidget
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.KillerNoiseIndicatorWidget.SetSoundDistancePercentage
	// void SetSoundDistancePercentage(float distancePercentage);                                                            // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.KillerOpenGate
/// Size: 0x0050 (0x000790 - 0x0007E0)
class UKillerOpenGate : public UChargeableInteractionDefinition
{ 
public:
	FAnimationMontageDescriptor                        _openGateMontage;                                           // 0x0790   (0x0020)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x07B0   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.KillerOpenGate.UpdateSwitch
	// void UpdateSwitch();                                                                                                  // [0x61d2f50] Event|Protected|BlueprintEvent|Const 
};

/// Class /Script/DeadByDaylight.KillerProjectileDodgeComponent
/// Size: 0x0038 (0x0000B8 - 0x0000F0)
class UKillerProjectileDodgeComponent : public UActorComponent
{ 
public:
	class AKillerProjectile*                           _killerProjectile;                                          // 0x00B8   (0x0008)  
	TArray<class ACamperPlayer*>                       _proximitySurvivors;                                        // 0x00C0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x00D0   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.KillerProjectileDodgeComponent.OnKillerProjectileLaunched
	// void OnKillerProjectileLaunched();                                                                                    // [0x58a63e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.KillerProjectileDodgeComponent.OnKillerProjectileFinishedWithoutCollision
	// void OnKillerProjectileFinishedWithoutCollision();                                                                    // [0x58a63c0] Final|Native|Private 
	// Function /Script/DeadByDaylight.KillerProjectileDodgeComponent.OnKillerProjectileFinished
	// void OnKillerProjectileFinished(class AActor* survivorHit);                                                           // [0x58a6330] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.KillerProjectileLauncher
/// Size: 0x0000 (0x000190 - 0x000190)
class UKillerProjectileLauncher : public UBaseProjectileLauncher
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.KillerProjectileLauncher.GetOwningKiller
	// class ASlasherPlayer* GetOwningKiller();                                                                              // [0x58a5fb0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.KillerRedStainUpdateStrategy
/// Size: 0x0040 (0x0000B8 - 0x0000F8)
class UKillerRedStainUpdateStrategy : public UActorComponent
{ 
public:
	class UCurveFloat*                                 _stealthRatioToRedStainIntensityCurve;                      // 0x00B8   (0x0008)  
	FGameplayTagContainer                              _hideRedStainStateTags;                                     // 0x00C0   (0x0020)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x00E0   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.KillerRedStainUpdateStrategy.OnHeadHiddenChanged
	// void OnHeadHiddenChanged(bool IsHidden);                                                                              // [0x58a6280] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.KillerSoundCuesComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UKillerSoundCuesComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B8   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.KillerSoundCuesComponent.StopTrackingActor
	// void StopTrackingActor(class AActor* actorToStopTracking);                                                            // [0x58a6b10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.KillerSoundCuesComponent.StartTrackingActorWithLifetime
	// void StartTrackingActorWithLifetime(class AActor* actorToStartTracking, FName distanceDataID, float trackerLifetime); // [0x58a69e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.KillerSoundCuesComponent.StartTrackingActor
	// void StartTrackingActor(class AActor* actorToStartTracking, FName distanceDataID);                                    // [0x58a68f0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.KillerSpecificGameStateComponent
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UKillerSpecificGameStateComponent : public UActorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.VaultDefinition
/// Size: 0x0030 (0x000650 - 0x000680)
class UVaultDefinition : public UInteractionDefinition
{ 
public:
	FGameplayTag                                       _vaultGameEvent;                                            // 0x0648   (0x000C)  
	FName                                              _feetOffGroundID;                                           // 0x0654   (0x000C)  
	FName                                              _feetOnGroundID;                                            // 0x0660   (0x000C)  
	float                                              _allowedHeightDelta;                                        // 0x066C   (0x0004)  
	bool                                               _isFall;                                                    // 0x0670   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0671   (0x000F)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.VaultDefinition.ShouldLaunchCharacter
	// bool ShouldLaunchCharacter(class ADBDPlayer* Player);                                                                 // [0x5965830] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.VaultDefinition.IsWithinHeightDelta
	// bool IsWithinHeightDelta(class ADBDPlayer* Player);                                                                   // [0x5964dd0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.VaultDefinition.IsWindowVaultable
	// bool IsWindowVaultable();                                                                                             // [0x5964da0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.KillerVaultDefinition
/// Size: 0x0090 (0x000680 - 0x000710)
class UKillerVaultDefinition : public UVaultDefinition
{ 
public:
	bool                                               _shouldUseCustomDuration;                                   // 0x0678   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0679   (0x0007)  MISSED
	FStatProperty                                      _vaultDuration;                                             // 0x0680   (0x0088)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0708   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.KillInteractionDefinition
/// Size: 0x00A0 (0x000790 - 0x000830)
class UKillInteractionDefinition : public UChargeableInteractionDefinition
{ 
public:
	bool                                               _disableFOVSystemDuringInteraction;                         // 0x0790   (0x0001)  
	bool                                               _overrideSlasherFieldOfViewDuringInteraction;               // 0x0791   (0x0001)  
	bool                                               _overrideCamperFieldOfViewDuringInteraction;                // 0x0792   (0x0001)  
	bool                                               _camperCopySlasherFOVCurve;                                 // 0x0793   (0x0001)  
	FName                                              _cameraFOVCurveName;                                        // 0x0794   (0x000C)  
	SDK_UNDEFINED(16,2161) /* TArray<FString> */       __um(_nonOverrideableTargetInteractions);                   // 0x07A0   (0x0010)  
	bool                                               _chargeCompleted;                                           // 0x07B0   (0x0001)  
	bool                                               _isKillShownInThirdPerson;                                  // 0x07B1   (0x0001)  
	bool                                               _manuallyManageMeshHiding;                                  // 0x07B2   (0x0001)  
	bool                                               _survivorAnimationLastAfterInteractionEnds;                 // 0x07B3   (0x0001)  
	unsigned char                                      UnknownData00_5[0x34];                                      // 0x07B4   (0x0034)  MISSED
	float                                              _maximumDelayBeforeSurvivorDeath;                           // 0x07E8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x07EC   (0x0004)  MISSED
	FAnimationMontageDescriptor                        _exitMontage;                                               // 0x07F0   (0x0020)  
	float                                              _slasherFacingTolerance;                                    // 0x0810   (0x0004)  
	unsigned char                                      UnknownData02_6[0x1C];                                      // 0x0814   (0x001C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.KillInteractionDefinition.OnMoriCancelled
	// void OnMoriCancelled();                                                                                               // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.KillInteractionDefinition.OnKillAudioActivation
	// void OnKillAudioActivation(bool Active, class ADBDPlayer* interactingPlayer);                                         // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.KillInteractionDefinition.GetOwningSurvivor
	// class ACamperPlayer* GetOwningSurvivor();                                                                             // [0x58a5fe0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.KillInteractionDefinition.GetExitAnimationMontage
	// FAnimationMontageDescriptor GetExitAnimationMontage();                                                                // [0x58a5ee0] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.KillInteractionDefinition.GetChargeCompleted
	// bool GetChargeCompleted();                                                                                            // [0x58a5eb0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.LacerationUIData
/// Size: 0x0000 (0x000030 - 0x000030)
class ULacerationUIData : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.LandingPageTabsDataAsset
/// Size: 0x00F0 (0x000038 - 0x000128)
class ULandingPageTabsDataAsset : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,2162) /* TMap<EStorefrontState, FLandingPageTabData> */ __um(BigButtonsData);                 // 0x0038   (0x0050)  
	SDK_UNDEFINED(80,2163) /* TMap<EStorefrontState, FLandingPageTabData> */ __um(MediumButtonsData);              // 0x0088   (0x0050)  
	SDK_UNDEFINED(80,2164) /* TMap<EStorefrontState, FLandingPageTabData> */ __um(SmallButtonsData);               // 0x00D8   (0x0050)  
};

/// Class /Script/DeadByDaylight.LanternInteractable
/// Size: 0x0058 (0x000338 - 0x000390)
class ALanternInteractable : public AInteractable
{ 
public:
	SDK_UNDEFINED(16,2165) /* FMulticastInlineDelegate */ __um(OnLanternStateChanged);                             // 0x0338   (0x0010)  
	SDK_UNDEFINED(16,2166) /* FMulticastInlineDelegate */ __um(OnLanternCollectedByPlayerCosmetic);                // 0x0348   (0x0010)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x0358   (0x0020)  MISSED
	class UClass*                                      _collectableClass;                                          // 0x0378   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0380   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.LanternInteractable.SlasherDestroyLantern
	// void SlasherDestroyLantern(class ADBDPlayer* Player);                                                                 // [0x58a6860] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LanternInteractable.OnSlasherDestroyedLantern
	// void OnSlasherDestroyedLantern(FGameplayTag gameEventType, FGameEventData& GameEventData);                            // [0x58a6420] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LanternInteractable.OnCamperWasHooked
	// void OnCamperWasHooked(FGameplayTag gameEventType, FGameEventData& GameEventData);                                    // [0x58a6170] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LanternInteractable.OnCamperLeavingHook
	// void OnCamperLeavingHook(FGameplayTag gameEventType, FGameEventData& GameEventData);                                  // [0x58a6060] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LanternInteractable.OnBackToCollectableTimerEnd
	// void OnBackToCollectableTimerEnd();                                                                                   // [0x58a6040] Final|Native|Private 
	// Function /Script/DeadByDaylight.LanternInteractable.GetLanternState
	// ELanternState GetLanternState();                                                                                      // [0x4b6a500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.LanternInteractable.CollectLight
	// void CollectLight(class ADBDPlayer* Player);                                                                          // [0x58a5e20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LanternInteractable.ChangeLanternState
	// void ChangeLanternState(ELanternState newLanternState);                                                               // [0x58a5da0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LanternInteractable.CanBeDestroyed
	// bool CanBeDestroyed();                                                                                                // [0x58a5d70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.LanternInteractable.CanBeCollected
	// bool CanBeCollected();                                                                                                // [0x58a5d40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.LanternLightCollectable
/// Size: 0x0008 (0x0004C8 - 0x0004D0)
class ALanternLightCollectable : public ACollectable
{ 
public:
	class ALanternInteractable*                        _parentLantern;                                             // 0x04C8   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.LanternLightCollectable.SetParentLantern
	// void SetParentLantern(class ALanternInteractable* parentLantern);                                                     // [0x58a67d0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.LegalMenuScreen
/// Size: 0x0048 (0x000120 - 0x000168)
class ULegalMenuScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0120   (0x0048)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.LegalMenuScreen.OnOkClick
	// void OnOkClick();                                                                                                     // [0x58122c0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.LegalMenuScreen.OnDeclineClick
	// void OnDeclineClick();                                                                                                // [0x57c42c0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.LegalMenuScreen.OnAcceptClick
	// void OnAcceptClick();                                                                                                 // [0x57bc860] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.LevelAISetupComponent
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class ULevelAISetupComponent : public UActorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.WorldRunawayMeshComponent
/// Size: 0x0020 (0x001030 - 0x001050)
class UWorldRunawayMeshComponent : public UDBDSkeletalMeshComponentBudgeted
{ 
public:
	float                                              ResetCooldown;                                              // 0x1028   (0x0004)  
	float                                              _runAwayMustTickDuration;                                   // 0x102C   (0x0004)  
	float                                              _returnMustTickDuration;                                    // 0x1030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x1C];                                      // 0x1034   (0x001C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAwayWithRandomDelay
	// void SetShouldRunAwayWithRandomDelay(bool should, float delayRange);                                                  // [0x59656e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAwayWithDelay
	// void SetShouldRunAwayWithDelay(bool should, float Delay);                                                             // [0x5965610] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAway
	// void SetShouldRunAway(bool should);                                                                                   // [0x5965580] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.WorldRunawayMeshComponent.GetShouldRunAway
	// bool GetShouldRunAway();                                                                                              // [0x5964900] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.LevelCrowWRMeshComponent
/// Size: 0x0000 (0x001050 - 0x001050)
class ULevelCrowWRMeshComponent : public UWorldRunawayMeshComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.LevelParadise
/// Size: 0x0088 (0x000230 - 0x0002B8)
class ALevelParadise : public AActor
{ 
public:
	float                                              LoopStartDistance;                                          // 0x0230   (0x0004)  
	float                                              LoopDistance;                                               // 0x0234   (0x0004)  
	class USceneComponent*                             MainPlayerSpawnPoint;                                       // 0x0238   (0x0008)  
	TArray<class USceneComponent*>                     OtherSurvivorSpawnPoints;                                   // 0x0240   (0x0010)  
	TArray<class USceneComponent*>                     ParadiseTiles;                                              // 0x0250   (0x0010)  
	class AActor*                                      ParadiseViewTarget;                                         // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_5[0x38];                                      // 0x0268   (0x0038)  MISSED
	class ADBDPlayer*                                  _spawnedMainPawn;                                           // 0x02A0   (0x0008)  
	class USceneComponent*                             _runnerComponent;                                           // 0x02A8   (0x0008)  
	float                                              _fadeOutDuration;                                           // 0x02B0   (0x0004)  
	float                                              _fadeInDuration;                                            // 0x02B4   (0x0004)  


	/// Functions
	// Function /Script/DeadByDaylight.LevelParadise.ParadiseEntered
	// void ParadiseEntered(FParadiseData& PlayerData);                                                                      // [0x58a6530] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.LevelParadise.OnInterpolationDone
	// void OnInterpolationDone();                                                                                           // [0x58a6310] Final|Native|Private 
};

/// Struct /Script/DeadByDaylight.LevelReadyToPlayRequirements
/// Size: 0x0010 (0x000000 - 0x000010)
struct FLevelReadyToPlayRequirements
{ 
	class ADBDPlayer*                                  Player;                                                     // 0x0000   (0x0008)  
	char                                               perkCount;                                                  // 0x0008   (0x0001)  
	char                                               itemCount;                                                  // 0x0009   (0x0001)  
	char                                               addonCount;                                                 // 0x000A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x000B   (0x0005)  MISSED
};

/// Class /Script/DeadByDaylight.LevelReadyToPlayPlayerComponent
/// Size: 0x0068 (0x0000B8 - 0x000120)
class ULevelReadyToPlayPlayerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x00B8   (0x0038)  MISSED
	TArray<FLevelReadyToPlayRequirements>              _levelReadyToPlayRequirementsTarget;                        // 0x00F0   (0x0010)  
	TArray<FLevelReadyToPlayRequirements>              _levelReadyToPlayRequirementState;                          // 0x0100   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0110   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.LevelReadyToPlayPlayerComponent.Server_SetIsReadyToPlay
	// void Server_SetIsReadyToPlay(uint32_t readyToPlay);                                                                   // [0x58a65e0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.LevelReadyToPlayPlayerComponent.OnRep_LevelReadyToPlayRequirementsTarget
	// void OnRep_LevelReadyToPlayRequirementsTarget();                                                                      // [0x58a6400] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.LightFollower
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class ULightFollower : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x00B8   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.LightFollower.SetLeader
	// void SetLeader(class ULightComponent* Leader, float maxIntensity);                                                    // [0x58a6700] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LightFollower.AddFollower
	// void AddFollower(class ULightComponent* Follower);                                                                    // [0x58a5cb0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.LightFunctionActorSpawner
/// Size: 0x0010 (0x000390 - 0x0003A0)
class ULightFunctionActorSpawner : public UActorSpawner
{ 
public:
	class UTexture*                                    LightFunctionTexture;                                       // 0x0390   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0398   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.LightingSpecifics
/// Size: 0x0030 (0x000000 - 0x000030)
struct FLightingSpecifics
{ 
	SDK_UNDEFINED(48,2167) /* TWeakObjectPtr<UClass*> */ __um(LightBlueprint);                                     // 0x0000   (0x0030)  
};

/// Struct /Script/DeadByDaylight.SceneLightingDescription
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FSceneLightingDescription
{ 
	FName                                              ThemeName;                                                  // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FLightingSpecifics                                 LightingDetailsLowMedium;                                   // 0x0010   (0x0030)  
	FLightingSpecifics                                 LightingDetailsHighUltra;                                   // 0x0040   (0x0030)  
	FLightingSpecifics                                 LightingAtlanta;                                            // 0x0070   (0x0030)  
	SDK_UNDEFINED(48,2168) /* TWeakObjectPtr<UTextureCube*> */ __um(TextureCube);                                  // 0x00A0   (0x0030)  
};

/// Class /Script/DeadByDaylight.LightingData
/// Size: 0x00A0 (0x000038 - 0x0000D8)
class ULightingData : public UDataAsset
{ 
public:
	SDK_UNDEFINED(48,2169) /* TWeakObjectPtr<UClass*> */ __um(DefaultLighting);                                    // 0x0038   (0x0030)  
	SDK_UNDEFINED(48,2170) /* TWeakObjectPtr<UClass*> */ __um(DefaultAtlantaLighting);                             // 0x0068   (0x0030)  
	TArray<FSceneLightingDescription>                  Descriptions;                                               // 0x0098   (0x0010)  
	SDK_UNDEFINED(48,2171) /* TWeakObjectPtr<UClass*> */ __um(AdaptiveShadowMapControllersActor);                  // 0x00A8   (0x0030)  
};

/// Class /Script/DeadByDaylight.LightingFactory
/// Size: 0x0008 (0x000030 - 0x000038)
class ULightingFactory : public UObject
{ 
public:
	class ULightingData*                               _data;                                                      // 0x0030   (0x0008)  
};

/// Class /Script/DeadByDaylight.LightingHelper
/// Size: 0x00C8 (0x000030 - 0x0000F8)
class ULightingHelper : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0030   (0x0018)  MISSED
	class ABaseSky*                                    _levelLighting;                                             // 0x0048   (0x0008)  
	class ABaseSky*                                    _levelLightingFixed;                                        // 0x0050   (0x0008)  
	class ABaseSky*                                    _levelLightingSpawned;                                      // 0x0058   (0x0008)  
	class ABaseSky*                                    _levelLightingWithoutExposure;                              // 0x0060   (0x0008)  
	class AActor*                                      _adaptiveShadowMapControllersActor;                         // 0x0068   (0x0008)  
	class ULightingInterpolator*                       _lightingInterpolator;                                      // 0x0070   (0x0008)  
	class ULightingFactory*                            _lightingFactory;                                           // 0x0078   (0x0008)  
	class UPostProcessComponent*                       _postProcessCache;                                          // 0x0080   (0x0008)  
	bool                                               _bIsChangeCondition;                                        // 0x0088   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0089   (0x0003)  MISSED
	FName                                              _changeLightingThemeName;                                   // 0x008C   (0x000C)  
	unsigned char                                      UnknownData02_6[0x60];                                      // 0x0098   (0x0060)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.LightingHelper.ToggleLightingChange
	// void ToggleLightingChange(bool bActivateLightingChange, FName ThemeName);                                             // [0x58ae210] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LightingHelper.GetTextureCube
	// class UTextureCube* GetTextureCube(FName mapTheme);                                                                   // [0x58ad430] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LightingHelper.GetSourceLevelLightingClass
	// class UClass* GetSourceLevelLightingClass();                                                                          // [0x58ad3a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LightingHelper.GetInitialComponentState
	// class UActorComponent* GetInitialComponentState(FName ComponentName);                                                 // [0x58ad1f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LightingHelper.GetASMController
	// class AActor* GetASMController();                                                                                     // [0x58ad080] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LightingHelper.DBD_ModifyExposure
	// void DBD_ModifyExposure(float value);                                                                                 // [0x496cad0] Final|Exec|Native|Private|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.LightingInterpolator
/// Size: 0x0050 (0x000030 - 0x000080)
class ULightingInterpolator : public UObject
{ 
public:
	SDK_UNDEFINED(16,2172) /* FMulticastInlineDelegate */ __um(OnInterpolationDone);                               // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_5[0x38];                                      // 0x0040   (0x0038)  MISSED
	class ABaseSky*                                    _targetLighting;                                            // 0x0078   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.LightingInterpolator.LerpSkylight
	// void LerpSkylight(class USkyLightComponent* Target, class USkyLightComponent* A, class USkyLightComponent* B, float alpha); // [0x58ada20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LightingInterpolator.LerpLight
	// void LerpLight(class ULightComponent* Target, class ULightComponent* A, class ULightComponent* B, float alpha);       // [0x58ad8d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LightingInterpolator.LerpHeightFog
	// void LerpHeightFog(class UExponentialHeightFogComponent* Target, class UExponentialHeightFogComponent* A, class UExponentialHeightFogComponent* B, float alpha, float thresholdBeforeSwitchingtoB); // [0x58ad740] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.SpawnerStrategy
/// Size: 0x0000 (0x000030 - 0x000030)
class USpawnerStrategy : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.LimitAccumulationSpawnerStrategy
/// Size: 0x0010 (0x000030 - 0x000040)
class ULimitAccumulationSpawnerStrategy : public USpawnerStrategy
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.LimitAccumulationSpawnerStrategy.SetRecycleThresholdPercentage
	// void SetRecycleThresholdPercentage(float recycleThresholdPercentage);                                                 // [0x58ae100] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LimitAccumulationSpawnerStrategy.SetRecycleDistancePercentage
	// void SetRecycleDistancePercentage(float recycleDistancePercentage);                                                   // [0x58ae080] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LimitAccumulationSpawnerStrategy.SetMaxOverlapping
	// void SetMaxOverlapping(int32_t maxOverlapping);                                                                       // [0x58aded0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.LimitedTimeGameModeManager
/// Size: 0x0058 (0x000038 - 0x000090)
class ULimitedTimeGameModeManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0038   (0x0058)  MISSED
};

/// Class /Script/DeadByDaylight.LoadingScreen
/// Size: 0x0018 (0x000120 - 0x000138)
class ULoadingScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0120   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.LoadingScreen.OnLoadingTextTimerComplete
	// void OnLoadingTextTimerComplete();                                                                                    // [0x57bc860] Final|Native|Public|Const 
};

/// Class /Script/DeadByDaylight.LoadingUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class ULoadingUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.LoadoutControllerSubsystem
/// Size: 0x0000 (0x000038 - 0x000038)
class ULoadoutControllerSubsystem : public UGameInstanceSubsystem
{ 
public:
};

/// Class /Script/DeadByDaylight.LoadoutPresetController
/// Size: 0x0000 (0x000030 - 0x000030)
class ULoadoutPresetController : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.LoadoutSlotFloatingWidget
/// Size: 0x0008 (0x000370 - 0x000378)
class ULoadoutSlotFloatingWidget : public UBaseTooltipWidget
{ 
public:
	class UTextBlock*                                  Message;                                                    // 0x0370   (0x0008)  
};

/// Class /Script/DeadByDaylight.LobbyControllerSubsystem
/// Size: 0x0078 (0x000038 - 0x0000B0)
class ULobbyControllerSubsystem : public UGameInstanceSubsystem
{ 
public:
	SDK_UNDEFINED(8,2173) /* TWeakObjectPtr<ULobbyDisplayStandController*> */ __um(_localPlayerDisplayStandController); // 0x0038   (0x0008)  
	SDK_UNDEFINED(80,2174) /* TMap<FString, ULobbyDisplayStandController*> */ __um(_displayStandControllers);      // 0x0040   (0x0050)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0090   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.LobbyDialogueSubsystem
/// Size: 0x0058 (0x000038 - 0x000090)
class ULobbyDialogueSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0038   (0x0058)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.LobbyDialogueSubsystem.NotifyDialogueInterrupted
	// void NotifyDialogueInterrupted();                                                                                     // [0x58adc90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LobbyDialogueSubsystem.NotifyCharacterPlayedDialogueForThisLobby
	// void NotifyCharacterPlayedDialogueForThisLobby(FString characterName, int32_t dialogueId);                            // [0x58adbc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.LobbyDialogueSubsystem.IsLobbyFullForRole
	// bool IsLobbyFullForRole(EPlayerRole Role);                                                                            // [0x58ad690] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.LobbyDialogueSubsystem.HasCharacterPlayedDialogueForThisLobby
	// bool HasCharacterPlayedDialogueForThisLobby(FString characterName, int32_t dialogueId);                               // [0x58ad4e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.LobbyDialogueSubsystem.GetGuestLobbyMembers
	// TArray<ADBDMenuPlayer*> GetGuestLobbyMembers();                                                                       // [0x58ad170] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.LobbyDialogueSubsystem.CountGuestLobbyMembersWithAudioSwitch
	// void CountGuestLobbyMembersWithAudioSwitch(EAudioCustomizationCategory switchCategory, TArray<FString>& audioSwitches, int32_t& numMatching, int32_t& numNotMatching); // [0x58aced0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.LobbyDisplayStandController
/// Size: 0x00A8 (0x000190 - 0x000238)
class ULobbyDisplayStandController : public UDisplayStandController
{ 
public:
	unsigned char                                      UnknownData00_1[0xA8];                                      // 0x0190   (0x00A8)  MISSED
};

/// Class /Script/DeadByDaylight.LobbyPositionsSubsystem
/// Size: 0x00B8 (0x000038 - 0x0000F0)
class ULobbyPositionsSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0xB8];                                      // 0x0038   (0x00B8)  MISSED
};

/// Class /Script/DeadByDaylight.LocalEventManager
/// Size: 0x1758 (0x000038 - 0x001790)
class ULocalEventManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x1758];                                    // 0x0038   (0x1758)  MISSED
};

/// Class /Script/DeadByDaylight.LocalizationSearchSubsystem
/// Size: 0x0000 (0x000038 - 0x000038)
class ULocalizationSearchSubsystem : public UGameInstanceSubsystem
{ 
public:
};

/// Class /Script/DeadByDaylight.LocalPlayerTrackerComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class ULocalPlayerTrackerComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2175) /* FMulticastInlineDelegate */ __um(TrackerOnLocallyObservedChanged);                   // 0x00B8   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.LocalPlayerTrackerComponent.TriggerOnLocallyObservedChanged
	// void TriggerOnLocallyObservedChanged();                                                                               // [0x58ae310] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.LocalPlayerUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class ULocalPlayerUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.LocalPlayerUtilities.GetFirstLocalValidHumanPlayerState
	// class ADBDPlayerState* GetFirstLocalValidHumanPlayerState(class UObject* WorldContextObject);                         // [0x58ad0e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.Locker
/// Size: 0x0150 (0x000338 - 0x000488)
class ALocker : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0338   (0x0010)  MISSED
	SDK_UNDEFINED(16,2176) /* FMulticastInlineDelegate */ __um(OnPlayerInLockerChanged);                           // 0x0348   (0x0010)  
	float                                              FastDoorActivationAudibleRange;                             // 0x0358   (0x0004)  
	float                                              NormalDoorActivationAudibleRange;                           // 0x035C   (0x0004)  
	class UBoxComponent*                               _boxComponent;                                              // 0x0360   (0x0008)  
	class UAnimationMontageSlave*                      _montageFollower;                                           // 0x0368   (0x0008)  
	class UMontagePlayer*                              _montagePlayer;                                             // 0x0370   (0x0008)  
	class ADBDPlayer*                                  _playerOpeningLocker;                                       // 0x0378   (0x0008)  
	class ADBDPlayer*                                  _playerInLocker;                                            // 0x0380   (0x0008)  
	class UInteractor*                                 _mainInteractor;                                            // 0x0388   (0x0008)  
	class UPrimitiveComponent*                         _frontInteractionZone;                                      // 0x0390   (0x0008)  
	class UInteractionDefinition*                      _searchEmpty;                                               // 0x0398   (0x0008)  
	class UInteractionDefinition*                      _searchPlayer;                                              // 0x03A0   (0x0008)  
	class UChildActorComponent*                        _killerInteractionActor;                                    // 0x03A8   (0x0008)  
	class UInteractionDefinition*                      _enterSneak;                                                // 0x03B0   (0x0008)  
	FName                                              _camperSocket;                                              // 0x03B8   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x03C4   (0x0004)  MISSED
	class ULockerAnimInstance*                         _lockerAnimInstance;                                        // 0x03C8   (0x0008)  
	FGameplayTagContainer                              _interactionExitClosetSemantics;                            // 0x03D0   (0x0020)  
	unsigned char                                      UnknownData02_5[0x48];                                      // 0x03F0   (0x0048)  MISSED
	bool                                               _preventAllInteractions;                                    // 0x0438   (0x0001)  
	bool                                               _local_preventAllInteractions;                              // 0x0439   (0x0001)  
	unsigned char                                      UnknownData03_5[0x6];                                       // 0x043A   (0x0006)  MISSED
	class ABaseLockerItem*                             _spawnedLockerItem;                                         // 0x0440   (0x0008)  
	unsigned char                                      UnknownData04_5[0x38];                                      // 0x0448   (0x0038)  MISSED
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                                // 0x0480   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.Locker.StopMinNearOutlineDistLerp
	// void StopMinNearOutlineDistLerp(class ADBDPlayer* Player);                                                            // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Locker.StartMinNearOutlineDistLerp
	// void StartMinNearOutlineDistLerp(class ADBDPlayer* Player);                                                           // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Locker.SetSurvivorInLocker
	// void SetSurvivorInLocker(class ACamperPlayer* Survivor);                                                              // [0x58ae180] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Locker.SetPlayerOpeningLocker
	// void SetPlayerOpeningLocker(class ADBDPlayer* Player);                                                                // [0x58adff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Locker.SetPlayerInLockerVisibility
	// void SetPlayerInLockerVisibility(bool IsVisible);                                                                     // [0x58adf60] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/DeadByDaylight.Locker.OnSurvivorHealthChanged
	// void OnSurvivorHealthChanged(ECamperDamageState before, ECamperDamageState after);                                    // [0x58ade00] Final|Native|Private 
	// Function /Script/DeadByDaylight.Locker.OnSurvivorEndPlay
	// void OnSurvivorEndPlay(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);                               // [0x58add30] Final|Native|Private 
	// Function /Script/DeadByDaylight.Locker.OnRep_PreventAllInteractions
	// void OnRep_PreventAllInteractions();                                                                                  // [0x58adcf0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Locker.OnPlayerInLockerChanged__DelegateSignature
	// void OnPlayerInLockerChanged__DelegateSignature(class ADBDPlayer* playerWhoWasInLocker, class ADBDPlayer* playerNowInLocker); // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.Locker.Multicast_EjectSurvivor
	// void Multicast_EjectSurvivor();                                                                                       // [0x58adb70] Net|NetReliableNative|Event|NetMulticast|Public|NetValidate 
	// Function /Script/DeadByDaylight.Locker.IsOccupied
	// bool IsOccupied();                                                                                                    // [0x58ad710] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Locker.IsFacingLocker
	// bool IsFacingLocker(class ADBDPlayer* Player, float toleranceDegreeAngle);                                            // [0x58ad5c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Locker.GetSurvivorInLocker
	// class ACamperPlayer* GetSurvivorInLocker();                                                                           // [0x58ad400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Locker.GetStunZone
	// class UPrimitiveComponent* GetStunZone();                                                                             // [0x58ad3d0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.Locker.GetPlayerInLocker
	// class ADBDPlayer* GetPlayerInLocker();                                                                                // [0x58ad370] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Locker.GetPlayerInClosetLocation
	// FVector GetPlayerInClosetLocation();                                                                                  // [0x58ad330] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.Locker.GetMesh
	// class USkeletalMeshComponent* GetMesh();                                                                              // [0x58ad300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Locker.GetLockerHideEnterSneakInteraction
	// class UInteractionDefinition* GetLockerHideEnterSneakInteraction();                                                   // [0x58ad2d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Locker.GetInteractor
	// class UInteractor* GetInteractor();                                                                                   // [0x58ad2a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Locker.GetChildInteractionActor
	// class AActor* GetChildInteractionActor();                                                                             // [0x58ad0b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Locker.EjectSurvivor
	// void EjectSurvivor();                                                                                                 // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Locker.Authority_ReportOpenLockerNoiseEventToAI
	// void Authority_ReportOpenLockerNoiseEventToAI(bool fastActivation);                                                   // [0x58ace40] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Locker.Authority_EnableOtherInteractors
	// void Authority_EnableOtherInteractors(class UInteractor* usableInteractor, bool usable);                              // [0x58acd70] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.LockerAmmoActorOutlineUpdateStrategy
/// Size: 0x0000 (0x000100 - 0x000100)
class ULockerAmmoActorOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.LockerAnimInstance
/// Size: 0x0000 (0x0002D0 - 0x0002D0)
class ULockerAnimInstance : public USleepingAnimInstance
{ 
public:
};

/// Class /Script/DeadByDaylight.LockerOutlineUpdateStrategy
/// Size: 0x0018 (0x000158 - 0x000170)
class ULockerOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0158   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.LockerOutlineUpdateStrategy.GetRedColor
	// FLinearColor GetRedColor();                                                                                           // [0x58b2e90] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.LoudNoise
/// Size: 0x0070 (0x000230 - 0x0002A0)
class ALoudNoise : public AActor
{ 
public:
	class UDecalComponent*                             _toInfinityDecal;                                           // 0x0230   (0x0008)  
	class UParticleSystemComponent*                    _distortionParticleSystem;                                  // 0x0238   (0x0008)  
	class UAkComponent*                                _ak_audio_loudNoise;                                        // 0x0240   (0x0008)  
	class USceneComponent*                             _rootScene;                                                 // 0x0248   (0x0008)  
	float                                              _loudNoiseMinDistance;                                      // 0x0250   (0x0004)  
	unsigned char                                      UnknownData00_5[0x34];                                      // 0x0254   (0x0034)  MISSED
	float                                              _loudNoiseLifetime;                                         // 0x0288   (0x0004)  
	float                                              _heightToAddToLoudNoiseLocation;                            // 0x028C   (0x0004)  
	float                                              _loudNoiseDecalDistance;                                    // 0x0290   (0x0004)  
	float                                              _cameraDecalDistance;                                       // 0x0294   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0298   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.LoudNoiseEventSystem
/// Size: 0x0090 (0x0000B8 - 0x000148)
class ULoudNoiseEventSystem : public UActorComponent
{ 
public:
	TArray<FGameplayTag>                               _requiredPlayerStateTags;                                   // 0x00B8   (0x0010)  
	TArray<FGameplayTag>                               _preventativePlayerStateTags;                               // 0x00C8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x70];                                      // 0x00D8   (0x0070)  MISSED
};

/// Struct /Script/DeadByDaylight.LoudNoiseIndicatorData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FLoudNoiseIndicatorData
{ 
	class UStaticMeshComponent*                        MeshMask;                                                   // 0x0000   (0x0008)  
	class UStaticMeshComponent*                        DistortionMesh;                                             // 0x0008   (0x0008)  
	FVector                                            Location;                                                   // 0x0010   (0x000C)  
	float                                              RemainingTime;                                              // 0x001C   (0x0004)  
};

/// Class /Script/DeadByDaylight.LoudNoiseHUDIndicator
/// Size: 0x0070 (0x000220 - 0x000290)
class ULoudNoiseHUDIndicator : public USceneComponent
{ 
public:
	class UStaticMesh*                                 MaskMesh;                                                   // 0x0218   (0x0008)  
	class UStaticMesh*                                 DistortionMesh;                                             // 0x0220   (0x0008)  
	float                                              EdgePadding;                                                // 0x0228   (0x0004)  
	float                                              CornerRoundness;                                            // 0x022C   (0x0004)  
	float                                              ScreenFadeOutDistance;                                      // 0x0230   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0234   (0x0004)  MISSED
	SDK_UNDEFINED(16,2177) /* FMulticastInlineDelegate */ __um(LoudNoiseAddedEvent);                               // 0x0238   (0x0010)  
	unsigned char                                      UnknownData01_5[0x38];                                      // 0x0248   (0x0038)  MISSED
	TArray<FLoudNoiseIndicatorData>                    _trackedNoises;                                             // 0x0280   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.LoudNoiseHUDIndicator.AddTrackedNoise
	// void AddTrackedNoise(FVector Location, float Duration);                                                               // [0x58b1f80] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.LoudNoiseNotifier
/// Size: 0x0000 (0x000030 - 0x000030)
class ULoudNoiseNotifier : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.LoudNoiseNotifier.FireWithTimeBudgeter
	// void FireWithTimeBudgeter(class UObject* WorldContextObject, class AActor* Instigator, FVector& Location, bool shouldTrack, float audibleRange, class ADBDPlayer* instigatingPlayer, bool isQuickAction); // [0x58b2bb0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.LoudNoiseNotifier.Fire
	// void Fire(class UObject* WorldContextObject, class AActor* Instigator, FVector& Location, bool shouldTrack, float audibleRange, class ADBDPlayer* instigatingPlayer, bool isQuickAction, bool isDeceivingNoise); // [0x58b2940] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.LoudNoiseUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class ULoudNoiseUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.LteUIUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class ULteUIUtilities : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.LunarEventComponent
/// Size: 0x0050 (0x0000B8 - 0x000108)
class ULunarEventComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	int32_t                                            _lanternCollectedCount;                                     // 0x00D0   (0x0004)  
	int32_t                                            _additionalEventProgressCount;                              // 0x00D4   (0x0004)  
	unsigned char                                      UnknownData01_6[0x30];                                      // 0x00D8   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.LunarEventComponent.OnRep_lanternCollectedCount
	// void OnRep_lanternCollectedCount();                                                                                   // [0x58b3ac0] Final|Native|Private 
	// Function /Script/DeadByDaylight.LunarEventComponent.OnLanternHoldTimerEnd
	// void OnLanternHoldTimerEnd();                                                                                         // [0x58b3670] Final|Native|Private 
	// Function /Script/DeadByDaylight.LunarEventComponent.OnFinishedPlaying
	// void OnFinishedPlaying(FGameplayTag gameEventType, FGameEventData& GameEventData);                                    // [0x58b34d0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LunarEventComponent.Multicast_ResetLanternLight
	// void Multicast_ResetLanternLight(class ALanternInteractable* LanternInteractable);                                    // [0x58b32e0] Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate 
	// Function /Script/DeadByDaylight.LunarEventComponent.Local_OnCamperLostLantern
	// void Local_OnCamperLostLantern(FGameplayTag gameEventType, FGameEventData& GameEventData);                            // [0x58b31d0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LunarEventComponent.Local_OnCamperEscape
	// void Local_OnCamperEscape(FGameplayTag gameEventType, FGameEventData& GameEventData);                                 // [0x58b30c0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LunarEventComponent.Authority_OnSlasherDestroysLantern
	// void Authority_OnSlasherDestroysLantern(FGameplayTag gameEventType, FGameEventData& GameEventData);                   // [0x58b26c0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LunarEventComponent.Authority_OnPlayerLeaveGame
	// void Authority_OnPlayerLeaveGame(FGameplayTag gameEventType, FGameEventData& GameEventData);                          // [0x58b25b0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LunarEventComponent.Authority_OnPickupLantern
	// void Authority_OnPickupLantern(FGameplayTag gameEventType, FGameEventData& GameEventData);                            // [0x58b24a0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LunarEventComponent.Authority_OnFixGenerator
	// void Authority_OnFixGenerator(FGameplayTag gameEventType, FGameEventData& GameEventData);                             // [0x58b2390] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LunarEventComponent.Authority_OnDestroyCamperLightGameEvent
	// void Authority_OnDestroyCamperLightGameEvent(FGameplayTag gameEventType, FGameEventData& GameEventData);              // [0x58b2280] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LunarEventComponent.Authority_OnCamperLostLantern
	// void Authority_OnCamperLostLantern(FGameplayTag gameEventType, FGameEventData& GameEventData);                        // [0x58b2170] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.LunarEventComponent.Authority_OnCamperEscape
	// void Authority_OnCamperEscape(FGameplayTag gameEventType, FGameEventData& GameEventData);                             // [0x58b2060] Final|Native|Private|HasOutParms 
};

/// Class /Script/DeadByDaylight.MagicFountain
/// Size: 0x0018 (0x000338 - 0x000350)
class AMagicFountain : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	FVector                                            AIInteractionOffset;                                        // 0x0340   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x034C   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.MagicFountain.IsCorrupted
	// bool IsCorrupted();                                                                                                   // [0x58b2ff0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.MagicFountainOutlineUpdateStrategy
/// Size: 0x0018 (0x0000E0 - 0x0000F8)
class UMagicFountainOutlineUpdateStrategy : public UOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       _outlineColor;                                              // 0x00E0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00F0   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.MagicFountainOutlineUpdateStrategy.SetFountainCorrupted
	// void SetFountainCorrupted(bool corrupted);                                                                            // [0x57afa20] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ManualIconStrategy
/// Size: 0x0008 (0x000038 - 0x000040)
class UManualIconStrategy : public UBasePerkIconStrategy
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.MapActorComponent
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class UMapActorComponent : public UActorComponent
{ 
public:
	EMapActorCategory                                  category;                                                   // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00B9   (0x0007)  MISSED
	class UPrimitiveComponent*                         _mapActorCollider;                                          // 0x00C0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x00C8   (0x0018)  MISSED
	bool                                               _detectionEnabled;                                          // 0x00E0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x00E1   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.MapActorComponent.Multicast_SetDetectionEnabled
	// void Multicast_SetDetectionEnabled(bool Enabled);                                                                     // [0x5070b90] BlueprintAuthorityOnly|Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MapActorComponent.IsKnownBy
	// bool IsKnownBy(class ADBDPlayer* Character);                                                                          // [0x58b3020] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MapActorComponent.GetDetectionEnabled
	// bool GetDetectionEnabled();                                                                                           // [0x58b2de0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.MapActorDB
/// Size: 0x0050 (0x000030 - 0x000080)
class UMapActorDB : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0030   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.MapActorDB.GetUniqueRandom
	// TArray<AActor*> GetUniqueRandom(TArray<EMapActorCategory>& Categories, int32_t Count);                                // [0x58b2eb0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MapActorDB.GetRandom
	// class AActor* GetRandom(EMapActorCategory category);                                                                  // [0x58b2e00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MapActorDB.CopyListMinusCategories
	// TArray<EMapActorCategory> CopyListMinusCategories(TArray<EMapActorCategory>& Categories, TArray<EMapActorCategory>& categoriesToRemove); // [0x58b27d0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.MapActorDetectorComponent
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UMapActorDetectorComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2178) /* FMulticastInlineDelegate */ __um(OnActorDetected);                                   // 0x00B8   (0x0010)  
	TArray<EMapActorCategory>                          CollectedCategories;                                        // 0x00C8   (0x0010)  
	class UPrimitiveComponent*                         _primitive;                                                 // 0x00D8   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.MapActorDetectorComponent.SetDetectionPrimitive
	// void SetDetectionPrimitive(class UPrimitiveComponent* Primitive);                                                     // [0x57b0d10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MapActorDetectorComponent.OnOverlapEnter
	// void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x58b3720] Final|Native|Protected|HasOutParms 
};

/// Struct /Script/DeadByDaylight.TileProperties
/// Size: 0x0078 (0x000000 - 0x000078)
struct FTileProperties
{ 
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0000   (0x0078)  MISSED
};

/// Class /Script/DeadByDaylight.MapData
/// Size: 0x00B0 (0x000038 - 0x0000E8)
class UMapData : public UDataAsset
{ 
public:
	FName                                              ThemeName;                                                  // 0x0038   (0x000C)  
	FName                                              ThemeWeather;                                               // 0x0044   (0x000C)  
	FName                                              AudioStateThemes;                                           // 0x0050   (0x000C)  
	FName                                              AudioStateWeather;                                          // 0x005C   (0x000C)  
	FName                                              AudioThemeEvent;                                            // 0x0068   (0x000C)  
	FName                                              AudioLimitPointEvent;                                       // 0x0074   (0x000C)  
	SDK_UNDEFINED(48,2179) /* TWeakObjectPtr<UAkAudioBank*> */ __um(AudioThemeSoundBank);                          // 0x0080   (0x0030)  
	int32_t                                            MapWidth;                                                   // 0x00B0   (0x0004)  
	int32_t                                            MapHeight;                                                  // 0x00B4   (0x0004)  
	bool                                               Draft;                                                      // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00B9   (0x0007)  MISSED
	TArray<FTileProperties>                            MapTileProperties;                                          // 0x00C0   (0x0010)  
	class UBlackboardData*                             Blackboard;                                                 // 0x00D0   (0x0008)  
	bool                                               Gesture;                                                    // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x00D9   (0x0007)  MISSED
	class UProceduralGenerationData*                   _proceduralGenerationData;                                  // 0x00E0   (0x0008)  
};

/// Class /Script/DeadByDaylight.MapSpecificGameStateComponent
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UMapSpecificGameStateComponent : public UActorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.MatchHandler
/// Size: 0x0000 (0x000030 - 0x000030)
class UMatchHandler : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.MatchIncentivesManager
/// Size: 0x0078 (0x000038 - 0x0000B0)
class UMatchIncentivesManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0038   (0x0078)  MISSED
};

/// Class /Script/DeadByDaylight.MatchmakingFlowSubsystem
/// Size: 0x00D0 (0x000038 - 0x000108)
class UMatchmakingFlowSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0xD0];                                      // 0x0038   (0x00D0)  MISSED
};

/// Class /Script/DeadByDaylight.MatchMakingWidgetScreen
/// Size: 0x0000 (0x000120 - 0x000120)
class UMatchMakingWidgetScreen : public UScreenBase
{ 
public:
};

/// Class /Script/DeadByDaylight.MatchManagementScreen
/// Size: 0x00C0 (0x000120 - 0x0001E0)
class UMatchManagementScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0xC0];                                      // 0x0120   (0x00C0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.MatchManagementScreen.OnRemoveMap
	// void OnRemoveMap(FString MapId);                                                                                      // [0x58b39d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.MatchManagementScreen.OnPerksSettingsChange
	// void OnPerksSettingsChange(int32_t value);                                                                            // [0x58b3940] Final|Native|Private 
	// Function /Script/DeadByDaylight.MatchManagementScreen.OnOfferingsSettingsChange
	// void OnOfferingsSettingsChange(int32_t value);                                                                        // [0x58b3690] Final|Native|Private 
	// Function /Script/DeadByDaylight.MatchManagementScreen.OnItemsAndAddonsSettingsChange
	// void OnItemsAndAddonsSettingsChange(int32_t value);                                                                   // [0x58b35e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.MatchManagementScreen.OnBackButtonClick
	// void OnBackButtonClick();                                                                                             // [0x57bc860] Final|Native|Private 
	// Function /Script/DeadByDaylight.MatchManagementScreen.OnApplyChangesClicked
	// void OnApplyChangesClicked();                                                                                         // [0x58b34b0] Final|Native|Private 
	// Function /Script/DeadByDaylight.MatchManagementScreen.OnAllowDlcSettingsClick
	// void OnAllowDlcSettingsClick();                                                                                       // [0x58b3490] Final|Native|Private 
	// Function /Script/DeadByDaylight.MatchManagementScreen.OnAddMap
	// void OnAddMap(FString MapId);                                                                                         // [0x58b33a0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.MeatHook
/// Size: 0x0350 (0x000338 - 0x000688)
class AMeatHook : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0338   (0x0018)  MISSED
	bool                                               WasSurvivorStruggleCancelled;                               // 0x0350   (0x0001)  
	bool                                               IsSacrificeEnabled;                                         // 0x0351   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0352   (0x0002)  MISSED
	FVector                                            AIInteractionOffset;                                        // 0x0354   (0x000C)  
	unsigned char                                      UnknownData02_5[0xA8];                                      // 0x0360   (0x00A8)  MISSED
	TArray<class UDBDClipRegionComponent*>             ClipRegions;                                                // 0x0408   (0x0010)  
	bool                                               IsSurvivorStruggling;                                       // 0x0418   (0x0001)  
	bool                                               IsInBasement;                                               // 0x0419   (0x0001)  
	bool                                               IsBreakable;                                                // 0x041A   (0x0001)  
	bool                                               IsSabotageable;                                             // 0x041B   (0x0001)  
	bool                                               CanBeScourgeHook;                                           // 0x041C   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x041D   (0x0003)  MISSED
	FGameplayTag                                       HookIdentityTag;                                            // 0x0420   (0x000C)  
	bool                                               SnapHookedCharacter;                                        // 0x042C   (0x0001)  
	bool                                               FullyHooked;                                                // 0x042D   (0x0001)  
	unsigned char                                      UnknownData04_5[0x2];                                       // 0x042E   (0x0002)  MISSED
	float                                              _struggleThreshold;                                         // 0x0430   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x0434   (0x0004)  MISSED
	class UCharacterPusherComponent*                   _characterPusher;                                           // 0x0438   (0x0008)  
	class UCapsuleComponent*                           _slasherCollisionBlocker;                                   // 0x0440   (0x0008)  
	class UCapsuleComponent*                           _conditionalSlasherCollisionBlocker;                        // 0x0448   (0x0008)  
	FGameplayTagContainer                              _conditionalSlasherCollisionBlockerPresenceTags;            // 0x0450   (0x0020)  
	class UChargeableComponent*                        _antiCampUnhookChargeable;                                  // 0x0470   (0x0008)  
	FDBDTunableRowHandle                               _maxSecondsToChargeAntiCampUnhook;                          // 0x0478   (0x0028)  
	class UCurveFloat*                                 _antiCampUnhookXYDistanceToChargeCurve;                     // 0x04A0   (0x0008)  
	class UCurveFloat*                                 _antiCampUnhookUpperZDistanceToChargeCurve;                 // 0x04A8   (0x0008)  
	class UCurveFloat*                                 _antiCampUnhookLowerZDistanceToChargeCurve;                 // 0x04B0   (0x0008)  
	FGameplayTagContainer                              _stateTagsToApplyOnBeginPlay;                               // 0x04B8   (0x0020)  
	class UPollableEventListener*                      _eventListener;                                             // 0x04D8   (0x0008)  
	class ACamperPlayer*                               _hookedSurvivor;                                            // 0x04E0   (0x0008)  
	class ADBDPlayer*                                  _hookBreakerPlayer;                                         // 0x04E8   (0x0008)  
	unsigned char                                      UnknownData06_5[0x68];                                      // 0x04F0   (0x0068)  MISSED
	SDK_UNDEFINED(80,2180) /* TSet<ACamperPlayer*> */  __um(_campersThatSabotagedMeatHook);                        // 0x0558   (0x0050)  
	class UInteractor*                                 _mainInteractor;                                            // 0x05A8   (0x0008)  
	class UChargeableInteractionDefinition*            _unhook;                                                    // 0x05B0   (0x0008)  
	class USceneComponent*                             _camperHookedSnapTransform;                                 // 0x05B8   (0x0008)  
	class AEntity*                                     _entity;                                                    // 0x05C0   (0x0008)  
	unsigned char                                      UnknownData07_5[0x20];                                      // 0x05C8   (0x0020)  MISSED
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                                // 0x05E8   (0x0008)  
	class ADBDPlayer*                                  _interactingPlayer;                                         // 0x05F0   (0x0008)  
	class UMapActorComponent*                          _cachedMapActor;                                            // 0x05F8   (0x0008)  
	unsigned char                                      UnknownData08_5[0x18];                                      // 0x0600   (0x0018)  MISSED
	float                                              _antiCampGracePeriod;                                       // 0x0618   (0x0004)  
	unsigned char                                      UnknownData09_6[0x6C];                                      // 0x061C   (0x006C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.MeatHook.UpdateSlasherBlockerCollision
	// void UpdateSlasherBlockerCollision();                                                                                 // [0x58b8300] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.SetMapActor
	// void SetMapActor(class UMapActorComponent* value);                                                                    // [0x58b8240] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.SetIsBeingSabotaged
	// void SetIsBeingSabotaged(bool isBeingSabotaged);                                                                      // [0x58b81b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.SetInteractingPlayer
	// void SetInteractingPlayer(class ADBDPlayer* interactingPlayer);                                                       // [0x58b8120] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.SetEntity
	// void SetEntity(class AEntity* Entity);                                                                                // [0x58b8090] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.OnTickStruggle
	// void OnTickStruggle(float DeltaTime);                                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnStruggleSkillCheckFailed_Cosmetic
	// void OnStruggleSkillCheckFailed_Cosmetic();                                                                           // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnStruggleExit
	// void OnStruggleExit();                                                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnStruggleEnter
	// void OnStruggleEnter();                                                                                               // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnStopPushingPlayer
	// void OnStopPushingPlayer(class ACharacter* Character);                                                                // [0x58b8000] Final|Native|Private 
	// Function /Script/DeadByDaylight.MeatHook.OnStartPushingPlayer
	// void OnStartPushingPlayer(class ACharacter* Character);                                                               // [0x58b7f70] Final|Native|Private 
	// Function /Script/DeadByDaylight.MeatHook.OnSacrificeOut
	// void OnSacrificeOut();                                                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnSacrificeIn
	// void OnSacrificeIn();                                                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnReactionIn
	// void OnReactionIn();                                                                                                  // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnReaction
	// void OnReaction();                                                                                                    // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnOwnerReplicated
	// void OnOwnerReplicated();                                                                                             // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnHookingExit
	// void OnHookingExit();                                                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnHookingEnter
	// void OnHookingEnter();                                                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnHookedSurvivorChanged
	// void OnHookedSurvivorChanged(class ACamperPlayer* before, class ACamperPlayer* after);                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnHookedSurvivorAttacked
	// void OnHookedSurvivorAttacked();                                                                                      // [0x58b7f50] Final|Native|Protected 
	// Function /Script/DeadByDaylight.MeatHook.OnHookedIdle
	// void OnHookedIdle();                                                                                                  // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnHookedExit
	// void OnHookedExit();                                                                                                  // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnHookedEnter
	// void OnHookedEnter();                                                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.OnEscapeDoorActivated
	// void OnEscapeDoorActivated();                                                                                         // [0x58b7f30] Final|Native|Private 
	// Function /Script/DeadByDaylight.MeatHook.OnAutoRepair
	// void OnAutoRepair();                                                                                                  // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.Multicast_SetIsSacrificed
	// void Multicast_SetIsSacrificed(bool IsSacrificed);                                                                    // [0x58b7ea0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.MeatHook.Multicast_SetIsSabotaged
	// void Multicast_SetIsSabotaged(bool setIsSabotaged, class ADBDPlayer* hookBreaker, bool useCamperHookRespawnDurationModifiers, float overrideBaseHookRespawnDuration); // [0x58b7d30] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.MeatHook.Multicast_SetIsBrokenFromUnhook
	// void Multicast_SetIsBrokenFromUnhook(bool setIsBrokendFromUnhook, class ADBDPlayer* hookBreaker, float overrideBaseHookRespawnDuration); // [0x58b7c10] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.MeatHook.Multicast_SetHookedSurvivor
	// void Multicast_SetHookedSurvivor(class ACamperPlayer* Survivor);                                                      // [0x58b7b80] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.MeatHook.Multicast_RefreshCharmCustomization
	// void Multicast_RefreshCharmCustomization();                                                                           // [0x58b7b60] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.MeatHook.Multicast_EscapeAttemptResult
	// void Multicast_EscapeAttemptResult(class ADBDPlayer* Player, bool Result);                                            // [0x58b7a90] Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.Local_OnHookedSurvivorDrainStageChanged
	// void Local_OnHookedSurvivorDrainStageChanged(int32_t drainStage, class ADBDPlayer* Target);                           // [0x58b79c0] Final|Native|Private|Const 
	// Function /Script/DeadByDaylight.MeatHook.Local_MoveSurvivorToHook
	// void Local_MoveSurvivorToHook(class ACamperPlayer* Survivor, float Duration);                                         // [0x58b78f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.GetUnhookOutMontageDescriptor
	// FAnimationMontageDescriptor GetUnhookOutMontageDescriptor();                                                          // [0x58b7880] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetUnhookInteraction
	// class UChargeableInteractionDefinition* GetUnhookInteraction();                                                       // [0x61d2f50] Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetUnhookInMontageDescriptor
	// FAnimationMontageDescriptor GetUnhookInMontageDescriptor();                                                           // [0x58b7830] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetStruggleThreshold
	// float GetStruggleThreshold();                                                                                         // [0x58b7760] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetStrugglePercent
	// float GetStrugglePercent();                                                                                           // [0x58b7730] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetSaboteurPlayer
	// class ADBDPlayer* GetSaboteurPlayer();                                                                                // [0x58b7710] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetSabotageHookRespawnDuration
	// float GetSabotageHookRespawnDuration();                                                                               // [0x58b76e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetMontagePlayer
	// class UMontagePlayer* GetMontagePlayer();                                                                             // [0x58b76b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetMeatHookAkAudioComponent
	// class UAkComponent* GetMeatHookAkAudioComponent();                                                                    // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetMainInteractor
	// class UInteractor* GetMainInteractor();                                                                               // [0x58b7680] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetIsSacrificed
	// bool GetIsSacrificed();                                                                                               // [0x58b7650] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetIsSabotaged
	// bool GetIsSabotaged();                                                                                                // [0x58b7620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetIsInBasement
	// bool GetIsInBasement();                                                                                               // [0x58b7600] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetIsBroken
	// bool GetIsBroken();                                                                                                   // [0x58b75d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetInteractorZoneComponent
	// class UBoxComponent* GetInteractorZoneComponent();                                                                    // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetInteractorPrimitiveComponent
	// class UPrimitiveComponent* GetInteractorPrimitiveComponent();                                                         // [0x58b75a0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetInteractingPlayer
	// class ADBDPlayer* GetInteractingPlayer();                                                                             // [0x58b7580] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetHookPosition
	// FVector GetHookPosition();                                                                                            // [0x61d2f50] Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetHookedSurvivor
	// class ACamperPlayer* GetHookedSurvivor();                                                                             // [0x58b7550] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetHookableComponentOfHookedActor
	// class UHookableComponent* GetHookableComponentOfHookedActor();                                                        // [0x58b7520] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetEscapeHookInteraction
	// class UChargeableInteractionDefinition* GetEscapeHookInteraction();                                                   // [0x61d2f50] Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetCharacterPusher
	// class UCharacterPusherComponent* GetCharacterPusher();                                                                // [0x58337d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetCamperUnkookFocalPointTransform
	// class USceneComponent* GetCamperUnkookFocalPointTransform();                                                          // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetCamperHookedSnapTransform
	// class USceneComponent* GetCamperHookedSnapTransform();                                                                // [0x58b74f0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetAntiCampMaxXYCurveDistanceTime
	// float GetAntiCampMaxXYCurveDistanceTime();                                                                            // [0x58b74c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetAntiCampMaxUpperZCurveDistanceTime
	// float GetAntiCampMaxUpperZCurveDistanceTime();                                                                        // [0x58b7490] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetAntiCampMaxLowerZCurveDistanceTime
	// float GetAntiCampMaxLowerZCurveDistanceTime();                                                                        // [0x58b7460] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetAntiCampGracePeriod
	// float GetAntiCampGracePeriod();                                                                                       // [0x58b7440] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.GetAntiCampEscapeHookInteraction
	// class UChargeableInteractionDefinition* GetAntiCampEscapeHookInteraction();                                           // [0x61d2f50] Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.MeatHook.FireHookSoundEvent
	// void FireHookSoundEvent(FName NoiseRangeTunable, class ADBDPlayer* soundInstigator);                                  // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.MeatHook.DebugHookedSurvivor
	// void DebugHookedSurvivor(class ACamperPlayer* expectedSurvivor);                                                      // [0x58b7380] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/DeadByDaylight.MeatHook.Cosmetic_SetAsScourgeHookStart
	// void Cosmetic_SetAsScourgeHookStart();                                                                                // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.CanUnhookSurvivor
	// bool CanUnhookSurvivor(class ACamperPlayer* Survivor);                                                                // [0x58b72e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.CanSurvivorStruggle
	// bool CanSurvivorStruggle(class ACamperPlayer* Survivor);                                                              // [0x58b7210] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.CanSurvivorAttemptEscape
	// bool CanSurvivorAttemptEscape(class ACamperPlayer* Survivor);                                                         // [0x58b7170] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.CanHookSurvivor
	// bool CanHookSurvivor();                                                                                               // [0x58b7140] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.CanBeSabotaged
	// bool CanBeSabotaged();                                                                                                // [0x58b7110] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MeatHook.BroadcastUnhook
	// void BroadcastUnhook(class ADBDPlayer* rescuer);                                                                      // [0x58b7080] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.BP_OnHookInteractionStarted
	// void BP_OnHookInteractionStarted();                                                                                   // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.MeatHook.Authority_SignalUnhookingEnter
	// void Authority_SignalUnhookingEnter();                                                                                // [0x58b7060] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.Authority_SignalUnhookingCharged
	// void Authority_SignalUnhookingCharged();                                                                              // [0x58b7040] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.Authority_SignalUnhookingAborted
	// void Authority_SignalUnhookingAborted();                                                                              // [0x58b7020] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.Authority_SignalSurvivorAttemptingEscapeAborted
	// void Authority_SignalSurvivorAttemptingEscapeAborted();                                                               // [0x58b7000] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.Authority_SignalSurvivorAttemptingEscape
	// void Authority_SignalSurvivorAttemptingEscape();                                                                      // [0x58b6fe0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.Authority_SetIsSacrificed
	// void Authority_SetIsSacrificed(bool IsSacrificed);                                                                    // [0x58b6f50] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.Authority_SetIsSabotaged
	// void Authority_SetIsSabotaged(bool isSabotaged, class ADBDPlayer* Saboteur, bool useCamperHookRespawnDurationModifiers, float overrideBaseHookRespawnDuration); // [0x58b6de0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.Authority_SetIsBrokenFromUnhook
	// void Authority_SetIsBrokenFromUnhook(bool isBrokenFromUnhook, class ADBDPlayer* hookBreaker, float overrideBaseHookRespawnDuration); // [0x58b6cc0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MeatHook.Authority_SetHookedSurvivor
	// void Authority_SetHookedSurvivor(class ACamperPlayer* Survivor);                                                      // [0x58b6c30] Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.MeatHookAnimInstance
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UMeatHookAnimInstance : public UAnimInstance
{ 
public:
	bool                                               IsBroken;                                                   // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02C1   (0x0003)  MISSED
	float                                              Yaw;                                                        // 0x02C4   (0x0004)  
	bool                                               IsSurvivorStruggling;                                       // 0x02C8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02C9   (0x0007)  MISSED
};

/// Class /Script/DeadByDaylight.MeatHookEntityVisibilityComponent
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class UMeatHookEntityVisibilityComponent : public UActorComponent
{ 
public:
	class AEntity*                                     _entity;                                                    // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData00_5[0x1C];                                      // 0x00C0   (0x001C)  MISSED
	float                                              _entityReappearSpeed;                                       // 0x00DC   (0x0004)  
	float                                              _entityDisappearSpeed;                                      // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00E4   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.MeatHookOutlineUpdateStrategy
/// Size: 0x0040 (0x000158 - 0x000198)
class UMeatHookOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       HookedOutlineColorSlasher;                                  // 0x0158   (0x0010)  
	FLinearColor                                       CarryingOutlineColorSlasher;                                // 0x0168   (0x0010)  
	FLinearColor                                       DefaultOutlineColorSlasher;                                 // 0x0178   (0x0010)  
	FLinearColor                                       VisibleOutlineColorCamper;                                  // 0x0188   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.MeatHookOutlineUpdateStrategy.Local_AddBasementOfferingReveal
	// void Local_AddBasementOfferingReveal();                                                                               // [0x58b78d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.MeatHookOutlineUpdateStrategy.Authority_AddBasementHookToPlayerMapItem
	// void Authority_AddBasementHookToPlayerMapItem();                                                                      // [0x58b6c10] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.MeatHookStateMachine
/// Size: 0x0000 (0x000130 - 0x000130)
class UMeatHookStateMachine : public UStateMachine
{ 
public:
};

/// Class /Script/DeadByDaylight.MemoryTracker
/// Size: 0x0000 (0x000230 - 0x000230)
class AMemoryTracker : public AActor
{ 
public:
};

/// Class /Script/DeadByDaylight.MenuAssetLibrary
/// Size: 0x0010 (0x000120 - 0x000130)
class UMenuAssetLibrary : public UItemsAssetLibrary
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0120   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.MenuCameraActor
/// Size: 0x00B0 (0x0007C0 - 0x000870)
class AMenuCameraActor : public ACameraActor
{ 
public:
	unsigned char                                      UnknownData00_1[0xB0];                                      // 0x07C0   (0x00B0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.MenuCameraActor.TransitionInProgress
	// bool TransitionInProgress();                                                                                          // [0x58b82d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MenuCameraActor.K2_TransitionStarted
	// void K2_TransitionStarted(EDBDCameraViewType View);                                                                   // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.MenuCameraActor.K2_TransitionFinished
	// void K2_TransitionFinished(EDBDCameraViewType View);                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.MenuCameraActor.GetTransitionTargetView
	// FMenuCameraView GetTransitionTargetView();                                                                            // [0x58b77e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MenuCameraActor.GetTransitionInitView
	// FMenuCameraView GetTransitionInitView();                                                                              // [0x58b7790] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MenuCameraActor.GetActiveView
	// EDBDCameraViewType GetActiveView();                                                                                   // [0x58b7410] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MenuCameraActor.CanTransition
	// bool CanTransition();                                                                                                 // [0x58b72b0] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.MenuCameraDesignTunables
/// Size: 0x0060 (0x000038 - 0x000098)
class UMenuCameraDesignTunables : public UDataAsset
{ 
public:
	class UClass*                                      CameraClass;                                                // 0x0038   (0x0008)  
	class UCurveFloat*                                 TransitionCurve;                                            // 0x0040   (0x0008)  
	SDK_UNDEFINED(80,2181) /* TMap<EDBDCameraViewType, FMenuCameraView> */ __um(Views);                            // 0x0048   (0x0050)  
};

/// Class /Script/DeadByDaylight.MenuCameraSystem
/// Size: 0x0078 (0x000038 - 0x0000B0)
class UMenuCameraSystem : public UWorldSubsystem
{ 
public:
	class UMenuCameraDesignTunables*                   _tunables;                                                  // 0x0038   (0x0008)  
	class AMenuCameraActor*                            _cameraTarget;                                              // 0x0040   (0x0008)  
	SDK_UNDEFINED(80,2182) /* TMap<EDBDCameraViewType, ACameraActor*> */ __um(_reservedTargets);                   // 0x0048   (0x0050)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0098   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.MenuForcedLODHandler
/// Size: 0x0070 (0x0000B8 - 0x000128)
class UMenuForcedLODHandler : public UActorComponent
{ 
public:
	TArray<EGameFlowStep>                              _forcedLOD0GameFlowSteps;                                   // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x60];                                      // 0x00C8   (0x0060)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.MenuForcedLODHandler.OnMenuPlayerEndPlay
	// void OnMenuPlayerEndPlay(class AActor* menuPlayerActor, TEnumAsByte<EEndPlayReason> EndPlayReason);                   // [0x58bc940] Final|Native|Private 
	// Function /Script/DeadByDaylight.MenuForcedLODHandler.OnCustomizationChanged
	// void OnCustomizationChanged(ECustomizationCategory category, FName& ItemId, class ADBDMenuPlayer* menuPlayer);        // [0x58bc520] Final|Native|Private|HasOutParms 
};

/// Class /Script/DeadByDaylight.MenuMeatHook
/// Size: 0x0028 (0x000230 - 0x000258)
class AMenuMeatHook : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0230   (0x0010)  MISSED
	class UCharmSpawnerComponent*                      _charmSpawnerComponent;                                     // 0x0240   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0248   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.MenuMeatHook.OnCharmsUpdated
	// void OnCharmsUpdated(TArray<FCharmIdSlot>& charmIDs);                                                                 // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.MenuMeatHook.BeginDestroySequence_Internal
	// void BeginDestroySequence_Internal();                                                                                 // [0x57ff130] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.MenuUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UMenuUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.MenuUtilities.GetLocalPlayerCharacter
	// class ADBDMenuPlayer* GetLocalPlayerCharacter(class UObject* contextObject);                                          // [0x58bbb60] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.MenuUtilities.GetAllMenuCharacters
	// TArray<ADBDMenuPlayer*> GetAllMenuCharacters();                                                                       // [0x58bbab0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.MenuUtilities.AreAllGuestCharactersReady
	// bool AreAllGuestCharactersReady();                                                                                    // [0x58bba80] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.MigrationSubsystem
/// Size: 0x0058 (0x000038 - 0x000090)
class UMigrationSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0038   (0x0058)  MISSED
};

/// Class /Script/DeadByDaylight.MobileProfileDAL
/// Size: 0x0000 (0x000088 - 0x000088)
class UMobileProfileDAL : public UPlayerProfileDAL
{ 
public:
};

/// Struct /Script/DeadByDaylight.MontageInstanceInfo
/// Size: 0x0030 (0x000000 - 0x000030)
struct FMontageInstanceInfo
{ 
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0000   (0x0030)  MISSED
};

/// Class /Script/DeadByDaylight.MontagePlayer
/// Size: 0x01A8 (0x0000B8 - 0x000260)
class UMontagePlayer : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2183) /* FMulticastInlineDelegate */ __um(OnMontageStarted);                                  // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_5[0x48];                                      // 0x00C8   (0x0048)  MISSED
	SDK_UNDEFINED(16,2184) /* FMulticastInlineDelegate */ __um(OnMontageEnded);                                    // 0x0110   (0x0010)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x0120   (0x0030)  MISSED
	SDK_UNDEFINED(16,2185) /* FMulticastInlineDelegate */ __um(BPOnMontageBlendingOut);                            // 0x0150   (0x0010)  
	unsigned char                                      UnknownData02_5[0x30];                                      // 0x0160   (0x0030)  MISSED
	class UDataTable*                                  _animationMappingsTable;                                    // 0x0190   (0x0008)  
	class UDataTable*                                  _playerSpecificMappingsTable;                               // 0x0198   (0x0008)  
	class UAnimMontage*                                _currentlyPlayingMontage;                                   // 0x01A0   (0x0008)  
	unsigned char                                      UnknownData03_5[0x18];                                      // 0x01A8   (0x0018)  MISSED
	TArray<FMontageInstanceInfo>                       _activeMontagesInfo;                                        // 0x01C0   (0x0010)  
	FName                                              _outSectionName;                                            // 0x01D0   (0x000C)  
	float                                              _timeBeforeOut;                                             // 0x01DC   (0x0004)  
	class USkeletalMeshComponent*                      _skeletalMeshComponent;                                     // 0x01E0   (0x0008)  
	unsigned char                                      UnknownData04_5[0x28];                                      // 0x01E8   (0x0028)  MISSED
	SDK_UNDEFINED(80,2186) /* TMap<UAnimMontage*, FName> */ __um(_montageToNameMap);                               // 0x0210   (0x0050)  


	/// Functions
	// Function /Script/DeadByDaylight.MontagePlayer.Stop
	// void Stop(float BlendOutTime);                                                                                        // [0x58bd680] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MontagePlayer.SignalAnimInstanceChanged
	// void SignalAnimInstanceChanged();                                                                                     // [0x58bd660] Final|Native|Private 
	// Function /Script/DeadByDaylight.MontagePlayer.SetSkeletalMesh
	// void SetSkeletalMesh(class USkeletalMeshComponent* SkeletalMeshComponent);                                            // [0x58bd5d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MontagePlayer.SetPlayRate
	// void SetPlayRate(float PlayRate);                                                                                     // [0x58bd550] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MontagePlayer.PlayLoopForDuration
	// class UAnimMontage* PlayLoopForDuration(FAnimationMontageDescriptor animMontageID, float Duration, float PlayRate, FName Out); // [0x58bd2c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MontagePlayer.Play
	// class UAnimMontage* Play(FAnimationMontageDescriptor animMontageID, float PlayRate, bool isFollower);                 // [0x58bd130] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MontagePlayer.OnMontageEndedInternal
	// void OnMontageEndedInternal(FGuid Guid, class UAnimMontage* Montage, bool interrupted);                               // [0x58bcb30] Final|Native|Private|HasDefaults 
	// Function /Script/DeadByDaylight.MontagePlayer.OnMontageBlendingOutInternal
	// void OnMontageBlendingOutInternal(FGuid Guid, class UAnimMontage* Montage, bool interrupted);                         // [0x58bca10] Final|Native|Private|HasDefaults 
	// Function /Script/DeadByDaylight.MontagePlayer.JumpToSectionEnd
	// void JumpToSectionEnd(FName SectionName);                                                                             // [0x58bbde0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MontagePlayer.JumpToSection
	// void JumpToSection(FName SectionName);                                                                                // [0x58bbd40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MontagePlayer.IsPlayingAnyMontage
	// bool IsPlayingAnyMontage();                                                                                           // [0x58bbd10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MontagePlayer.IsPlaying
	// bool IsPlaying(FAnimationMontageDescriptor montageDescriptor);                                                        // [0x58bbbf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.MontagePlayer.GetAnimInstance
	// class UAnimInstance* GetAnimInstance();                                                                               // [0x58bbb30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.MoriableComponent
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UMoriableComponent : public UActorComponent
{ 
public:
	TArray<class UInteractionDefinition*>              _moriInteractions;                                          // 0x00B8   (0x0010)  
	class UClass*                                      _disruptAuraReadingStatusEffect;                            // 0x00C8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00D0   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.MoriableComponent.OnRep_MoriInteractions
	// void OnRep_MoriInteractions();                                                                                        // [0x58bd0f0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.MoriableComponent.OnMoriUpdateStart
	// void OnMoriUpdateStart();                                                                                             // [0x58bcd40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MoriableComponent.OnMoriFinished
	// void OnMoriFinished(bool hasBeenKilledByMori);                                                                        // [0x58bcc90] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.MoriComponent
/// Size: 0x0038 (0x0000B8 - 0x0000F0)
class UMoriComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	TArray<class UClass*>                              _moriInteractionClasses;                                    // 0x00D0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x00E0   (0x0008)  MISSED
	class UClass*                                      _disruptAuraReadingStatusEffect;                            // 0x00E8   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.MoriComponent.OnMoriUpdateStart
	// void OnMoriUpdateStart();                                                                                             // [0x58bcd20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MoriComponent.OnMoriFinished
	// void OnMoriFinished();                                                                                                // [0x58bcc70] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.MoriComponent.OnMoriChargeCompleted
	// void OnMoriChargeCompleted();                                                                                         // [0x58bcc50] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.MovementModifierActor
/// Size: 0x0008 (0x000230 - 0x000238)
class AMovementModifierActor : public AActor
{ 
public:
	float                                              maxSpeedMultiplier;                                         // 0x0230   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0234   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.MultipleLightsFader
/// Size: 0x0028 (0x000230 - 0x000258)
class AMultipleLightsFader : public AActor
{ 
public:
	TArray<class ULightComponent*>                     _affectedLights;                                            // 0x0230   (0x0010)  
	TArray<float>                                      _lightOriginalIntensities;                                  // 0x0240   (0x0010)  
	float                                              _timeMultiplier;                                            // 0x0250   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0254   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.MultipleLightsFader.SetAffectedLights
	// void SetAffectedLights(TArray<ULightComponent*>& affectedLights);                                                     // [0x58bd4a0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.MutatorGameplaySpawnerComponent
/// Size: 0x0000 (0x0000F0 - 0x0000F0)
class UMutatorGameplaySpawnerComponent : public UGameplaySpawnerComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.NatAudioAmbienceBox
/// Size: 0x0010 (0x0004B0 - 0x0004C0)
class UNatAudioAmbienceBox : public UAmbienceBoxComponent
{ 
public:
	class UAkAudioEvent*                               _onBeginOverlapAudioEvent;                                  // 0x04A8   (0x0008)  
	class UAkAudioEvent*                               _onEndOverlapAudioEvent;                                    // 0x04B0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x04B8   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.NatAudioAmbienceBox.OnEndOverlapAudioAmbience
	// void OnEndOverlapAudioAmbience(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x58bc640] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NatAudioAmbienceBox.OnBeginOverlapAudioAmbience
	// void OnBeginOverlapAudioAmbience(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x58bbfa0] Final|Native|Protected|HasOutParms 
};

/// Class /Script/DeadByDaylight.NatAudioCustomMesh
/// Size: 0x0010 (0x000550 - 0x000560)
class UNatAudioCustomMesh : public UAudioCustomMeshComponent
{ 
public:
	class UAkAudioEvent*                               _onBeginOverlapAudioEvent;                                  // 0x0548   (0x0008)  
	class UAkAudioEvent*                               _onEndOverlapAudioEvent;                                    // 0x0550   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0558   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.NatAudioCustomMesh.OnEndOverlapAudioMesh
	// void OnEndOverlapAudioMesh(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x58bc7a0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NatAudioCustomMesh.OnBeginOverlapAudioMesh
	// void OnBeginOverlapAudioMesh(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x58bc1c0] Final|Native|Protected|HasOutParms 
};

/// Class /Script/DeadByDaylight.NavArea_BearTrap
/// Size: 0x0000 (0x000050 - 0x000050)
class UNavArea_BearTrap : public UNavArea
{ 
public:
};

/// Class /Script/DeadByDaylight.NavArea_Danger
/// Size: 0x0000 (0x000050 - 0x000050)
class UNavArea_Danger : public UNavArea
{ 
public:
};

/// Class /Script/DeadByDaylight.NavArea_Drone
/// Size: 0x0000 (0x000050 - 0x000050)
class UNavArea_Drone : public UNavArea
{ 
public:
};

/// Class /Script/DeadByDaylight.NavArea_Slasher
/// Size: 0x0000 (0x000050 - 0x000050)
class UNavArea_Slasher : public UNavArea
{ 
public:
};

/// Class /Script/DeadByDaylight.NavArea_Turret
/// Size: 0x0000 (0x000050 - 0x000050)
class UNavArea_Turret : public UNavArea
{ 
public:
};

/// Class /Script/DeadByDaylight.NavigationQueryFilter_EvadeLoop
/// Size: 0x0238 (0x000050 - 0x000288)
class UNavigationQueryFilter_EvadeLoop : public UNavigationQueryFilter
{ 
public:
	unsigned char                                      UnknownData00_1[0x238];                                     // 0x0050   (0x0238)  MISSED
};

/// Class /Script/DeadByDaylight.NavigationScreen
/// Size: 0x01C0 (0x000120 - 0x0002E0)
class UNavigationScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x1C0];                                     // 0x0120   (0x01C0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.NavigationScreen.OnToggleChatVisibility
	// void OnToggleChatVisibility();                                                                                        // [0x58bd110] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnStartButtonClick
	// void OnStartButtonClick();                                                                                            // [0x58b34b0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnSettingsClick
	// void OnSettingsClick();                                                                                               // [0x57bc860] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnSendChatMsgButtonClick
	// void OnSendChatMsgButtonClick(FString Message);                                                                       // [0x587d420] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnReadyButtonClick
	// void OnReadyButtonClick();                                                                                            // [0x5891ef0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnPlayerOptionSelected
	// void OnPlayerOptionSelected(FString krakenId, FString playerID, char Option);                                         // [0x58bce80] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnPlayerInfoClick
	// void OnPlayerInfoClick(int32_t playerID);                                                                             // [0x58bcdf0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnPerkPreviewPerkSlotClicked
	// void OnPerkPreviewPerkSlotClicked(int32_t slotIndex);                                                                 // [0x58bcd60] Final|Native|Public  
	// Function /Script/DeadByDaylight.NavigationScreen.OnMatchManagementButtonClick
	// void OnMatchManagementButtonClick();                                                                                  // [0x57c4110] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnMatchMakingBanTimeout
	// void OnMatchMakingBanTimeout();                                                                                       // [0x58bc920] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnInviteFriendClick
	// void OnInviteFriendClick();                                                                                           // [0x58122c0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnFadeOutEnded
	// void OnFadeOutEnded();                                                                                                // [0x58bc900] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnDailyRitualsClick
	// void OnDailyRitualsClick();                                                                                           // [0x57c42c0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnChatInputMouseOver
	// void OnChatInputMouseOver(bool IsMouseOver);                                                                          // [0x58bc490] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnCharacterSwapArrowClick
	// void OnCharacterSwapArrowClick(bool isNext);                                                                          // [0x58bc400] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnCancelButtonClick
	// void OnCancelButtonClick();                                                                                           // [0x58bc3e0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnBankClick
	// void OnBankClick(int32_t currencyTypeInt);                                                                            // [0x58bbf10] Final|Native|Protected 
	// Function /Script/DeadByDaylight.NavigationScreen.OnAddPlayerClick
	// void OnAddPlayerClick(int32_t buttonId);                                                                              // [0x58bbe80] Final|Native|Protected 
};

/// Struct /Script/DeadByDaylight.GuidingInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FGuidingInfo
{ 
	TArray<class ADBDPlayer*>                          _guidingPlayers;                                            // 0x0000   (0x0010)  
	EGuidedState                                       _guidedState;                                               // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Class /Script/DeadByDaylight.NavigationStateComponent
/// Size: 0x00D0 (0x0000B8 - 0x000188)
class UNavigationStateComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x4B];                                      // 0x00B8   (0x004B)  MISSED
	EImmobilizedState                                  _immobilizedState;                                          // 0x0103   (0x0001)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0104   (0x0004)  MISSED
	FGuidingInfo                                       _guidedState;                                               // 0x0108   (0x0018)  
	unsigned char                                      UnknownData02_5[0x58];                                      // 0x0120   (0x0058)  MISSED
	TArray<class ADBDPlayer*>                          _local_oldGuidedPlayers;                                    // 0x0178   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.NavigationStateComponent.OnRep_ImmobilizedState
	// void OnRep_ImmobilizedState(EImmobilizedState previousState);                                                         // [0x58bd070] Final|Native|Private 
	// Function /Script/DeadByDaylight.NavigationStateComponent.OnRep_GuidedState
	// void OnRep_GuidedState(FGuidingInfo& previousState);                                                                  // [0x58bcfc0] Final|Native|Private|HasOutParms 
};

/// Class /Script/DeadByDaylight.NavmeshGeneratorComponent
/// Size: 0x0038 (0x0000B8 - 0x0000F0)
class UNavmeshGeneratorComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x00B8   (0x0028)  MISSED
	TArray<class ANavMeshBoundsVolume*>                _availableNavmeshBoundsVolumes;                             // 0x00E0   (0x0010)  
};

/// Class /Script/DeadByDaylight.NewContentPopupScreen
/// Size: 0x0000 (0x000140 - 0x000140)
class UNewContentPopupScreen : public UGenericPopupScreen
{ 
public:
};

/// Class /Script/DeadByDaylight.NewsContentManager
/// Size: 0x00D0 (0x000030 - 0x000100)
class UNewsContentManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0030   (0x0018)  MISSED
	SDK_UNDEFINED(8,2187) /* TWeakObjectPtr<UDBDGameInstance*> */ __um(_gameInstance);                             // 0x0048   (0x0008)  
	unsigned char                                      UnknownData01_6[0xB0];                                      // 0x0050   (0x00B0)  MISSED
};

/// Class /Script/DeadByDaylight.NoAccumulationSpawnerStrategy
/// Size: 0x0000 (0x000030 - 0x000030)
class UNoAccumulationSpawnerStrategy : public USpawnerStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.NoiseIndicatorEmitterInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UNoiseIndicatorEmitterInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.NotExhaustedActivationTimerElapsedIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UNotExhaustedActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.ObjectiveScreenIndicatorWorldMarkerComponent
/// Size: 0x0010 (0x000230 - 0x000240)
class UObjectiveScreenIndicatorWorldMarkerComponent : public UScreenIndicatorWorldMarkerComponent
{ 
public:
	class UTexture2D*                                  IndicatorHudScreenIcon;                                     // 0x0230   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0238   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.ObjectPlacementUpdateStrategy
/// Size: 0x0020 (0x000030 - 0x000050)
class UObjectPlacementUpdateStrategy : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0030   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.AlwaysUseCurrentLocationPlacementStrategy
/// Size: 0x0000 (0x000050 - 0x000050)
class UAlwaysUseCurrentLocationPlacementStrategy : public UObjectPlacementUpdateStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.BufferLastValidLocationObjectPlacementStrategy
/// Size: 0x0008 (0x000050 - 0x000058)
class UBufferLastValidLocationObjectPlacementStrategy : public UObjectPlacementUpdateStrategy
{ 
public:
	float                                              _maxDistanceToOwner;                                        // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.NavMeshObjectPlacementValidationStrategy
/// Size: 0x0008 (0x0000E0 - 0x0000E8)
class UNavMeshObjectPlacementValidationStrategy : public UDefaultObjectPlacementValidationStrategy
{ 
public:
	float                                              _navPathMaxLength;                                          // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00E4   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.ObjectPlacementValidationWithRestrictionStrategy
/// Size: 0x0010 (0x0000E0 - 0x0000F0)
class UObjectPlacementValidationWithRestrictionStrategy : public UDefaultObjectPlacementValidationStrategy
{ 
public:
	TArray<class URestrictedPlacementAreaStrategy*>    _restrictedAreas;                                           // 0x00E0   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.ObjectPlacementValidationWithRestrictionStrategy.OnLevelReadyToPlay
	// void OnLevelReadyToPlay();                                                                                            // [0x4dd4840] Native|Protected     
};

/// Class /Script/DeadByDaylight.ObjectPlacerComponent
/// Size: 0x0060 (0x000220 - 0x000280)
class UObjectPlacerComponent : public USceneComponent
{ 
public:
	class UObjectPlacementUpdateStrategy*              _objectPlacementUpdateStrategy;                             // 0x0218   (0x0008)  
	class UObjectPlacementValidationStrategy*          _objectPlacementValidationStrategy;                         // 0x0220   (0x0008)  
	class UStaticMeshComponent*                        _objectMesh;                                                // 0x0228   (0x0008)  
	float                                              _meshOffsetZ;                                               // 0x0230   (0x0004)  
	FName                                              _socketName;                                                // 0x0234   (0x000C)  
	float                                              _indicatorOffsetY;                                          // 0x0240   (0x0004)  
	float                                              _indicatorOffsetX;                                          // 0x0244   (0x0004)  
	FName                                              _itemObjectId;                                              // 0x0248   (0x000C)  
	bool                                               _showIndicator;                                             // 0x0254   (0x0001)  
	bool                                               _stayActiveWhileItemInUse;                                  // 0x0255   (0x0001)  
	bool                                               _hideIndicatorDuringAttack;                                 // 0x0256   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0257   (0x0001)  MISSED
	TArray<FGameplayTag>                               _tagsPreventingObjectPlacement;                             // 0x0258   (0x0010)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0268   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ObjectPlacerComponent.SetShowIndicator
	// void SetShowIndicator(bool NewValue);                                                                                 // [0x58c21f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ObjectPlacerComponent.SetObjectMesh
	// void SetObjectMesh(class UStaticMeshComponent* objectMesh);                                                           // [0x58c2160] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ObjectPlacerComponent.SetMeshOffsetZ
	// void SetMeshOffsetZ(float Z);                                                                                         // [0x58c20e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ObjectPlacerComponent.SetIndicatorOffsetY
	// void SetIndicatorOffsetY(float Y);                                                                                    // [0x58c1fd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ObjectPlacerComponent.SetIndicatorOffsetX
	// void SetIndicatorOffsetX(float X);                                                                                    // [0x58c1f50] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ObjectPlacerComponent.SetHideIndicatorDuringAttack
	// void SetHideIndicatorDuringAttack(bool enable);                                                                       // [0x58c1ec0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ObjectPlacerComponent.IsPlacementValid
	// bool IsPlacementValid();                                                                                              // [0x58c1e60] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ObjectPlacerComponent.GetObjectPlacementRotation
	// FRotator GetObjectPlacementRotation();                                                                                // [0x58c1bd0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ObjectPlacerComponent.GetObjectPlacementLocation
	// FVector GetObjectPlacementLocation();                                                                                 // [0x58c1b90] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ObjectPlacerComponent.ActivateObjectPlacement
	// void ActivateObjectPlacement(bool Active);                                                                            // [0x58c1910] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.OfferingCardAnim
/// Size: 0x0020 (0x0002C0 - 0x0002E0)
class UOfferingCardAnim : public UAnimInstance
{ 
public:
	SDK_UNDEFINED(16,2188) /* FMulticastInlineDelegate */ __um(_onCardDissolved);                                  // 0x02C0   (0x0010)  
	EOfferingAnimState                                 _activeState;                                               // 0x02D0   (0x0001)  
	bool                                               _isRevealed;                                                // 0x02D1   (0x0001)  
	unsigned char                                      UnknownData00_6[0xE];                                       // 0x02D2   (0x000E)  MISSED
};

/// Struct /Script/DeadByDaylight.RarityTexture
/// Size: 0x0030 (0x000000 - 0x000030)
struct FRarityTexture
{ 
	FName                                              Type;                                                       // 0x0000   (0x000C)  
	EItemRarity                                        Rarity;                                                     // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	FSoftObjectPath                                    Texture;                                                    // 0x0010   (0x0020)  
};

/// Struct /Script/DeadByDaylight.OfferingTypeTexture
/// Size: 0x0030 (0x000000 - 0x000030)
struct FOfferingTypeTexture
{ 
	FName                                              Type;                                                       // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FSoftObjectPath                                    TextureBack;                                                // 0x0010   (0x0020)  
};

/// Class /Script/DeadByDaylight.OfferingCard
/// Size: 0x0020 (0x000230 - 0x000250)
class AOfferingCard : public AActor
{ 
public:
	TArray<FRarityTexture>                             _rarityTextures;                                            // 0x0230   (0x0010)  
	TArray<FOfferingTypeTexture>                       _offeringTypeTextures;                                      // 0x0240   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.OfferingCard.IsRevealed
	// bool IsRevealed();                                                                                                    // [0x58c1e90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.OfferingCard.HandleStateChanged
	// void HandleStateChanged(EOfferingAnimState State);                                                                    // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.OfferingCard.HandleCardDissolved
	// void HandleCardDissolved();                                                                                           // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.OfferingCard.GetState
	// EOfferingAnimState GetState();                                                                                        // [0x58c1c10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.OfferingCard.GetCardAnimation
	// class UOfferingCardAnim* GetCardAnimation();                                                                          // [0x58c1b30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.OfferingCard.ChangeState
	// void ChangeState(EOfferingAnimState State);                                                                           // [0x58c1a30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.OfferingCard.ChangeAnimationClass
	// void ChangeAnimationClass(class UClass*& animationClass);                                                             // [0x58c19a0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.OfferingEffectCollection
/// Size: 0x0050 (0x000038 - 0x000088)
class UOfferingEffectCollection : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0038   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.OfferingEffectCollection.HasOfferingWithTag
	// bool HasOfferingWithTag(int32_t playerID, FName Tag);                                                                 // [0x58c1d70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.OfferingEffectCollection.HasOfferingOfType
	// bool HasOfferingOfType(EOfferingEffectType Type, int32_t playerID, FName Tag);                                        // [0x58c1c40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.OfferingHandler
/// Size: 0x0018 (0x000030 - 0x000048)
class UOfferingHandler : public UObject
{ 
public:
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0030   (0x0008)  
	TArray<FName>                                      _levelPerkIDs;                                              // 0x0038   (0x0010)  
};

/// Struct /Script/DeadByDaylight.OfferingRevealDelays
/// Size: 0x0008 (0x000000 - 0x000008)
struct FOfferingRevealDelays
{ 
	EOfferingSequenceState                             RevealState;                                                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Delay;                                                      // 0x0004   (0x0004)  
};

/// Class /Script/DeadByDaylight.OfferingSequenceAssets
/// Size: 0x0030 (0x000230 - 0x000260)
class AOfferingSequenceAssets : public AActor
{ 
public:
	float                                              SpaceBetweenCards;                                          // 0x0230   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0234   (0x0004)  MISSED
	class UClass*                                      DefaultCardClass;                                           // 0x0238   (0x0008)  
	class UClass*                                      DefaultCardAnimation;                                       // 0x0240   (0x0008)  
	TArray<FOfferingRevealDelays>                      OfferingRevealDelays;                                       // 0x0248   (0x0010)  
	class AActor*                                      CardsParent;                                                // 0x0258   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.OfferingSequenceAssets.PlaySmoke
	// void PlaySmoke();                                                                                                     // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.OfferingSequenceAssets.PlayFadeOut
	// void PlayFadeOut();                                                                                                   // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.OfferingSequenceAssets.PlayFadeIn
	// void PlayFadeIn();                                                                                                    // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.OfferingSequenceManager
/// Size: 0x00C0 (0x000230 - 0x0002F0)
class AOfferingSequenceManager : public AActor
{ 
public:
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0230   (0x0008)  
	class APlayerController*                           _localPlayerController;                                     // 0x0238   (0x0008)  
	class UOfferingHandler*                            _offeringHandler;                                           // 0x0240   (0x0008)  
	class AOfferingSequenceAssets*                     _sequenceAssets;                                            // 0x0248   (0x0008)  
	class ADBDLobbyHud*                                _hud;                                                       // 0x0250   (0x0008)  
	class ACameraActor*                                _offeringCamera;                                            // 0x0258   (0x0008)  
	SDK_UNDEFINED(80,2189) /* TMap<char, AOfferingCard*> */ __um(_spawnedCards);                                   // 0x0260   (0x0050)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x02B0   (0x0010)  MISSED
	class UClass*                                      _defaultCardsClass;                                         // 0x02C0   (0x0008)  
	class UClass*                                      _eventCardsClass;                                           // 0x02C8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x02D0   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.OfferingSequenceManager.HandleSequenceStateChanged
	// void HandleSequenceStateChanged(EOfferingSequenceState State);                                                        // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.OfferingSequenceManager.HandleSequenceStarted
	// void HandleSequenceStarted();                                                                                         // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.OfferingSequenceManager.HandleSequenceEnded
	// void HandleSequenceEnded();                                                                                           // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.OfferingSequenceManager.GetCurrentState
	// EOfferingSequenceState GetCurrentState();                                                                             // [0x58c1b60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.OfferingSequenceManager.FadeInScreen
	// void FadeInScreen();                                                                                                  // [0x58c1b10] Final|Native|Private 
	// Function /Script/DeadByDaylight.OfferingSequenceManager.ContainsEventCard
	// bool ContainsEventCard();                                                                                             // [0x58c1ae0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.OfferingSequenceManager.ContainsDefaultCard
	// bool ContainsDefaultCard();                                                                                           // [0x58c1ab0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.OfferingUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UOfferingUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.OfferingUtilities.IsPlayerEquippedWithOfferingWithTag
	// bool IsPlayerEquippedWithOfferingWithTag(class ADBDPlayer* Player, FName offeringTag);                                // [0x58c6890] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.OfferingUtilities.HasOfferingOfType
	// bool HasOfferingOfType(class UObject* WorldContextObject, EOfferingEffectType offeringEffectType, int32_t playerID);  // [0x58c6710] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.OfferingUtilities.HasItemLossProtection
	// bool HasItemLossProtection(class ADBDPlayer* Player);                                                                 // [0x58c6680] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.OfflineLobbyLevel
/// Size: 0x01F8 (0x0002C0 - 0x0004B8)
class AOfflineLobbyLevel : public ALobbyLevel
{ 
public:
	FVector                                            _partyLobbyInviteButtonOffset;                              // 0x02C0   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x02CC   (0x0004)  MISSED
	SDK_UNDEFINED(16,2190) /* TArray<TWeakObjectPtr<APlayerStart*>> */ __um(_roleSelectionCamperSpawns);           // 0x02D0   (0x0010)  
	SDK_UNDEFINED(16,2191) /* TArray<TWeakObjectPtr<APlayerStart*>> */ __um(_roleSelectionSlasherSpawns);          // 0x02E0   (0x0010)  
	SDK_UNDEFINED(8,2192) /* TWeakObjectPtr<ADisplayStand*> */ __um(_offlineLobbyLocalSlasherSpawn);               // 0x02F0   (0x0008)  
	FVector                                            _partyLobbyEmptySlotFxOffset;                               // 0x02F8   (0x000C)  
	SDK_UNDEFINED(8,2193) /* TWeakObjectPtr<ADisplayStand*> */ __um(_offlineLobbyLocalCamperSpawn);                // 0x0304   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x030C   (0x0004)  MISSED
	TArray<FVector>                                    _partyLobbySlasherPOVTrackerOffsets;                        // 0x0310   (0x0010)  
	SDK_UNDEFINED(48,2194) /* TWeakObjectPtr<UClass*> */ __um(_partyLobbyEmptySlotSilhouette);                     // 0x0320   (0x0030)  
	SDK_UNDEFINED(16,2195) /* TArray<TWeakObjectPtr<ADisplayStand*>> */ __um(_partyLobbySlasherDisplayStands);     // 0x0350   (0x0010)  
	SDK_UNDEFINED(16,2196) /* TArray<TWeakObjectPtr<ADisplayStand*>> */ __um(_partyLobbyCamperDisplayStands);      // 0x0360   (0x0010)  
	FVector                                            _moriPreviewSpawnLocation;                                  // 0x0370   (0x000C)  
	unsigned char                                      UnknownData02_5[0x14];                                      // 0x037C   (0x0014)  MISSED
	SDK_UNDEFINED(48,2197) /* TWeakObjectPtr<UClass*> */ __um(_meatHookForCustomization);                          // 0x0390   (0x0030)  
	SDK_UNDEFINED(8,2198) /* TWeakObjectPtr<ATargetPoint*> */ __um(_meatHookSpawn);                                // 0x03C0   (0x0008)  
	SDK_UNDEFINED(48,2199) /* TWeakObjectPtr<UClass*> */ __um(_charmForCustomizationZoom);                         // 0x03C8   (0x0030)  
	SDK_UNDEFINED(8,2200) /* TWeakObjectPtr<ATargetPoint*> */ __um(_camperCharmSpawn);                             // 0x03F8   (0x0008)  
	SDK_UNDEFINED(8,2201) /* TWeakObjectPtr<ATargetPoint*> */ __um(_slasherCharmSpawn);                            // 0x0400   (0x0008)  
	SDK_UNDEFINED(80,2202) /* TMap<TWeakObjectPtr<ADisplayStand*>, TWeakObjectPtr<ADBDMenuSilhouette*>> */ __um(_partyLobbyEmptySlotPawns); // 0x0408   (0x0050)  
	unsigned char                                      UnknownData03_5[0x48];                                      // 0x0458   (0x0048)  MISSED
	TArray<class AActor*>                              _destroyingPawns;                                           // 0x04A0   (0x0010)  
	unsigned char                                      UnknownData04_6[0x8];                                       // 0x04B0   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.OfflineLobbyLevel.OnStateChanged
	// void OnStateChanged(EOfflineLobbyState LobbyState);                                                                   // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.OfflineLobbyLevel.OnCharacterSpawned
	// void OnCharacterSpawned(class ADBDMenuPlayer* Player);                                                                // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.OfflineLobbyLevel.CheckDestroyingPawns
	// void CheckDestroyingPawns(class AActor* DestroyedActor);                                                              // [0x58c6480] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.OnboardingUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UOnboardingUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.OniBasicAttackComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UOniBasicAttackComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B8   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.OniDemonModeAttackStateComponent
/// Size: 0x0018 (0x0000C0 - 0x0000D8)
class UOniDemonModeAttackStateComponent : public UChargedAttackStateComponent
{ 
public:
	SDK_UNDEFINED(16,2203) /* FMulticastInlineDelegate */ __um(OnChargedAttackReadyChanged);                       // 0x00C0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00D0   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.OniDemonModeAttackStateComponent.Server_ClearChargingState
	// void Server_ClearChargingState();                                                                                     // [0x4d82970] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.OniDemonModeAttackStateComponent.Multicast_ClearChargingState
	// void Multicast_ClearChargingState();                                                                                  // [0x4dd4860] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/DeadByDaylight.OnlineLobbyLevel
/// Size: 0x0038 (0x0002C0 - 0x0002F8)
class AOnlineLobbyLevel : public ALobbyLevel
{ 
public:
	class UProceduralGenerationData*                   ProceduralGenerationData;                                   // 0x02C0   (0x0008)  
	TArray<FVector>                                    _onlineLobbySlasherPOVTrackerOffsets;                       // 0x02C8   (0x0010)  
	SDK_UNDEFINED(16,2204) /* TArray<TWeakObjectPtr<ADisplayStand*>> */ __um(_onlineLobbyCamperDisplayStands);     // 0x02D8   (0x0010)  
	SDK_UNDEFINED(16,2205) /* TArray<TWeakObjectPtr<ADisplayStand*>> */ __um(_onlineLobbySlasherDisplayStands);    // 0x02E8   (0x0010)  
};

/// Class /Script/DeadByDaylight.OnlinePrivilegeManager
/// Size: 0x0008 (0x000038 - 0x000040)
class UOnlinePrivilegeManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.OnlineSystemHandler
/// Size: 0x04D0 (0x000030 - 0x000500)
class UOnlineSystemHandler : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x1B8];                                     // 0x0030   (0x01B8)  MISSED
	class ULocalPlayer*                                _cachedLocalPlayer;                                         // 0x01E8   (0x0008)  
	class UDBDGameInstance*                            _gameInstance;                                              // 0x01F0   (0x0008)  
	class UGameSessionDS*                              _gameSessionDS;                                             // 0x01F8   (0x0008)  
	unsigned char                                      UnknownData01_5[0x270];                                     // 0x0200   (0x0270)  MISSED
	class UDBDServerInstance*                          _serverInstance;                                            // 0x0470   (0x0008)  
	unsigned char                                      UnknownData02_5[0x30];                                      // 0x0478   (0x0030)  MISSED
	class UCrossPlatformManager*                       _crossPlatformManager;                                      // 0x04A8   (0x0008)  
	unsigned char                                      UnknownData03_6[0x50];                                      // 0x04B0   (0x0050)  MISSED
};

/// Struct /Script/DeadByDaylight.OnScreenDebugInfo
/// Size: 0x0040 (0x000000 - 0x000040)
struct FOnScreenDebugInfo
{ 
	SDK_UNDEFINED(16,2206) /* FString */               __um(Message);                                              // 0x0000   (0x0010)  
	FColor                                             Color;                                                      // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	uint64_t                                           Key;                                                        // 0x0018   (0x0008)  
	float                                              TimeToDisplay;                                              // 0x0020   (0x0004)  
	bool                                               IsDrawDebug;                                                // 0x0024   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0025   (0x0003)  MISSED
	FVector                                            DrawDebugLocation;                                          // 0x0028   (0x000C)  
	unsigned char                                      UnknownData02_6[0xC];                                       // 0x0034   (0x000C)  MISSED
};

/// Class /Script/DeadByDaylight.OnScreenDebugComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UOnScreenDebugComponent : public UActorComponent
{ 
public:
	TArray<FOnScreenDebugInfo>                         _messages;                                                  // 0x00B8   (0x0010)  
};

/// Class /Script/DeadByDaylight.OpenHatch
/// Size: 0x0000 (0x000650 - 0x000650)
class UOpenHatch : public UBaseEscapeThroughHatch
{ 
public:
};

/// Class /Script/DeadByDaylight.OpenSupplyCrateInteraction
/// Size: 0x0010 (0x000790 - 0x0007A0)
class UOpenSupplyCrateInteraction : public UChargeableInteractionDefinition
{ 
public:
	class ASupplyCrateInteractable*                    _owningSupplyCrate;                                         // 0x0790   (0x0008)  
	class UAnimSequence*                               _successExitTimeAnimSequenceReference;                      // 0x0798   (0x0008)  
};

/// Class /Script/DeadByDaylight.OtherCharactersVerticalCollisionsHandler
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UOtherCharactersVerticalCollisionsHandler : public UActorComponent
{ 
public:
	TArray<class AActor*>                              _ignoreBelowActors;                                         // 0x00B8   (0x0010)  
	TArray<class AActor*>                              _overlappingActors;                                         // 0x00C8   (0x0010)  
	class UCapsuleComponent*                           _pawnDetector;                                              // 0x00D8   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.OtherCharactersVerticalCollisionsHandler.SetPawnDetector
	// void SetPawnDetector(class UCapsuleComponent* pawnDetector);                                                          // [0x58c79c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.OtherCharactersVerticalCollisionsHandler.OnPawnDetectorOverlapExit
	// void OnPawnDetectorOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x58c6e60] Final|Native|Private 
	// Function /Script/DeadByDaylight.OtherCharactersVerticalCollisionsHandler.OnPawnDetectorOverlapEnter
	// void OnPawnDetectorOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x58c6c40] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.OtherCharactersVerticalCollisionsHandler.InitializeOverlapDetection
	// void InitializeOverlapDetection();                                                                                    // [0x58c6810] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.OutfitHelper
/// Size: 0x0000 (0x000030 - 0x000030)
class UOutfitHelper : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.OutfitRecommendationsFilter
/// Size: 0x0028 (0x000038 - 0x000060)
class UOutfitRecommendationsFilter : public URecommendationsFilter
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.OutlineReveal
/// Size: 0x00A8 (0x000030 - 0x0000D8)
class UOutlineReveal : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x70];                                      // 0x0030   (0x0070)  MISSED
	TArray<class ADBDPlayer*>                          _affectedCharacters;                                        // 0x00A0   (0x0010)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x00B0   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.OutOfSightMeshRotator
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UOutOfSightMeshRotator : public UActorComponent
{ 
public:
	float                                              _maxDistance;                                               // 0x00B8   (0x0004)  
	float                                              _dotProductThreshold;                                       // 0x00BC   (0x0004)  
	class ADBDPlayer*                                  _locallyObservedPlayer;                                     // 0x00C0   (0x0008)  
	TArray<class UMeshComponent*>                      _meshesToRotate;                                            // 0x00C8   (0x0010)  
	float                                              _rotationOffset;                                            // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00DC   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.OutOfSightMeshRotator.SetMeshesToRotate
	// void SetMeshesToRotate(TArray<UMeshComponent*> meshesToRotate);                                                       // [0x58c7850] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.OverlayMenuScreen
/// Size: 0x01E0 (0x000120 - 0x000300)
class UOverlayMenuScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x1E0];                                     // 0x0120   (0x01E0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.OverlayMenuScreen.SetGameType
	// void SetGameType(EGameType gameType, bool isInCustomMatchManagerMode);                                                // [0x58c7780] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnSurvivorCameraSensitivityChanged
	// void OnSurvivorCameraSensitivityChanged(int32_t value);                                                               // [0x58c6bd0] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnSettingsOptionIntValueChanged
	// void OnSettingsOptionIntValueChanged(int32_t ID, int32_t value);                                                      // [0x58c7370] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnSettingsOptionCheckboxSelected
	// void OnSettingsOptionCheckboxSelected(int32_t ID, bool IsSelected);                                                   // [0x58c72a0] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnSettingsOptionButtonClicked
	// void OnSettingsOptionButtonClicked(int32_t ID);                                                                       // [0x58c7210] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnSelectTab
	// void OnSelectTab(int32_t tabIndex);                                                                                   // [0x58c7180] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnResetDefaultSettings
	// void OnResetDefaultSettings();                                                                                        // [0x58c7160] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnResetDefaultKeybindings
	// void OnResetDefaultKeybindings();                                                                                     // [0x58b3490] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnRequestKeyBindingInput
	// void OnRequestKeyBindingInput(int32_t ID, FString Key);                                                               // [0x58c7080] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnQuitButtonClick
	// void OnQuitButtonClick();                                                                                             // [0x57c42c0] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnPrivacyPolicyButtonClick
	// void OnPrivacyPolicyButtonClick();                                                                                    // [0x58c7060] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnPlayerInfoClick
	// void OnPlayerInfoClick(FString playerID);                                                                             // [0x58c6fc0] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnLanguageChange
	// void OnLanguageChange(int32_t value);                                                                                 // [0x58c6bd0] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnKillerCameraSensitivityChanged
	// void OnKillerCameraSensitivityChanged(int32_t value);                                                                 // [0x58c6bd0] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnForumsButtonClick
	// void OnForumsButtonClick();                                                                                           // [0x5891ef0] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnEULAButtonClick
	// void OnEULAButtonClick();                                                                                             // [0x58bc3e0] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnCustomerSupportButtonClick
	// void OnCustomerSupportButtonClick();                                                                                  // [0x58b34b0] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnBackButtonClick
	// void OnBackButtonClick();                                                                                             // [0x57bc860] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnAtlantaSettingButtonClick
	// void OnAtlantaSettingButtonClick(int32_t buttonId);                                                                   // [0x58c6bd0] Final|Native|Public  
	// Function /Script/DeadByDaylight.OverlayMenuScreen.OnAimAssistClick
	// void OnAimAssistClick(bool value);                                                                                    // [0x58c6b60] Final|Native|Public  
};

/// Struct /Script/DeadByDaylight.PalletPushSettings
/// Size: 0x0002 (0x000000 - 0x000002)
struct FPalletPushSettings
{ 
	bool                                               IgnorePlayerExecutingPulldown;                              // 0x0000   (0x0001)  
	EPalletPushSideStrategy                            PalletPushSideStrategy;                                     // 0x0001   (0x0001)  
};

/// Class /Script/DeadByDaylight.Pallet
/// Size: 0x0120 (0x000338 - 0x000458)
class APallet : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	float                                              PalletDownEvadeDoorFrontPointOffset;                        // 0x0340   (0x0004)  
	unsigned char                                      UnknownData01_5[0x1C];                                      // 0x0344   (0x001C)  MISSED
	EPalletState                                       _state;                                                     // 0x0360   (0x0001)  
	bool                                               _isPendingDestruction;                                      // 0x0361   (0x0001)  
	bool                                               _isIllusionaryPalletDown;                                   // 0x0362   (0x0001)  
	bool                                               _isDestroyedByEntity;                                       // 0x0363   (0x0001)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0364   (0x0004)  MISSED
	class UInteractionDefinition*                      _destroyLeft;                                               // 0x0368   (0x0008)  
	class UInteractionDefinition*                      _destroyRight;                                              // 0x0370   (0x0008)  
	class UBoxComponent*                               _pushBox;                                                   // 0x0378   (0x0008)  
	class UPrimitiveComponent*                         _downedPalletCollider;                                      // 0x0380   (0x0008)  
	class UPrimitiveComponent*                         _upPalletCollider;                                          // 0x0388   (0x0008)  
	float                                              _maxDotproductThresholdForPulldownAccross;                  // 0x0390   (0x0004)  
	float                                              _fallDuration;                                              // 0x0394   (0x0004)  
	class UBoxComponent*                               _stunBoxLeft;                                               // 0x0398   (0x0008)  
	class UBoxComponent*                               _stunBoxRight;                                              // 0x03A0   (0x0008)  
	SDK_UNDEFINED(80,2207) /* TSet<AActor*> */         __um(_stunnedActors);                                       // 0x03A8   (0x0050)  
	class ADBDPlayer*                                  _playerExecutingPulldown;                                   // 0x03F8   (0x0008)  
	FPalletPushSettings                                _pushSettings;                                              // 0x0400   (0x0002)  
	unsigned char                                      UnknownData03_5[0x3E];                                      // 0x0402   (0x003E)  MISSED
	class UDBDNavEvadeLoopComponent*                   _navEvadeLoopComponent;                                     // 0x0440   (0x0008)  
	class UPalletPulldownBlockerComponent*             _palletPulldownBlockerComponent;                            // 0x0448   (0x0008)  
	bool                                               _isDreamPallet;                                             // 0x0450   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x0451   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.Pallet.SetPendingDestruction
	// void SetPendingDestruction(bool IsPendingDestruction);                                                                // [0x58c7a50] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Pallet.SetPalletState
	// void SetPalletState(EPalletState State);                                                                              // [0x58c7940] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.Pallet.ResetPallet
	// void ResetPallet();                                                                                                   // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Pallet.PulldownPallet
	// void PulldownPallet();                                                                                                // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Pallet.PullDown
	// void PullDown(class ADBDPlayer* Player, FPalletPushSettings& pushSettings, EPalletStunZoneSideStrategy stunZoneSideStrategy); // [0x58c7660] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.Pallet.OnStunOverlap
	// void OnStunOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x58c7440] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.Pallet.OnPalletStunHit
	// void OnPalletStunHit();                                                                                               // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Pallet.OnPalletPulledUp_BP
	// void OnPalletPulledUp_BP();                                                                                           // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Pallet.OnFallen
	// void OnFallen();                                                                                                      // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Pallet.Multicast_StunActor
	// void Multicast_StunActor(class AActor* Actor, class ACamperPlayer* Survivor, bool stunBreakPallet);                   // [0x58c6a50] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.Pallet.Multicast_ResetPallet
	// void Multicast_ResetPallet();                                                                                         // [0x58c6a30] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.Pallet.Multicast_PulldownPallet
	// void Multicast_PulldownPallet();                                                                                      // [0x58b7b60] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.Pallet.Multicast_EntityExplodePallet
	// void Multicast_EntityExplodePallet(class ADBDPlayer* Player);                                                         // [0x58c69a0] Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Pallet.IsPulldownBlockedByEntity
	// bool IsPulldownBlockedByEntity();                                                                                     // [0x58c6970] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Pallet.IsPendingDestruction
	// bool IsPendingDestruction();                                                                                          // [0x58c6860] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Pallet.IsDestroyedByEntity
	// bool IsDestroyedByEntity();                                                                                           // [0x58c6830] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Pallet.GetPlayerDoingPulldown
	// class ADBDPlayer* GetPlayerDoingPulldown();                                                                           // [0x58c6650] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Pallet.GetPalletSkeletalMeshComponent
	// class USkeletalMeshComponent* GetPalletSkeletalMeshComponent();                                                       // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Pallet.GetIsPulledDown
	// bool GetIsPulledDown();                                                                                               // [0x58c6620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Pallet.GetIsDreamPallet
	// bool GetIsDreamPallet();                                                                                              // [0x58c65f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Pallet.GetFallDuration
	// float GetFallDuration();                                                                                              // [0x58c65c0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Pallet.GetDestructibleAreaPrimitiveComponents
	// void GetDestructibleAreaPrimitiveComponents(TArray<UPrimitiveComponent*>& prims);                                     // [0x58c6510] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Pallet.ExplodeStunPallet
	// void ExplodeStunPallet(class ADBDPlayer* Player);                                                                     // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Pallet.ExplodePallet
	// void ExplodePallet(class ADBDPlayer* Player);                                                                         // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Pallet.EntityExplodePallet
	// void EntityExplodePallet(class ADBDPlayer* Player);                                                                   // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Pallet.Cosmetic_PalletPullDownFXImmediateHide
	// void Cosmetic_PalletPullDownFXImmediateHide();                                                                        // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Pallet.Cosmetic_OnPalletPulldownBlockedByEntityShow
	// void Cosmetic_OnPalletPulldownBlockedByEntityShow();                                                                  // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Pallet.Cosmetic_OnPalletPulldownBlockedByEntityHide
	// void Cosmetic_OnPalletPulldownBlockedByEntityHide();                                                                  // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Pallet.CanPulldown
	// bool CanPulldown(class ADBDPlayer* Player, FVector& interactionAxis, bool isStationary);                              // [0x58c6350] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Pallet.Authority_OnOverlapPushBox
	// void Authority_OnOverlapPushBox(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x58c6130] Final|Native|Private|HasOutParms 
};

/// Class /Script/DeadByDaylight.PalletPulldownBlockerComponent
/// Size: 0x0078 (0x0000B8 - 0x000130)
class UPalletPulldownBlockerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x00B8   (0x0060)  MISSED
	bool                                               _isPalletPulldownBlockedByEntity;                           // 0x0118   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0119   (0x0007)  MISSED
	class UObject*                                     _palletToBlock;                                             // 0x0120   (0x0008)  
	float                                              _blockedDisappearFxTime;                                    // 0x0128   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x012C   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PalletPulldownBlockerComponent.OnRep_PalletToBlock
	// void OnRep_PalletToBlock(class UObject* oldPalletToBlock);                                                            // [0x58cc5f0] Final|Native|Private 
	// Function /Script/DeadByDaylight.PalletPulldownBlockerComponent.Multicast_PalletPulldownBlockedShowCosmetic
	// void Multicast_PalletPulldownBlockedShowCosmetic(class UObject* palletToBlock);                                       // [0x58cbe00] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.PalletPulldownBlockerComponent.Multicast_PalletPulldownBlockedHideCosmetic
	// void Multicast_PalletPulldownBlockedHideCosmetic(class UObject* palletToUnblock);                                     // [0x505fd60] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/DeadByDaylight.PalletTracker
/// Size: 0x0040 (0x000230 - 0x000270)
class APalletTracker : public AActor
{ 
public:
	class APallet*                                     _procedurallySpawnedPallet;                                 // 0x0230   (0x0008)  
	class APallet*                                     _dreamPallet;                                               // 0x0238   (0x0008)  
	class USceneComponent*                             _indicatorLocation;                                         // 0x0240   (0x0008)  
	bool                                               _blocked;                                                   // 0x0248   (0x0001)  
	unsigned char                                      UnknownData00_6[0x27];                                      // 0x0249   (0x0027)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PalletTracker.RevealToLocalPlayerBP
	// void RevealToLocalPlayerBP(bool shown);                                                                               // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.PalletTracker.OnRep_DreamPallet
	// void OnRep_DreamPallet(class APallet* oldDreamPallet);                                                                // [0x58cc540] Final|Native|Private 
	// Function /Script/DeadByDaylight.PalletTracker.InitializeTunableValues
	// void InitializeTunableValues(class ASlasherPlayer* Slasher);                                                          // [0x58cbc70] Final|Native|Private 
	// Function /Script/DeadByDaylight.PalletTracker.EnableSelectedEffectToLocalPlayer
	// void EnableSelectedEffectToLocalPlayer(bool activated);                                                               // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.PalletTracker.CanSpawnDreamPalletAtLocation
	// bool CanSpawnDreamPalletAtLocation();                                                                                 // [0x58cb620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.PalletUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UPalletUtilities : public UObject
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.PalletUtilities.GetPalletTrackerBP
	// TWeakObjectPtr<UClass*> GetPalletTrackerBP(class UObject* WorldContextObject);                                        // [0x58cbb30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PalletUtilities.GetIllusionaryPalletStaticMesh
	// TWeakObjectPtr<UStaticMesh*> GetIllusionaryPalletStaticMesh(class UObject* worldContextObjec);                        // [0x58cba10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PalletUtilities.GetDreamPalletBP
	// TWeakObjectPtr<UClass*> GetDreamPalletBP(class UObject* WorldContextObject);                                          // [0x58cb7f0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PanelScreen
/// Size: 0x0378 (0x000120 - 0x000498)
class UPanelScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x378];                                     // 0x0120   (0x0378)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PanelScreen.OnWebNodeSelected
	// void OnWebNodeSelected(int32_t characterId, int32_t ID, int32_t nodeDepth);                                           // [0x58ccc10] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnWebNodeHovered
	// void OnWebNodeHovered(int32_t ID);                                                                                    // [0x58ccb80] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnWebBuilt
	// void OnWebBuilt(int32_t characterId, bool IsEmpty);                                                                   // [0x58ccab0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnStoreButtonClick
	// void OnStoreButtonClick();                                                                                            // [0x58122c0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnSideTabButtonClick
	// void OnSideTabButtonClick(int32_t tabIndex);                                                                          // [0x58cca20] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnSequenceStepCompleted
	// void OnSequenceStepCompleted(int32_t characterId, int32_t ID);                                                        // [0x58cc950] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnSelectedEquipableSlotZoomChange
	// void OnSelectedEquipableSlotZoomChange(bool zoomIn);                                                                  // [0x58cc8c0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnRotateCharacter
	// void OnRotateCharacter(float mouseDistanceChange);                                                                    // [0x58cc840] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnRoleButtonClick
	// void OnRoleButtonClick();                                                                                             // [0x57c42c0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnReservedBloodPoints
	// void OnReservedBloodPoints(int32_t characterId, int32_t BloodPoints, bool fullCost);                                  // [0x58cc730] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnRegenerateButtonClick
	// void OnRegenerateButtonClick(int32_t characterId);                                                                    // [0x58cc490] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnPrestigeUp
	// void OnPrestigeUp(int32_t characterId);                                                                               // [0x58cc400] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnPanelsHidden
	// void OnPanelsHidden();                                                                                                // [0x58cc3e0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnNodeConsumptionAnimDone
	// void OnNodeConsumptionAnimDone();                                                                                     // [0x58cc3c0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnNodeCollectionAnimDone
	// void OnNodeCollectionAnimDone();                                                                                      // [0x58cc3a0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnLoadoutSlotButtonClick
	// void OnLoadoutSlotButtonClick(int32_t slotIndex);                                                                     // [0x58cc310] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnLoadoutSearchClicked
	// void OnLoadoutSearchClicked();                                                                                        // [0x58cc2f0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnLoadoutSearchClear
	// void OnLoadoutSearchClear();                                                                                          // [0x58bc920] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnLoadoutPresetClick
	// void OnLoadoutPresetClick(int32_t index);                                                                             // [0x58bbe80] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnLevelUpShown
	// void OnLevelUpShown();                                                                                                // [0x58cc2d0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnLevelUpDone
	// void OnLevelUpDone();                                                                                                 // [0x58cc2b0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnItemUnselected
	// void OnItemUnselected(int32_t itemIndex);                                                                             // [0x58bcdf0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnItemSelected
	// void OnItemSelected(int32_t itemIndex);                                                                               // [0x58cc220] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnEventButtonClick
	// void OnEventButtonClick();                                                                                            // [0x57c4110] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnEquipableSlotClicked
	// void OnEquipableSlotClicked(int32_t clickedSlotCategory, int32_t clickedSlotIndex);                                   // [0x58cc150] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnCustomizationSearchClicked
	// void OnCustomizationSearchClicked();                                                                                  // [0x58bc900] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnCustomizationSearchClear
	// void OnCustomizationSearchClear();                                                                                    // [0x58cc130] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnCustomizationPresetClick
	// void OnCustomizationPresetClick(int32_t index);                                                                       // [0x58cc0a0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnCustomizationPlayMoriSelected
	// void OnCustomizationPlayMoriSelected();                                                                               // [0x58cc080] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnConfirmCollectSelectedNode
	// void OnConfirmCollectSelectedNode(int32_t characterId);                                                               // [0x58cbff0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnCharInfoClick
	// void OnCharInfoClick();                                                                                               // [0x58b34b0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnCharacterSlotButtonClick
	// void OnCharacterSlotButtonClick(int32_t CharacterIndex);                                                              // [0x58c7180] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnCharacterInfoClick
	// void OnCharacterInfoClick();                                                                                          // [0x58b3490] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnBloodwebCenterButtonSelected
	// void OnBloodwebCenterButtonSelected();                                                                                // [0x58cbfd0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnBloodwebCenterButtonHovered
	// void OnBloodwebCenterButtonHovered();                                                                                 // [0x58cbfb0] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnAvailableItemsSortingChange
	// void OnAvailableItemsSortingChange(int32_t newSorting);                                                               // [0x58cbf20] Final|Native|Public  
	// Function /Script/DeadByDaylight.PanelScreen.OnAvailableItemClicked
	// void OnAvailableItemClicked(int32_t clickedItemIndex);                                                                // [0x58cbe90] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.ParticleSystemDistanceFaderComponent
/// Size: 0x0020 (0x0000B8 - 0x0000D8)
class UParticleSystemDistanceFaderComponent : public UActorComponent
{ 
public:
	class UParticleSystemComponent*                    ParticleSystemComponent;                                    // 0x00B8   (0x0008)  
	FName                                              OpacityParameterName;                                       // 0x00C0   (0x000C)  
	float                                              StartFadeDistance;                                          // 0x00CC   (0x0004)  
	float                                              EndFadeDistance;                                            // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.PawnAudioManager
/// Size: 0x0020 (0x000038 - 0x000058)
class UPawnAudioManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PawnAudioManager.UnregisterSlasherPawnAudio
	// void UnregisterSlasherPawnAudio(class ADBDBasePlayer* SlasherPawn);                                                   // [0x58ccfd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PawnAudioManager.RegisterSlasherPawnAudio
	// void RegisterSlasherPawnAudio(class ADBDBasePlayer* SlasherPawn, FDelegateProperty onAudioEnabled, FDelegateProperty onAudioDisabled); // [0x58ccdf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PawnAudioManager.PostAudioEventIfPawnCurrent
	// bool PostAudioEventIfPawnCurrent(class ADBDBasePlayer* Pawn, class UAkAudioEvent* AudioEvent);                        // [0x58ccd20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PawnAudioManager.IsPawnCurrentlyActive
	// bool IsPawnCurrentlyActive(class ADBDBasePlayer* Pawn);                                                               // [0x58cbd60] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PawnAudioManager.ForcePawnAudioPriority
	// bool ForcePawnAudioPriority(class ADBDBasePlayer* Pawn);                                                              // [0x58cb720] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.SpecialEventUIInfo
/// Size: 0x0060 (0x000000 - 0x000060)
struct FSpecialEventUIInfo
{ 
	SDK_UNDEFINED(16,2208) /* FString */               __um(eventID);                                              // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2209) /* FString */               __um(EventBannerFrameLabel);                                // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2210) /* FString */               __um(EventThemeFrameLabel);                                 // 0x0020   (0x0010)  
	SDK_UNDEFINED(24,2211) /* FText */                 __um(EventName);                                            // 0x0030   (0x0018)  
	bool                                               IsPastEvent;                                                // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	SDK_UNDEFINED(16,2212) /* FString */               __um(BloodwebCollectSoundEvent);                            // 0x0050   (0x0010)  
};

/// Struct /Script/DeadByDaylight.InventorySlotData
/// Size: 0x0128 (0x000000 - 0x000128)
struct FInventorySlotData
{ 
	FName                                              ItemId;                                                     // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2213) /* FString */               __um(IconFilePath);                                         // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2214) /* FString */               __um(DisplayName);                                          // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2215) /* FString */               __um(ParentDisplayName);                                    // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,2216) /* FString */               __um(ParentTypeDisplayName);                                // 0x0040   (0x0010)  
	bool                                               IsParentAvailable;                                          // 0x0050   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0051   (0x0007)  MISSED
	SDK_UNDEFINED(16,2217) /* FString */               __um(Description);                                          // 0x0058   (0x0010)  
	TArray<EPerkCategory>                              PerkCategory;                                               // 0x0068   (0x0010)  
	EOfferingCategory                                  OfferingCategory;                                           // 0x0078   (0x0001)  
	EInventoryItemType                                 ItemType;                                                   // 0x0079   (0x0001)  
	EItemRarity                                        Rarity;                                                     // 0x007A   (0x0001)  
	EStatusEffectType                                  StatusEffectType;                                           // 0x007B   (0x0001)  
	int32_t                                            Level;                                                      // 0x007C   (0x0004)  
	SDK_UNDEFINED(16,2218) /* FString */               __um(Subtitle);                                             // 0x0080   (0x0010)  
	int32_t                                            StackCount;                                                 // 0x0090   (0x0004)  
	EItemAvailability                                  Availability;                                               // 0x0094   (0x0001)  
	bool                                               IsTeachablePerk;                                            // 0x0095   (0x0001)  
	bool                                               IsSlasherPerk;                                              // 0x0096   (0x0001)  
	bool                                               IsPerkAvailableInFearMarket;                                // 0x0097   (0x0001)  
	bool                                               IsPerkAvailableInBloodWeb;                                  // 0x0098   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0099   (0x0003)  MISSED
	int32_t                                            TeachableLevel;                                             // 0x009C   (0x0004)  
	SDK_UNDEFINED(16,2219) /* FString */               __um(DlcDisplayName);                                       // 0x00A0   (0x0010)  
	bool                                               IsLocked;                                                   // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x00B1   (0x0007)  MISSED
	FSpecialEventUIInfo                                EventInfo;                                                  // 0x00B8   (0x0060)  
	int32_t                                            UnlockableLevel;                                            // 0x0118   (0x0004)  
	bool                                               IsLimitedItem;                                              // 0x011C   (0x0001)  
	bool                                               IsPrivateIcon;                                              // 0x011D   (0x0001)  
	bool                                               IsEnabled;                                                  // 0x011E   (0x0001)  
	bool                                               IsSharablePerk;                                             // 0x011F   (0x0001)  
	ELoadoutPartState                                  LoadoutPartState;                                           // 0x0120   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x0121   (0x0007)  MISSED
};

/// Class /Script/DeadByDaylight.UMGLoadoutItemButton
/// Size: 0x0340 (0x000338 - 0x000678)
class UUMGLoadoutItemButton : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(16,2220) /* FMulticastInlineDelegate */ __um(OnLoadoutItemButtonClicked);                        // 0x0338   (0x0010)  
	SDK_UNDEFINED(16,2221) /* FMulticastInlineDelegate */ __um(OnDisabledItemButtonClicked);                       // 0x0348   (0x0010)  
	SDK_UNDEFINED(16,2222) /* FMulticastInlineDelegate */ __um(OnLoadoutItemButtonLongPress);                      // 0x0358   (0x0010)  
	bool                                               HideStackCount;                                             // 0x0368   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0369   (0x0007)  MISSED
	class UTextBlock*                                  TextStackCount;                                             // 0x0370   (0x0008)  
	class UCanvasPanel*                                EmptyCanvas;                                                // 0x0378   (0x0008)  
	class UButton*                                     EmptyButton;                                                // 0x0380   (0x0008)  
	class UButton*                                     LockedButton;                                               // 0x0388   (0x0008)  
	class UCanvasPanel*                                ActionCanvas;                                               // 0x0390   (0x0008)  
	class UImage*                                      ImageRarityBG;                                              // 0x0398   (0x0008)  
	class UImage*                                      ImageGradient;                                              // 0x03A0   (0x0008)  
	class UImage*                                      ImagePaint;                                                 // 0x03A8   (0x0008)  
	class UImage*                                      ImageEventBorder;                                           // 0x03B0   (0x0008)  
	class UImage*                                      ImagePaintTop;                                              // 0x03B8   (0x0008)  
	class UImage*                                      ImagePaintBottom;                                           // 0x03C0   (0x0008)  
	ESlateVisibility                                   EmptyCanvasVisibility;                                      // 0x03C8   (0x0001)  
	ESlateVisibility                                   ActionCanvasVisibility;                                     // 0x03C9   (0x0001)  
	ESlateVisibility                                   PrivateCanvasVisibility;                                    // 0x03CA   (0x0001)  
	ESlateVisibility                                   LockIconVisibility;                                         // 0x03CB   (0x0001)  
	ESlateVisibility                                   EmptyIconVisibility;                                        // 0x03CC   (0x0001)  
	ESlateVisibility                                   SpecialEventVisiblity;                                      // 0x03CD   (0x0001)  
	ESlateVisibility                                   LoadoutSelectedVisibility;                                  // 0x03CE   (0x0001)  
	ESlateVisibility                                   LoadoutLockVisibility;                                      // 0x03CF   (0x0001)  
	class UImage*                                      ImageIcon;                                                  // 0x03D0   (0x0008)  
	class UImage*                                      ImageShadow;                                                // 0x03D8   (0x0008)  
	class UButton*                                     ActionButton;                                               // 0x03E0   (0x0008)  
	FSlateBrush                                        EmptyBGAsset;                                               // 0x03E8   (0x0090)  
	FSlateBrush                                        DisableBGAsset;                                             // 0x0478   (0x0090)  
	FInventorySlotData                                 LoadoutItemData;                                            // 0x0508   (0x0128)  
	bool                                               _triggerClickEventForLoadoutWidget;                         // 0x0630   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0631   (0x0007)  MISSED
	class UVerticalBox*                                CanvasUnlock;                                               // 0x0638   (0x0008)  
	class UTextBlock*                                  TextUnlockLevel;                                            // 0x0640   (0x0008)  
	unsigned char                                      UnknownData02_6[0x30];                                      // 0x0648   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.UpdateWidgetByState
	// void UpdateWidgetByState(EInventoryButtonState State);                                                                // [0x5949700] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.UpdateWidgetByDataBP
	// void UpdateWidgetByDataBP(FInventorySlotData& SlotData);                                                              // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.UpdateWidgetByData
	// void UpdateWidgetByData(FInventorySlotData& SlotData);                                                                // [0x59495d0] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.UpdateUnlockable
	// void UpdateUnlockable(FString nameToDisplay, int32_t UnlockableLevel);                                                // [0x59494f0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.UpdateStackCount
	// void UpdateStackCount(int32_t StackCount);                                                                            // [0x5949460] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.UpdateImageColor
	// void UpdateImageColor(EItemRarity Rarity, EStatusEffectType EffectType);                                              // [0x5949230] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.ShowClickableOutline
	// void ShowClickableOutline(bool clickable);                                                                            // [0x5949140] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.SetIsSelected
	// void SetIsSelected(bool IsSelected);                                                                                  // [0x5948d70] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.SetIconImageByPath
	// void SetIconImageByPath(FString IconPath);                                                                            // [0x59488d0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.OnLockedButtonClicked
	// void OnLockedButtonClicked();                                                                                         // [0x5948890] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.InitializationForLoadoutWidget
	// void InitializationForLoadoutWidget();                                                                                // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.InitializationForCharacterInfoWidget
	// void InitializationForCharacterInfoWidget();                                                                          // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.GetLoadoutItemID
	// FName GetLoadoutItemID();                                                                                             // [0x5948440] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.BroadcastLongPressEvent
	// void BroadcastLongPressEvent(FName ItemId);                                                                           // [0x5948380] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutItemButton.BroadcastClickedEvent
	// void BroadcastClickedEvent(FName ItemId);                                                                             // [0x59482e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PerkActionButton
/// Size: 0x0028 (0x000678 - 0x0006A0)
class UPerkActionButton : public UUMGLoadoutItemButton
{ 
public:
	class UTextBlock*                                  TextUnlockLevelTitle;                                       // 0x0678   (0x0008)  
	bool                                               Activatable;                                                // 0x0680   (0x0001)  
	ESlateVisibility                                   SelectedImageVisibility;                                    // 0x0681   (0x0001)  
	ESlateVisibility                                   ClickableButtonVisibility;                                  // 0x0682   (0x0001)  
	ESlateVisibility                                   ClickableImageVisibility;                                   // 0x0683   (0x0001)  
	ESlateVisibility                                   ProgressbarVisibility;                                      // 0x0684   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0685   (0x0003)  MISSED
	float                                              IdleTime;                                                   // 0x0688   (0x0004)  
	unsigned char                                      UnknownData01_6[0x14];                                      // 0x068C   (0x0014)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PerkActionButton.UpdateWidgetPercentage
	// void UpdateWidgetPercentage(float Percentage);                                                                        // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.PerkActionButton.SetIsActivatable
	// void SetIsActivatable(bool isClickable);                                                                              // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.PerkActionButton.SetCanEverBeActivated
	// void SetCanEverBeActivated();                                                                                         // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.PerkActionButton.CallSetPerkLevel
	// void CallSetPerkLevel(int32_t Level);                                                                                 // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.PerkActionButton.CallHidePerkLevel
	// void CallHidePerkLevel();                                                                                             // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.PerkCollectionComponent
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UPerkCollectionComponent : public UActorComponent
{ 
public:
	TArray<class UPerk*>                               _array;                                                     // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x00C8   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PerkCollectionComponent.OnRep_Array
	// void OnRep_Array(TArray<UPerk*>& oldArray);                                                                           // [0x58d1fc0] Final|Native|Private|HasOutParms 
};

/// Class /Script/DeadByDaylight.PerkDataAsset
/// Size: 0x0000 (0x000088 - 0x000088)
class UPerkDataAsset : public UGameplayModifierContainerDataAsset
{ 
public:
};

/// Class /Script/DeadByDaylight.PerkHudWidget
/// Size: 0x0138 (0x000338 - 0x000470)
class UPerkHudWidget : public UMobileBaseUserWidget
{ 
public:
	class UCanvasPanel*                                PerksClickable;                                             // 0x0338   (0x0008)  
	class UCanvasPanel*                                PerksExternal;                                              // 0x0340   (0x0008)  
	SDK_UNDEFINED(48,2223) /* TWeakObjectPtr<UClass*> */ __um(AtlantaPerkActionButtonClass);                       // 0x0348   (0x0030)  
	SDK_UNDEFINED(80,2224) /* TMap<FName, UPerkActionButton*> */ __um(_clickablePerksMap);                         // 0x0378   (0x0050)  
	SDK_UNDEFINED(80,2225) /* TMap<FName, UPerkActionButton*> */ __um(_externalPerksMap);                          // 0x03C8   (0x0050)  
	unsigned char                                      UnknownData00_6[0x58];                                      // 0x0418   (0x0058)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PerkHudWidget.RemoveExistingPerk
	// void RemoveExistingPerk(FName perkId, bool isExternal);                                                               // [0x58d21d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PerkHudWidget.OnPerkClickedHandler
	// void OnPerkClickedHandler(FName perkId);                                                                              // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.PerkManager
/// Size: 0x02B8 (0x0000B8 - 0x000370)
class UPerkManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x00B8   (0x0028)  MISSED
	class UPerkCollectionComponent*                    _perks;                                                     // 0x00E0   (0x0008)  
	class UStatusEffectCollectionComponent*            _statusEffects;                                             // 0x00E8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x280];                                     // 0x00F0   (0x0280)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PerkManager.PopulateSpecialModifierSets
	// void PopulateSpecialModifierSets();                                                                                   // [0x58d2090] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.PerkManager.HasStatusEffectOfClass
	// bool HasStatusEffectOfClass(class UClass* Type);                                                                      // [0x58d1c00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.HasStatusEffect
	// bool HasStatusEffect(FName statusEffectId);                                                                           // [0x58d1b50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.HasPerkSubFlag
	// bool HasPerkSubFlag(FGameplayTag subFlag);                                                                            // [0x58d1aa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.HasPerkModifierOfType
	// bool HasPerkModifierOfType(FGameplayTag Type);                                                                        // [0x58d19f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.HasPerkFlags
	// bool HasPerkFlags(TArray<FGameplayTag> Flags);                                                                        // [0x58d18f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.HasPerkFlagFromSource
	// bool HasPerkFlagFromSource(FGameplayTag flag, EGameplayModifierSource modifierSource);                                // [0x58d17f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.HasPerkFlag
	// bool HasPerkFlag(FGameplayTag flag);                                                                                  // [0x58d1740] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.HasAnyAddonWithTag
	// bool HasAnyAddonWithTag(FName Tag);                                                                                   // [0x58d15d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.HasAllCharacterPerksEquipped
	// bool HasAllCharacterPerksEquipped();                                                                                  // [0x58d15a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetStatusEffectByClass
	// class UStatusEffect* GetStatusEffectByClass(class UClass* Type);                                                      // [0x58d1500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetSourceWithModifier
	// class UGameplayModifierContainer* GetSourceWithModifier(FGameplayTag Type);                                           // [0x58d1450] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetSourceWithFlag
	// class UGameplayModifierContainer* GetSourceWithFlag(FGameplayTag flag);                                               // [0x58d13a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetPerks
	// TArray<UPerk*> GetPerks();                                                                                            // [0x58d1280] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetPerkModifierMinValueAndSource
	// float GetPerkModifierMinValueAndSource(FGameplayTag Type, float startValue, class UGameplayModifierContainer*& outSource); // [0x58d1140] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetPerkModifierMinValue
	// float GetPerkModifierMinValue(FGameplayTag Type, float startValue);                                                   // [0x58d1040] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetPerkModifierMaxValueAndSource
	// float GetPerkModifierMaxValueAndSource(FGameplayTag Type, class UGameplayModifierContainer*& outSource);              // [0x58d0f40] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetPerkModifierMaxValue
	// float GetPerkModifierMaxValue(FGameplayTag Type);                                                                     // [0x58d0e80] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetPerkModifierAdditiveValue
	// float GetPerkModifierAdditiveValue(FGameplayTag Type, float BaseValue);                                               // [0x58d0d80] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetPerkModifier
	// float GetPerkModifier(FGameplayTag Type);                                                                             // [0x58d0cd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetPerk
	// class UPerk* GetPerk(FName ID);                                                                                       // [0x58d0c20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetMultiplicativeModifierValueWithCompoundNegative
	// float GetMultiplicativeModifierValueWithCompoundNegative(FGameplayTag Type);                                          // [0x58d0b70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetMultiplicativeModifierValueOfContainerWithCompoundNegative
	// float GetMultiplicativeModifierValueOfContainerWithCompoundNegative(FGameplayTagContainer Container);                 // [0x58d0a80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetMultiplicativeModifierValue
	// float GetMultiplicativeModifierValue(FGameplayTag Type);                                                              // [0x58d09d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetCompoundedModifierValue
	// float GetCompoundedModifierValue(FGameplayTag Type);                                                                  // [0x58d0920] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetAveragePerkModifierValue
	// float GetAveragePerkModifierValue(FGameplayTag Type);                                                                 // [0x58d0860] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetAllStatusEffectsByID
	// TArray<UStatusEffect*> GetAllStatusEffectsByID(FName& ID);                                                            // [0x58d0770] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetAllStatusEffectsByClass
	// TArray<UStatusEffect*> GetAllStatusEffectsByClass(class UClass* Type);                                                // [0x58d0690] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetAllStatusEffects
	// TArray<UStatusEffect*> GetAllStatusEffects();                                                                         // [0x58d0610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetAllSourcesWithModifier
	// TArray<UGameplayModifierContainer*> GetAllSourcesWithModifier(FGameplayTag Type);                                     // [0x58d0520] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.GetAllSourcesWithFlag
	// TArray<UGameplayModifierContainer*> GetAllSourcesWithFlag(FGameplayTag flag);                                         // [0x58d0430] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkManager.Authority_SpawnPerk
	// void Authority_SpawnPerk(FName perkId, int32_t PerkLevel);                                                            // [0x58d0350] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PerkManager.Authority_RemoveStatusEffectByClass
	// void Authority_RemoveStatusEffectByClass(class UClass* EffectClass, bool bRemoveAllOfSameClass);                      // [0x58d0280] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PerkManager.Authority_RemoveStatusEffect
	// void Authority_RemoveStatusEffect(class UStatusEffect* StatusEffect);                                                 // [0x58d01f0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PerkManager.Authority_RemovePerks
	// void Authority_RemovePerks();                                                                                         // [0x58d01d0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PerkManager.Authority_ImposeStatusEffectOfClass
	// class UStatusEffect* Authority_ImposeStatusEffectOfClass(class UClass* EffectClass, class ADBDPlayer* OriginatingPlayer, float CustomParam, class UGameplayModifierContainer* OriginatingEffect, bool ShouldDisplay, float Lifetime); // [0x58cffe0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PerkManager.Authority_ImposeNewStatusEffectOfClassOrChangeLifeTime
	// class UStatusEffect* Authority_ImposeNewStatusEffectOfClassOrChangeLifeTime(class UClass* EffectClass, class ADBDPlayer* OriginatingPlayer, float Lifetime, float CustomParam, class UGameplayModifierContainer* OriginatingEffect, bool ShouldDisplay); // [0x58cfe00] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PerkManagerOwnerInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UPerkManagerOwnerInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.PerkOwnerInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UPerkOwnerInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.PerkSelectionSlotWidget
/// Size: 0x0080 (0x000338 - 0x0003B8)
class UPerkSelectionSlotWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  PerkName;                                                   // 0x0338   (0x0008)  
	class UTextBlock*                                  TextChoose;                                                 // 0x0340   (0x0008)  
	class UPerkActionButton*                           PerkActionButton;                                           // 0x0348   (0x0008)  
	class UImage*                                      SelectedIcon;                                               // 0x0350   (0x0008)  
	class UUMGHtmlRichText*                            descriptionText;                                            // 0x0358   (0x0008)  
	class UImage*                                      PictureBackground;                                          // 0x0360   (0x0008)  
	class UImage*                                      PicturePerkBackground;                                      // 0x0368   (0x0008)  
	class UImage*                                      PictureHighlightFrame;                                      // 0x0370   (0x0008)  
	class UImage*                                      PictureTopRightBackground;                                  // 0x0378   (0x0008)  
	class UImage*                                      PictureTopRightFrame;                                       // 0x0380   (0x0008)  
	float                                              HighOpacity;                                                // 0x0388   (0x0004)  
	float                                              LowOpacity;                                                 // 0x038C   (0x0004)  
	float                                              PerkBackgroundLowOpacity;                                   // 0x0390   (0x0004)  
	float                                              DescriptionBackgroundLowOpacity;                            // 0x0394   (0x0004)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0398   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PerkSelectionSlotWidget.OnButtonClicked
	// void OnButtonClicked();                                                                                               // [0x58d1fa0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PerkSoundHudIcon
/// Size: 0x0010 (0x000338 - 0x000348)
class UPerkSoundHudIcon : public UMobileBaseUserWidget
{ 
public:
	FName                                              perkId;                                                     // 0x0338   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0344   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PerkSoundHudIcon.ClearPerk
	// void ClearPerk();                                                                                                     // [0x4b5ea40] Native|Public        
	// Function /Script/DeadByDaylight.PerkSoundHudIcon.ActivatePerk
	// void ActivatePerk(float Percentage);                                                                                  // [0x58cfcb0] Native|Public        
};

/// Class /Script/DeadByDaylight.PerkSoundHudIconSporadic
/// Size: 0x0038 (0x000348 - 0x000380)
class UPerkSoundHudIconSporadic : public UPerkSoundHudIcon
{ 
public:
	class UCanvasPanel*                                SporadicIcon;                                               // 0x0348   (0x0008)  
	float                                              FadeInRate;                                                 // 0x0350   (0x0004)  
	float                                              FadeOutRate;                                                // 0x0354   (0x0004)  
	float                                              AnimationStartOpacity;                                      // 0x0358   (0x0004)  
	int32_t                                            FadePolynomialOrder;                                        // 0x035C   (0x0004)  
	bool                                               DisplayIcon;                                                // 0x0360   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1F];                                      // 0x0361   (0x001F)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PerkSoundHudIconSporadic.NativeTick
	// void NativeTick(FGeometry& MyGeometry, float DeltaTime);                                                              // [0x58d1ea0] Native|Public|HasOutParms 
};

/// Class /Script/DeadByDaylight.PerkSoundHudWidget
/// Size: 0x0008 (0x000338 - 0x000340)
class UPerkSoundHudWidget : public UMobileBaseUserWidget
{ 
public:
	class UHorizontalBox*                              PerkIcons;                                                  // 0x0338   (0x0008)  
};

/// Class /Script/DeadByDaylight.PerkTrappableComponent
/// Size: 0x0048 (0x0000B8 - 0x000100)
class UPerkTrappableComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2226) /* FMulticastInlineDelegate */ __um(OnAddTrap);                                         // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,2227) /* FMulticastInlineDelegate */ __um(OnRemoveTrap);                                      // 0x00C8   (0x0010)  
	class UClass*                                      _interactableType;                                          // 0x00D8   (0x0008)  
	TArray<ETrapType>                                  _trapsOnInteractable;                                       // 0x00E0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00F0   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PerkTrappableComponent.OnTrapAddedOrRemoved__DelegateSignature
	// void OnTrapAddedOrRemoved__DelegateSignature(ETrapType trapType);                                                     // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.PerkTrappableComponent.OnRep_TrapsOnInteractable
	// void OnRep_TrapsOnInteractable();                                                                                     // [0x58d2070] Final|Native|Private 
	// Function /Script/DeadByDaylight.PerkTrappableComponent.HasTrap
	// bool HasTrap(ETrapType trapType);                                                                                     // [0x58d1ca0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PerkTrappableComponent.HasAnyTrap
	// bool HasAnyTrap();                                                                                                    // [0x58d1680] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.PerkUtilitiesInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UPerkUtilitiesInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.PerspectiveEffectActivator
/// Size: 0x0078 (0x0000B8 - 0x000130)
class UPerspectiveEffectActivator : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	SDK_UNDEFINED(80,2228) /* TMap<FName, FPerspectiveEffectData> */ __um(_perspectiveEffects);                    // 0x00D0   (0x0050)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0120   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PerspectiveEffectActivator.UnregisterEffect
	// void UnregisterEffect(FName effectName);                                                                              // [0x58d23b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PerspectiveEffectActivator.SetWantsActive
	// void SetWantsActive(FName effectName, bool WantsActive);                                                              // [0x58d22c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PerspectiveEffectActivator.RegisterEffect
	// void RegisterEffect(FName effectName, FPerspectiveEffectData effectData);                                             // [0x58d20b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PerspectiveEffectActivator.IsEffectActive
	// bool IsEffectActive(FName effectName);                                                                                // [0x58d1d30] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PhaseWalkingInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UPhaseWalkingInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.PlagueUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UPlagueUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.PlagueUtilities.IsPlagueDebugModeActive
	// bool IsPlagueDebugModeActive();                                                                                       // [0x58d1e70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.PlagueUtilities.IsInfected
	// bool IsInfected(class ADBDPlayer* Player);                                                                            // [0x58d1de0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.PlagueUtilities.HasMaxLevelSickness
	// bool HasMaxLevelSickness(class ADBDPlayer* Player);                                                                   // [0x58d16b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.PlagueUtilities.GetPlagueEffect
	// class USurvivorPlagueEffect* GetPlagueEffect(class ADBDPlayer* Player);                                               // [0x58d1310] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.PlagueUtilities.Authority_AddSicknessToPlayer
	// void Authority_AddSicknessToPlayer(class ADBDPlayer* Player, float sicknessToAdd);                                    // [0x58cfd40] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PlatformHelper
/// Size: 0x0000 (0x000030 - 0x000030)
class UPlatformHelper : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.PlayerCardSubsystem
/// Size: 0x0000 (0x000038 - 0x000038)
class UPlayerCardSubsystem : public UGameInstanceSubsystem
{ 
public:
};

/// Class /Script/DeadByDaylight.PlayerDataStorageFacade
/// Size: 0x0078 (0x000030 - 0x0000A8)
class UPlayerDataStorageFacade : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0030   (0x0078)  MISSED
};

/// Class /Script/DeadByDaylight.PlayerDebugComponent
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPlayerDebugComponent : public UActorComponent
{ 
public:
	bool                                               _disableStartUpdateMontageDuringEnter;                      // 0x00B8   (0x0001)  
	bool                                               _allowPalletPullUpInteraction;                              // 0x00B9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00BA   (0x0006)  MISSED
};

/// Class /Script/DeadByDaylight.PlayerGameRelevancyComponent
/// Size: 0x0058 (0x0000B8 - 0x000110)
class UPlayerGameRelevancyComponent : public UActorComponent
{ 
public:
	FTagStateBool                                      _isRelevantToGameplay;                                      // 0x00B8   (0x0030)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x00E8   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.PlayerInGameAssetPreloadState
/// Size: 0x0018 (0x0000B8 - 0x0000D0)
class UPlayerInGameAssetPreloadState : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00B8   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PlayerInGameAssetPreloadState.Server_SetPreloadCompleted
	// void Server_SetPreloadCompleted(FString preloadInfo);                                                                 // [0x58d6eb0] Final|Net|NetReliableNative|Event|Private|NetServer 
};

/// Struct /Script/DeadByDaylight.AvailableInteractionCalculator
/// Size: 0x01C8 (0x000000 - 0x0001C8)
struct FAvailableInteractionCalculator
{ 
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0000   (0x0048)  MISSED
	SDK_UNDEFINED(80,2229) /* TSet<UInteractionDefinition*> */ __um(_interactions);                                // 0x0048   (0x0050)  
	unsigned char                                      UnknownData01_5[0x118];                                     // 0x0098   (0x0118)  MISSED
	float                                              _fullEvaluationFrequency;                                   // 0x01B0   (0x0004)  
	int32_t                                            _maxFramesForFullEvaluation;                                // 0x01B4   (0x0004)  
	float                                              _secondsBetweenNullReferenceCleanup;                        // 0x01B8   (0x0004)  
	unsigned char                                      UnknownData02_6[0xC];                                       // 0x01BC   (0x000C)  MISSED
};

/// Class /Script/DeadByDaylight.PlayerInteractionHandler
/// Size: 0x05B8 (0x0000B8 - 0x000670)
class UPlayerInteractionHandler : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x68];                                      // 0x00B8   (0x0068)  MISSED
	float                                              PriorityConeAngle;                                          // 0x0120   (0x0004)  
	float                                              BotPriorityConeAngle;                                       // 0x0124   (0x0004)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0128   (0x0010)  MISSED
	SDK_UNDEFINED(16,2230) /* FMulticastInlineDelegate */ __um(Authority_SecondaryActionDoneDelegate);             // 0x0138   (0x0010)  
	SDK_UNDEFINED(16,2231) /* FMulticastInlineDelegate */ __um(NewInteractionRequestedDelegate);                   // 0x0148   (0x0010)  
	SDK_UNDEFINED(16,2232) /* FMulticastInlineDelegate */ __um(ServerValidatedInteractionStartedDelegate);         // 0x0158   (0x0010)  
	SDK_UNDEFINED(16,2233) /* FMulticastInlineDelegate */ __um(ServerValidatedInteractionEndedDelegate);           // 0x0168   (0x0010)  
	EInteractionLayer                                  InteractionLayer;                                           // 0x0178   (0x0001)  
	unsigned char                                      UnknownData02_5[0xF];                                       // 0x0179   (0x000F)  MISSED
	SDK_UNDEFINED(16,2234) /* FMulticastInlineDelegate */ __um(OnDeactivateSkillCheckDelegate);                    // 0x0188   (0x0010)  
	unsigned char                                      UnknownData03_5[0x60];                                      // 0x0198   (0x0060)  MISSED
	bool                                               _hasInteractionRequest;                                     // 0x01F8   (0x0001)  
	bool                                               _hasInteractionRequestInBuffer;                             // 0x01F9   (0x0001)  
	unsigned char                                      UnknownData04_5[0x1E];                                      // 0x01FA   (0x001E)  MISSED
	class UInteractionDefinition*                      _interactionToSwapTo;                                       // 0x0218   (0x0008)  
	unsigned char                                      UnknownData05_5[0x18];                                      // 0x0220   (0x0018)  MISSED
	class UInteractionDefinition*                      _currentInteraction;                                        // 0x0238   (0x0008)  
	unsigned char                                      UnknownData06_5[0x90];                                      // 0x0240   (0x0090)  MISSED
	TArray<class ADBDPlayer*>                          _currentPlayerDependencies;                                 // 0x02D0   (0x0010)  
	EInputInteractionType                              _currentInteractionType;                                    // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData07_5[0x7];                                       // 0x02E1   (0x0007)  MISSED
	class USkillCheck*                                 _skillCheck;                                                // 0x02E8   (0x0008)  
	unsigned char                                      UnknownData08_5[0x8];                                       // 0x02F0   (0x0008)  MISSED
	TArray<float>                                      _progressBasedSkillChecks;                                  // 0x02F8   (0x0010)  
	unsigned char                                      UnknownData09_5[0x60];                                      // 0x0308   (0x0060)  MISSED
	class ADBDPlayer*                                  _requestedInterruptionOtherParty;                           // 0x0368   (0x0008)  
	class UInterruptionDefinition*                     _requestedInterruptionDefinition;                           // 0x0370   (0x0008)  
	bool                                               _requestedInterruptionIsInterruptor;                        // 0x0378   (0x0001)  
	unsigned char                                      UnknownData10_5[0x7];                                       // 0x0379   (0x0007)  MISSED
	class ADBDPlayer*                                  _currentInterruptionOtherParty;                             // 0x0380   (0x0008)  
	class UInterruptionDefinition*                     _currentInterruptionDefinition;                             // 0x0388   (0x0008)  
	bool                                               _currentInterruptionIsInterruptor;                          // 0x0390   (0x0001)  
	bool                                               _interactionInProgress;                                     // 0x0391   (0x0001)  
	unsigned char                                      UnknownData11_5[0x5E];                                      // 0x0392   (0x005E)  MISSED
	TArray<class UInteractionDefinition*>              _interactionsInZone;                                        // 0x03F0   (0x0010)  
	unsigned char                                      UnknownData12_5[0x28];                                      // 0x0400   (0x0028)  MISSED
	FAvailableInteractionCalculator                    _availableInteractionCalculator;                            // 0x0428   (0x01C8)  
	unsigned char                                      UnknownData13_5[0x20];                                      // 0x05F0   (0x0020)  MISSED
	SDK_UNDEFINED(80,2235) /* TMap<UObject*, FGameplayTagContainer> */ __um(_disableInteractionSourcesToExceptions); // 0x0610   (0x0050)  
	unsigned char                                      UnknownData14_6[0x10];                                      // 0x0660   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Server_StoreInterruption_Interruptor
	// void Server_StoreInterruption_Interruptor(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition); // [0x58d6f50] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Server_SetInteractionToSwapTo
	// void Server_SetInteractionToSwapTo(class UInteractionDefinition* Interaction);                                        // [0x58d6e20] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Server_RequestInterruption_Interruptor
	// void Server_RequestInterruption_Interruptor();                                                                        // [0x584f630] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Server_Cheat_SetInteractionScanInterval
	// void Server_Cheat_SetInteractionScanInterval(float Interval);                                                         // [0x58d6d90] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Server_CancelCurrentInteractionByInput
	// void Server_CancelCurrentInteractionByInput();                                                                        // [0x58d6d70] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Server_Broadcast_StoreInteraction
	// void Server_Broadcast_StoreInteraction(FStoredInteraction interactionToStore);                                        // [0x58d6c40] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Server_Broadcast_ConfirmChargedCompleted
	// void Server_Broadcast_ConfirmChargedCompleted(bool chargeComplete);                                                   // [0x58d6bb0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Server_AnswerInterruption_Interruptee
	// void Server_AnswerInterruption_Interruptee(ERequestState State);                                                      // [0x58d6b00] Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.RemoveInteraction
	// void RemoveInteraction(class UInteractionDefinition* Interaction);                                                    // [0x58d6a70] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.OnAttachedInteractorOwnerEndPlay
	// void OnAttachedInteractorOwnerEndPlay(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);                // [0x58d6870] Final|Native|Private 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Multicast_StoreInterruption_Interruptor
	// void Multicast_StoreInterruption_Interruptor(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition); // [0x58d67a0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Multicast_StoreInteraction
	// void Multicast_StoreInteraction(FStoredInteraction interactionToStore);                                               // [0x58d6670] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Multicast_SetInteractionToSwapTo
	// void Multicast_SetInteractionToSwapTo(class UInteractionDefinition* Interaction);                                     // [0x5817c60] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Multicast_RequestInterruption_Interruptee
	// void Multicast_RequestInterruption_Interruptee(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition); // [0x58d65a0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Multicast_InterruptionRequestResult_Interruptor
	// void Multicast_InterruptionRequestResult_Interruptor(ERequestState State, bool grantInterruptScore);                  // [0x58d64c0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Multicast_InteractionPredictionValidationResult
	// void Multicast_InteractionPredictionValidationResult(class UInteractionDefinition* Interaction, EInteractionValidationState State); // [0x58d63f0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Multicast_CancelCurrentInteractionByInput
	// void Multicast_CancelCurrentInteractionByInput();                                                                     // [0x5882340] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.HasAvailableInteraction
	// bool HasAvailableInteraction(EInputInteractionType interactionType);                                                  // [0x58d62a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.HasActiveSkillCheck
	// bool HasActiveSkillCheck();                                                                                           // [0x58d6270] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.GetMultiplicativeSkillCheckProbabilityModifier
	// float GetMultiplicativeSkillCheckProbabilityModifier();                                                               // [0x58d6240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.GetCurrentInteraction
	// class UInteractionDefinition* GetCurrentInteraction();                                                                // [0x588afa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.GetAvailableInteraction
	// class UInteractionDefinition* GetAvailableInteraction(EInputInteractionType interactionType);                         // [0x58d61b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.GetAdditiveSkillCheckProbabilityModifier
	// float GetAdditiveSkillCheckProbabilityModifier();                                                                     // [0x58d6180] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Client_NotifyChargeCompleted
	// void Client_NotifyChargeCompleted(class UInteractionDefinition* Interaction);                                         // [0x4b555c0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Client_Cheat_SetInteractionScanInterval
	// void Client_Cheat_SetInteractionScanInterval(float Interval);                                                         // [0x58d60f0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.CleanInteractionArray
	// void CleanInteractionArray(class AActor* DestroyedActor);                                                             // [0x58d6060] Final|Native|Public  
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Broadcast_Multicast_ConfirmChargedCompleted
	// void Broadcast_Multicast_ConfirmChargedCompleted(bool chargeComplete);                                                // [0x58d5fd0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.Authority_ClearPlayerDependency
	// void Authority_ClearPlayerDependency(class ADBDPlayer* playerDependency);                                             // [0x58d5f40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PlayerInteractionHandler.AddInteraction
	// void AddInteraction(class UInteractionDefinition* Interaction);                                                       // [0x58d5eb0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PlayerLevelTooltipWidget
/// Size: 0x0008 (0x000370 - 0x000378)
class UPlayerLevelTooltipWidget : public UBaseTooltipWidget
{ 
public:
	class UUMGTooltipContentPlayerLevelWidget*         PlayerLevelContent;                                         // 0x0370   (0x0008)  
};

/// Class /Script/DeadByDaylight.PlayerMoveBackAndForthComponent
/// Size: 0x0048 (0x0000B8 - 0x000100)
class UPlayerMoveBackAndForthComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x00B8   (0x0048)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PlayerMoveBackAndForthComponent.OnMoveTimerDone
	// void OnMoveTimerDone();                                                                                               // [0x58d6940] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.PlayerNameRegistration
/// Size: 0x0068 (0x000030 - 0x000098)
class UPlayerNameRegistration : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x68];                                      // 0x0030   (0x0068)  MISSED
};

/// Class /Script/DeadByDaylight.SpherePlayerOverlapComponent
/// Size: 0x0000 (0x0004A0 - 0x0004A0)
class USpherePlayerOverlapComponent : public USphereComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.CapsulePlayerOverlapComponent
/// Size: 0x0000 (0x0004A0 - 0x0004A0)
class UCapsulePlayerOverlapComponent : public UCapsuleComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.BoxPlayerOverlapComponent
/// Size: 0x0000 (0x0004B0 - 0x0004B0)
class UBoxPlayerOverlapComponent : public UBoxComponent
{ 
public:
};

/// Struct /Script/DeadByDaylight.PlayerPerspectiveChangeCameraMovementData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPlayerPerspectiveChangeCameraMovementData
{ 
	FVector                                            InitialCameraRelativeLocation;                              // 0x0000   (0x000C)  
	FVector                                            TargetCameraRelativeLocation;                               // 0x000C   (0x000C)  
	bool                                               ShouldForceLockCameraBehindPlayer;                          // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	class UCurveFloat*                                 TransitionCurve;                                            // 0x0020   (0x0008)  
	float                                              CameraMovementDuration;                                     // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x002C   (0x000C)  MISSED
};

/// Struct /Script/DeadByDaylight.PlayerPerspectiveChangeTargetData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPlayerPerspectiveChangeTargetData
{ 
	bool                                               IsAFirstPersonView;                                         // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	class USceneComponent*                             SceneComponent;                                             // 0x0008   (0x0008)  
	float                                              CameraDistanceFromFPVLocationToToggleFPVOnPlayer;           // 0x0010   (0x0004)  
	FName                                              SocketNameOnSceneComponent;                                 // 0x0014   (0x000C)  
	FVector                                            Offset;                                                     // 0x0020   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.PlayerPerspectiveChangeComponent
/// Size: 0x0070 (0x0000B8 - 0x000128)
class UPlayerPerspectiveChangeComponent : public UActorComponent
{ 
public:
	FPlayerPerspectiveChangeCameraMovementData         _currentCameraTransitionData;                               // 0x00B8   (0x0038)  
	FPlayerPerspectiveChangeTargetData                 _targetPerspective;                                         // 0x00F0   (0x0030)  
	bool                                               _shouldUpdateFirstPersonMeshAndModelAfterFinalize;          // 0x0120   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0121   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PlayerPerspectiveChangeComponent.TransitionToTargetPerspective
	// void TransitionToTargetPerspective(FPlayerPerspectiveChangeTargetData targetData, float TransitionDuration);          // [0x58d7020] BlueprintCosmetic|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PlayerPerspectiveChangeComponent.FinalizeTargetPerspective
	// void FinalizeTargetPerspective();                                                                                     // [0x4d82970] Native|Protected     
};

/// Class /Script/DeadByDaylight.PlayerPerspectiveComponent
/// Size: 0x0090 (0x0000B8 - 0x000148)
class UPlayerPerspectiveComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x90];                                      // 0x00B8   (0x0090)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PlayerPerspectiveComponent.UpdateLocallyObserved
	// void UpdateLocallyObserved();                                                                                         // [0x58d7160] Final|Native|Private 
	// Function /Script/DeadByDaylight.PlayerPerspectiveComponent.OnPawnControllerChanged
	// void OnPawnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController);  // [0x58d6960] Final|Native|Private 
	// Function /Script/DeadByDaylight.PlayerPerspectiveComponent.IsLocallyObserved
	// bool IsLocallyObserved();                                                                                             // [0x58d63c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.PlayerReportManager
/// Size: 0x00A0 (0x000038 - 0x0000D8)
class UPlayerReportManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0038   (0x0008)  MISSED
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0040   (0x0008)  
	unsigned char                                      UnknownData01_6[0x90];                                      // 0x0048   (0x0090)  MISSED
};

/// Class /Script/DeadByDaylight.PlayerScoreComponent
/// Size: 0x00A0 (0x0000B8 - 0x000158)
class UPlayerScoreComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(48,2236) /* TWeakObjectPtr<UDataTable*> */ __um(_scoreEmitterDB);                                // 0x00B8   (0x0030)  
	SDK_UNDEFINED(80,2237) /* TSet<UPlayerScoreEmitter*> */ __um(_emitters);                                       // 0x00E8   (0x0050)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0138   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.PlayerScoreEmitter
/// Size: 0x0008 (0x000030 - 0x000038)
class UPlayerScoreEmitter : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.PlayerSkeletalMeshComponentBudgeted
/// Size: 0x0000 (0x001030 - 0x001030)
class UPlayerSkeletalMeshComponentBudgeted : public UDBDSkeletalMeshComponentBudgeted
{ 
public:
};

/// Class /Script/DeadByDaylight.PlayerStateScoreEmitter
/// Size: 0x00B8 (0x000038 - 0x0000F0)
class UPlayerStateScoreEmitter : public UPlayerScoreEmitter
{ 
public:
	FGameplayTag                                       _scoreTag;                                                  // 0x0038   (0x000C)  
	float                                              _scoreUpdateInterval;                                       // 0x0044   (0x0004)  
	FGameplayTagQuery                                  _tagQuery;                                                  // 0x0048   (0x0048)  
	unsigned char                                      UnknownData00_6[0x60];                                      // 0x0090   (0x0060)  MISSED
};

/// Class /Script/DeadByDaylight.PollableEventListener
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UPollableEventListener : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B8   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.PoolableProjectileComponent
/// Size: 0x0000 (0x0000D8 - 0x0000D8)
class UPoolableProjectileComponent : public UAuthoritativePoolableActorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.PopupFactory
/// Size: 0x0008 (0x000030 - 0x000038)
class UPopupFactory : public UObject
{ 
public:
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0030   (0x0008)  
};

/// Class /Script/DeadByDaylight.PopupSequencer
/// Size: 0x0030 (0x000030 - 0x000060)
class UPopupSequencer : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0030   (0x0008)  MISSED
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0038   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0040   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.PostProcessUpdate
/// Size: 0x0000 (0x000230 - 0x000230)
class APostProcessUpdate : public AActor
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.PostProcessUpdate.PostProcessToggle
	// void PostProcessToggle(bool toggle);                                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.PowerButton
/// Size: 0x0060 (0x000338 - 0x000398)
class UPowerButton : public UMobileBaseUserWidget
{ 
public:
	class UActionButton*                               Button;                                                     // 0x0338   (0x0008)  
	class UCanvasPanel*                                SwitchIcon;                                                 // 0x0340   (0x0008)  
	class UCanvasPanel*                                CountContainer;                                             // 0x0348   (0x0008)  
	class UCanvasPanel*                                RadialProgressBarContainer;                                 // 0x0350   (0x0008)  
	class UTextBlock*                                  CountLabel;                                                 // 0x0358   (0x0008)  
	class UImage*                                      TierImage;                                                  // 0x0360   (0x0008)  
	class UCanvasPanel*                                AddonsContainer;                                            // 0x0368   (0x0008)  
	class UUMGInventoryItemButton*                     FirstAddonSlot;                                             // 0x0370   (0x0008)  
	class UUMGInventoryItemButton*                     SecondAddonSlot;                                            // 0x0378   (0x0008)  
	class UProgressBar*                                FillPowerChargeProgression;                                 // 0x0380   (0x0008)  
	float                                              DisabledOpacity;                                            // 0x0388   (0x0004)  
	float                                              EnabledOpacity;                                             // 0x038C   (0x0004)  
	bool                                               EnabledLongPressed;                                         // 0x0390   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0391   (0x0003)  MISSED
	int32_t                                            _itemCount;                                                 // 0x0394   (0x0004)  


	/// Functions
	// Function /Script/DeadByDaylight.PowerButton.SetSwitchIconActive
	// void SetSwitchIconActive(bool Active);                                                                                // [0x58dccc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PowerButton.SetState
	// void SetState(EActionButtonState State);                                                                              // [0x58dcc40] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PowerButton.SetRadialProgressPercentage
	// void SetRadialProgressPercentage(float progression, ERadialProgressBarType ProgressBarType);                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.PowerButton.SetRadialProgressBarActice
	// void SetRadialProgressBarActice(bool Active);                                                                         // [0x58dcbb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PowerButton.SetPowerIntensityOpacity
	// void SetPowerIntensityOpacity(float Opacity);                                                                         // [0x58dcb30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PowerButton.SetFillProgressPercentage
	// void SetFillProgressPercentage(float chargeProgressionPercentage);                                                    // [0x58dcab0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PowerButton.OnTierChanged
	// void OnTierChanged(int32_t previousTier, int32_t currentTier, bool IsFirstTime);                                      // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.PowerButton.IsRadialProgressBarActive
	// bool IsRadialProgressBarActive();                                                                                     // [0x58dca80] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.PowerButton.GetActionButton
	// class UActionButton* GetActionButton();                                                                               // [0x58dca50] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PremiumTransactionSubsystem
/// Size: 0x0020 (0x000038 - 0x000058)
class UPremiumTransactionSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.PresentationPowerFadeComponent
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UPresentationPowerFadeComponent : public UActorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.PresetControllerSubsystem
/// Size: 0x0010 (0x000038 - 0x000048)
class UPresetControllerSubsystem : public UGameInstanceSubsystem
{ 
public:
	class ULoadoutPresetController*                    _loadoutController;                                         // 0x0038   (0x0008)  
	class UCustomizationPresetController*              _customizationController;                                   // 0x0040   (0x0008)  
};

/// Class /Script/DeadByDaylight.IterativeWeightAdjustmentStrategy
/// Size: 0x0000 (0x000030 - 0x000030)
class UIterativeWeightAdjustmentStrategy : public UObject
{ 
public:
};

/// Struct /Script/DeadByDaylight.SectionLenghtsProperties
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSectionLenghtsProperties
{ 
	EDirection                                         Direction;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Length;                                                     // 0x0004   (0x0004)  
};

/// Struct /Script/DeadByDaylight.QuadrantSpawnTypeProperties
/// Size: 0x0018 (0x000000 - 0x000018)
struct FQuadrantSpawnTypeProperties
{ 
	EQuadrantSpawnType                                 QuadrantSpawnType;                                          // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<FSectionLenghtsProperties>                  SectionLenghts;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.WeightedItem
/// Size: 0x0038 (0x000000 - 0x000038)
struct FWeightedItem
{ 
	SDK_UNDEFINED(48,2238) /* TWeakObjectPtr<UClass*> */ __um(Element);                                            // 0x0000   (0x0030)  
	float                                              Weight;                                                     // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.QuadrantSpawnItem
/// Size: 0x0018 (0x000000 - 0x000018)
struct FQuadrantSpawnItem
{ 
	EQuadrantSpawnType                                 Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<FWeightedItem>                              Elements;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.QuadrantSpawnCategories
/// Size: 0x0020 (0x000000 - 0x000020)
struct FQuadrantSpawnCategories
{ 
	FName                                              QuadrantSpawnTag;                                           // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<FQuadrantSpawnItem>                         Items;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ElementSubstitutions
/// Size: 0x0010 (0x000000 - 0x000010)
struct FElementSubstitutions
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.SubstitutionElements
/// Size: 0x0060 (0x000000 - 0x000060)
struct FSubstitutionElements
{ 
	SDK_UNDEFINED(48,2239) /* TWeakObjectPtr<UClass*> */ __um(_elementToReplace);                                  // 0x0000   (0x0030)  
	SDK_UNDEFINED(48,2240) /* TWeakObjectPtr<UClass*> */ __um(_elementToReplaceWith);                              // 0x0030   (0x0030)  
};

/// Struct /Script/DeadByDaylight.GameplayElementSubstitutions
/// Size: 0x0018 (0x000010 - 0x000028)
struct FGameplayElementSubstitutions : FElementSubstitutions
{ 
	TArray<FSubstitutionElements>                      _replacements;                                              // 0x0010   (0x0010)  
	EGameplayElementType                               _type;                                                      // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.GameplayElementAddition
/// Size: 0x0040 (0x000000 - 0x000040)
struct FGameplayElementAddition
{ 
	SDK_UNDEFINED(48,2241) /* TWeakObjectPtr<UClass*> */ __um(_elementToAdd);                                      // 0x0000   (0x0030)  
	EGameplayElementType                               _spawnerType;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	int32_t                                            _numberToAdd;                                               // 0x0034   (0x0004)  
	bool                                               _numberToAddAffectedByOffering;                             // 0x0038   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.ThemeProperties
/// Size: 0x0100 (0x000008 - 0x000108)
struct FThemeProperties : FDBDTableRowBase
{ 
	FName                                              Name;                                                       // 0x0008   (0x000C)  
	FName                                              Weather;                                                    // 0x0014   (0x000C)  
	FName                                              AudioStateThemes;                                           // 0x0020   (0x000C)  
	FName                                              AudioStateWeather;                                          // 0x002C   (0x000C)  
	FName                                              AudioThemeEvent;                                            // 0x0038   (0x000C)  
	FName                                              AudioLimitPointEvent;                                       // 0x0044   (0x000C)  
	SDK_UNDEFINED(48,2242) /* TWeakObjectPtr<UAkAudioBank*> */ __um(AudioThemeSoundBank);                          // 0x0050   (0x0030)  
	SDK_UNDEFINED(16,2243) /* FString */               __um(TilePath);                                             // 0x0080   (0x0010)  
	SDK_UNDEFINED(16,2244) /* FString */               __um(MapPath);                                              // 0x0090   (0x0010)  
	int32_t                                            ThemeNumber;                                                // 0x00A0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00A4   (0x0004)  MISSED
	SDK_UNDEFINED(24,2245) /* FText */                 __um(DisplayName);                                          // 0x00A8   (0x0018)  
	EThemeColorId                                      ThemeColorId;                                               // 0x00C0   (0x0001)  
	EOfferingEffectType                                ThemeSelectionOfferingEffectType;                           // 0x00C1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x00C2   (0x0006)  MISSED
	TArray<FGameplayElementSubstitutions>              SubstitutionElements;                                       // 0x00C8   (0x0010)  
	TArray<FGameplayElementAddition>                   AdditionElements;                                           // 0x00D8   (0x0010)  
	SDK_UNDEFINED(16,2246) /* FString */               __um(DlcIDString);                                          // 0x00E8   (0x0010)  
	class UBlackboardData*                             Blackboard;                                                 // 0x00F8   (0x0008)  
	bool                                               Gesture;                                                    // 0x0100   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0101   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.KillerItemProperty
/// Size: 0x0078 (0x000000 - 0x000078)
struct FKillerItemProperty
{ 
	SDK_UNDEFINED(48,2247) /* TWeakObjectPtr<UClass*> */ __um(Object);                                             // 0x0000   (0x0030)  
	class UCurveFloat*                                 Population;                                                 // 0x0030   (0x0008)  
	EGameplayElementType                               _gameplayElementType;                                       // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	SDK_UNDEFINED(48,2248) /* TWeakObjectPtr<UClass*> */ __um(IterativeWeightAdjustmentStrategyClass);             // 0x0040   (0x0030)  
	int32_t                                            _dependencySpawnOrder;                                      // 0x0070   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0074   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.KillerItemDependencies
/// Size: 0x0018 (0x000008 - 0x000020)
struct FKillerItemDependencies : FDBDTableRowBase
{ 
	EKillerAbilities                                   killerAbility;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<FKillerItemProperty>                        Items;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SurvivorItemProperties
/// Size: 0x000C (0x000000 - 0x00000C)
struct FSurvivorItemProperties
{ 
	ECollectableCategory                               category;                                                   // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Weight;                                                     // 0x0004   (0x0004)  
	int32_t                                            MaxPopulation;                                              // 0x0008   (0x0004)  
};

/// Struct /Script/DeadByDaylight.EscapeStrategyProperty
/// Size: 0x0018 (0x000000 - 0x000018)
struct FEscapeStrategyProperty
{ 
	EscapeStrategyType                                 Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	class UCurveFloat*                                 Population;                                                 // 0x0008   (0x0008)  
	float                                              Weight;                                                     // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.EscapeTypeObjects
/// Size: 0x0018 (0x000000 - 0x000018)
struct FEscapeTypeObjects
{ 
	EscapeStrategyType                                 Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,2249) /* TArray<TWeakObjectPtr<UClass*>> */ __um(EscapeObjects);                              // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.GameplayElementsPopulation
/// Size: 0x0078 (0x000000 - 0x000078)
struct FGameplayElementsPopulation
{ 
	EGameplayElementType                               Type;                                                       // 0x0000   (0x0001)  
	ETileSpawnPointType                                TileSpawnPointType;                                         // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	SDK_UNDEFINED(48,2250) /* TWeakObjectPtr<UClass*> */ __um(GameplayElementBlueprint);                           // 0x0008   (0x0030)  
	int32_t                                            MinPopulation;                                              // 0x0038   (0x0004)  
	int32_t                                            MaxPopulation;                                              // 0x003C   (0x0004)  
	int32_t                                            MinGuaranteePopulation;                                     // 0x0040   (0x0004)  
	int32_t                                            SpawnPass;                                                  // 0x0044   (0x0004)  
	SDK_UNDEFINED(48,2251) /* TWeakObjectPtr<UClass*> */ __um(IterativeWeightAdjustmentStrategyClass);             // 0x0048   (0x0030)  
};

/// Struct /Script/DeadByDaylight.ManagedGameplayElementsPopulation
/// Size: 0x0048 (0x000000 - 0x000048)
struct FManagedGameplayElementsPopulation
{ 
	EGameplayElementType                               Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(48,2252) /* TWeakObjectPtr<UClass*> */ __um(GameplayElementBlueprint);                           // 0x0008   (0x0030)  
	float                                              MinDistance;                                                // 0x0038   (0x0004)  
	int32_t                                            MinPopulation;                                              // 0x003C   (0x0004)  
	int32_t                                            MaxPopulation;                                              // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.SurvivorGroupingProbability
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSurvivorGroupingProbability
{ 
	ESurvivorGrouping                                  Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Probability;                                                // 0x0004   (0x0004)  
};

/// Struct /Script/DeadByDaylight.SpecialBehaviourPopulation
/// Size: 0x0098 (0x000008 - 0x0000A0)
struct FSpecialBehaviourPopulation : FDBDTableRowBase
{ 
	FName                                              _name;                                                      // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<EGameplayElementType>                       _spawnerTypes;                                              // 0x0018   (0x0010)  
	TArray<ETileSpawnPointType>                        _spawnPointTypes;                                           // 0x0028   (0x0010)  
	SDK_UNDEFINED(48,2253) /* TWeakObjectPtr<UClass*> */ __um(_actor);                                             // 0x0038   (0x0030)  
	int32_t                                            _tileSpawnPointPriority;                                    // 0x0068   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x006C   (0x0004)  MISSED
	SDK_UNDEFINED(48,2254) /* TWeakObjectPtr<UClass*> */ __um(IterativeWeightAdjustmentStrategyClass);             // 0x0070   (0x0030)  
};

/// Struct /Script/DeadByDaylight.DependencyElementSubstitutions
/// Size: 0x0018 (0x000010 - 0x000028)
struct FDependencyElementSubstitutions : FElementSubstitutions
{ 
	TArray<FSubstitutionElements>                      _replacements;                                              // 0x0010   (0x0010)  
	ETileSpawnPointType                                _type;                                                      // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.TileSubstitutions
/// Size: 0x0010 (0x000000 - 0x000010)
struct FTileSubstitutions
{ 
	TArray<FSubstitutionElements>                      _replacements;                                              // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.OutOfWorldTileData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FOutOfWorldTileData
{ 
	FVector                                            _spawnLocation;                                             // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(48,2255) /* TWeakObjectPtr<UClass*> */ __um(_tileClass);                                         // 0x0010   (0x0030)  
};

/// Struct /Script/DeadByDaylight.DependencyElementAddition
/// Size: 0x0080 (0x000000 - 0x000080)
struct FDependencyElementAddition
{ 
	SDK_UNDEFINED(48,2256) /* TWeakObjectPtr<UClass*> */ __um(_object);                                            // 0x0000   (0x0030)  
	ETileSpawnPointType                                _type;                                                      // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	int32_t                                            _numberToAdd;                                               // 0x0034   (0x0004)  
	int32_t                                            _spawnOrder;                                                // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	FDataTableDropdown                                 _elementSpawnConditionsName;                                // 0x0040   (0x0030)  
	FGameplayTag                                       _elementTag;                                                // 0x0070   (0x000C)  
	bool                                               _allowFallback;                                             // 0x007C   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x007D   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.EventSubstitionData
/// Size: 0x0088 (0x000008 - 0x000090)
struct FEventSubstitionData : FDBDTableRowBase
{ 
	FName                                              _name;                                                      // 0x0008   (0x000C)  
	bool                                               _allowSubstitutionInKYF;                                    // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	int32_t                                            _baseNumOfSubstitutionPerGroup;                             // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	TArray<FGameplayElementSubstitutions>              _gameplaySubstitutionElements;                              // 0x0020   (0x0010)  
	TArray<FDependencyElementSubstitutions>            _dependencySubstitutionElements;                            // 0x0030   (0x0010)  
	FTileSubstitutions                                 _tileSubstitutions;                                         // 0x0040   (0x0010)  
	TArray<FOutOfWorldTileData>                        _outOfWorldTiles;                                           // 0x0050   (0x0010)  
	SDK_UNDEFINED(16,2257) /* FString */               __um(_eventTileSuffix);                                     // 0x0060   (0x0010)  
	TArray<FDependencyElementAddition>                 _dependencyElementAdditions;                                // 0x0070   (0x0010)  
	TArray<FGameplayElementAddition>                   _gameplayElementAdditions;                                  // 0x0080   (0x0010)  
};

/// Class /Script/DeadByDaylight.ProceduralGenerationData
/// Size: 0x0140 (0x000038 - 0x000178)
class UProceduralGenerationData : public UDataAsset
{ 
public:
	TArray<FQuadrantSpawnTypeProperties>               QuadrantSpawnTypeProperties;                                // 0x0038   (0x0010)  
	TArray<FQuadrantSpawnCategories>                   QuadrantSpawnCategories;                                    // 0x0048   (0x0010)  
	TArray<FThemeProperties>                           ThemeProperties;                                            // 0x0058   (0x0010)  
	int32_t                                            MaxSurvivorCount;                                           // 0x0068   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x006C   (0x0004)  MISSED
	TArray<FKillerItemDependencies>                    KillersItemDependencies;                                    // 0x0070   (0x0010)  
	class UCurveFloat*                                 SurvivorItemPopulationProbability;                          // 0x0080   (0x0008)  
	TArray<FSurvivorItemProperties>                    SurvivorItemProperty;                                       // 0x0088   (0x0010)  
	class UCurveFloat*                                 EscapeStrategyPopulationProbability;                        // 0x0098   (0x0008)  
	TArray<FEscapeStrategyProperty>                    EscapeStrategyProperties;                                   // 0x00A0   (0x0010)  
	TArray<FEscapeTypeObjects>                         EscapeTypeActors;                                           // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,2258) /* TArray<TWeakObjectPtr<UClass*>> */ __um(Basements);                                  // 0x00C0   (0x0010)  
	TArray<FGameplayElementsPopulation>                ElementsPopulation;                                         // 0x00D0   (0x0010)  
	TArray<FManagedGameplayElementsPopulation>         ManagedElementsPopulation;                                  // 0x00E0   (0x0010)  
	TArray<FSurvivorGroupingProbability>               SurvivorGroupingProbabilities;                              // 0x00F0   (0x0010)  
	FVector                                            ProceduralMapOffset;                                        // 0x0100   (0x000C)  
	float                                              ProceduralTileWidth;                                        // 0x010C   (0x0004)  
	float                                              ProceduralTileHeight;                                       // 0x0110   (0x0004)  
	FVector                                            ProceduralQuadTileMapOffset;                                // 0x0114   (0x000C)  
	float                                              ProceduralQuadTileCubeWidth;                                // 0x0120   (0x0004)  
	float                                              DifficultyModifier;                                         // 0x0124   (0x0004)  
	float                                              CharacterCameraHeight;                                      // 0x0128   (0x0004)  
	float                                              CharacterCollisionRadius;                                   // 0x012C   (0x0004)  
	float                                              SpawnerCollisionRadius;                                     // 0x0130   (0x0004)  
	float                                              TotemVisualHeight;                                          // 0x0134   (0x0004)  
	float                                              ClosestSurvivorDistanceWeight;                              // 0x0138   (0x0004)  
	float                                              KillerDistanceWeight;                                       // 0x013C   (0x0004)  
	TArray<FSpecialBehaviourPopulation>                SpecialBehaviourPopulation;                                 // 0x0140   (0x0010)  
	TArray<FEventSubstitionData>                       _eventProperties;                                           // 0x0150   (0x0010)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0160   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.ProceduralGenerationUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UProceduralGenerationUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Struct /Script/DeadByDaylight.ManagedGameplayElementData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FManagedGameplayElementData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	TArray<class UActorSpawner*>                       ActivatedSpawners;                                          // 0x0008   (0x0010)  
	TArray<class UActorSpawner*>                       RemovedSpawners;                                            // 0x0018   (0x0010)  
	EGameplayElementType                               PopulationType;                                             // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              CurrentPopulationCost;                                      // 0x002C   (0x0004)  
	int32_t                                            MaxPopulationCost;                                          // 0x0030   (0x0004)  
	int32_t                                            MinPopulationCost;                                          // 0x0034   (0x0004)  
	float                                              MapWidth;                                                   // 0x0038   (0x0004)  
	float                                              MinProximityBetweenElements;                                // 0x003C   (0x0004)  
	float                                              MinDistSqrBetweenElements;                                  // 0x0040   (0x0004)  
	float                                              TileWidth;                                                  // 0x0044   (0x0004)  
	float                                              FactorToAdjustToWhenOutOfProximity;                         // 0x0048   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.GeneratedLevelData
/// Size: 0x0340 (0x000000 - 0x000340)
struct FGeneratedLevelData
{ 
	SDK_UNDEFINED(16,2259) /* FString */               __um(UsedPaperTileMap);                                     // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2260) /* FString */               __um(PremadeMap);                                           // 0x0010   (0x0010)  
	int32_t                                            StreamRelatedSeed;                                          // 0x0020   (0x0004)  
	int32_t                                            AvailableEscapeCount;                                       // 0x0024   (0x0004)  
	int32_t                                            AvailableSurvivorItemCount;                                 // 0x0028   (0x0004)  
	ESurvivorGrouping                                  GroupingType;                                               // 0x002C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x002D   (0x0003)  MISSED
	class USceneComponent*                             KillerSpawnPoint;                                           // 0x0030   (0x0008)  
	TArray<class USceneComponent*>                     SurvivorSpawnPoints;                                        // 0x0038   (0x0010)  
	TArray<class USceneComponent*>                     InteractableElementsSpawnPoints;                            // 0x0048   (0x0010)  
	TArray<class USceneComponent*>                     KillerItemsSpawnPoints;                                     // 0x0058   (0x0010)  
	SDK_UNDEFINED(80,2261) /* TMap<FName, int32_t> */  __um(SpecialBehaviourRequestCounts);                        // 0x0068   (0x0050)  
	SDK_UNDEFINED(80,2262) /* TMap<FName, FArrayOfSceneComponent> */ __um(SpecialBehaviourSpawnPoints);            // 0x00B8   (0x0050)  
	SDK_UNDEFINED(80,2263) /* TMap<FName, FArrayOfSceneComponent> */ __um(SpecialBehaviourActorSpawners);          // 0x0108   (0x0050)  
	TArray<class USceneComponent*>                     SearchableSpawners;                                         // 0x0158   (0x0010)  
	TArray<class USceneComponent*>                     HexSpawners;                                                // 0x0168   (0x0010)  
	TArray<class USceneComponent*>                     KillerLairSpawners;                                         // 0x0178   (0x0010)  
	TArray<class USceneComponent*>                     HatchSpawners;                                              // 0x0188   (0x0010)  
	TArray<class USceneComponent*>                     MainBuildingHatchSpawners;                                  // 0x0198   (0x0010)  
	TArray<class USceneComponent*>                     ShackHatchSpawners;                                         // 0x01A8   (0x0010)  
	TArray<class USceneComponent*>                     BreakableWallSpawners;                                      // 0x01B8   (0x0010)  
	TArray<class USceneComponent*>                     EscapeSpawners;                                             // 0x01C8   (0x0010)  
	FManagedGameplayElementData                        BookshelfManagedGameplayElementData;                        // 0x01D8   (0x0050)  
	FManagedGameplayElementData                        MeatHookManagedGameplayElementData;                         // 0x0228   (0x0050)  
	TArray<FDependency>                                LevelDependencies;                                          // 0x0278   (0x0010)  
	TArray<FDependency>                                LateLevelDependencies;                                      // 0x0288   (0x0010)  
	TArray<class AActor*>                              FixedMapTileIds;                                            // 0x0298   (0x0010)  
	TArray<class AActor*>                              FixedMapOrphanSpawners;                                     // 0x02A8   (0x0010)  
	TArray<class USceneComponent*>                     FinisherMoriSpawnPoints;                                    // 0x02B8   (0x0010)  
	TArray<class USceneComponent*>                     SteamPipeSpawners;                                          // 0x02C8   (0x0010)  
	TArray<class USceneComponent*>                     SteamPipeButtonSpawners;                                    // 0x02D8   (0x0010)  
	FName                                              SpecialEventId;                                             // 0x02E8   (0x000C)  
	bool                                               UseForcedMap;                                               // 0x02F4   (0x0001)  
	bool                                               UsePremadeMap;                                              // 0x02F5   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x02F6   (0x0002)  MISSED
	SDK_UNDEFINED(16,2264) /* FString */               __um(GenerationLogs);                                       // 0x02F8   (0x0010)  
	SDK_UNDEFINED(16,2265) /* FString */               __um(GenerationErrors);                                     // 0x0308   (0x0010)  
	int32_t                                            GenerationPlayerCount;                                      // 0x0318   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x031C   (0x0004)  MISSED
	TArray<FForceSpawnTileData>                        ForceSpawnTileData;                                         // 0x0320   (0x0010)  
	TArray<class AActor*>                              LevelLightings;                                             // 0x0330   (0x0010)  
};

/// Class /Script/DeadByDaylight.ProceduralLevelBuilder
/// Size: 0x1060 (0x000230 - 0x001290)
class AProceduralLevelBuilder : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0230   (0x0038)  MISSED
	SDK_UNDEFINED(16,2266) /* FString */               __um(PathToMapDirectory);                                   // 0x0268   (0x0010)  
	SDK_UNDEFINED(16,2267) /* FString */               __um(PathToTilesDirectory);                                 // 0x0278   (0x0010)  
	SDK_UNDEFINED(16,2268) /* FString */               __um(PathToEventSpawnablesDirectory);                       // 0x0288   (0x0010)  
	SDK_UNDEFINED(16,2269) /* TArray<FString> */       __um(EventSpawnablesParentDirectories);                     // 0x0298   (0x0010)  
	float                                              EventSpawnablePositionWeightCoefficient;                    // 0x02A8   (0x0004)  
	float                                              EventSpawnablePositionWeightPowerBase;                      // 0x02AC   (0x0004)  
	SDK_UNDEFINED(80,2270) /* TMap<EGameplayElementType, float> */ __um(StaticActorSpawnerDecorationBudgets);      // 0x02B0   (0x0050)  
	SDK_UNDEFINED(80,2271) /* TMap<ETileSpawnPointType, float> */ __um(StaticSpawnPointDecorationBudgets);         // 0x0300   (0x0050)  
	float                                              KillerMinProximityFromCamper;                               // 0x0350   (0x0004)  
	float                                              SurvivorMinProximityFromOtherCamper;                        // 0x0354   (0x0004)  
	float                                              MinProximityBetweenGenerators;                              // 0x0358   (0x0004)  
	float                                              MinProximityBetweenChests;                                  // 0x035C   (0x0004)  
	float                                              MinProximityBetweenTotems;                                  // 0x0360   (0x0004)  
	float                                              SurvivorMinProximityFromGenerator;                          // 0x0364   (0x0004)  
	float                                              SurvivorMinProximityFromTotem;                              // 0x0368   (0x0004)  
	float                                              SurvivorMaxLineOfSightFromTotem;                            // 0x036C   (0x0004)  
	float                                              MinProximityBetweenSpecialBehaviourItems;                   // 0x0370   (0x0004)  
	float                                              SpecialBehaviourItemMinProximityFromSurvivor;               // 0x0374   (0x0004)  
	float                                              SpecialBehaviourItemMinProximityFromKiller;                 // 0x0378   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x037C   (0x0004)  MISSED
	class UClass*                                      DebugMap;                                                   // 0x0380   (0x0008)  
	TArray<class UClass*>                              DebugTiles;                                                 // 0x0388   (0x0010)  
	float                                              SmallMeatLockerMinProximityFromKillerLair;                  // 0x0398   (0x0004)  
	float                                              FactorToAdjustToWhenOutOfProximity;                         // 0x039C   (0x0004)  
	float                                              FactorToAdjustToWhenInLineOfSight;                          // 0x03A0   (0x0004)  
	float                                              HeightAmplifier;                                            // 0x03A4   (0x0004)  
	float                                              HeightAmplifierActivationHeight;                            // 0x03A8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x03AC   (0x0004)  MISSED
	class UProceduralGenerationData*                   ProceduralGenerationData;                                   // 0x03B0   (0x0008)  
	float                                              TileWeightRateOfDecay;                                      // 0x03B8   (0x0004)  
	float                                              QuadTileWeightRateOfDecay;                                  // 0x03BC   (0x0004)  
	unsigned char                                      UnknownData03_5[0x18];                                      // 0x03C0   (0x0018)  MISSED
	class UClass*                                      _tileClass;                                                 // 0x03D8   (0x0008)  
	unsigned char                                      UnknownData04_5[0x1E8];                                     // 0x03E0   (0x01E8)  MISSED
	class UMapData*                                    _mapData;                                                   // 0x05C8   (0x0008)  
	TArray<class ATile*>                               _outOfWorldTiles;                                           // 0x05D0   (0x0010)  
	class UAkAudioBank*                                _ambientAudioBank;                                          // 0x05E0   (0x0008)  
	class UObjectLibrary*                              _availableTilesLibrary;                                     // 0x05E8   (0x0008)  
	class UObjectLibrary*                              _availableEventSpawnablesLibrary;                           // 0x05F0   (0x0008)  
	unsigned char                                      UnknownData05_5[0xE8];                                      // 0x05F8   (0x00E8)  MISSED
	class UObjectLibrary*                              _availableDerivedTileLibrary;                               // 0x06E0   (0x0008)  
	unsigned char                                      UnknownData06_5[0x8];                                       // 0x06E8   (0x0008)  MISSED
	class UClass*                                      DesignTunableClass;                                         // 0x06F0   (0x0008)  
	class UDBDDesignTunables*                          _designTunables;                                            // 0x06F8   (0x0008)  
	FGeneratedLevelData                                _generatedData;                                             // 0x0700   (0x0340)  
	unsigned char                                      UnknownData07_5[0x340];                                     // 0x0A40   (0x0340)  MISSED
	class UTileMatrix*                                 _tileMatrix;                                                // 0x0D80   (0x0008)  
	class UTileBank*                                   _tileBank;                                                  // 0x0D88   (0x0008)  
	unsigned char                                      UnknownData08_5[0x68];                                      // 0x0D90   (0x0068)  MISSED
	class UActorSpawner*                               _killerLairSpawner;                                         // 0x0DF8   (0x0008)  
	unsigned char                                      UnknownData09_5[0x8];                                       // 0x0E00   (0x0008)  MISSED
	TArray<FSoftObjectPath>                            _preloadAssetReferences;                                    // 0x0E08   (0x0010)  
	TArray<class UClass*>                              _chestItemAssetReferences;                                  // 0x0E18   (0x0010)  
	class UClass*                                      _slasherPawn;                                               // 0x0E28   (0x0008)  
	unsigned char                                      UnknownData10_5[0x18];                                      // 0x0E30   (0x0018)  MISSED
	TArray<class ATile*>                               _tilesThatHaveBeenSpawned;                                  // 0x0E48   (0x0010)  
	unsigned char                                      UnknownData11_5[0x18];                                      // 0x0E58   (0x0018)  MISSED
	TArray<class AActor*>                              _eventSpawnablesThatHaveBeenStreamed;                       // 0x0E70   (0x0010)  
	unsigned char                                      UnknownData12_5[0x18];                                      // 0x0E80   (0x0018)  MISSED
	class AProceduralLevelData*                        _debugProceduralDatas;                                      // 0x0E98   (0x0008)  
	class ADBDClientSyncer*                            _syncer;                                                    // 0x0EA0   (0x0008)  
	class UBlackboardComponent*                        _blackboardComp;                                            // 0x0EA8   (0x0008)  
	unsigned char                                      UnknownData13_5[0x50];                                      // 0x0EB0   (0x0050)  MISSED
	class UEdgeObjectHandlingStrategy*                 _edgeObjectHandlingStrategy;                                // 0x0F00   (0x0008)  
	unsigned char                                      UnknownData14_5[0x2B0];                                     // 0x0F08   (0x02B0)  MISSED
	class ATile*                                       _backupKillerLairTile;                                      // 0x11B8   (0x0008)  
	unsigned char                                      UnknownData15_6[0xD0];                                      // 0x11C0   (0x00D0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ProceduralLevelBuilder.SyncSeeds
	// void SyncSeeds();                                                                                                     // [0x58e1550] Final|Native|Private 
	// Function /Script/DeadByDaylight.ProceduralLevelBuilder.StartGenerationOnSyncerReady
	// void StartGenerationOnSyncerReady();                                                                                  // [0x58e1530] Final|Native|Private 
	// Function /Script/DeadByDaylight.ProceduralLevelBuilder.SpawnActor
	// class AActor* SpawnActor(class UClass* ActorClass, ETileSpawnPointType spawnPointType);                               // [0x58e1460] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ProceduralLevelBuilder.RemoveMist
	// void RemoveMist();                                                                                                    // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ProceduralLevelBuilder.Multicast_DebugShareGenerationData
	// void Multicast_DebugShareGenerationData(FGenerationParams usedParams);                                                // [0x58e1180] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.ProceduralLevelBuilder.BuildFromSeed
	// void BuildFromSeed();                                                                                                 // [0x58e1140] Final|Native|Private 
	// Function /Script/DeadByDaylight.ProceduralLevelBuilder.ApplyMist
	// void ApplyMist(float Modifier);                                                                                       // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.ProceduralLevelData
/// Size: 0x03B8 (0x000230 - 0x0005E8)
class AProceduralLevelData : public AActor
{ 
public:
	SDK_UNDEFINED(48,2272) /* TWeakObjectPtr<UPaperTileMap*> */ __um(SelectedPaperMap);                            // 0x0230   (0x0030)  
	int32_t                                            GenerationSeed;                                             // 0x0260   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0264   (0x0004)  MISSED
	FGeneratedLevelData                                GeneratedData;                                              // 0x0268   (0x0340)  
	TArray<FName>                                      offerings;                                                  // 0x05A8   (0x0010)  
	int32_t                                            PerksLevel;                                                 // 0x05B8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x05BC   (0x0004)  MISSED
	TArray<FName>                                      Perks;                                                      // 0x05C0   (0x0010)  
	bool                                               SkipGameplayElementGeneration;                              // 0x05D0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x05D1   (0x0007)  MISSED
	class AActor*                                      _builder;                                                   // 0x05D8   (0x0008)  
	class UClass*                                      _builderClassDef;                                           // 0x05E0   (0x0008)  
};

/// Class /Script/DeadByDaylight.ProgressionSystemInfoPopupScreen
/// Size: 0x0000 (0x000140 - 0x000140)
class UProgressionSystemInfoPopupScreen : public UGenericPopupScreen
{ 
public:
};

/// Class /Script/DeadByDaylight.PromoCodeManager
/// Size: 0x0018 (0x000038 - 0x000050)
class UPromoCodeManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.PromoPackContentDataAsset
/// Size: 0x0050 (0x000038 - 0x000088)
class UPromoPackContentDataAsset : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,2273) /* TMap<EPromoPackContentType, FPromoPackContentTypeData> */ __um(Data);                // 0x0038   (0x0050)  
};

/// Class /Script/DeadByDaylight.PromoPackPurchaseUIDataUtility
/// Size: 0x0000 (0x000030 - 0x000030)
class UPromoPackPurchaseUIDataUtility : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.PromoPackPurchaseUIDataUtility.SetRemainingTimeFromHours
	// void SetRemainingTimeFromHours(FPromoPackPurchaseUIData& Data, int32_t remainHours);                                  // [0x58e1320] Final|Native|Static|Private|HasOutParms|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PromoPackUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UPromoPackUtilities : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.PromptManager
/// Size: 0x0048 (0x000030 - 0x000078)
class UPromptManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0030   (0x0048)  MISSED
};

/// Class /Script/DeadByDaylight.ProtectionHitComponent
/// Size: 0x0070 (0x0000B8 - 0x000128)
class UProtectionHitComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x00B8   (0x0050)  MISSED
	TArray<class ACamperPlayer*>                       _nearbyInjuredSurvivors;                                    // 0x0108   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0118   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ProtectionHitComponent.Authority_HandleProtectionScoringEvents
	// void Authority_HandleProtectionScoringEvents();                                                                       // [0x58e1120] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ProximityToActorsIterativeWeightAdjustmentStrategy
/// Size: 0x0070 (0x000030 - 0x0000A0)
class UProximityToActorsIterativeWeightAdjustmentStrategy : public UIterativeWeightAdjustmentStrategy
{ 
public:
	TArray<class USceneComponent*>                     _unmatchedActorLocations;                                   // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,2274) /* TArray<TScriptInterface<Class>> */ __um(_selectedSpawners);                          // 0x0040   (0x0010)  
	int32_t                                            _currentPass;                                               // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	class UCurveFloat*                                 _penaltyFromDistanceToClosestSpawnObject;                   // 0x0058   (0x0008)  
	class UCurveFloat*                                 _penaltyFromDistanceToClosestSpawnObjectWhenActorHasOtherSpawnObjectNearby; // 0x0060   (0x0008)  
	class UCurveFloat*                                 _scoreFromDistanceFromClosestActor;                         // 0x0068   (0x0008)  
	FDBDTunableRowHandle                               _actorCloseToSpawnObjectDistanceThreshold;                  // 0x0070   (0x0028)  
	int32_t                                            _spawnerCountPerActor;                                      // 0x0098   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x009C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.ProximityToSpawnPointTypeIterativeWeightAdjustmentStrategy
/// Size: 0x0008 (0x0000A0 - 0x0000A8)
class UProximityToSpawnPointTypeIterativeWeightAdjustmentStrategy : public UProximityToActorsIterativeWeightAdjustmentStrategy
{ 
public:
	ETileSpawnPointType                                _spawnPointType;                                            // 0x00A0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00A1   (0x0007)  MISSED
};

/// Class /Script/DeadByDaylight.PS4ProfileDAL
/// Size: 0x0000 (0x000088 - 0x000088)
class UPS4ProfileDAL : public UPS4GRDKBaseProfileDAL
{ 
public:
};

/// Class /Script/DeadByDaylight.PS5ProfileDAL
/// Size: 0x0000 (0x000088 - 0x000088)
class UPS5ProfileDAL : public UPlayerProfileDAL
{ 
public:
};

/// Class /Script/DeadByDaylight.PurpleGlyphBloodTrailComponent
/// Size: 0x0010 (0x000240 - 0x000250)
class UPurpleGlyphBloodTrailComponent : public UBloodTrailComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0240   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.PurpleGlyphBloodTrailComponent.DeactivateGlyphBloodTrail
	// void DeactivateGlyphBloodTrail();                                                                                     // [0x58e1160] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.PushableInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UPushableInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.RankManager
/// Size: 0x00A8 (0x000030 - 0x0000D8)
class URankManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xA8];                                      // 0x0030   (0x00A8)  MISSED
};

/// Class /Script/DeadByDaylight.RankTooltipWidget
/// Size: 0x0028 (0x000370 - 0x000398)
class URankTooltipWidget : public UBaseTooltipWidget
{ 
public:
	class UTextBlock*                                  RankInfoLabel;                                              // 0x0370   (0x0008)  
	class UTextBlock*                                  ResetInfoLabel;                                             // 0x0378   (0x0008)  
	class UGridPanel*                                  RankInfoSlotsContainer;                                     // 0x0380   (0x0008)  
	class UUMGPlayerRankInfo*                          SurvivorRankInfoWidget;                                     // 0x0388   (0x0008)  
	class UUMGPlayerRankInfo*                          KillerRankInfoWidget;                                       // 0x0390   (0x0008)  
};

/// Class /Script/DeadByDaylight.RBTOutlineUpdateStrategy
/// Size: 0x0000 (0x000100 - 0x000100)
class URBTOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.RBTOutlineUpdateStrategy.IsRevealedToLocalPlayer_BP
	// bool IsRevealedToLocalPlayer_BP(class ADBDPlayer* Player);                                                            // [0x58e7a50] Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.RecentGameEventTracker
/// Size: 0x00A0 (0x000038 - 0x0000D8)
class URecentGameEventTracker : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x0038   (0x00A0)  MISSED
};

/// Class /Script/DeadByDaylight.RecommendationsGenerator
/// Size: 0x0090 (0x000030 - 0x0000C0)
class URecommendationsGenerator : public UObject
{ 
public:
	SDK_UNDEFINED(8,2275) /* TWeakObjectPtr<Ushopmanager*> */ __um(_shopManager);                                  // 0x0030   (0x0008)  
	SDK_UNDEFINED(8,2276) /* TWeakObjectPtr<UDBDGameInstance*> */ __um(_gameInstance);                             // 0x0038   (0x0008)  
	SDK_UNDEFINED(80,2277) /* TMap<FString, URecommendationsFilter*> */ __um(_filters);                            // 0x0040   (0x0050)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x0090   (0x0030)  MISSED
};

/// Class /Script/DeadByDaylight.RecoverInteractableDefinition
/// Size: 0x0030 (0x000790 - 0x0007C0)
class URecoverInteractableDefinition : public UChargeableInteractionDefinition
{ 
public:
	FName                                              _recoverStopPercentTunableName;                             // 0x0790   (0x000C)  
	FName                                              _camperRecoverHealSpeedMultiplierTunableName;               // 0x079C   (0x000C)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x07A8   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.RecoverInteractableDefinition.IsKillerInteracting
	// bool IsKillerInteracting();                                                                                           // [0x61d2f50] Event|Protected|BlueprintEvent|Const 
};

/// Class /Script/DeadByDaylight.RedStainComponent
/// Size: 0x0010 (0x000430 - 0x000440)
class URedStainComponent : public USpotLightComponent
{ 
public:
	FLinearColor                                       _initialSpotLightColor;                                     // 0x0430   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.RedStainComponent.UpdateRedStain
	// void UpdateRedStain(bool shouldBeHidden, float alpha);                                                                // [0x58e88b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.RedStainComponent.DBD_HideRedStain
	// void DBD_HideRedStain(bool hideStain);                                                                                // [0x581c030] Final|Exec|Native|Public 
};

/// Struct /Script/DeadByDaylight.Region
/// Size: 0x0020 (0x000000 - 0x000020)
struct FRegion
{ 
	FName                                              Region;                                                     // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2278) /* FString */               __um(IP);                                                   // 0x0010   (0x0010)  
};

/// Class /Script/DeadByDaylight.RegionFinder
/// Size: 0x0078 (0x000030 - 0x0000A8)
class URegionFinder : public UObject
{ 
public:
	TArray<FRegion>                                    Regions;                                                    // 0x0030   (0x0010)  
	float                                              TIMEOUT;                                                    // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x64];                                      // 0x0044   (0x0064)  MISSED
};

/// Class /Script/DeadByDaylight.RenderingFeaturesSequencer
/// Size: 0x0048 (0x000030 - 0x000078)
class URenderingFeaturesSequencer : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0030   (0x0010)  MISSED
	class ADBDAggregateCullDistanceVolumes*            _aggregateCullDistanceVolumes;                              // 0x0040   (0x0008)  
	class UWorld*                                      _world;                                                     // 0x0048   (0x0008)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x0050   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.ReportPlayerPopupScreen
/// Size: 0x0030 (0x000140 - 0x000170)
class UReportPlayerPopupScreen : public UGenericPopupScreen
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0140   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ReportPlayerPopupScreen.OnTextInputMouseOver
	// void OnTextInputMouseOver(bool IsMouseOver);                                                                          // [0x58e80e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.ReportPlayerPopupScreen.OnConfirmReportPlayer
	// void OnConfirmReportPlayer(FString category, FString Comment);                                                        // [0x58e7cf0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.RestrictedPlacementAreaDefaultStrategy
/// Size: 0x0008 (0x0000A0 - 0x0000A8)
class URestrictedPlacementAreaDefaultStrategy : public URestrictedPlacementAreaStrategy
{ 
public:
	class UClass*                                      RestrictedActor;                                            // 0x00A0   (0x0008)  
};

/// Class /Script/DeadByDaylight.ReverseBearTrap
/// Size: 0x00C0 (0x000338 - 0x0003F8)
class AReverseBearTrap : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	class USkeletalMeshComponent*                      _rbtMesh;                                                   // 0x0340   (0x0008)  
	class UAnimationMontageSlave*                      _animMontageSlave;                                          // 0x0348   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0350   (0x0004)  MISSED
	int32_t                                            _keyID;                                                     // 0x0354   (0x0004)  
	int32_t                                            _attemptsNeededToDetach;                                    // 0x0358   (0x0004)  
	unsigned char                                      UnknownData02_5[0x94];                                      // 0x035C   (0x0094)  MISSED
	bool                                               _exitGatesPoweredAfterAttachment;                           // 0x03F0   (0x0001)  
	bool                                               _generatorFixedAfterAttachment;                             // 0x03F1   (0x0001)  
	unsigned char                                      UnknownData03_6[0x6];                                       // 0x03F2   (0x0006)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ReverseBearTrap.StopMontage
	// void StopMontage();                                                                                                   // [0x58e8890] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.ReverseBearTrap.StopExecutionTimer
	// void StopExecutionTimer();                                                                                            // [0x58e8870] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.ShouldUpdateExecutionTimer
	// bool ShouldUpdateExecutionTimer();                                                                                    // [0x58b2ff0] Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.SetVisible
	// void SetVisible(bool visible);                                                                                        // [0x58e87e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.SetGateClosedAtAttachment
	// void SetGateClosedAtAttachment(bool CLOSED);                                                                          // [0x58e8750] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.ResetExecutionTimer
	// void ResetExecutionTimer(float Time);                                                                                 // [0x58e8550] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.OnWarningLevelChanged
	// void OnWarningLevelChanged(int32_t previousWarningLevel, int32_t currentWarningLevel);                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.ReverseBearTrap.OnGeneratorComplete
	// void OnGeneratorComplete(int32_t activatedGeneratorCount);                                                            // [0x58e7e50] Final|Native|Private 
	// Function /Script/DeadByDaylight.ReverseBearTrap.OnExitWarningZone
	// void OnExitWarningZone();                                                                                             // [0x58e7e10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.OnEnterWarningZone
	// void OnEnterWarningZone();                                                                                            // [0x58e7df0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.OnDetachSurvivor
	// void OnDetachSurvivor(class ACamperPlayer* Survivor);                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.ReverseBearTrap.OnAttachSurvivorBegin
	// void OnAttachSurvivorBegin(class ACamperPlayer* Survivor);                                                            // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.ReverseBearTrap.OnAttachSurvivor
	// void OnAttachSurvivor(class ACamperPlayer* Survivor);                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.ReverseBearTrap.NotifyOnAttachSurvivorBegin
	// void NotifyOnAttachSurvivorBegin(class ACamperPlayer* Survivor);                                                      // [0x58e7b80] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.NotifyDetachStarted
	// void NotifyDetachStarted(class ACamperPlayer* Survivor);                                                              // [0x58e7af0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.IsRBTActivated
	// bool IsRBTActivated();                                                                                                // [0x58e7a20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.IsInWarningZone
	// bool IsInWarningZone();                                                                                               // [0x58e79f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.IsExecutionTimerDone
	// bool IsExecutionTimerDone();                                                                                          // [0x58e79c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.IsExecutionTimerActive
	// bool IsExecutionTimerActive();                                                                                        // [0x58e7990] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.IncrementAttemptsMade
	// void IncrementAttemptsMade();                                                                                         // [0x58e7970] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.HasDetachStarted
	// bool HasDetachStarted();                                                                                              // [0x58e7800] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.GetWasGateClosedAtAttachment
	// bool GetWasGateClosedAtAttachment();                                                                                  // [0x58e77d0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.GetWarningLevel
	// int32_t GetWarningLevel();                                                                                            // [0x58e77a0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.GetKeyID
	// int32_t GetKeyID();                                                                                                   // [0x58e7740] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.GetGeneratorFixedAfterAttachment
	// bool GetGeneratorFixedAfterAttachment();                                                                              // [0x58e76e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.GetExitGatesPoweredAfterAttachment
	// bool GetExitGatesPoweredAfterAttachment();                                                                            // [0x58e76b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.GetExecutionTimerTimeLeft
	// float GetExecutionTimerTimeLeft();                                                                                    // [0x58e7680] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.GetExecutionTimerPercentTimeElapsed
	// float GetExecutionTimerPercentTimeElapsed();                                                                          // [0x58e7650] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.GetAttemptsNeeded
	// int32_t GetAttemptsNeeded();                                                                                          // [0x58e7620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.GetAttemptsMade
	// int32_t GetAttemptsMade();                                                                                            // [0x58e75f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.GetAttachedSurvivor
	// class ACamperPlayer* GetAttachedSurvivor();                                                                           // [0x58e75c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.FastForwardExecutionTimer
	// void FastForwardExecutionTimer(float DeltaTime);                                                                      // [0x58e7410] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.DetachSurvivor
	// void DetachSurvivor(class ACamperPlayer* Survivor);                                                                   // [0x58e7380] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.CanExecute
	// bool CanExecute();                                                                                                    // [0x58e7350] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrap.Authority_SetKeyID
	// void Authority_SetKeyID(int32_t KeyId);                                                                               // [0x58e72c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.Authority_GenerateAttemptsNeeded
	// void Authority_GenerateAttemptsNeeded(int32_t remainingAttemptsTotal, int32_t remainingRBTs, int32_t numRemovers);    // [0x58e71b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrap.AttachSurvivor
	// void AttachSurvivor(class ACamperPlayer* Survivor);                                                                   // [0x58e7120] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ReverseBearTrapRemover
/// Size: 0x0030 (0x000338 - 0x000368)
class AReverseBearTrapRemover : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	TArray<int32_t>                                    _keys;                                                      // 0x0340   (0x0010)  
	TArray<int32_t>                                    _keysSearched;                                              // 0x0350   (0x0010)  
	class UMapActorComponent*                          _mapActor;                                                  // 0x0360   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.ReverseBearTrapRemover.PlayRemoveFailMontage
	// void PlayRemoveFailMontage();                                                                                         // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.ReverseBearTrapRemover.HasSearchedForKey
	// bool HasSearchedForKey(int32_t KeyId);                                                                                // [0x58e78d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrapRemover.HasKey
	// bool HasKey(int32_t KeyId);                                                                                           // [0x58e7830] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrapRemover.GetMapActor
	// class UMapActorComponent* GetMapActor();                                                                              // [0x58e7770] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrapRemover.GetInteractorPrimitiveComponent
	// class UPrimitiveComponent* GetInteractorPrimitiveComponent();                                                         // [0x58e7710] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrapRemover.GetAttachedRBT
	// class AReverseBearTrap* GetAttachedRBT(class AActor* Player);                                                         // [0x58e7490] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ReverseBearTrapRemover.AddSearchedKey
	// void AddSearchedKey(int32_t KeyId);                                                                                   // [0x58e7090] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ReverseBearTrapRemover.AddKey
	// void AddKey(int32_t KeyId);                                                                                           // [0x58e7000] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.ReverseBearTrapUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UReverseBearTrapUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.ReverseBearTrapUtilities.GetAttachedRBT
	// class AReverseBearTrap* GetAttachedRBT(class ADBDPlayer* Player);                                                     // [0x58e7530] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.RewardTrackContainer
/// Size: 0x01D0 (0x000030 - 0x000200)
class URewardTrackContainer : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x1D0];                                     // 0x0030   (0x01D0)  MISSED
};

/// Class /Script/DeadByDaylight.RewardUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class URewardUtilities : public UObject
{ 
public:
};

/// Struct /Script/DeadByDaylight.DailyRitualContainer
/// Size: 0x0028 (0x000000 - 0x000028)
struct FDailyRitualContainer
{ 
	FDateTime                                          LastRitualReceivedDate;                                     // 0x0000   (0x0008)  
	FDateTime                                          LastRitualPopupDate;                                        // 0x0008   (0x0008)  
	FDateTime                                          LastRitualDismissedDate;                                    // 0x0010   (0x0008)  
	TArray<FDailyRitualInstance>                       rituals;                                                    // 0x0018   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CoreRitualsTunables
/// Size: 0x0004 (0x000000 - 0x000004)
struct FCoreRitualsTunables
{ 
	int32_t                                            MaxRituals;                                                 // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.RewardResponseItem
/// Size: 0x0030 (0x000000 - 0x000030)
struct FRewardResponseItem
{ 
	SDK_UNDEFINED(16,2279) /* FString */               __um(Type);                                                 // 0x0000   (0x0010)  
	bool                                               Type_IsSet;                                                 // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	SDK_UNDEFINED(16,2280) /* FString */               __um(ID);                                                   // 0x0018   (0x0010)  
	int32_t                                            Amount;                                                     // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.CoreRitualsDifficulty
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCoreRitualsDifficulty
{ 
	float                                              Threshold;                                                  // 0x0000   (0x0004)  
	float                                              Tolerance;                                                  // 0x0004   (0x0004)  
	int32_t                                            DisplayThreshold;                                           // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<FRewardResponseItem>                        Rewards;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CoreRitualsEntry
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCoreRitualsEntry
{ 
	SDK_UNDEFINED(16,2281) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	TArray<FCoreRitualsDifficulty>                     Difficulty;                                                 // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CoreRitualsContent
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCoreRitualsContent
{ 
	FCoreRitualsTunables                               Config;                                                     // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FCoreRitualsEntry>                          Data;                                                       // 0x0008   (0x0010)  
};

/// Class /Script/DeadByDaylight.RitualsManager
/// Size: 0x0238 (0x000038 - 0x000270)
class URitualsManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_2[0x90];                                      // 0x0038   (0x0090)  MISSED
	FDailyRitualContainer                              _cachedRitualContainer;                                     // 0x00C8   (0x0028)  
	FDailyRitualInstance                               _cachedDismissalReplacement;                                // 0x00F0   (0x0078)  
	FDailyRitualInstance                               _cachedClaimedReplacement;                                  // 0x0168   (0x0078)  
	unsigned char                                      UnknownData01_5[0x70];                                      // 0x01E0   (0x0070)  MISSED
	FCoreRitualsContent                                _s3Content;                                                 // 0x0250   (0x0018)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0268   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.RoleSelectionScreen
/// Size: 0x0048 (0x000120 - 0x000168)
class URoleSelectionScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0120   (0x0048)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.RoleSelectionScreen.OnEventButtonClick
	// void OnEventButtonClick();                                                                                            // [0x57c42c0] Final|Native|Private 
	// Function /Script/DeadByDaylight.RoleSelectionScreen.OnChangeUserButtonClick
	// void OnChangeUserButtonClick();                                                                                       // [0x58122c0] Final|Native|Private 
	// Function /Script/DeadByDaylight.RoleSelectionScreen.OnButtonSelected
	// void OnButtonSelected(int32_t buttonId);                                                                              // [0x58cca20] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.RootMovie
/// Size: 0x0070 (0x000030 - 0x0000A0)
class URootMovie : public UObject
{ 
public:
	SDK_UNDEFINED(16,2282) /* FString */               __um(SwfAssetName);                                         // 0x0030   (0x0010)  
	class UGFxMoviePlayer*                             SwfMoviePlayer;                                             // 0x0040   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0048   (0x0010)  MISSED
	class UScreenController*                           m_ScreenController;                                         // 0x0058   (0x0008)  
	class UUIController*                               m_UIController;                                             // 0x0060   (0x0008)  
	class UGameInstance*                               m_GameInstance;                                             // 0x0068   (0x0008)  
	class UDBDInputManager*                            _inputManager;                                              // 0x0070   (0x0008)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x0078   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.RootMovie.SetCursorAsSticky
	// void SetCursorAsSticky(bool isSticky, bool lockVertical, bool lockHorizontal, float stickinessOverride);              // [0x58e85d0] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.RemoveCursorBlockingWidget
	// void RemoveCursorBlockingWidget(FString ID);                                                                          // [0x58e84b0] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.RegisterView
	// void RegisterView(FString screenId, class UGFxObject* ScreenObject);                                                  // [0x58e83d0] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.RegisterUIControl
	// void RegisterUIControl(class UGFxObject* flashObj);                                                                   // [0x58e8340] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.RegisterScreenControl
	// void RegisterScreenControl(class UGFxObject* flashObj);                                                               // [0x58e82b0] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.PlaySound
	// void PlaySound(FString soundId);                                                                                      // [0x58e8210] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.OpenLinkInBrowser
	// void OpenLinkInBrowser(FString linkAddress);                                                                          // [0x58e8170] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.OnScreenReady
	// void OnScreenReady(FString screenId);                                                                                 // [0x58e8040] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.OnScreenLeave
	// void OnScreenLeave(FString screenId);                                                                                 // [0x58e7fa0] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.OnScreenEnter
	// void OnScreenEnter(FString screenId);                                                                                 // [0x58e7f00] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.OnMovieClosed
	// void OnMovieClosed();                                                                                                 // [0x58e7ee0] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.OnFlashReady
	// void OnFlashReady();                                                                                                  // [0x58e7e30] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.OnAssert
	// void OnAssert(int32_t Type, FString Message);                                                                         // [0x58e7c10] Final|Native|Public  
	// Function /Script/DeadByDaylight.RootMovie.AddCursorBlockingWidget
	// void AddCursorBlockingWidget(FString ID, float X, float Y, float Width, float Height);                                // [0x58e6e40] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.RPCMonitor
/// Size: 0x0050 (0x000038 - 0x000088)
class URPCMonitor : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0038   (0x0050)  MISSED
};

/// Class /Script/DeadByDaylight.S3GameConfigs
/// Size: 0x0410 (0x000038 - 0x000448)
class US3GameConfigs : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x410];                                     // 0x0038   (0x0410)  MISSED
};

/// Class /Script/DeadByDaylight.S3GameConfigsDS
/// Size: 0x0100 (0x000038 - 0x000138)
class US3GameConfigsDS : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x100];                                     // 0x0038   (0x0100)  MISSED
};

/// Class /Script/DeadByDaylight.SacrificeEnd
/// Size: 0x0000 (0x000280 - 0x000280)
class ASacrificeEnd : public AEmitter
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.SacrificeEnd.FX_SacrificeEnd_Basement
	// void FX_SacrificeEnd_Basement();                                                                                      // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SacrificeEnd.FX_SacrificeEnd
	// void FX_SacrificeEnd();                                                                                               // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.SafeZoneManagerWidget
/// Size: 0x0008 (0x000338 - 0x000340)
class USafeZoneManagerWidget : public UMobileBaseUserWidget
{ 
public:
	class UCanvasPanel*                                SafeZonePanel;                                              // 0x0338   (0x0008)  
};

/// Class /Script/DeadByDaylight.ScourgeHookManagerComponent
/// Size: 0x00A0 (0x0000B8 - 0x000158)
class UScourgeHookManagerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x90];                                      // 0x00B8   (0x0090)  MISSED
	SDK_UNDEFINED(16,2283) /* TArray<TWeakObjectPtr<AMeatHook*>> */ __um(_scourgeHooks);                           // 0x0148   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.ScourgeHookManagerComponent.OnRep_ScourgeHooks
	// void OnRep_ScourgeHooks();                                                                                            // [0x58ee2d0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.ScreamComponent
/// Size: 0x0020 (0x0000B8 - 0x0000D8)
class UScreamComponent : public UActorComponent
{ 
public:
	class UPerkManager*                                _perkManager;                                               // 0x00B8   (0x0008)  
	class UMontagePlayer*                              _montagePlayer;                                             // 0x00C0   (0x0008)  
	TArray<FGameplayTag>                               _tagsPreventingScream;                                      // 0x00C8   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.ScreamComponent.TriggerScreamEventsIfPossible
	// bool TriggerScreamEventsIfPossible(bool fireLoudNoiseEvent, float audibleRange);                                      // [0x58ee540] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ScreamComponent.TriggerScreamEventsAndAndAnimationIfPossible
	// bool TriggerScreamEventsAndAndAnimationIfPossible(bool fireLoudNoiseEvent, FMontagePlaybackDefinition montageDefinition, float audibleRange); // [0x58ee3a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.ScreamComponent.OnDamageStateChanged
	// void OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState newDamageState);                      // [0x58ee140] Final|Native|Private 
	// Function /Script/DeadByDaylight.ScreamComponent.CanScream
	// bool CanScream();                                                                                                     // [0x58edfe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.ScreenController
/// Size: 0x02B0 (0x000030 - 0x0002E0)
class UScreenController : public UObject
{ 
public:
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0030   (0x0008)  
	class UGFxObject*                                  _screenControllerObj;                                       // 0x0038   (0x0008)  
	class UGFxMoviePlayer*                             _moviePlayer;                                               // 0x0040   (0x0008)  
	SDK_UNDEFINED(80,2284) /* TMap<FString, UScreenBase*> */ __um(_screenDictionary);                              // 0x0048   (0x0050)  
	SDK_UNDEFINED(80,2285) /* TMap<FString, EScreenType> */ __um(_screenTypeDictionary);                           // 0x0098   (0x0050)  
	SDK_UNDEFINED(80,2286) /* TMap<UClass*, TWeakObjectPtr<UUserWidget*>> */ __um(_cachedUMGScreens);              // 0x00E8   (0x0050)  
	unsigned char                                      UnknownData00_6[0x1A8];                                     // 0x0138   (0x01A8)  MISSED
};

/// Class /Script/DeadByDaylight.ScreenshotOniHook
/// Size: 0x0020 (0x000030 - 0x000050)
class UScreenshotOniHook : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0030   (0x0008)  MISSED
	FName                                              OniId;                                                      // 0x0038   (0x000C)  
	FName                                              DemonModeTag;                                               // 0x0044   (0x000C)  
};

/// Class /Script/DeadByDaylight.ScreenshotPhysicsWeaponHook
/// Size: 0x0018 (0x000030 - 0x000048)
class UScreenshotPhysicsWeaponHook : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0030   (0x0008)  MISSED
	TArray<FName>                                      KillersId;                                                  // 0x0038   (0x0010)  
};

/// Class /Script/DeadByDaylight.ScreenshotPreviewWidget
/// Size: 0x0000 (0x000298 - 0x000298)
class UScreenshotPreviewWidget : public UUserWidget
{ 
public:
};

/// Class /Script/DeadByDaylight.ScreenshotSpiritHook
/// Size: 0x0058 (0x000030 - 0x000088)
class UScreenshotSpiritHook : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0030   (0x0008)  MISSED
	FName                                              SpiritId;                                                   // 0x0038   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	SDK_UNDEFINED(48,2287) /* TWeakObjectPtr<UMaterial*> */ __um(MaterialToFind);                                  // 0x0048   (0x0030)  
	FName                                              MaterialFieldName;                                          // 0x0078   (0x000C)  
	float                                              MaterialFieldValue;                                         // 0x0084   (0x0004)  
};

/// Class /Script/DeadByDaylight.ScreenshotTool
/// Size: 0x0000 (0x000380 - 0x000380)
class AScreenshotTool : public ACharacterTool
{ 
public:
};

/// Struct /Script/DeadByDaylight.ScreenshotToolPathInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FScreenshotToolPathInfo
{ 
	bool                                               IncludeDLCFolder;                                           // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,2288) /* FString */               __um(Path);                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ScreenshotPreviewAction
/// Size: 0x0098 (0x000000 - 0x000098)
struct FScreenshotPreviewAction
{ 
	bool                                               SkyboxEnabled;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(80,2289) /* TMap<ECharacterToolItemType, FIntPoint> */ __um(FrameSizes);                         // 0x0008   (0x0050)  
	uint16_t                                           RenderResolution;                                           // 0x0058   (0x0002)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x005A   (0x0006)  MISSED
	SDK_UNDEFINED(48,2290) /* TWeakObjectPtr<UTextureRenderTarget2D*> */ __um(RenderTarget);                       // 0x0060   (0x0030)  
	class UClass*                                      EditorWidgetClass;                                          // 0x0090   (0x0008)  
};

/// Struct /Script/DeadByDaylight.ScreenshotExportAction
/// Size: 0x0018 (0x000000 - 0x000018)
struct FScreenshotExportAction
{ 
	bool                                               ExportOnce;                                                 // 0x0000   (0x0001)  
	bool                                               IncludeDLCFolder;                                           // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	SDK_UNDEFINED(16,2291) /* TArray<FString> */       __um(Directories);                                          // 0x0008   (0x0010)  
};

/// Class /Script/DeadByDaylight.ScreenshotToolConfigurationAsset
/// Size: 0x0100 (0x000038 - 0x000138)
class UScreenshotToolConfigurationAsset : public UDataAsset
{ 
public:
	float                                              SceneSetupDelay;                                            // 0x0038   (0x0004)  
	bool                                               UpdateCameraFromViewSettings;                               // 0x003C   (0x0001)  
	bool                                               AutoSelectActorInEditor;                                    // 0x003D   (0x0001)  
	bool                                               SaveAndCheckoutAssets;                                      // 0x003E   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x003F   (0x0001)  MISSED
	FScreenshotToolPathInfo                            TempIconPathInfo;                                           // 0x0040   (0x0018)  
	FScreenshotToolPathInfo                            AssetPathInfo;                                              // 0x0058   (0x0018)  
	bool                                               ExportAllIconsInOneFrame;                                   // 0x0070   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0071   (0x0001)  MISSED
	uint16_t                                           IconsExportedPerFrame;                                      // 0x0072   (0x0002)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0074   (0x0004)  MISSED
	FScreenshotPreviewAction                           PreviewAction;                                              // 0x0078   (0x0098)  
	FScreenshotExportAction                            ExportAction;                                               // 0x0110   (0x0018)  
	TArray<class UClass*>                              HookClasses;                                                // 0x0128   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ScreenshotViewSetting
/// Size: 0x0028 (0x000000 - 0x000028)
struct FScreenshotViewSetting
{ 
	float                                              distance;                                                   // 0x0000   (0x0004)  
	float                                              LateralOffset;                                              // 0x0004   (0x0004)  
	float                                              HeightOffset;                                               // 0x0008   (0x0004)  
	float                                              CharacterYaw;                                               // 0x000C   (0x0004)  
	float                                              CharacterRoll;                                              // 0x0010   (0x0004)  
	float                                              CharacterPitch;                                             // 0x0014   (0x0004)  
	float                                              CameraPitch;                                                // 0x0018   (0x0004)  
	FName                                              SocketName;                                                 // 0x001C   (0x000C)  
};

/// Class /Script/DeadByDaylight.ScreenshotToolViewAsset
/// Size: 0x0118 (0x000038 - 0x000150)
class UScreenshotToolViewAsset : public UDataAsset
{ 
public:
	FScreenshotViewSetting                             Charm;                                                      // 0x0038   (0x0028)  
	FScreenshotViewSetting                             SurvivorHead;                                               // 0x0060   (0x0028)  
	FScreenshotViewSetting                             SurvivorTorso;                                              // 0x0088   (0x0028)  
	FScreenshotViewSetting                             SurvivorLegs;                                               // 0x00B0   (0x0028)  
	FScreenshotViewSetting                             KillerHead;                                                 // 0x00D8   (0x0028)  
	FScreenshotViewSetting                             KillerBody;                                                 // 0x0100   (0x0028)  
	FScreenshotViewSetting                             KillerWeapon;                                               // 0x0128   (0x0028)  
};

/// Struct /Script/DeadByDaylight.CharacterAnimationAssetDropdown
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCharacterAnimationAssetDropdown
{ 
	bool                                               IsAnimBP;                                                   // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,2292) /* FString */               __um(AnimAsset);                                            // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterAnimationAssetOutfitOverride
/// Size: 0x0010 (0x000018 - 0x000028)
struct FCharacterAnimationAssetOutfitOverride : FCharacterAnimationAssetDropdown
{ 
	FName                                              OutfitId;                                                   // 0x0018   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.OutfitAnimation
/// Size: 0x0038 (0x000000 - 0x000038)
struct FOutfitAnimation
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FCharacterAnimationAssetOutfitOverride             Data;                                                       // 0x0010   (0x0028)  
};

/// Struct /Script/DeadByDaylight.RoleItemCategoryDropdown
/// Size: 0x0004 (0x000008 - 0x00000C)
struct FRoleItemCategoryDropdown : FCharacterDropdown
{ 
	bool                                               IncludeOutfits;                                             // 0x0008   (0x0001)  
	bool                                               IncludeNone;                                                // 0x0009   (0x0001)  
	ECustomizationCategory                             category;                                                   // 0x000A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x000B   (0x0001)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterAnimationDropdown
/// Size: 0x0014 (0x00000C - 0x000020)
struct FCharacterAnimationDropdown : FRoleItemCategoryDropdown
{ 
	bool                                               IncludeAllAnimations;                                       // 0x000C   (0x0001)  
	bool                                               IsAnimBP;                                                   // 0x000D   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x000E   (0x0002)  MISSED
	SDK_UNDEFINED(16,2293) /* FString */               __um(AnimAsset);                                            // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterRoleAnimation
/// Size: 0x0030 (0x000000 - 0x000030)
struct FCharacterRoleAnimation
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FCharacterAnimationDropdown                        Data;                                                       // 0x0010   (0x0020)  
};

/// Class /Script/DeadByDaylight.ScreenshotToolAnimationAsset
/// Size: 0x0020 (0x000038 - 0x000058)
class UScreenshotToolAnimationAsset : public UDataAsset
{ 
public:
	TArray<FOutfitAnimation>                           AnimByOutfit;                                               // 0x0038   (0x0010)  
	TArray<FCharacterRoleAnimation>                    AnimByCharacter;                                            // 0x0048   (0x0010)  
};

/// Class /Script/DeadByDaylight.ScreenshotToolAsset
/// Size: 0x0038 (0x000038 - 0x000070)
class UScreenshotToolAsset : public UDataAsset
{ 
public:
	FNamedButton                                       ReloadDBBtn;                                                // 0x0038   (0x0018)  
	class UScreenshotToolViewAsset*                    Views;                                                      // 0x0050   (0x0008)  
	class UScreenshotToolAnimationAsset*               Animations;                                                 // 0x0058   (0x0008)  
	class UScreenshotToolConfigurationAsset*           Configuration;                                              // 0x0060   (0x0008)  
	class UDataTable*                                  ViewsOverridesDB;                                           // 0x0068   (0x0008)  
};

/// Class /Script/DeadByDaylight.ScreenshotToolHook
/// Size: 0x0000 (0x000030 - 0x000030)
class UScreenshotToolHook : public UInterface
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.ScreenshotToolHook.ScreenshotBeginPlay
	// void ScreenshotBeginPlay(bool isPIE);                                                                                 // [0x4988230] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PreTakeItemScreenshot
	// void PreTakeItemScreenshot(FCharacterToolItemData& Item);                                                             // [0x58f2fb0] Native|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PreSpawnCharm
	// void PreSpawnCharm(FCustomizationItemData& Item);                                                                     // [0x58f2ee0] Native|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PreSpawnCharacter
	// void PreSpawnCharacter(FCharacterDescription& Description, FCharacterToolSpawnParameters& spawnParams);               // [0x58f2dc0] Native|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PreHookDestruction
	// void PreHookDestruction();                                                                                            // [0x499ad80] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PreDestroyCharm
	// void PreDestroyCharm(class ACharm* Charm);                                                                            // [0x58f2d30] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PreDestroyCharacter
	// void PreDestroyCharacter(class ADBDMenuPlayer* Character);                                                            // [0x58f2ca0] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PreBatchItems
	// void PreBatchItems();                                                                                                 // [0x49a1180] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PostUpdateCharacter
	// void PostUpdateCharacter(class ADBDMenuPlayer* Character);                                                            // [0x58f2c10] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PostTakeItemScreenshot
	// void PostTakeItemScreenshot(FCharacterToolItemData& Item, bool success);                                              // [0x58f2b20] Native|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PostStateChanged
	// void PostStateChanged(EScreenshotToolState previousState, EScreenshotToolState CurrentState);                         // [0x58f2a50] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PostSpawnCharm
	// void PostSpawnCharm(class ACharm* Charm);                                                                             // [0x58f29c0] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PostSpawnCharacter
	// void PostSpawnCharacter(class ADBDMenuPlayer* Character);                                                             // [0x58f2930] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PostHookConstruction
	// void PostHookConstruction();                                                                                          // [0x499a5e0] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.PostBatchItems
	// void PostBatchItems(TArray<FCharacterToolItemData>& Items);                                                           // [0x58f2880] Native|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.ScreenshotToolHook.IsPIEOnly
	// bool IsPIEOnly();                                                                                                     // [0x49bb2e0] Native|Event|Public|BlueprintEvent|Const 
};

/// Struct /Script/DeadByDaylight.ScreenshotVFXCharmHookCharmData
/// Size: 0x00B8 (0x000000 - 0x0000B8)
struct FScreenshotVFXCharmHookCharmData
{ 
	SDK_UNDEFINED(48,2294) /* TWeakObjectPtr<UFXSystemAsset*> */ __um(TargetSystem);                               // 0x0000   (0x0030)  
	float                                              VFXWarmupTime;                                              // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	SDK_UNDEFINED(48,2295) /* TWeakObjectPtr<UMaterialInterface*> */ __um(TargetMaterial);                         // 0x0038   (0x0030)  
	SDK_UNDEFINED(80,2296) /* TMap<FName, float> */    __um(MaterialScalarParameters);                             // 0x0068   (0x0050)  
};

/// Struct /Script/DeadByDaylight.ScreenshotVFXCharmHookCharm
/// Size: 0x00C8 (0x000000 - 0x0000C8)
struct FScreenshotVFXCharmHookCharm
{ 
	FCharmDropdown                                     Charm;                                                      // 0x0000   (0x0010)  
	FScreenshotVFXCharmHookCharmData                   Data;                                                       // 0x0010   (0x00B8)  
};

/// Class /Script/DeadByDaylight.ScreenshotVFXCharmHook
/// Size: 0x0018 (0x000030 - 0x000048)
class UScreenshotVFXCharmHook : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0030   (0x0008)  MISSED
	TArray<FScreenshotVFXCharmHookCharm>               Charms;                                                     // 0x0038   (0x0010)  
};

/// Class /Script/DeadByDaylight.ScreenSpaceLocationComponent
/// Size: 0x0020 (0x000220 - 0x000240)
class UScreenSpaceLocationComponent : public USceneComponent
{ 
public:
	float                                              ScreenSpaceX;                                               // 0x0218   (0x0004)  
	float                                              ScreenSpaceY;                                               // 0x021C   (0x0004)  
	int32_t                                            FrameDelay;                                                 // 0x0220   (0x0004)  
	FVector2D                                          _currentResolution;                                         // 0x0224   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x022C   (0x0004)  MISSED
	TArray<FTransform>                                 _previousTransforms;                                        // 0x0230   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.ScreenSpaceLocationComponent.HasValidPosition
	// bool HasValidPosition();                                                                                              // [0x58f9570] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.ScreenSpaceLocationComponent.GetCurrentResolution
	// FVector2D GetCurrentResolution();                                                                                     // [0x58f94d0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.Searchable
/// Size: 0x0100 (0x000338 - 0x000438)
class ASearchable : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0338   (0x0010)  MISSED
	float                                              Weight;                                                     // 0x0348   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x034C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2297) /* FMulticastInlineDelegate */ __um(OnSearchedChanged);                                 // 0x0350   (0x0010)  
	class USearchableItemStrategy*                     SearchableItemStrategy;                                     // 0x0360   (0x0008)  
	class USearchableSpawnPoint*                       _searchableSpawnPoint;                                      // 0x0368   (0x0008)  
	unsigned char                                      UnknownData02_5[0x30];                                      // 0x0370   (0x0030)  MISSED
	class ACollectable*                                _spawnedItem;                                               // 0x03A0   (0x0008)  
	class ACollectable*                                _itemInsideSearchable;                                      // 0x03A8   (0x0008)  
	SDK_UNDEFINED(80,2298) /* TMap<ADBDPlayer*, char> */ __um(_numberOfSearchesWhileOpenPerPlayer);                // 0x03B0   (0x0050)  
	unsigned char                                      UnknownData03_6[0x38];                                      // 0x0400   (0x0038)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.Searchable.SetHasBeenSearched
	// void SetHasBeenSearched(bool newHasBeenSearched);                                                                     // [0x58fa2a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Searchable.OnSearchedChanged__DelegateSignature
	// void OnSearchedChanged__DelegateSignature(bool searched);                                                             // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.Searchable.HasBeenSearched
	// bool HasBeenSearched();                                                                                               // [0x58f9530] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Searchable.GetInteractorPrimitiveComponent
	// class UPrimitiveComponent* GetInteractorPrimitiveComponent();                                                         // [0x58e7710] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Searchable.ContainsSpawnedItem
	// bool ContainsSpawnedItem();                                                                                           // [0x58f94a0] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.Searchable.Authority_SpawnObject
	// class ACollectable* Authority_SpawnObject(class ADBDPlayer* Player);                                                  // [0x58f9380] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.SearchableOutlineUpdateStrategy
/// Size: 0x0000 (0x000158 - 0x000158)
class USearchableOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.TileSpawnPoint
/// Size: 0x0070 (0x000220 - 0x000290)
class UTileSpawnPoint : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	ETileSpawnPointType                                TileSpawnPointType;                                         // 0x0228   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0229   (0x0003)  MISSED
	float                                              Weight;                                                     // 0x022C   (0x0004)  
	SDK_UNDEFINED(48,2299) /* TWeakObjectPtr<UClass*> */ __um(Visualization);                                      // 0x0230   (0x0030)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0260   (0x0008)  MISSED
	class AActor*                                      _spawnedObject;                                             // 0x0268   (0x0008)  
	TArray<class UClass*>                              ObjectSpawnModifier;                                        // 0x0270   (0x0010)  
	int32_t                                            _spawnPriorityTier;                                         // 0x0280   (0x0004)  
	bool                                               _weightInfluenceable;                                       // 0x0284   (0x0001)  
	bool                                               _weightInfluencer;                                          // 0x0285   (0x0001)  
	bool                                               _activated;                                                 // 0x0286   (0x0001)  
	unsigned char                                      UnknownData03_6[0x9];                                       // 0x0287   (0x0009)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TileSpawnPoint.SetActivated
	// void SetActivated(bool activated);                                                                                    // [0x5921990] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TileSpawnPoint.OnRep_SpawnObject
	// void OnRep_SpawnObject();                                                                                             // [0x591c810] Native|Protected     
	// Function /Script/DeadByDaylight.TileSpawnPoint.IsActivated
	// bool IsActivated();                                                                                                   // [0x5921590] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TileSpawnPoint.GetSpawnedObject
	// class AActor* GetSpawnedObject();                                                                                     // [0x5921570] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.SearchableSpawnPoint
/// Size: 0x0000 (0x000290 - 0x000290)
class USearchableSpawnPoint : public UTileSpawnPoint
{ 
public:
};

/// Class /Script/DeadByDaylight.SeasonEndPopupScreen
/// Size: 0x0000 (0x000140 - 0x000140)
class USeasonEndPopupScreen : public UGenericPopupScreen
{ 
public:
};

/// Class /Script/DeadByDaylight.SeasonEndRankRewardsPopupScreen
/// Size: 0x0000 (0x000140 - 0x000140)
class USeasonEndRankRewardsPopupScreen : public UGenericPopupScreen
{ 
public:
};

/// Class /Script/DeadByDaylight.SectionnedChargeableComponent
/// Size: 0x0008 (0x000328 - 0x000330)
class USectionnedChargeableComponent : public UChargeableComponent
{ 
public:
	char                                               _sections;                                                  // 0x0328   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0329   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SectionnedChargeableComponent.GetSectionChargeRemaining
	// float GetSectionChargeRemaining();                                                                                    // [0x58f9500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.SelectiveVisibilityComponent
/// Size: 0x0000 (0x000220 - 0x000220)
class USelectiveVisibilityComponent : public USceneComponent
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.SelectiveVisibilityComponent.Local_SetVisibility
	// void Local_SetVisibility(bool bNewVisibility, bool bPropagateToChildren);                                             // [0x58f96b0] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.RoleGenderCharacterRotation
/// Size: 0x0014 (0x000000 - 0x000014)
struct FRoleGenderCharacterRotation
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	FRoleDropdown                                      Role;                                                       // 0x000C   (0x0002)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x000E   (0x0002)  MISSED
	float                                              Rotation;                                                   // 0x0010   (0x0004)  
};

/// Struct /Script/DeadByDaylight.SimpleCharacterDropdown
/// Size: 0x0004 (0x000000 - 0x000004)
struct FSimpleCharacterDropdown
{ 
	int32_t                                            characterId;                                                // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.CharacterCamera
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCharacterCamera
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	FSimpleCharacterDropdown                           Data;                                                       // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.CharacterCameraTag
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCharacterCameraTag
{ 
	class ACameraActor*                                Camera;                                                     // 0x0000   (0x0008)  
	TArray<FCharacterCamera>                           Characters;                                                 // 0x0008   (0x0010)  
};

/// Class /Script/DeadByDaylight.ShopCameraManager
/// Size: 0x0050 (0x000230 - 0x000280)
class AShopCameraManager : public AActor
{ 
public:
	FNamedButton                                       ReloadDBBtn;                                                // 0x0230   (0x0018)  
	TArray<FRoleGenderCharacterRotation>               CharacterRotation;                                          // 0x0248   (0x0010)  
	TArray<FCharacterCameraTag>                        CatalogCharactersCamera;                                    // 0x0258   (0x0010)  
	TArray<FCharacterCameraTag>                        StoryCharactersCamera;                                      // 0x0268   (0x0010)  
	class ACameraActor*                                HookCamera;                                                 // 0x0278   (0x0008)  
};

/// Class /Script/DeadByDaylight.shopmanager
/// Size: 0x0688 (0x000030 - 0x0006B8)
class Ushopmanager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x40];                                      // 0x0030   (0x0040)  MISSED
	SDK_UNDEFINED(8,2300) /* TWeakObjectPtr<UDBDGameInstance*> */ __um(_gameInstance);                             // 0x0070   (0x0008)  
	unsigned char                                      UnknownData01_5[0x430];                                     // 0x0078   (0x0430)  MISSED
	class UBannerDataProcessor*                        _bannerDataProcessor;                                       // 0x04A8   (0x0008)  
	class URecommendationsGenerator*                   _recommendationsGenerator;                                  // 0x04B0   (0x0008)  
	unsigned char                                      UnknownData02_6[0x200];                                     // 0x04B8   (0x0200)  MISSED
};

/// Class /Script/DeadByDaylight.ShopNewSeenItemSubsystem
/// Size: 0x0038 (0x000038 - 0x000070)
class UShopNewSeenItemSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/DeadByDaylight.SkillCheck
/// Size: 0x01F0 (0x0000B8 - 0x0002A8)
class USkillCheck : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0xC8];                                      // 0x00B8   (0x00C8)  MISSED
	class ADBDPlayer*                                  _owner;                                                     // 0x0180   (0x0008)  
	class UChargeableInteractionDefinition*            _currentInteraction;                                        // 0x0188   (0x0008)  
	unsigned char                                      UnknownData01_5[0x48];                                      // 0x0190   (0x0048)  MISSED
	TArray<ESkillCheckCustomType>                      _customSkillCheckTypesAffectedByWarningModifiers;           // 0x01D8   (0x0010)  
	unsigned char                                      UnknownData02_6[0xC0];                                      // 0x01E8   (0x00C0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SkillCheck.ShouldShowWarning
	// bool ShouldShowWarning();                                                                                             // [0x58fa330] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SkillCheck.Server_OnSkillCheckSuccess
	// void Server_OnSkillCheckSuccess(FSkillCheckResponse SkillCheckResponse);                                              // [0x58fa1e0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.SkillCheck.Server_OnSkillCheckFailure
	// void Server_OnSkillCheckFailure(FSkillCheckResponse SkillCheckResponse);                                              // [0x58fa120] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.SkillCheck.Server_DeactivateSkillCheck
	// void Server_DeactivateSkillCheck();                                                                                   // [0x5850d00] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.SkillCheck.Server_ActivateSkillCheck
	// void Server_ActivateSkillCheck(class UChargeableInteractionDefinition* Interaction, ESkillCheckCustomType skillCheckCustomType, FSkillCheckDefinition definition); // [0x58f9fd0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/DeadByDaylight.SkillCheck.OnSkillCheckSuccessTrigger
	// void OnSkillCheckSuccessTrigger(bool Bonus, bool insane, ESkillCheckCustomType skillCheckCustomType, bool FailedCountedAsGood); // [0x58f9e60] Final|Native|Private 
	// Function /Script/DeadByDaylight.SkillCheck.OnSkillCheckFailureTrigger
	// void OnSkillCheckFailureTrigger(bool hadInput, bool insane, ESkillCheckCustomType skillCheckCustomType);              // [0x58f9d40] Final|Native|Private 
	// Function /Script/DeadByDaylight.SkillCheck.Multicast_SkillCheckResponse
	// void Multicast_SkillCheckResponse(FSkillCheckResponse SkillCheckResponse, bool executeOnlyOnNotControlled);           // [0x58f9c30] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SkillCheck.Multicast_OnTriggerCustomSkillCheck
	// void Multicast_OnTriggerCustomSkillCheck(class UChargeableInteractionDefinition* currentInteraction, ESkillCheckCustomType skillCheckCustomType, FString ID, FString salt, FSkillCheckDefinition definition); // [0x58f9a50] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SkillCheck.Multicast_OnTriggerContinuousCustomSkillCheck
	// void Multicast_OnTriggerContinuousCustomSkillCheck(class UChargeableInteractionDefinition* currentInteraction, ESkillCheckCustomType skillCheckCustomType, FSkillCheckDefinition definition); // [0x58f9910] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SkillCheck.Multicast_DeactivateSkillCheck
	// void Multicast_DeactivateSkillCheck();                                                                                // [0x58503b0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SkillCheck.Multicast_ActivateSkillCheck
	// void Multicast_ActivateSkillCheck(class UChargeableInteractionDefinition* Interaction, ESkillCheckCustomType skillCheckCustomType, FSkillCheckDefinition definition, bool executeOnlyOnNotControlled); // [0x58f9780] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SkillCheck.IsOffCenterSkillCheck
	// bool IsOffCenterSkillCheck();                                                                                         // [0x58f9680] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SkillCheck.IsHexSkillCheck
	// bool IsHexSkillCheck(class ADBDPlayer* DBDPlayer);                                                                    // [0x58f95e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SkillCheck.IsDisplayed
	// bool IsDisplayed();                                                                                                   // [0x58f95c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SkillCheck.CanSkillCheckTypeGrantScore
	// bool CanSkillCheckTypeGrantScore(ESkillCheckCustomType Type);                                                         // [0x58f9420] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.SkillCheck.Authority_OnSkillCheckTimeout
	// void Authority_OnSkillCheckTimeout();                                                                                 // [0x58f9360] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.SlashableActivationSourceCollection
/// Size: 0x0040 (0x0000B8 - 0x0000F8)
class USlashableActivationSourceCollection : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x00B8   (0x0040)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SlashableActivationSourceCollection.RemoveSource
	// void RemoveSource(class UObject* Source);                                                                             // [0x58ff270] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlashableActivationSourceCollection.ForceActivate
	// void ForceActivate(class UObject* WorldContextObject);                                                                // [0x58fdc40] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlashableActivationSourceCollection.AddSource
	// void AddSource(class UObject* Source);                                                                                // [0x58fd4d0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.SlashableInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class USlashableInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.SlasherAnimInstance
/// Size: 0x01A0 (0x0002C0 - 0x000460)
class USlasherAnimInstance : public UAnimInstance
{ 
public:
	SDK_UNDEFINED(16,2301) /* FMulticastInlineDelegate */ __um(OnFootTrapped);                                     // 0x02C0   (0x0010)  
	EIntroState                                        _introState;                                                // 0x02D0   (0x0001)  
	bool                                               _isCrouched;                                                // 0x02D1   (0x0001)  
	bool                                               _isRevvingChainsaw;                                         // 0x02D2   (0x0001)  
	bool                                               _isAttackSuccessMontagePlaying;                             // 0x02D3   (0x0001)  
	bool                                               _isCamOn;                                                   // 0x02D4   (0x0001)  
	bool                                               _isAttacking;                                               // 0x02D5   (0x0001)  
	bool                                               _isAnyMontagePlaying;                                       // 0x02D6   (0x0001)  
	bool                                               _isFrenzy;                                                  // 0x02D7   (0x0001)  
	bool                                               _isFrenzyCD;                                                // 0x02D8   (0x0001)  
	bool                                               _isInParadise;                                              // 0x02D9   (0x0001)  
	bool                                               _enableArmOverrideTier3;                                    // 0x02DA   (0x0001)  
	bool                                               _isRingingBell;                                             // 0x02DB   (0x0001)  
	bool                                               _isCarrying;                                                // 0x02DC   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02DD   (0x0003)  MISSED
	FVector                                            _firstPersonCarryOffset;                                    // 0x02E0   (0x000C)  
	FVector                                            _firstPersonCarryOffsetLookingDown;                         // 0x02EC   (0x000C)  
	bool                                               _isPassivePhaseWalking;                                     // 0x02F8   (0x0001)  
	bool                                               _isActivePhaseWalking;                                      // 0x02F9   (0x0001)  
	bool                                               _isInAir;                                                   // 0x02FA   (0x0001)  
	bool                                               _isVaultingToFall;                                          // 0x02FB   (0x0001)  
	bool                                               _isSpectator;                                               // 0x02FC   (0x0001)  
	bool                                               _firstPersonView;                                           // 0x02FD   (0x0001)  
	bool                                               _isIdle;                                                    // 0x02FE   (0x0001)  
	bool                                               _validSlasher;                                              // 0x02FF   (0x0001)  
	float                                              _animDirection;                                             // 0x0300   (0x0004)  
	float                                              _animSpeed;                                                 // 0x0304   (0x0004)  
	float                                              _animPitch;                                                 // 0x0308   (0x0004)  
	float                                              _animTurning;                                               // 0x030C   (0x0004)  
	float                                              _animYaw;                                                   // 0x0310   (0x0004)  
	float                                              _pelvisHeight;                                              // 0x0314   (0x0004)  
	float                                              _idleTime;                                                  // 0x0318   (0x0004)  
	int32_t                                            _directionSwitch;                                           // 0x031C   (0x0004)  
	FVector                                            _leftClearFrontSpaceVector;                                 // 0x0320   (0x000C)  
	FVector                                            _rightClearFrontSpaceVector;                                // 0x032C   (0x000C)  
	FVector                                            _velocity;                                                  // 0x0338   (0x000C)  
	FVector                                            _rightFootEffectorLocation;                                 // 0x0344   (0x000C)  
	FVector                                            _leftFootEffectorLocation;                                  // 0x0350   (0x000C)  
	FRotator                                           _meshRotation;                                              // 0x035C   (0x000C)  
	TArray<class UAnimMontage*>                        _attackSuccessAnimations;                                   // 0x0368   (0x0010)  
	TArray<class UAnimMontage*>                        _camOnAnimations;                                           // 0x0378   (0x0010)  
	class ASlasherPlayer*                              _mySlasher;                                                 // 0x0388   (0x0008)  
	FTagStateBool                                      _isVaultingToFallState;                                     // 0x0390   (0x0030)  
	EInteractionAnimation                              _interactionType;                                           // 0x03C0   (0x0001)  
	unsigned char                                      UnknownData01_5[0xF];                                       // 0x03C1   (0x000F)  MISSED
	float                                              _demogorgonTeleportDuration;                                // 0x03D0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x03D4   (0x0004)  MISSED
	class UChargedAttackStateComponent*                _demogorgonChargedAttackStateComponent;                     // 0x03D8   (0x0008)  
	bool                                               _isDemogorgonCharging;                                      // 0x03E0   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x03E1   (0x0003)  MISSED
	float                                              _demogorgonChargingPercent;                                 // 0x03E4   (0x0004)  
	class UOniDemonModeAttackStateComponent*           _oniAttackState;                                            // 0x03E8   (0x0008)  
	bool                                               _isOniCharging;                                             // 0x03F0   (0x0001)  
	EOniAttackType                                     _oniAttackType;                                             // 0x03F1   (0x0001)  
	unsigned char                                      UnknownData04_5[0x2];                                       // 0x03F2   (0x0002)  MISSED
	float                                              _oniChargeDuration;                                         // 0x03F4   (0x0004)  
	EAttackSubstate                                    _previousAttackSubstate;                                    // 0x03F8   (0x0001)  
	EAttackSubstate                                    _attackSubstate;                                            // 0x03F9   (0x0001)  
	unsigned char                                      UnknownData05_5[0x6];                                       // 0x03FA   (0x0006)  MISSED
	class UEvilWithinComponent*                        _evilWithinComponent;                                       // 0x0400   (0x0008)  
	unsigned char                                      UnknownData06_5[0x10];                                      // 0x0408   (0x0010)  MISSED
	class UArmIKSensorComponent*                       _armIKSensorComponent;                                      // 0x0418   (0x0008)  
	unsigned char                                      UnknownData07_5[0x18];                                      // 0x0420   (0x0018)  MISSED
	class UAnimEffectHandler*                          _animEffectHandlerForSFX;                                   // 0x0438   (0x0008)  
	class UAnimEffectHandler*                          _animEffectHandlerForVFX;                                   // 0x0440   (0x0008)  
	class UClass*                                      _animEffectHandlerClassForSFX;                              // 0x0448   (0x0008)  
	class UClass*                                      _animEffectHandlerClassForVFX;                              // 0x0450   (0x0008)  
	unsigned char                                      UnknownData08_6[0x8];                                       // 0x0458   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SlasherAnimInstance.SetIsCrouched
	// void SetIsCrouched(bool value);                                                                                       // [0x5872f50] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherAnimInstance.CallOnFootTrapped
	// void CallOnFootTrapped();                                                                                             // [0x58fd700] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.SlasherAttackPickerComponent
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class USlasherAttackPickerComponent : public UActorComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent
/// Size: 0x0068 (0x0000B8 - 0x000120)
class USlasherHitsWhileCarryingTrackerComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(80,2302) /* TSet<ACamperPlayer*> */  __um(_campersHitDuringLastCarry);                           // 0x00B8   (0x0050)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0108   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent.OnPostAttack
	// void OnPostAttack(FGameplayTag gameEventType, FGameEventData& GameEventData);                                         // [0x58ff0d0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent.OnPickup
	// void OnPickup(FGameplayTag gameEventType, FGameEventData& GameEventData);                                             // [0x58fefc0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent.OnAttack
	// void OnAttack(FGameplayTag gameEventType, FGameEventData& GameEventData);                                             // [0x58fe700] Final|Native|Private|HasOutParms 
};

/// Class /Script/DeadByDaylight.SlasherInteractable
/// Size: 0x0008 (0x000370 - 0x000378)
class ASlasherInteractable : public APlayerInteractable
{ 
public:
	class UInteractor*                                 _genericStunInteractor;                                     // 0x0370   (0x0008)  
};

/// Class /Script/DeadByDaylight.SlasherMovementComponent
/// Size: 0x0080 (0x000E10 - 0x000E90)
class USlasherMovementComponent : public UDBDCharacterMovementComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0E10   (0x0018)  MISSED
	SDK_UNDEFINED(16,2303) /* FMulticastInlineDelegate */ __um(OnHitLedgeEvent);                                   // 0x0E28   (0x0010)  
	float                                              OnHitLedgeEventCooldown;                                    // 0x0E38   (0x0004)  
	unsigned char                                      UnknownData01_6[0x54];                                      // 0x0E3C   (0x0054)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SlasherMovementComponent.OnHitLedgeEvent__DelegateSignature
	// void OnHitLedgeEvent__DelegateSignature();                                                                            // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.SlasherMovementComponent.GetBaseMaxSpeed
	// float GetBaseMaxSpeed();                                                                                              // [0x58fdcf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.SlasherOutlineUpdateStrategy
/// Size: 0x0078 (0x0000E0 - 0x000158)
class USlasherOutlineUpdateStrategy : public UOutlineUpdateStrategy
{ 
public:
	SDK_UNDEFINED(16,2304) /* FMulticastInlineDelegate */ __um(OnRevealed);                                        // 0x00E0   (0x0010)  
	FLinearColor                                       _nonRevealedColor;                                          // 0x00F0   (0x0010)  
	FLinearColor                                       _revealedColor;                                             // 0x0100   (0x0010)  
	FLinearColor                                       _revealedColorForKiller;                                    // 0x0110   (0x0010)  
	unsigned char                                      UnknownData00_6[0x38];                                      // 0x0120   (0x0038)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SlasherOutlineUpdateStrategy.OnLevelReadyToPlay
	// void OnLevelReadyToPlay();                                                                                            // [0x58fed30] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.SlasherPlayer
/// Size: 0x04A0 (0x0011B0 - 0x001650)
class ASlasherPlayer : public ADBDPlayer
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x11B0   (0x0048)  MISSED
	bool                                               _setFirstPersonModeEnabledOnKillerIntroCompleted;           // 0x11F8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x27];                                      // 0x11F9   (0x0027)  MISSED
	FVector                                            PutDownTraceLocation;                                       // 0x1220   (0x000C)  
	FName                                              DefaultSlasherPower;                                        // 0x122C   (0x000C)  
	float                                              LoudNoiseDisplayTime;                                       // 0x1238   (0x0004)  
	FVector                                            TargetPriorityFactor;                                       // 0x123C   (0x000C)  
	bool                                               ShouldDisplayAttackZones;                                   // 0x1248   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x1249   (0x0007)  MISSED
	class UClass*                                      CamperExposer;                                              // 0x1250   (0x0008)  
	TArray<EKillerAbilities>                           KillerAbilities;                                            // 0x1258   (0x0010)  
	class UKillerSoundCuesComponent*                   KillerSoundCuesComponent;                                   // 0x1268   (0x0008)  
	bool                                               ShowKillerPowerDebugInfo;                                   // 0x1270   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x1271   (0x0007)  MISSED
	SDK_UNDEFINED(16,2305) /* FMulticastInlineDelegate */ __um(OnStalkModeChangedEvent);                           // 0x1278   (0x0010)  
	unsigned char                                      UnknownData04_5[0x18];                                      // 0x1288   (0x0018)  MISSED
	SDK_UNDEFINED(8,2306) /* TWeakObjectPtr<UAkComponent*> */ __um(_audioComponent);                               // 0x12A0   (0x0008)  
	class UDBDNavModifierComponent*                    _terrorNavModifierComponent;                                // 0x12A8   (0x0008)  
	class UKillerBloodFXComponent*                     _bloodFXComponent;                                          // 0x12B0   (0x0008)  
	float                                              _slasherLightIntensity;                                     // 0x12B8   (0x0004)  
	float                                              _defaultAmountToSquish;                                     // 0x12BC   (0x0004)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x12C0   (0x0008)  MISSED
	SDK_UNDEFINED(80,2307) /* TMap<ADBDPlayer*, FTargetFocusTimer> */ __um(_stalkTimers);                          // 0x12C8   (0x0050)  
	class UStillnessTrackerComponent*                  _stillnessTracker;                                          // 0x1318   (0x0008)  
	class UAimAssistComponent*                         _aimAssistComponent;                                        // 0x1320   (0x0008)  
	FDBDTimer                                          _recentlyCloakedTimer;                                      // 0x1328   (0x0028)  
	FDBDTimer                                          _flashlightBlindEvasionScoreTimer;                          // 0x1350   (0x0028)  
	FDBDTimer                                          _flashlightBurnoutEvasionScoreTimer;                        // 0x1378   (0x0028)  
	SDK_UNDEFINED(80,2308) /* TMap<ADBDPlayer*, FAnimationMontageDescriptor> */ __um(_predictedCamperHitMontages); // 0x13A0   (0x0050)  
	unsigned char                                      UnknownData06_5[0x10];                                      // 0x13F0   (0x0010)  MISSED
	class ULoudNoiseHUDIndicator*                      _loudNoiseIndicator;                                        // 0x1400   (0x0008)  
	class USlasherHitsWhileCarryingTrackerComponent*   _hitsWhileCarryingTracker;                                  // 0x1408   (0x0008)  
	float                                              _stealthIncreaseRate;                                       // 0x1410   (0x0004)  
	float                                              _stealthDecreaseRate;                                       // 0x1414   (0x0004)  
	FDateTime                                          _stillnessStartTime;                                        // 0x1418   (0x0008)  
	unsigned char                                      UnknownData07_5[0x38];                                      // 0x1420   (0x0038)  MISSED
	FTagStateBool                                      _isInStalkMode;                                             // 0x1458   (0x0030)  
	unsigned char                                      UnknownData08_5[0xC0];                                      // 0x1488   (0x00C0)  MISSED
	bool                                               _isKilling;                                                 // 0x1548   (0x0001)  
	int8_t                                             _allowedKillCount;                                          // 0x1549   (0x0001)  
	int8_t                                             _allowedKillAfterStrugglePhase;                             // 0x154A   (0x0001)  
	bool                                               _allowedKillLastSurvivor;                                   // 0x154B   (0x0001)  
	unsigned char                                      UnknownData09_5[0x8];                                       // 0x154C   (0x0008)  MISSED
	int32_t                                            _cachedBloodlustTier;                                       // 0x1554   (0x0004)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x1558   (0x0004)  MISSED
	uint32_t                                           _killerPowerDebugFlags;                                     // 0x155C   (0x0004)  
	FGameplayTag                                       _presenceTag;                                               // 0x1560   (0x000C)  
	unsigned char                                      UnknownData11_5[0x4];                                       // 0x156C   (0x0004)  MISSED
	FGameplayTagContainer                              _persistantStateTags;                                       // 0x1570   (0x0020)  
	bool                                               _enableKillerCrouchInput;                                   // 0x1590   (0x0001)  
	bool                                               _canStartAttackWhileCrouched;                               // 0x1591   (0x0001)  
	unsigned char                                      UnknownData12_5[0x6];                                       // 0x1592   (0x0006)  MISSED
	class ACamperPlayer*                               _carriedCamper;                                             // 0x1598   (0x0008)  
	class UMoriComponent*                              _moriComponent;                                             // 0x15A0   (0x0008)  
	class UFinisherMoriTrackerComponent*               _finisherMoriTrackerComponent;                              // 0x15A8   (0x0008)  
	class UHitValidatorComponent*                      _hitValidator;                                              // 0x15B0   (0x0008)  
	class UHitValidatorConfigurator*                   _hitValidationConfigurator;                                 // 0x15B8   (0x0008)  
	class UDBDAttackerComponent*                       _attackerComponent;                                         // 0x15C0   (0x0008)  
	unsigned char                                      UnknownData13_5[0x14];                                      // 0x15C8   (0x0014)  MISSED
	EAttackType                                        _basicAttackType;                                           // 0x15DC   (0x0001)  
	unsigned char                                      UnknownData14_5[0x3];                                       // 0x15DD   (0x0003)  MISSED
	class UArmIKSensorComponent*                       _armIKSensorComponent;                                      // 0x15E0   (0x0008)  
	class ACamperPlayer*                               _survivorBeingKilled;                                       // 0x15E8   (0x0008)  
	unsigned char                                      UnknownData15_5[0x8];                                       // 0x15F0   (0x0008)  MISSED
	class UClass*                                      _firstPersonViewComponentClass;                             // 0x15F8   (0x0008)  
	class UFirstPersonViewComponent*                   _firstPersonViewComponent;                                  // 0x1600   (0x0008)  
	class UKillerIntroComponent*                       _killerIntroComponent;                                      // 0x1608   (0x0008)  
	class UKillerBlindingFXComponent*                  _blindingFXComponent;                                       // 0x1610   (0x0008)  
	unsigned char                                      UnknownData16_5[0x8];                                       // 0x1618   (0x0008)  MISSED
	class UKillerRedStainUpdateStrategy*               _redStainUpdateStrategy;                                    // 0x1620   (0x0008)  
	FName                                              _squishFactorParameter;                                     // 0x1628   (0x000C)  
	unsigned char                                      UnknownData17_5[0x4];                                       // 0x1634   (0x0004)  MISSED
	class USceneComponent*                             _attackZonePivot;                                           // 0x1638   (0x0008)  
	class USlasherStunnableComponent*                  _slasherStunnableComponent;                                 // 0x1640   (0x0008)  
	bool                                               _forceThirdPersonAnimations;                                // 0x1648   (0x0001)  
	unsigned char                                      UnknownData18_6[0x7];                                       // 0x1649   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SlasherPlayer.WasRecentlyCloaked
	// bool WasRecentlyCloaked();                                                                                            // [0x58ff9d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.UpdateRageTierEffect
	// void UpdateRageTierEffect(int32_t previousTier, int32_t currentTier);                                                 // [0x58ff900] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.SpawnSlasherPower
	// void SpawnSlasherPower();                                                                                             // [0x58ff8e0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.ShouldApplyBloodlustSpeedModifier
	// bool ShouldApplyBloodlustSpeedModifier();                                                                             // [0x58ff8b0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.SetSurvivorBeingKilled
	// void SetSurvivorBeingKilled(class ACamperPlayer* Survivor);                                                           // [0x58ff820] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.SetStalkTierWalkSpeedMultiplier
	// void SetStalkTierWalkSpeedMultiplier(float stalkTierWalkSpeedMultiplier);                                             // [0x58ff7a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.SetLightIntensity
	// void SetLightIntensity(float Intensity);                                                                              // [0x58ff720] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.SetIsKilling
	// void SetIsKilling(bool IsKilling);                                                                                    // [0x58ff690] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.SetIsHookingSurvivor
	// void SetIsHookingSurvivor(bool value);                                                                                // [0x58ff600] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.SetIsCloaked
	// void SetIsCloaked(bool IsCloaked, bool Forced);                                                                       // [0x58ff530] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.SetForceThirdPersonAnimations
	// void SetForceThirdPersonAnimations(bool forceThirdPerson);                                                            // [0x58ff4a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.SetCarriedCamper
	// void SetCarriedCamper(class ACamperPlayer* camper);                                                                   // [0x58ff410] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.SetAttackZonePivot
	// void SetAttackZonePivot(class USceneComponent* attackZonePivot);                                                      // [0x58ff380] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.SetAttackDetectionZoneSet
	// void SetAttackDetectionZoneSet(EAttackZoneSet attackZoneSet);                                                         // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.Server_SendAttackInput
	// void Server_SendAttackInput(bool Pressed);                                                                            // [0x58ff2f0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/DeadByDaylight.SlasherPlayer.PlayBloodHitsEffects
	// void PlayBloodHitsEffects();                                                                                          // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnSurvivorsLeftChanged
	// void OnSurvivorsLeftChanged(int32_t survivorRemaining);                                                               // [0x58ff1e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnStealthChanged
	// void OnStealthChanged(bool stealth);                                                                                  // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnStalkModeChangedEvent__DelegateSignature
	// void OnStalkModeChangedEvent__DelegateSignature(bool IsInStalkMode);                                                  // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnStalkModeChangedCosmetic
	// void OnStalkModeChangedCosmetic(bool stalkMode);                                                                      // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnStalkModeChanged
	// void OnStalkModeChanged(bool stalkMode);                                                                              // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnPerformingChargableInteraction
	// void OnPerformingChargableInteraction(float progress);                                                                // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnLoudNoiseTriggered
	// void OnLoudNoiseTriggered(class AActor* originator, class AActor* instigatingActor, FVector Location, bool shouldTrack, float& audibleRange, bool isQuickAction, bool isDeceivingNoise); // [0x58fed70] Final|Native|Private|HasOutParms|HasDefaults 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnLoudNoiseIndicatorDestroyed
	// void OnLoudNoiseIndicatorDestroyed();                                                                                 // [0x58fed50] Final|Native|Private 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnKillerAbilityUpdateActivate
	// void OnKillerAbilityUpdateActivate(EKillerAbilities killerAbility, float percent);                                    // [0x58fec60] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnKillerAbilityEndDeactivate
	// void OnKillerAbilityEndDeactivate(EKillerAbilities killerAbility, bool Forced);                                       // [0x58feb80] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnKillerAbilityEndActivate
	// void OnKillerAbilityEndActivate(EKillerAbilities killerAbility);                                                      // [0x58feb00] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnKillerAbilityBeginDeactivate
	// void OnKillerAbilityBeginDeactivate(EKillerAbilities killerAbility, bool Forced);                                     // [0x58fea20] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnKillerAbilityBeginActivate
	// void OnKillerAbilityBeginActivate(EKillerAbilities killerAbility);                                                    // [0x58fe9a0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnIsKillingSurvivorWithMoriUpdated
	// void OnIsKillingSurvivorWithMoriUpdated(bool isKillingSurvivorWithMori);                                              // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnDropCamperEnd
	// void OnDropCamperEnd(class ADBDPlayer* camper);                                                                       // [0x58fe910] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnCamperHit
	// void OnCamperHit(class ACamperPlayer* camper);                                                                        // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnAttackStart
	// void OnAttackStart(EAttackType attackType);                                                                           // [0x58fe890] Final|Native|Private 
	// Function /Script/DeadByDaylight.SlasherPlayer.OnAttackFinish
	// void OnAttackFinish(EAttackType attackType);                                                                          // [0x58fe810] Final|Native|Private 
	// Function /Script/DeadByDaylight.SlasherPlayer.Multicast_MergeLockOnDamageZones
	// void Multicast_MergeLockOnDamageZones(bool enable);                                                                   // [0x58fe670] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.SlasherPlayer.Multicast_DisplayAttackZones
	// void Multicast_DisplayAttackZones(bool Display);                                                                      // [0x58fe5e0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.SlasherPlayer.Multicast_Cheat_SetAttackDetectionZoneSet
	// void Multicast_Cheat_SetAttackDetectionZoneSet(EAttackZoneSet attackZoneSet);                                         // [0x58fe560] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/DeadByDaylight.SlasherPlayer.MergeLockOnDamageZones
	// void MergeLockOnDamageZones(bool enable);                                                                             // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.Local_CancelAttack
	// bool Local_CancelAttack();                                                                                            // [0x58fe530] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsUncloaking
	// bool IsUncloaking();                                                                                                  // [0x58fe500] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsStunned
	// bool IsStunned();                                                                                                     // [0x58fe4d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsOfferingAllowingKill
	// bool IsOfferingAllowingKill(class ACamperPlayer* camper);                                                             // [0x58fe430] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsKilling
	// bool IsKilling();                                                                                                     // [0x58fe400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsInterruptBlocked
	// bool IsInterruptBlocked();                                                                                            // [0x58fe3d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsImmuneToObservingPlayerDetection
	// bool IsImmuneToObservingPlayerDetection(class ADBDPlayer* observingPlayer);                                           // [0x58fe330] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsIdling
	// bool IsIdling();                                                                                                      // [0x58fe300] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsHooking
	// bool IsHooking();                                                                                                     // [0x58fe2d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsCrouchAvailable_BP
	// bool IsCrouchAvailable_BP();                                                                                          // [0x58fe2a0] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsCloaking
	// bool IsCloaking();                                                                                                    // [0x58fe270] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsCarrying
	// bool IsCarrying();                                                                                                    // [0x58fe240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.IsAllowedToKill
	// bool IsAllowedToKill(class ACamperPlayer* camper);                                                                    // [0x58fe1a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.IncrementInterruptBlock
	// void IncrementInterruptBlock();                                                                                       // [0x58fe180] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.HasPreLevelGenerationModifier
	// bool HasPreLevelGenerationModifier(FName modifierID);                                                                 // [0x58fe0d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.HasKillerAbility
	// bool HasKillerAbility(EKillerAbilities killerAbility);                                                                // [0x58fe040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetSurvivorBeingKilled
	// class ACamperPlayer* GetSurvivorBeingKilled();                                                                        // [0x58fe010] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetStillnessStartTime
	// FDateTime GetStillnessStartTime();                                                                                    // [0x58fdff0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetStealthRatio
	// float GetStealthRatio();                                                                                              // [0x58fdfc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetStalkTierWalkSpeedMultiplier
	// float GetStalkTierWalkSpeedMultiplier();                                                                              // [0x58fdfa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetSlasherMovement
	// class USlasherMovementComponent* GetSlasherMovement();                                                                // [0x58fdf70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetRageTier
	// int32_t GetRageTier();                                                                                                // [0x58fdf50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetPresenceTag
	// FGameplayTag GetPresenceTag();                                                                                        // [0x58fdf10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetPlayerDropOffPoint
	// FVector GetPlayerDropOffPoint();                                                                                      // [0x58fded0] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetObsessionTarget
	// class ACamperPlayer* GetObsessionTarget();                                                                            // [0x58fdea0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetLookRotation
	// FRotator GetLookRotation();                                                                                           // [0x58fde60] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetLightIntensity
	// float GetLightIntensity();                                                                                            // [0x58fde40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetKillerCarryAnimWeight
	// EKillerCarryAnimWeight GetKillerCarryAnimWeight();                                                                    // [0x58fde10] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetIsForceThirdPersonAnimations
	// bool GetIsForceThirdPersonAnimations();                                                                               // [0x58fdde0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetIsAttacking
	// bool GetIsAttacking();                                                                                                // [0x58fddb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetCurrentRotationYaw
	// float GetCurrentRotationYaw();                                                                                        // [0x58fdd80] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetChaserCharacterComponent
	// class UChaserCharacterComponent* GetChaserCharacterComponent();                                                       // [0x57e7300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetCharacterCustomAnimTags
	// TArray<FName> GetCharacterCustomAnimTags();                                                                           // [0x61d2f50] Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetCarriedCamper
	// class ACamperPlayer* GetCarriedCamper();                                                                              // [0x58fdd50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetBlindedPercent
	// float GetBlindedPercent();                                                                                            // [0x58fdd20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.GetAnimDirection
	// float GetAnimDirection();                                                                                             // [0x58fdcc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.DisplayAttackZones
	// void DisplayAttackZones(bool Display);                                                                                // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.DecrementInterruptBlock
	// void DecrementInterruptBlock();                                                                                       // [0x58fdc20] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.DBD_SetAttackZones
	// void DBD_SetAttackZones(EAttackZoneSet attackZoneSet);                                                                // [0x58fdba0] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.SlasherPlayer.DBD_MergeLockOnDamageZones
	// void DBD_MergeLockOnDamageZones(bool enable);                                                                         // [0x58fdb10] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.SlasherPlayer.DBD_DisplayAttackZones
	// void DBD_DisplayAttackZones(bool Display);                                                                            // [0x58fda80] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.SlasherPlayer.DBD_AllowKilling
	// void DBD_AllowKilling();                                                                                              // [0x58fda60] Final|Exec|Native|Public 
	// Function /Script/DeadByDaylight.SlasherPlayer.Cosmetic_OnPickUpEnd
	// void Cosmetic_OnPickUpEnd();                                                                                          // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.Cosmetic_OnDropCamperEnd
	// void Cosmetic_OnDropCamperEnd();                                                                                      // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.Cosmetic_OnCancelCarry
	// void Cosmetic_OnCancelCarry();                                                                                        // [0x61d2f50] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.SlasherPlayer.Client_RequestStun
	// void Client_RequestStun(EStunType stunType, class ADBDPlayer* stunner);                                               // [0x58fd990] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/DeadByDaylight.SlasherPlayer.CanSlashAttack_BP
	// bool CanSlashAttack_BP();                                                                                             // [0x58fd930] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.CanPickupSurvivor
	// bool CanPickupSurvivor();                                                                                             // [0x58fd900] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.CanPerformKillerAbility
	// bool CanPerformKillerAbility(EKillerAbilities killerAbility);                                                         // [0x58fd870] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.CanGainRage
	// bool CanGainRage();                                                                                                   // [0x58fd840] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.CancelAttackByInput
	// bool CancelAttackByInput();                                                                                           // [0x58fd960] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.CanAttack_BP
	// bool CanAttack_BP(EAttackType attackType);                                                                            // [0x58fd7b0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.CanAttack
	// bool CanAttack(EAttackType attackType);                                                                               // [0x58fd720] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.CanAffectLocalPlayer
	// bool CanAffectLocalPlayer();                                                                                          // [0x49dc320] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.BroadcastOnInstantTeleport
	// void BroadcastOnInstantTeleport();                                                                                    // [0x58fd6e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.BroadcastOffensiveAction
	// void BroadcastOffensiveAction();                                                                                      // [0x58fd6c0] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/DeadByDaylight.SlasherPlayer.Authority_SetInStalkMode
	// void Authority_SetInStalkMode(bool stalkMode, bool Forced);                                                           // [0x58fd5e0] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SlasherPlayer.Authority_AllowKilling
	// void Authority_AllowKilling(int32_t numKills);                                                                        // [0x58fd550] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.SlasherStateMachine
/// Size: 0x0000 (0x000130 - 0x000130)
class USlasherStateMachine : public UPlayerStateMachine
{ 
public:
};

/// Class /Script/DeadByDaylight.SlasherStunnableComponent
/// Size: 0x0040 (0x0000B8 - 0x0000F8)
class USlasherStunnableComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x00B8   (0x0040)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SlasherStunnableComponent.Server_NotifyStunHasBeenProcessed
	// void Server_NotifyStunHasBeenProcessed();                                                                             // [0x4dd4860] Net|NetReliableNative|Event|Public|NetServer 
};

/// Class /Script/DeadByDaylight.SoftBanManager
/// Size: 0x0040 (0x000030 - 0x000070)
class USoftBanManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x0030   (0x0040)  MISSED
};

/// Class /Script/DeadByDaylight.SpawnElement
/// Size: 0x0000 (0x000030 - 0x000030)
class USpawnElement : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.SpawnElementTrackerComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class USpawnElementTrackerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B8   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.SpecialBehaviourGameplaySpawnerComponent
/// Size: 0x0000 (0x0000F0 - 0x0000F0)
class USpecialBehaviourGameplaySpawnerComponent : public UGameplaySpawnerComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.SpecialEventCustomizationsComponent
/// Size: 0x0110 (0x000030 - 0x000140)
class USpecialEventCustomizationsComponent : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x110];                                     // 0x0030   (0x0110)  MISSED
};

/// Class /Script/DeadByDaylight.SpecialEventGameplaySpawnerComponent
/// Size: 0x0000 (0x0000F0 - 0x0000F0)
class USpecialEventGameplaySpawnerComponent : public UGameplaySpawnerComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.SpecialEventLoadingScreen
/// Size: 0x0018 (0x000120 - 0x000138)
class USpecialEventLoadingScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0120   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SpecialEventLoadingScreen.OnLoadingTextTimerComplete
	// void OnLoadingTextTimerComplete();                                                                                    // [0x57bc860] Final|Native|Public|Const 
};

/// Class /Script/DeadByDaylight.specialeventmanager
/// Size: 0x04F8 (0x000030 - 0x000528)
class Uspecialeventmanager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x80];                                      // 0x0030   (0x0080)  MISSED
	class USpecialEventsContainer*                     _eventsContainer;                                           // 0x00B0   (0x0008)  
	class USpecialEventCustomizationsComponent*        _customizationsComponent;                                   // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x468];                                     // 0x00C0   (0x0468)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.specialeventmanager.GetTimeTillPostEndDate
	// FTimespan GetTimeTillPostEndDate(FCombinedSpecialEventData& SpecialEventData);                                        // [0x59057f0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetTimeTillMainEndDate
	// FTimespan GetTimeTillMainEndDate(FCombinedSpecialEventData& SpecialEventData);                                        // [0x5905690] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetTimeSinceStartDate
	// FTimespan GetTimeSinceStartDate(FCombinedSpecialEventData& SpecialEventData);                                         // [0x5905530] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetStatus
	// ESpecialEventStatus GetStatus(FCombinedSpecialEventData& SpecialEventData);                                           // [0x59053d0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetStartDate
	// FDateTime GetStartDate(FCombinedSpecialEventData& SpecialEventData);                                                  // [0x5905270] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetSpecialEvent
	// bool GetSpecialEvent(class UObject* WorldContextObject, FName eventID, FCombinedSpecialEventData& outSpecialEventData); // [0x5905080] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetPostEndDate
	// FDateTime GetPostEndDate(FCombinedSpecialEventData& SpecialEventData);                                                // [0x5904f20] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetMainEndDate
	// FDateTime GetMainEndDate(FCombinedSpecialEventData& SpecialEventData);                                                // [0x5904dc0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetEventTimeTillPostEndDate
	// bool GetEventTimeTillPostEndDate(FString eventID, FTimespan& outDate);                                                // [0x5904cd0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetEventTimeTillMainEndDate
	// bool GetEventTimeTillMainEndDate(FString eventID, FTimespan& outDate);                                                // [0x5904be0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetEventTimeSinceStartDate
	// bool GetEventTimeSinceStartDate(FString eventID, FTimespan& outDate);                                                 // [0x5904af0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetEventStartDate
	// bool GetEventStartDate(FString eventID, FDateTime& outDate);                                                          // [0x5904a00] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetEventPostEndDate
	// bool GetEventPostEndDate(FString eventID, FDateTime& outDate);                                                        // [0x5904910] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetEventMainEndDate
	// bool GetEventMainEndDate(FString eventID, FDateTime& outDate);                                                        // [0x5904820] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetCurrentSpecialEvent
	// bool GetCurrentSpecialEvent(class UObject* WorldContextObject, FCombinedSpecialEventData& outSpecialEventData);       // [0x5904680] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.specialeventmanager.GetCurrentMainSpecialEvent
	// bool GetCurrentMainSpecialEvent(class UObject* WorldContextObject, FCombinedSpecialEventData& outSpecialEventData);   // [0x59044e0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.SpecialEventsContainer
/// Size: 0x0278 (0x000030 - 0x0002A8)
class USpecialEventsContainer : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x278];                                     // 0x0030   (0x0278)  MISSED
};

/// Class /Script/DeadByDaylight.SplashScreen
/// Size: 0x0018 (0x000120 - 0x000138)
class USplashScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0120   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SplashScreen.UpdateLoadingProgression
	// void UpdateLoadingProgression(FString loadingProgression);                                                            // [0x590cd10] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.SplashScreen.ShowSpecialEventVisual
	// void ShowSpecialEventVisual(FSpecialEventUIInfo& EventInfo);                                                          // [0x590cbe0] Final|Native|Public|HasOutParms|Const 
	// Function /Script/DeadByDaylight.SplashScreen.ShowSaveGamePopup
	// void ShowSaveGamePopup();                                                                                             // [0x590cbc0] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.SplashScreen.ShowPressKeyState
	// void ShowPressKeyState();                                                                                             // [0x590cba0] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.SplashScreen.ShowLoadingState
	// void ShowLoadingState();                                                                                              // [0x590cb80] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.SplashScreen.SetVersionText
	// void SetVersionText(FString versionText);                                                                             // [0x590cab0] Final|Native|Public|Const 
	// Function /Script/DeadByDaylight.SplashScreen.OnSaveGamePopupComplete
	// void OnSaveGamePopupComplete();                                                                                       // [0x57bc860] Final|Native|Protected 
	// Function /Script/DeadByDaylight.SplashScreen.HidePressKeyState
	// void HidePressKeyState();                                                                                             // [0x590c060] Final|Native|Public|Const 
};

/// Class /Script/DeadByDaylight.SpringArmCameraTargetingStrategy
/// Size: 0x0000 (0x000050 - 0x000050)
class USpringArmCameraTargetingStrategy : public UBaseCameraTargetingStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.StalkedComponent
/// Size: 0x0078 (0x0000B8 - 0x000130)
class UStalkedComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2309) /* FMulticastInlineDelegate */ __um(OnBeingStalkedChanged);                             // 0x00B8   (0x0010)  
	float                                              _maxStalkPoints;                                            // 0x00C8   (0x0004)  
	bool                                               _stalkableWhileSightingStalker;                             // 0x00CC   (0x0001)  
	bool                                               _isBeingStalked;                                            // 0x00CD   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x00CE   (0x0002)  MISSED
	class UChargeableComponent*                        _stalkPointsChargeable;                                     // 0x00D0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x58];                                      // 0x00D8   (0x0058)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.StalkedComponent.OnRep_MaxStalkPoints
	// void OnRep_MaxStalkPoints();                                                                                          // [0x590c5e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.StalkedComponent.OnRep_IsBeingStalked
	// void OnRep_IsBeingStalked();                                                                                          // [0x590c5c0] Final|Native|Private 
	// Function /Script/DeadByDaylight.StalkedComponent.OnBeingStalkedChanged__DelegateSignature
	// void OnBeingStalkedChanged__DelegateSignature(bool isBeingStalked);                                                   // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.StalkedComponent.HasStalkPoints
	// bool HasStalkPoints();                                                                                                // [0x590bf30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.StalkerComponent
/// Size: 0x0078 (0x0000B8 - 0x000130)
class UStalkerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x00B8   (0x0028)  MISSED
	bool                                               _distributeStalkRate;                                       // 0x00E0   (0x0001)  
	bool                                               _canStalkWhileInChase;                                      // 0x00E1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x00E2   (0x0006)  MISSED
	TArray<class UStalkedComponent*>                   _playerStalkedComponents;                                   // 0x00E8   (0x0010)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x00F8   (0x0010)  MISSED
	class UChargeableComponent*                        _stalkPointsChargeable;                                     // 0x0108   (0x0008)  
	unsigned char                                      UnknownData03_6[0x20];                                      // 0x0110   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.StalkerComponent.OnStalkPointsAdded__DelegateSignature
	// void OnStalkPointsAdded__DelegateSignature(float stalkPoints);                                                        // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.StalkerComponent.OnPlayerBeingStalkedChanged
	// void OnPlayerBeingStalkedChanged(bool isBeingStalked);                                                                // [0x590c530] Final|Native|Private 
	// Function /Script/DeadByDaylight.StalkerComponent.IsStalkingSomeone
	// bool IsStalkingSomeone();                                                                                             // [0x590c300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StalkerComponent.HasMaxStalkPoints
	// bool HasMaxStalkPoints();                                                                                             // [0x590bf00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StalkerComponent.GetTotalStalkingPoints
	// float GetTotalStalkingPoints();                                                                                       // [0x590bdb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StalkerComponent.GetScoreMultiplier
	// float GetScoreMultiplier();                                                                                           // [0x590bd40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StalkerComponent.GetPercentStalkingPoints
	// float GetPercentStalkingPoints();                                                                                     // [0x590bd10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StalkerComponent.GetMaxStalkingPoints
	// float GetMaxStalkingPoints();                                                                                         // [0x590bcc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.StalkerComponent.CanStalk
	// bool CanStalk();                                                                                                      // [0x590b980] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.StandDisplayable
/// Size: 0x0000 (0x000030 - 0x000030)
class UStandDisplayable : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.StartLitActivationTimerRemainingCooldownElapsedIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UStartLitActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.DBDLogo
/// Size: 0x0000 (0x000230 - 0x000230)
class ADBDLogo : public AActor
{ 
public:
};

/// Class /Script/DeadByDaylight.StartScreenBase
/// Size: 0x0000 (0x000238 - 0x000238)
class AStartScreenBase : public ALevelScriptActor
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.StartScreenBase.TravelToMenu
	// void TravelToMenu();                                                                                                  // [0x590ccf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.StartScreenBase.BeginDestroyTravelSequence
	// void BeginDestroyTravelSequence();                                                                                    // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.StartupInitializerInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UStartupInitializerInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.StateSpeedCurveApplier
/// Size: 0x0108 (0x0000B8 - 0x0001C0)
class UStateSpeedCurveApplier : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x108];                                     // 0x00B8   (0x0108)  MISSED
};

/// Class /Script/DeadByDaylight.StateTagUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UStateTagUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.StateTagUtilities.RemoveStateTagToPlayer
	// void RemoveStateTagToPlayer(class ADBDPlayer* Player, FGameplayTag Tag);                                              // [0x590c800] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.StateTagUtilities.RemoveStateTag
	// void RemoveStateTag(TScriptInterface<Class> ObjectStateProvider, FGameplayTag Tag);                                   // [0x590c710] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.StateTagUtilities.InteractionHasStateTag
	// bool InteractionHasStateTag(class UInteractionDefinition* Interaction, FGameplayTag Tag);                             // [0x590c100] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.StateTagUtilities.HasStateTag
	// bool HasStateTag(TScriptInterface<Class> ObjectStateProvider, FGameplayTag Tag);                                      // [0x590bf60] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.StateTagUtilities.HasAnyStateTags
	// bool HasAnyStateTags(TScriptInterface<Class> ObjectStateProvider, FGameplayTagContainer& Tags);                       // [0x590bde0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.StateTagUtilities.CurrentInteractionHasStateTag
	// bool CurrentInteractionHasStateTag(class ADBDPlayer* Player, FGameplayTag Tag);                                       // [0x590bab0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.StateTagUtilities.CurrentInteractionHasAnyStateTag
	// bool CurrentInteractionHasAnyStateTag(class ADBDPlayer* Player, FGameplayTagContainer& Tags);                         // [0x590b9b0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.StateTagUtilities.AddStateTagToPlayer
	// void AddStateTagToPlayer(class ADBDPlayer* Player, FGameplayTag Tag);                                                 // [0x590b4f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.StateTagUtilities.AddStateTag
	// void AddStateTag(TScriptInterface<Class> ObjectStateProvider, FGameplayTag Tag);                                      // [0x590b400] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.StationaryPointLightComponent
/// Size: 0x0000 (0x000400 - 0x000400)
class UStationaryPointLightComponent : public UPointLightComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.StationarySpotLightComponent
/// Size: 0x0000 (0x000430 - 0x000430)
class UStationarySpotLightComponent : public USpotLightComponent
{ 
public:
};

/// Class /Script/DeadByDaylight.StatusEffectCollectionComponent
/// Size: 0x0038 (0x0000B8 - 0x0000F0)
class UStatusEffectCollectionComponent : public UActorComponent
{ 
public:
	TArray<class UStatusEffect*>                       _array;                                                     // 0x00B8   (0x0010)  
	TArray<class UStatusEffect*>                       _local_oldArray;                                            // 0x00C8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x00D8   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.StatusEffectCollectionComponent.OnRep_Array
	// void OnRep_Array();                                                                                                   // [0x5911560] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.StatusEffectDataAsset
/// Size: 0x0000 (0x000088 - 0x000088)
class UStatusEffectDataAsset : public UGameplayModifierContainerDataAsset
{ 
public:
};

/// Class /Script/DeadByDaylight.StatusView
/// Size: 0x0070 (0x000230 - 0x0002A0)
class AStatusView : public AActor
{ 
public:
	bool                                               _isActive;                                                  // 0x0230   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0231   (0x0003)  MISSED
	int32_t                                            _level;                                                     // 0x0234   (0x0004)  
	float                                              _percentageFill;                                            // 0x0238   (0x0004)  
	bool                                               _isClockwiseTimer;                                          // 0x023C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x5B];                                      // 0x023D   (0x005B)  MISSED
	class ADBDPlayer*                                  _localDBDPlayer;                                            // 0x0298   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.StatusView.ResetView
	// void ResetView(class ADBDPlayer* DBDPlayer);                                                                          // [0x5911580] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.StatusView.FireNotification
	// void FireNotification(FStatusViewSource StatusViewSource);                                                            // [0x59114a0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.SteamProfileDAL
/// Size: 0x0000 (0x000088 - 0x000088)
class USteamProfileDAL : public UPlayerProfileDAL
{ 
public:
};

/// Class /Script/DeadByDaylight.StoreCollectionsSubsystem
/// Size: 0x0030 (0x000038 - 0x000068)
class UStoreCollectionsSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0038   (0x0030)  MISSED
};

/// Class /Script/DeadByDaylight.StoreControllerSubsystem
/// Size: 0x0008 (0x000038 - 0x000040)
class UStoreControllerSubsystem : public UGameInstanceSubsystem
{ 
public:
	class UStoreDisplayStandController*                _displayStandController;                                    // 0x0038   (0x0008)  
};

/// Class /Script/DeadByDaylight.StoreDisplayStandController
/// Size: 0x0000 (0x000190 - 0x000190)
class UStoreDisplayStandController : public UDisplayStandController
{ 
public:
};

/// Class /Script/DeadByDaylight.StorefrontConfiguration
/// Size: 0x0050 (0x000038 - 0x000088)
class UStorefrontConfiguration : public UDataAsset
{ 
public:
	SDK_UNDEFINED(80,2310) /* TMap<EStorefrontState, FStorefrontStateData> */ __um(States);                        // 0x0038   (0x0050)  
};

/// Class /Script/DeadByDaylight.StorePurchasingPopupHandler
/// Size: 0x0008 (0x000038 - 0x000040)
class UStorePurchasingPopupHandler : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.StoreRecommendationSubsystem
/// Size: 0x0058 (0x000038 - 0x000090)
class UStoreRecommendationSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0038   (0x0050)  MISSED
	class URemoteContentCacheSubsystem*                _remoteContentCacheSubsystem;                               // 0x0088   (0x0008)  
};

/// Class /Script/DeadByDaylight.StoreScreen
/// Size: 0x0260 (0x000120 - 0x000380)
class UStoreScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x260];                                     // 0x0120   (0x0260)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.StoreScreen.OnUnlockWithCurrency
	// void OnUnlockWithCurrency(int32_t currencyId, FString combinedItem);                                                  // [0x5917ea0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnUnlockPack
	// void OnUnlockPack(FString PackId);                                                                                    // [0x5917e00] Final|Native|Protected|Const 
	// Function /Script/DeadByDaylight.StoreScreen.OnUnlockDlc
	// void OnUnlockDlc(FString DLCId);                                                                                      // [0x5917d60] Final|Native|Protected|Const 
	// Function /Script/DeadByDaylight.StoreScreen.OnTabSelected
	// void OnTabSelected(int32_t index);                                                                                    // [0x58cca20] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnStorySelected
	// void OnStorySelected();                                                                                               // [0x5917d20] Final|Native|Protected|Const 
	// Function /Script/DeadByDaylight.StoreScreen.OnStoreItemSelected
	// void OnStoreItemSelected(FString ItemId);                                                                             // [0x5917c80] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnStoreItemLinkSelected
	// void OnStoreItemLinkSelected(FString ItemId);                                                                         // [0x5917be0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnStoreCharacterSelected
	// void OnStoreCharacterSelected(int32_t CharacterIndex);                                                                // [0x58bcdf0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnStoreCatalogCategorySelected
	// void OnStoreCatalogCategorySelected(int32_t categoryIndex);                                                           // [0x5917b50] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnSearchInputChanged
	// void OnSearchInputChanged(FString searchInput);                                                                       // [0x5917a90] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnRotateCharacter
	// void OnRotateCharacter(float mouseDistanceChange);                                                                    // [0x5917a10] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnPromoCodeButtonClicked
	// void OnPromoCodeButtonClicked();                                                                                      // [0x58bc3e0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnPlayMoriSelected
	// void OnPlayMoriSelected();                                                                                            // [0x59179f0] Final|Native|Protected|Const 
	// Function /Script/DeadByDaylight.StoreScreen.OnNotEnoughTokens
	// void OnNotEnoughTokens();                                                                                             // [0x58122c0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnMarketSlotButtonClick
	// void OnMarketSlotButtonClick(int32_t slotIndex);                                                                      // [0x58b3940] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnFiltersUpdated
	// void OnFiltersUpdated(bool All, bool rarityCommon, bool rarityUncommon, bool rarityRare, bool rarityVeryRare, bool rarityUltraRare, bool rarityArtifact, bool rarityLegendary, bool raritySpecialEvent, bool includeAllOwnedItems); // [0x59175b0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnFeaturedStoreItemSelected
	// void OnFeaturedStoreItemSelected(FString ItemId, bool IsOutfit);                                                      // [0x59174d0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnFeaturedCharacterSelected
	// void OnFeaturedCharacterSelected(int32_t CharacterIndex);                                                             // [0x58cc310] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnFeaturedButtonSelected
	// void OnFeaturedButtonSelected(int32_t linkIndex);                                                                     // [0x5917440] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnFeaturedBannerPackSelected
	// void OnFeaturedBannerPackSelected(FString PackId);                                                                    // [0x587d2e0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnFeaturedBannerItemSelected
	// void OnFeaturedBannerItemSelected(FString ItemId, bool IsOutfit);                                                     // [0x5917360] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnFeaturedBannerDlcSelected
	// void OnFeaturedBannerDlcSelected(FString DLCId);                                                                      // [0x587d420] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnEquipItem
	// void OnEquipItem(FString ItemId);                                                                                     // [0x59172c0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.StoreScreen.OnCatalogSelected
	// void OnCatalogSelected();                                                                                             // [0x5917260] Final|Native|Protected|Const 
	// Function /Script/DeadByDaylight.StoreScreen.OnBuyCurrencyBundle
	// void OnBuyCurrencyBundle(int32_t index);                                                                              // [0x59171d0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.StoreSpecialPackSubsystem
/// Size: 0x0050 (0x000038 - 0x000088)
class UStoreSpecialPackSubsystem : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0038   (0x0050)  MISSED
};

/// Class /Script/DeadByDaylight.StreamVideoFactory
/// Size: 0x0000 (0x000030 - 0x000030)
class UStreamVideoFactory : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.StreamVideoManager
/// Size: 0x00C0 (0x000030 - 0x0000F0)
class UStreamVideoManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xC0];                                      // 0x0030   (0x00C0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.StreamVideoManager.OnStreamVideoDone
	// void OnStreamVideoDone();                                                                                             // [0x5917d40] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.StreamVideoPlayer
/// Size: 0x00B0 (0x000230 - 0x0002E0)
class AStreamVideoPlayer : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0230   (0x0050)  MISSED
	class UMediaPlayer*                                MediaPlayer;                                                // 0x0280   (0x0008)  
	class UMediaSoundComponent*                        SoundComponent;                                             // 0x0288   (0x0008)  
	class UUMGStreamVideoWidget*                       StreamVideoWidget;                                          // 0x0290   (0x0008)  
	class UStreamMediaSource*                          StreamMediaSource;                                          // 0x0298   (0x0008)  
	class UAudioComponent*                             _audioComponent;                                            // 0x02A0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x38];                                      // 0x02A8   (0x0038)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.StreamVideoPlayer.OnVideoAssetLoaded
	// void OnVideoAssetLoaded();                                                                                            // [0x5917f80] Final|Native|Private 
	// Function /Script/DeadByDaylight.StreamVideoPlayer.OnSkipButtonTriggered
	// void OnSkipButtonTriggered();                                                                                         // [0x5917b30] Final|Native|Private 
	// Function /Script/DeadByDaylight.StreamVideoPlayer.OnMediaOpened
	// void OnMediaOpened(FString OpenedUrl);                                                                                // [0x5917900] Final|Native|Private 
	// Function /Script/DeadByDaylight.StreamVideoPlayer.OnMediaClosed
	// void OnMediaClosed();                                                                                                 // [0x59178e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.StreamVideoPlayer.OnEndReached
	// void OnEndReached();                                                                                                  // [0x59172a0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.StreamVideoScreenUMG
/// Size: 0x0020 (0x000120 - 0x000140)
class UStreamVideoScreenUMG : public UScreenBase
{ 
public:
	class UStreamVideoManager*                         _streamVideoManager;                                        // 0x0120   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0128   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.StreamVideoScreenUMG.OnCloseTriggered
	// void OnCloseTriggered();                                                                                              // [0x5917280] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.StreamVideoSubsystem
/// Size: 0x0010 (0x000038 - 0x000048)
class UStreamVideoSubsystem : public UGameInstanceSubsystem
{ 
public:
	class UStreamVideoManager*                         StreamVideoManager;                                         // 0x0038   (0x0008)  
	class UStreamVideoFactory*                         StreamVideoFactory;                                         // 0x0040   (0x0008)  
};

/// Class /Script/DeadByDaylight.StunnableInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UStunnableInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.SubscriptionRewardDataAsset
/// Size: 0x0050 (0x000038 - 0x000088)
class USubscriptionRewardDataAsset : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,2311) /* TMap<ESubscriptionRewardType, FSubscriptionRewardTypeData> */ __um(Data);            // 0x0038   (0x0050)  
};

/// Class /Script/DeadByDaylight.SubtitlesManager
/// Size: 0x00A8 (0x000038 - 0x0000E0)
class USubtitlesManager : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0xA8];                                      // 0x0038   (0x00A8)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SubtitlesManager.RecordAnimNotifyPlayedForThisMatch
	// void RecordAnimNotifyPlayedForThisMatch(FString AnimNotify);                                                          // [0x591d270] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SubtitlesManager.PostAkEventWithSubtitles
	// int32_t PostAkEventWithSubtitles(class UAkGameObject* Target, TArray<FAkEventWithSubtitle>& akEventRandomizer, float maxSubtitleDistance, int32_t CallbackMask, FDelegateProperty& PostEventCallback, TArray<FAkExternalSourceInfo>& ExternalSources, class UAkAudioEvent*& akEventPlayed); // [0x591cf80] Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.SubtitlesManager.Post2DAkEventWithSubtitles
	// int32_t Post2DAkEventWithSubtitles(TArray<FAkEventWithSubtitle>& akEventRandomizer, class UAkAudioEvent*& akEventPlayed); // [0x591ce50] Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.SubtitlesManager.On3DEventFinished
	// void On3DEventFinished(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);                            // [0x591c850] Final|Native|Private 
	// Function /Script/DeadByDaylight.SubtitlesManager.IsDebuggingSubtitles
	// bool IsDebuggingSubtitles();                                                                                          // [0x591c420] Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.SubtitlesManager.HasAnimNotifyPlayedForThisMatch
	// bool HasAnimNotifyPlayedForThisMatch(FString AnimNotify);                                                             // [0x591c1c0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.SupplyCrateAnimInstance
/// Size: 0x0010 (0x0002D0 - 0x0002E0)
class USupplyCrateAnimInstance : public USleepingAnimInstance
{ 
public:
	class ASupplyCrateInteractable*                    _owningSupplyCrate;                                         // 0x02D0   (0x0008)  
	bool                                               _isOpen;                                                    // 0x02D8   (0x0001)  
	bool                                               _isBeingPriedOpen;                                          // 0x02D9   (0x0001)  
	bool                                               _isAutoClosing;                                             // 0x02DA   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x02DB   (0x0005)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SupplyCrateAnimInstance.OnBeingPriedOpenStopped
	// void OnBeingPriedOpenStopped();                                                                                       // [0x591c9b0] Final|Native|Private 
	// Function /Script/DeadByDaylight.SupplyCrateAnimInstance.OnBeingPriedOpenStarted
	// void OnBeingPriedOpenStarted(class ADBDPlayer* Player);                                                               // [0x591c920] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.SupplyCrateInteractable
/// Size: 0x0118 (0x000338 - 0x000450)
class ASupplyCrateInteractable : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0338   (0x0038)  MISSED
	class UChargeableComponent*                        _chargeableComponent;                                       // 0x0370   (0x0008)  
	class UClass*                                      _containedCollectable;                                      // 0x0378   (0x0008)  
	FDBDTunableRowHandle                               _openInteractionSecondsToCharge;                            // 0x0380   (0x0028)  
	class ACollectable*                                _itemInSupplyCrate;                                         // 0x03A8   (0x0008)  
	class USceneComponent*                             _containingItemSpawnPoint;                                  // 0x03B0   (0x0008)  
	class USceneComponent*                             _itemDropPoint;                                             // 0x03B8   (0x0008)  
	bool                                               _isOpen;                                                    // 0x03C0   (0x0001)  
	bool                                               _isAutoClosing;                                             // 0x03C1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3E];                                      // 0x03C2   (0x003E)  MISSED
	FDBDTunableRowHandle                               _crateSelfClosingTime;                                      // 0x0400   (0x0028)  
	FDBDTunableRowHandle                               _crateAutoCloseAnimationTime;                               // 0x0428   (0x0028)  


	/// Functions
	// Function /Script/DeadByDaylight.SupplyCrateInteractable.OnRep_IsOpen
	// void OnRep_IsOpen();                                                                                                  // [0x591ce10] Final|Native|Private 
	// Function /Script/DeadByDaylight.SupplyCrateInteractable.OnRep_IsAutoClosing
	// void OnRep_IsAutoClosing();                                                                                           // [0x591cdf0] Final|Native|Private 
	// Function /Script/DeadByDaylight.SupplyCrateInteractable.OnIsOpened
	// void OnIsOpened();                                                                                                    // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.SupplyCrateInteractable.OnIsClosing
	// void OnIsClosing();                                                                                                   // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.SurveillancePerk
/// Size: 0x0008 (0x0003C8 - 0x0003D0)
class USurveillancePerk : public UPerk
{ 
public:
	float                                              generatorRegressionStopRevealTime;                          // 0x03C8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x03CC   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SurveillancePerk.HandleGeneratorIsDamagedChanged
	// void HandleGeneratorIsDamagedChanged(class AGenerator* Generator, class ADBDPlayer* Player);                          // [0x591bfe0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.SurviveTimerScoreEventComponent
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class USurviveTimerScoreEventComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x00B8   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SurviveTimerScoreEventComponent.Authority_OnGameStarted
	// void Authority_OnGameStarted();                                                                                       // [0x591bb10] Final|Native|Private 
};

/// Struct /Script/DeadByDaylight.SurvivorActivity
/// Size: 0x0028 (0x000000 - 0x000028)
struct FSurvivorActivity
{ 
	bool                                               ShouldDisplayProgress;                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<FGameplayTag>                               TagsAssociatedWithAction;                                   // 0x0008   (0x0010)  
	FGameplayTag                                       ActivityType;                                               // 0x0018   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.SurvivorActivityData
/// Size: 0x0010 (0x000038 - 0x000048)
class USurvivorActivityData : public UDataAsset
{ 
public:
	TArray<FSurvivorActivity>                          _allPossibleActivities;                                     // 0x0038   (0x0010)  
};

/// Class /Script/DeadByDaylight.SurvivorActivityIndicatorComponent
/// Size: 0x0158 (0x0000B8 - 0x000210)
class USurvivorActivityIndicatorComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0xB8];                                      // 0x00B8   (0x00B8)  MISSED
	class USurvivorActivityData*                       _activitiesDataAsset;                                       // 0x0170   (0x0008)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x0178   (0x0030)  MISSED
	float                                              _durationNeededToEnableUI;                                  // 0x01A8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x64];                                      // 0x01AC   (0x0064)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SurvivorActivityIndicatorComponent.OnPlayerPickedUp
	// void OnPlayerPickedUp(class ADBDPlayer* picker);                                                                      // [0x591cd60] Final|Native|Private 
	// Function /Script/DeadByDaylight.SurvivorActivityIndicatorComponent.OnPlayerDropped
	// void OnPlayerDropped();                                                                                               // [0x591cd40] Final|Native|Private 
	// Function /Script/DeadByDaylight.SurvivorActivityIndicatorComponent.OnDamageStateChanged
	// void OnDamageStateChanged(ECamperDamageState oldDamageState, ECamperDamageState CurrentDamageState);                  // [0x591caa0] Final|Native|Private 
	// Function /Script/DeadByDaylight.SurvivorActivityIndicatorComponent.OnChargeableProgressChanged
	// void OnChargeableProgressChanged(class UChargeableComponent* ChargeableComponent, float TotalPercentComplete);        // [0x591c9d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.SurvivorActivityIndicatorComponent.Multicast_OnCamperEscape
	// void Multicast_OnCamperEscape();                                                                                      // [0x4dd4860] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SurvivorActivityIndicatorComponent.HandleStartActivityIfStillInEffect
	// void HandleStartActivityIfStillInEffect(FSurvivorActivity activityViewInfo);                                          // [0x591c0b0] Final|Native|Private 
	// Function /Script/DeadByDaylight.SurvivorActivityIndicatorComponent.Authority_OnCamperEscape
	// void Authority_OnCamperEscape(FGameplayTag GameplayTag, FGameEventData& GameEventData);                               // [0x591ba00] Final|Native|Private|HasOutParms 
};

/// Class /Script/DeadByDaylight.SurvivorAtlantaTutorialLevel
/// Size: 0x0010 (0x000328 - 0x000338)
class ASurvivorAtlantaTutorialLevel : public AAtlantaTutorialLevel
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0328   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SurvivorAtlantaTutorialLevel.SetSlasherPlayer
	// void SetSlasherPlayer(class ASlasherPlayer* SlasherPlayer);                                                           // [0x591d320] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SurvivorAtlantaTutorialLevel.GetSlasherPlayer
	// class ASlasherPlayer* GetSlasherPlayer();                                                                             // [0x591bfb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorAtlantaTutorialLevel.GetSlasherAIPlayerController
	// class ADBDAIPlayerController* GetSlasherAIPlayerController();                                                         // [0x591bf80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorAtlantaTutorialLevel.GetCamperPlayer
	// class ACamperPlayer* GetCamperPlayer();                                                                               // [0x591bd00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.SurvivorAttackableComponent
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class USurvivorAttackableComponent : public UAttackableComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x00B8   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SurvivorAttackableComponent.Multicast_HitCosmetic_NonLocal
	// void Multicast_HitCosmetic_NonLocal(FPlayerHitCosmeticParams Params);                                                 // [0x591c690] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SurvivorAttackableComponent.Multicast_HitCosmetic
	// void Multicast_HitCosmetic(FPlayerHitCosmeticParams Params);                                                          // [0x591c5e0] Final|Net|NetReliableNative|Event|NetMulticast|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.SurvivorAttackableComponent.Authority_HitCosmetic
	// void Authority_HitCosmetic(class AActor* Attacker, EAttackType attackType, bool causeKO, bool IsWeaponHit);           // [0x591b8a0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.SurvivorAudioHandlerComponent
/// Size: 0x0028 (0x000148 - 0x000170)
class USurvivorAudioHandlerComponent : public UDBDPlayerAudioHandlerComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0148   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.SurvivorBloodFXComponent
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class USurvivorBloodFXComponent : public UActorComponent
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.SurvivorBloodFXComponent.SpawnBloodSpurts
	// class UNiagaraComponent* SpawnBloodSpurts();                                                                          // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.SurvivorCameraLagStrategy
/// Size: 0x0070 (0x0000B8 - 0x000128)
class USurvivorCameraLagStrategy : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x00B8   (0x0070)  MISSED
};

/// Class /Script/DeadByDaylight.SurvivorCollectableOutlineUpdateStrategy
/// Size: 0x0020 (0x0000E0 - 0x000100)
class USurvivorCollectableOutlineUpdateStrategy : public UOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       _outlineColor;                                              // 0x00E0   (0x0010)  
	FLinearColor                                       _nearlyConsumedColor;                                       // 0x00F0   (0x0010)  
};

/// Class /Script/DeadByDaylight.SurvivorDisconnectionComponent
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class USurvivorDisconnectionComponent : public UActorComponent
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.SurvivorDisconnectionComponent.Authority_OnPlayerDisconnected
	// void Authority_OnPlayerDisconnected(class ADBDPlayer* Player);                                                        // [0x591bbf0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.SurvivorHitCosmeticHandler
/// Size: 0x0030 (0x000030 - 0x000060)
class USurvivorHitCosmeticHandler : public UBaseReversibleInstantActionHandler
{ 
public:
	class UNiagaraComponent*                           _bloodSpurts;                                               // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0038   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SurvivorHitCosmeticHandler.OnMontageStarted
	// void OnMontageStarted(FAnimationMontageDescriptor animMontageID, float PlayRate);                                     // [0x591cc00] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.SurvivorHitSprintEffect
/// Size: 0x0000 (0x000350 - 0x000350)
class USurvivorHitSprintEffect : public UStatusEffect
{ 
public:
};

/// Class /Script/DeadByDaylight.SurvivorOutlineUpdateStrategy
/// Size: 0x0078 (0x0000E0 - 0x000158)
class USurvivorOutlineUpdateStrategy : public UOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       _inDangerColorForSurvivor;                                  // 0x00E0   (0x0010)  
	FLinearColor                                       _noRecoveryDyingColor;                                      // 0x00F0   (0x0010)  
	FLinearColor                                       _fullRecoveryDyingColor;                                    // 0x0100   (0x0010)  
	FLinearColor                                       _saviourColorForSurvivor;                                   // 0x0110   (0x0010)  
	FLinearColor                                       _colorForKiller;                                            // 0x0120   (0x0010)  
	class UTexture*                                    _revealedGradient;                                          // 0x0130   (0x0008)  
	class UTexture*                                    _nonRevealedGradient;                                       // 0x0138   (0x0008)  
	TArray<FGameplayTag>                               _revealToKillerDurationTags;                                // 0x0140   (0x0010)  
	float                                              _revealToKillerLingerTimer;                                 // 0x0150   (0x0004)  
	bool                                               _trappedIconActive;                                         // 0x0154   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0155   (0x0003)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.SurvivorOutlineUpdateStrategy.SetTrappedIconActive
	// void SetTrappedIconActive(bool value);                                                                                // [0x591d3b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SurvivorOutlineUpdateStrategy.IsBlockingAuraReadingFromKiller
	// bool IsBlockingAuraReadingFromKiller(class ASlasherPlayer* killer);                                                   // [0x591c360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorOutlineUpdateStrategy.IsActivelyHidingAuraFromKiller
	// bool IsActivelyHidingAuraFromKiller(class ACamperPlayer* Subject, class ASlasherPlayer* witness);                     // [0x591c290] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SurvivorOutlineUpdateStrategy.GetEffectsProtectingFromKillerAuraReading
	// TArray<UGameplayModifierContainer*> GetEffectsProtectingFromKillerAuraReading(class ACamperPlayer* Subject, class ASlasherPlayer* killer); // [0x591bd30] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.SurvivorPlagueEffect
/// Size: 0x01F8 (0x000350 - 0x000548)
class USurvivorPlagueEffect : public UStatusEffect
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0350   (0x0048)  MISSED
	float                                              _sicknessAmount;                                            // 0x0398   (0x0004)  
	float                                              _sicknessCap;                                               // 0x039C   (0x0004)  
	float                                              _vomitSlowDuration;                                         // 0x03A0   (0x0004)  
	float                                              _vomitSlowAmount;                                           // 0x03A4   (0x0004)  
	TArray<float>                                      _sicknessThresholds;                                        // 0x03A8   (0x0010)  
	bool                                               _wasRecentlyHitByVomit;                                     // 0x03B8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x03B9   (0x0007)  MISSED
	SDK_UNDEFINED(16,2312) /* TArray<FString> */       __um(_nonNauseatingInteractions);                           // 0x03C0   (0x0010)  
	unsigned char                                      UnknownData02_5[0x18];                                      // 0x03D0   (0x0018)  MISSED
	FTunableStat                                       _sicknessGainPerSecondFromInfectedInteractable;             // 0x03E8   (0x0080)  
	unsigned char                                      UnknownData03_5[0x90];                                      // 0x0468   (0x0090)  MISSED
	bool                                               _debugMode;                                                 // 0x04F8   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3F];                                      // 0x04F9   (0x003F)  MISSED
	class UClass*                                      _exposeMaximumSickSurvivorEffect;                           // 0x0538   (0x0008)  
	class UClass*                                      _brokenMaximumSickSurvivorEffect;                           // 0x0540   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.RefreshSicknessGainValues
	// void RefreshSicknessGainValues();                                                                                     // [0x591d300] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.OnSurvivorVomit_Aesthetic
	// void OnSurvivorVomit_Aesthetic();                                                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.OnSurvivorDisguisedOrUndisguised
	// void OnSurvivorDisguisedOrUndisguised(bool isDisguised);                                                              // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.OnSurvivorBecomesInfected_Aesthetic
	// void OnSurvivorBecomesInfected_Aesthetic();                                                                           // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.OnSicknessCured_Aesthetic
	// void OnSicknessCured_Aesthetic();                                                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.OnSicknessChanged_Aesthetic
	// void OnSicknessChanged_Aesthetic(float newSickness);                                                                  // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.OnRep_SicknessAmount
	// void OnRep_SicknessAmount();                                                                                          // [0x591ce30] Final|Native|Public  
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.OnMaxSicknessReached_Aesthetic
	// void OnMaxSicknessReached_Aesthetic();                                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.OnHitByVomit
	// void OnHitByVomit(bool isSuperVomit);                                                                                 // [0x591cb70] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Multicast_OnSurvivorVomit
	// void Multicast_OnSurvivorVomit();                                                                                     // [0x591c830] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Multicast_OnSurvivorBecomesInfected
	// void Multicast_OnSurvivorBecomesInfected();                                                                           // [0x591c810] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Multicast_OnSicknessCured
	// void Multicast_OnSicknessCured();                                                                                     // [0x591c7f0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Multicast_OnSicknessChanged
	// void Multicast_OnSicknessChanged(float newSickness);                                                                  // [0x591c760] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Multicast_OnMaxSicknessReached
	// void Multicast_OnMaxSicknessReached();                                                                                // [0x591c740] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Multicast_AddOnScreenDebugMessage
	// void Multicast_AddOnScreenDebugMessage(uint64_t Key, float Duration, FColor DisplayColor, FString debugMessage);      // [0x591c480] Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.IsInfected
	// bool IsInfected();                                                                                                    // [0x591c450] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.IsDebugModeActive
	// bool IsDebugModeActive();                                                                                             // [0x591c400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.HasMaxLevelSickness
	// bool HasMaxLevelSickness();                                                                                           // [0x591c260] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.GetSicknessThresholds
	// TArray<float> GetSicknessThresholds();                                                                                // [0x591bf00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.GetSicknessPercentage
	// float GetSicknessPercentage();                                                                                        // [0x591bed0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.GetSicknessLevel
	// char GetSicknessLevel();                                                                                              // [0x591bea0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.GetSicknessAmount
	// float GetSicknessAmount();                                                                                            // [0x591be70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.GetMaxSicknessLevel
	// char GetMaxSicknessLevel();                                                                                           // [0x591be40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Authority_ResetSickness
	// void Authority_ResetSickness(float newSickness);                                                                      // [0x591bc80] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Authority_OnHitByVomitProjectileAesthetic
	// void Authority_OnHitByVomitProjectileAesthetic();                                                                     // [0x591bbd0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Authority_OnHitByVomitProjectile
	// void Authority_OnHitByVomitProjectile(float sicknessToAdd);                                                           // [0x591bb50] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Authority_OnHitBySuperVomitProjectile
	// void Authority_OnHitBySuperVomitProjectile();                                                                         // [0x591bb30] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Authority_InfectInteractable
	// void Authority_InfectInteractable(class AInteractable* Interactable);                                                 // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.SurvivorPlagueEffect.Authority_AddSickness
	// void Authority_AddSickness(float sicknessToAdd);                                                                      // [0x591b820] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.SurvivorStatusInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class USurvivorStatusInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.SwitchProfileDAL
/// Size: 0x0000 (0x000088 - 0x000088)
class USwitchProfileDAL : public UPlayerProfileDAL
{ 
public:
};

/// Class /Script/DeadByDaylight.TallyScreen
/// Size: 0x00F0 (0x000120 - 0x000210)
class UTallyScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0xF0];                                      // 0x0120   (0x00F0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TallyScreen.OnSpectateButtonClick
	// void OnSpectateButtonClick();                                                                                         // [0x58122c0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TallyScreen.OnShowSlasherInfos
	// void OnShowSlasherInfos();                                                                                            // [0x58bd110] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TallyScreen.OnReportPlayerButtonClick
	// void OnReportPlayerButtonClick(FString playerID);                                                                     // [0x59218a0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TallyScreen.OnRateMatch
	// void OnRateMatch(int32_t rateValue);                                                                                  // [0x59216f0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TallyScreen.OnPlayerOptionClick
	// void OnPlayerOptionClick(FString krakenId, FString playerID, char Option);                                            // [0x59215b0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TallyScreen.OnPlayerInfoClick
	// void OnPlayerInfoClick(FString playerID);                                                                             // [0x58b33a0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TallyScreen.OnLevelingSequenceComplete
	// void OnLevelingSequenceComplete();                                                                                    // [0x58b34b0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TallyScreen.OnLeaveButtonClick
	// void OnLeaveButtonClick();                                                                                            // [0x57bc860] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TallyScreen.OnCustomerSupportButtonClick
	// void OnCustomerSupportButtonClick();                                                                                  // [0x5891ef0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TallyScreen.OnBloodwebButtonClick
	// void OnBloodwebButtonClick();                                                                                         // [0x57c42c0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.TallyUIUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UTallyUIUtilities : public UObject
{ 
public:
};

/// Class /Script/DeadByDaylight.TeachableTooltipWidget
/// Size: 0x0020 (0x000370 - 0x000390)
class UTeachableTooltipWidget : public UBaseTooltipWidget
{ 
public:
	class UTextBlock*                                  SubTitleLabel;                                              // 0x0370   (0x0008)  
	class UImage*                                      HeaderSmoke;                                                // 0x0378   (0x0008)  
	class UUMGHtmlRichText*                            EffectText;                                                 // 0x0380   (0x0008)  
	class UUMGHtmlRichText*                            AvailabilityText;                                           // 0x0388   (0x0008)  
};

/// Class /Script/DeadByDaylight.TeamworkIconStrategy
/// Size: 0x0008 (0x000038 - 0x000040)
class UTeamworkIconStrategy : public UBasePerkIconStrategy
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.TerrorRadiusIndicatorWidget
/// Size: 0x0008 (0x000380 - 0x000388)
class UTerrorRadiusIndicatorWidget : public UNoiseIndicatorWidget
{ 
public:
	float                                              _anchorY;                                                   // 0x0380   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0384   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TerrorRadiusIndicatorWidget.SetSoundDistancePercentage
	// void SetSoundDistancePercentage(float distancePercentage);                                                            // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.TickInEditorSkeletalMesh
/// Size: 0x0000 (0x0002B8 - 0x0002B8)
class ATickInEditorSkeletalMesh : public ASkeletalMeshActor
{ 
public:
};

/// Class /Script/DeadByDaylight.Tile2DataRetrievalSubsystem
/// Size: 0x0068 (0x000038 - 0x0000A0)
class UTile2DataRetrievalSubsystem : public UEngineSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x68];                                      // 0x0038   (0x0068)  MISSED
};

/// Class /Script/DeadByDaylight.TileBank
/// Size: 0x0110 (0x000030 - 0x000140)
class UTileBank : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x100];                                     // 0x0030   (0x0100)  MISSED
	TArray<class ATile*>                               _allTileBlueprints;                                         // 0x0130   (0x0010)  
};

/// Class /Script/DeadByDaylight.TileEventComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UTileEventComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B8   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.ArrayOfATile
/// Size: 0x0010 (0x000000 - 0x000010)
struct FArrayOfATile
{ 
	TArray<class ATile*>                               ArrayOfTiles;                                               // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.QuadrantInfo
/// Size: 0x0020 (0x000000 - 0x000020)
struct FQuadrantInfo
{ 
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0000   (0x0020)  MISSED
};

/// Struct /Script/DeadByDaylight.ArrayOfInt32
/// Size: 0x0010 (0x000000 - 0x000010)
struct FArrayOfInt32
{ 
	TArray<int32_t>                                    value;                                                      // 0x0000   (0x0010)  
};

/// Class /Script/DeadByDaylight.TileMatrix
/// Size: 0x0058 (0x000030 - 0x000088)
class UTileMatrix : public UObject
{ 
public:
	TArray<FArrayOfATile>                              _matrix;                                                    // 0x0030   (0x0010)  
	TArray<class ATile*>                               _tiles;                                                     // 0x0040   (0x0010)  
	TArray<class ATile*>                               _extraTiles;                                                // 0x0050   (0x0010)  
	class AActor*                                      _basementActor;                                             // 0x0060   (0x0008)  
	TArray<FQuadrantInfo>                              _quadInfoArray;                                             // 0x0068   (0x0010)  
	TArray<FArrayOfInt32>                              _quadIndexMatrix;                                           // 0x0078   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SelectableTileSpawnPoint
/// Size: 0x0030 (0x000000 - 0x000030)
struct FSelectableTileSpawnPoint
{ 
	FComponentReference                                ComponentReference;                                         // 0x0000   (0x0030)  
};

/// Class /Script/DeadByDaylight.TileSpawnPointSelector
/// Size: 0x0010 (0x000220 - 0x000230)
class UTileSpawnPointSelector : public USceneComponent
{ 
public:
	TArray<FSelectableTileSpawnPoint>                  _tileSpawnPoints;                                           // 0x0218   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0228   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.TileVisitedAnalyticsComponent
/// Size: 0x0050 (0x0000B8 - 0x000108)
class UTileVisitedAnalyticsComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x00B8   (0x0050)  MISSED
};

/// Class /Script/DeadByDaylight.TimerGate
/// Size: 0x0010 (0x000248 - 0x000258)
class ATimerGate : public AGate
{ 
public:
	float                                              _currentTime;                                               // 0x0248   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x024C   (0x000C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TimerGate.Update
	// void Update(float DeltaTime);                                                                                         // [0x59267e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TimerGate.SetValues
	// void SetValues(float TimerDuration, float RushGain, float RushBlockDuration);                                         // [0x59266c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TimerGate.Rushed
	// void Rushed(bool success);                                                                                            // [0x581c030] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TimerGate.Reset
	// void Reset();                                                                                                         // [0x5926580] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TimerGate.RemoveTime
	// void RemoveTime(float Time);                                                                                          // [0x496cad0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TimerGate.AddTime
	// void AddTime(float Time);                                                                                             // [0x496cad0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.TimerGateDecrease
/// Size: 0x0008 (0x000230 - 0x000238)
class ATimerGateDecrease : public AActor
{ 
public:
	class ATimerGate*                                  TimerGate;                                                  // 0x0230   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.TimerGateDecrease.Update
	// void Update(float DeltaTime);                                                                                         // [0x496cad0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.DBDTimeTravelManager
/// Size: 0x0070 (0x000030 - 0x0000A0)
class UDBDTimeTravelManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x0030   (0x0070)  MISSED
};

/// Class /Script/DeadByDaylight.ToastNotificationScreen
/// Size: 0x0048 (0x000120 - 0x000168)
class UToastNotificationScreen : public UScreenBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0120   (0x0048)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.ToastNotificationScreen.OnPromptSelected
	// void OnPromptSelected(int32_t notificationId);                                                                        // [0x5926380] Final|Native|Public  
	// Function /Script/DeadByDaylight.ToastNotificationScreen.OnNotificationDisplayEnd
	// void OnNotificationDisplayEnd(int32_t notificationId);                                                                // [0x59262f0] Final|Native|Public  
	// Function /Script/DeadByDaylight.ToastNotificationScreen.OnButtonSelected
	// void OnButtonSelected(int32_t buttonId, int32_t notificationId);                                                      // [0x59261a0] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.TokenCounter
/// Size: 0x0028 (0x000030 - 0x000058)
class UTokenCounter : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0030   (0x0018)  MISSED
	int32_t                                            _tokenCount;                                                // 0x0048   (0x0004)  
	int32_t                                            _maxTokenCount;                                             // 0x004C   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0050   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TokenCounter.OnRep_TokenCount
	// void OnRep_TokenCount(int32_t oldCount);                                                                              // [0x5926450] Final|Native|Private 
	// Function /Script/DeadByDaylight.TokenCounter.GetTokenCount
	// int32_t GetTokenCount();                                                                                              // [0x5925f00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TokenCounter.GetMaxTokenCount
	// int32_t GetMaxTokenCount();                                                                                           // [0x5925dc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TokenCounter.Authority_SetTokenCount
	// void Authority_SetTokenCount(int32_t value);                                                                          // [0x5925810] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TokenCounter.Authority_SetMaxTokenCount
	// void Authority_SetMaxTokenCount(int32_t value);                                                                       // [0x5925780] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TokenCounter.Authority_IncrementToken
	// void Authority_IncrementToken();                                                                                      // [0x5925720] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TokenCounter.Authority_DecrementToken
	// void Authority_DecrementToken();                                                                                      // [0x59254e0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.TokenProvider
/// Size: 0x0000 (0x000030 - 0x000030)
class UTokenProvider : public UInterface
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.TokenProvider.GetTokenProvider
	// class UTokenCounter* GetTokenProvider();                                                                              // [0x5925f30] Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.ToolBoxInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UToolBoxInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.ToolBoxInterface.GetChargerComponent
	// class UChargerComponent* GetChargerComponent();                                                                       // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.TooltipScreenUMG
/// Size: 0x0020 (0x000120 - 0x000140)
class UTooltipScreenUMG : public UScreenBase
{ 
public:
	class UBaseTooltipWidget*                          _tooltipWidget;                                             // 0x0120   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0128   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TooltipScreenUMG.OnCloseTriggered
	// void OnCloseTriggered();                                                                                              // [0x57c94e0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.TormentAttackDamageCooldownInterface
/// Size: 0x0000 (0x000030 - 0x000030)
class UTormentAttackDamageCooldownInterface : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.Totem
/// Size: 0x0140 (0x000338 - 0x000478)
class ATotem : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	SDK_UNDEFINED(16,2313) /* FMulticastInlineDelegate */ __um(OnTotemBound);                                      // 0x0340   (0x0010)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0350   (0x0018)  MISSED
	FLinearColor                                       _boonAuraRevealColor;                                       // 0x0368   (0x0010)  
	TArray<class UTotemBoundPerk*>                     _boundPerks;                                                // 0x0378   (0x0010)  
	ETotemState                                        _totemState;                                                // 0x0388   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0389   (0x0007)  MISSED
	FDBDTunableRowHandle                               _baseBoonTotemBlessingRange;                                // 0x0390   (0x0028)  
	FDBDTunableRowHandle                               _baseBoonTotemAuraRevealRange;                              // 0x03B8   (0x0028)  
	unsigned char                                      UnknownData03_5[0x18];                                      // 0x03E0   (0x0018)  MISSED
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                                // 0x03F8   (0x0008)  
	class UBlockableComponent*                         _totemBlockableComponent;                                   // 0x0400   (0x0008)  
	unsigned char                                      UnknownData04_5[0x10];                                      // 0x0408   (0x0010)  MISSED
	class ULocalPlayerTrackerComponent*                _localPlayerTracker;                                        // 0x0418   (0x0008)  
	class UActivatorComponent*                         _activatorComponent;                                        // 0x0420   (0x0008)  
	class UGameplayTagContainerComponent*              _objectState;                                               // 0x0428   (0x0008)  
	class USceneComponent*                             _interactionsAttachPoint;                                   // 0x0430   (0x0008)  
	class UTotemOutlineUpdateStrategy*                 _totemOutlineUpdateStrategy;                                // 0x0438   (0x0008)  
	unsigned char                                      UnknownData05_5[0x30];                                      // 0x0440   (0x0030)  MISSED
	bool                                               _canBeBoundToBoonPerk;                                      // 0x0470   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0x0471   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.Totem.OnUnblockTotemCosmetic
	// void OnUnblockTotemCosmetic(class ADBDPlayer* Player);                                                                // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Totem.OnTotemStateChanged
	// void OnTotemStateChanged(ETotemState oldTotemState, ETotemState newTotemState);                                       // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Totem.OnTotemBlockChanged
	// void OnTotemBlockChanged();                                                                                           // [0x5926560] Final|Native|Private 
	// Function /Script/DeadByDaylight.Totem.OnRep_TotemState
	// void OnRep_TotemState(ETotemState oldTotemState);                                                                     // [0x59264e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Totem.OnLocallyObservedChanged
	// void OnLocallyObservedChanged();                                                                                      // [0x59262d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.Totem.OnCleanseTotem
	// void OnCleanseTotem(class ATotem* Totem, ETotemState oldTotemState);                                                  // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.Totem.OnBlockTotemCosmetic
	// void OnBlockTotemCosmetic(class ADBDPlayer* Player);                                                                  // [0x61d2f50] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Totem.IsTotemBlockedForPlayer
	// bool IsTotemBlockedForPlayer(class ADBDPlayer* Player);                                                               // [0x5926020] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Totem.IsBoundToPerk
	// bool IsBoundToPerk();                                                                                                 // [0x5925ff0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Totem.GetTotemState
	// ETotemState GetTotemState();                                                                                          // [0x5872300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Totem.GetMainInteractor
	// class UInteractor* GetMainInteractor();                                                                               // [0x61d2f50] Event|Protected|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.Totem.GetCleanseTotemInteraction
	// class UChargeableInteractionDefinition* GetCleanseTotemInteraction();                                                 // [0x61d2f50] Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.Totem.GetBoonTotemBlessingRange
	// float GetBoonTotemBlessingRange();                                                                                    // [0x5925be0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Totem.GetBoonTotemAuraRevealRange
	// float GetBoonTotemAuraRevealRange();                                                                                  // [0x5925bb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Totem.GetBoonAuraRevealColor
	// FLinearColor GetBoonAuraRevealColor();                                                                                // [0x5925b70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Totem.GetBlessTotemInteraction
	// class UChargeableInteractionDefinition* GetBlessTotemInteraction();                                                   // [0x61d2f50] Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.Totem.GetAkAudioComponent
	// class UAkComponent* GetAkAudioComponent();                                                                            // [0x61d2f50] Event|Public|BlueprintEvent|Const 
	// Function /Script/DeadByDaylight.Totem.BindingDelegate__DelegateSignature
	// void BindingDelegate__DelegateSignature();                                                                            // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.Totem.Authority_UnbindFromPerk
	// void Authority_UnbindFromPerk(class UTotemBoundPerk* Perk);                                                           // [0x59259a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Totem.Authority_UnbindFromAllPerks
	// void Authority_UnbindFromAllPerks();                                                                                  // [0x5925980] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Totem.Authority_Cleanse
	// void Authority_Cleanse();                                                                                             // [0x5925140] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Totem.Authority_BindToPerk
	// void Authority_BindToPerk(class UTotemBoundPerk* Perk);                                                               // [0x59250b0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.TotemActiveIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UTotemActiveIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.TotemOutlineUpdateStrategy
/// Size: 0x0028 (0x000158 - 0x000180)
class UTotemOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{ 
public:
	FLinearColor                                       _revealedColorToSurvivor;                                   // 0x0158   (0x0010)  
	FLinearColor                                       _boonTotemRevealedColorToSurvivor;                          // 0x0168   (0x0010)  
	class UCurveLinearColor*                           _revealedColorToKiller;                                     // 0x0178   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.TotemOutlineUpdateStrategy.GetRevealColorToSurvivor
	// FLinearColor GetRevealColorToSurvivor();                                                                              // [0x5925e20] Final|Native|Public|HasDefaults|Const 
};

/// Class /Script/DeadByDaylight.TrapChemicalBomb
/// Size: 0x0018 (0x000230 - 0x000248)
class ATrapChemicalBomb : public AActor
{ 
public:
	ETrapBombState                                     _currentState;                                              // 0x0230   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0231   (0x0007)  MISSED
	class ADBDPlayer*                                  _trapPlacer;                                                // 0x0238   (0x0008)  
	class APallet*                                     _placedPallet;                                              // 0x0240   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.TrapChemicalBomb.OnRep_CurrentState
	// void OnRep_CurrentState();                                                                                            // [0x5926430] Final|Native|Private 
	// Function /Script/DeadByDaylight.TrapChemicalBomb.GetTrapPlacer
	// class ADBDPlayer* GetTrapPlacer();                                                                                    // [0x588afa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TrapChemicalBomb.GetState
	// ETrapBombState GetState();                                                                                            // [0x4a9d280] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TrapChemicalBomb.GetPallet
	// class APallet* GetPallet();                                                                                           // [0x5925df0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.TrapIconStrategy
/// Size: 0x0000 (0x000038 - 0x000038)
class UTrapIconStrategy : public UBasePerkIconStrategy
{ 
public:
};

/// Class /Script/DeadByDaylight.TrapInstallerComponent
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UTrapInstallerComponent : public UActorComponent
{ 
public:
	TArray<class USurvivorTrapPerk*>                   _ownedTrapPerks;                                            // 0x00B8   (0x0010)  
};

/// Class /Script/DeadByDaylight.TriggerableActivatorComponent
/// Size: 0x0040 (0x0000B8 - 0x0000F8)
class UTriggerableActivatorComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(48,2314) /* TWeakObjectPtr<UClass*> */ __um(_triggerableClass);                                  // 0x00B8   (0x0030)  
	TArray<class UTriggerableWorldObjectComponent*>    _triggerables;                                              // 0x00E8   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.TriggerableActivatorComponent.Authority_OnLevelReadyToPlay
	// void Authority_OnLevelReadyToPlay();                                                                                  // [0x5925740] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.TriggerableWorldObjectComponent
/// Size: 0x0098 (0x0000B8 - 0x000150)
class UTriggerableWorldObjectComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2315) /* FMulticastInlineDelegate */ __um(OnTriggered);                                       // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,2316) /* FMulticastInlineDelegate */ __um(OnTriggerReset);                                    // 0x00C8   (0x0010)  
	float                                              _triggerResetTime;                                          // 0x00D8   (0x0004)  
	float                                              _randomChance;                                              // 0x00DC   (0x0004)  
	float                                              _rollFrequency;                                             // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x00E4   (0x000C)  MISSED
	SDK_UNDEFINED(8,2317) /* TWeakObjectPtr<UPrimitiveComponent*> */ __um(_conditionalTriggerVolume);              // 0x00F0   (0x0008)  
	SDK_UNDEFINED(80,2318) /* TSet<ADBDPlayer*> */     __um(_conditionalVolumeOverlappingPlayers);                 // 0x00F8   (0x0050)  
	SDK_UNDEFINED(8,2319) /* TWeakObjectPtr<UPrimitiveComponent*> */ __um(_guaranteedTriggerVolume);               // 0x0148   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.SetGuaranteedTriggerVolume
	// void SetGuaranteedTriggerVolume(class UPrimitiveComponent* Volume);                                                   // [0x5926630] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.SetConditionalTriggerVolume
	// void SetConditionalTriggerVolume(class UPrimitiveComponent* Volume);                                                  // [0x59265a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.Multicast_OnTriggerReset
	// void Multicast_OnTriggerReset();                                                                                      // [0x4dd4840] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.Multicast_OnTriggered
	// void Multicast_OnTriggered(class AActor* Instigator, FVector triggerLocation);                                        // [0x59260c0] Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults 
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.GetConditionalModifiers
	// void GetConditionalModifiers(class ADBDPlayer* Player, float& outAdditive, float& outMultiplicative);                 // [0x5925c90] Native|Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.CanPlayerTriggerGuaranteed
	// bool CanPlayerTriggerGuaranteed(class ADBDPlayer* Player);                                                            // [0x5925ad0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.CanPlayerTriggerConditional
	// bool CanPlayerTriggerConditional(class ADBDPlayer* Player);                                                           // [0x5925a30] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.Authority_Trigger
	// void Authority_Trigger(class AActor* Instigator, FVector triggerLocation);                                            // [0x59258a0] Final|BlueprintAuthorityOnly|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.Authority_ResetTrigger
	// void Authority_ResetTrigger();                                                                                        // [0x5925760] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.Authority_GuaranteedVolumeOverlap
	// void Authority_GuaranteedVolumeOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& HitResult); // [0x5925500] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.Authority_ConditionalVolumeEndOverlap
	// void Authority_ConditionalVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x5925380] Final|Native|Protected 
	// Function /Script/DeadByDaylight.TriggerableWorldObjectComponent.Authority_ConditionalVolumeBeginOverlap
	// void Authority_ConditionalVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& HitResult); // [0x5925160] Final|Native|Protected|HasOutParms 
};

/// Class /Script/DeadByDaylight.TriplanarDecalComponent
/// Size: 0x0040 (0x000220 - 0x000260)
class UTriplanarDecalComponent : public USceneComponent
{ 
public:
	float                                              MinHeight;                                                  // 0x0218   (0x0004)  
	float                                              Height;                                                     // 0x021C   (0x0004)  
	float                                              MaskIntensity;                                              // 0x0220   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0224   (0x0004)  MISSED
	class UTexture2D*                                  TopTexture;                                                 // 0x0228   (0x0008)  
	class UTexture2D*                                  BottomTexture;                                              // 0x0230   (0x0008)  
	class UTexture2D*                                  MaskTexture;                                                // 0x0238   (0x0008)  
	SDK_UNDEFINED(1,2320) /* TEnumAsByte<EDetailMode> */ __um(MinQualitySetting);                                  // 0x0240   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0241   (0x0007)  MISSED
	class UDecalComponent*                             _triPlanarDecal;                                            // 0x0248   (0x0008)  
	class UClass*                                      _triPlanarDecalClass;                                       // 0x0250   (0x0008)  
	class UMaterial*                                   _decalMaterial;                                             // 0x0258   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.TriplanarDecalComponent.UpdateTriplanarDecal
	// void UpdateTriplanarDecal();                                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.TutorialAssetLibrary
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UTutorialAssetLibrary : public UAssetLibrary
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B0   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.TutorialEndGameComponent
/// Size: 0x0008 (0x000158 - 0x000160)
class UTutorialEndGameComponent : public UEndGameComponent
{ 
public:
	float                                              _timerMaxCompletionPercentage;                              // 0x0158   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x015C   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TutorialEndGameComponent.SetTimerMaxCompletionPercentage
	// void SetTimerMaxCompletionPercentage(float& Percentage);                                                              // [0x592b5f0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.TutorialFunctionLibrary
/// Size: 0x0000 (0x000030 - 0x000030)
class UTutorialFunctionLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.TutorialFunctionLibrary.IsInTutorial
	// bool IsInTutorial(class UObject* WorldContextObject);                                                                 // [0x592acd0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.TutorialFunctionLibrary.GetTutorialObjectiveController
	// class UTutorialObjectiveController* GetTutorialObjectiveController(class UObject* WorldContextObject);                // [0x592ab20] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.TutorialFunctionLibrary.GetTutorialNotificationController
	// class UTutorialNotificationController* GetTutorialNotificationController(class UObject* WorldContextObject);          // [0x592aa60] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.TutorialFunctionLibrary.GetTutorialHighlightController
	// class UTutorialHighlightController* GetTutorialHighlightController(class UObject* WorldContextObject);                // [0x592a9a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.TutorialFunctionLibrary.GetTutorialGameState
	// class ATutorialGameState* GetTutorialGameState(class UObject* WorldContextObject);                                    // [0x592a8e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.TutorialFunctionLibrary.GetTutorialGameMode
	// class ATutorialGameMode* GetTutorialGameMode(class UObject* WorldContextObject);                                      // [0x592a850] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/DeadByDaylight.TutorialGameMode
/// Size: 0x0038 (0x000380 - 0x0003B8)
class ATutorialGameMode : public ADBDBaseMatchGameMode
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0380   (0x0010)  MISSED
	class UTutorialObjectiveController*                _tutorialObjectiveController;                               // 0x0390   (0x0008)  
	class UTutorialNotificationController*             _tutorialNotificationController;                            // 0x0398   (0x0008)  
	class UTutorialHighlightController*                _tutorialHighlightController;                               // 0x03A0   (0x0008)  
	class UAtlantaTutorialPlayerHudController*         _atlantaTutorialPlayerHudController;                        // 0x03A8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x03B0   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TutorialGameMode.SetEscapeGenerators
	// void SetEscapeGenerators(TArray<AGenerator*>& escapeGenerators, int32_t requiredActivationCount);                     // [0x592b200] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialGameMode.SetEscapeActivated
	// void SetEscapeActivated();                                                                                            // [0x592b1e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialGameMode.OnCanStartAtlantaTutorialChange__DelegateSignature
	// void OnCanStartAtlantaTutorialChange__DelegateSignature(bool canStartTutorial);                                       // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.TutorialGameMode.GetTutorialObjectiveController
	// class UTutorialObjectiveController* GetTutorialObjectiveController();                                                 // [0x592aaf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TutorialGameMode.GetTutorialNotificationController
	// class UTutorialNotificationController* GetTutorialNotificationController();                                           // [0x592aa30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TutorialGameMode.GetTutorialHighlightController
	// class UTutorialHighlightController* GetTutorialHighlightController();                                                 // [0x592a970] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TutorialGameMode.GetAtlantaTutorialPlayerHudController
	// class UAtlantaTutorialPlayerHudController* GetAtlantaTutorialPlayerHudController();                                   // [0x592a7d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.TutorialGameState
/// Size: 0x00A0 (0x000948 - 0x0009E8)
class ATutorialGameState : public ADBDGameState
{ 
public:
	SDK_UNDEFINED(16,2321) /* FMulticastInlineDelegate */ __um(OnCurrentTutorialStepChanged);                      // 0x0948   (0x0010)  
	unsigned char                                      UnknownData00_5[0x38];                                      // 0x0958   (0x0038)  MISSED
	bool                                               _forceHatchVisible;                                         // 0x0990   (0x0001)  
	unsigned char                                      UnknownData01_6[0x57];                                      // 0x0991   (0x0057)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TutorialGameState.TutorialEndReached
	// void TutorialEndReached();                                                                                            // [0x592b860] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialGameState.SetForcedHatchVisibility
	// void SetForcedHatchVisibility(bool IsHatchVisible);                                                                   // [0x592b390] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialGameState.SetEscapeRequirementsVisibility
	// void SetEscapeRequirementsVisibility(bool IsVisible);                                                                 // [0x592b300] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/DeadByDaylight.TutorialGameState.SetCurrentTutorialStep
	// void SetCurrentTutorialStep(ETutorialStep step);                                                                      // [0x592b160] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialGameState.OnCurrentTutorialStepChanged__DelegateSignature
	// void OnCurrentTutorialStepChanged__DelegateSignature(ETutorialStep step);                                             // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.TutorialGameState.IsTutorialStarted
	// bool IsTutorialStarted();                                                                                             // [0x592ad60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TutorialGameState.GetCurrentTutorialStep
	// ETutorialStep GetCurrentTutorialStep();                                                                               // [0x592a800] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.TutorialGameState.CompleteLocallyControlledCharacterIntros
	// void CompleteLocallyControlledCharacterIntros();                                                                      // [0x592a410] Final|Native|Public|BlueprintCallable|Const 
};

/// Class /Script/DeadByDaylight.TutorialHighlightController
/// Size: 0x0018 (0x000030 - 0x000048)
class UTutorialHighlightController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0030   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TutorialHighlightController.SetHudComponentHighlight
	// void SetHudComponentHighlight(EHudComponent hudComponent, bool Show);                                                 // [0x592b4a0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.TutorialNotificationController
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UTutorialNotificationController : public UObject
{ 
public:
	SDK_UNDEFINED(16,2322) /* FMulticastInlineDelegate */ __um(OnBlockingNotificationDismissedEvent);              // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x70];                                      // 0x0040   (0x0070)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TutorialNotificationController.ShowNotification
	// void ShowNotification(FName tutorialNotificationId, float Duration);                                                  // [0x592b730] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialNotificationController.ShowBlockingNotification
	// void ShowBlockingNotification(FName tutorialNotificationId);                                                          // [0x592b690] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialNotificationController.OnBlockingNotificationDismissedEvent__DelegateSignature
	// void OnBlockingNotificationDismissedEvent__DelegateSignature(FName tutorialNotificationId);                           // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.TutorialNotificationController.OnBlockingNotificationDismissed
	// void OnBlockingNotificationDismissed();                                                                               // [0x592ad80] Final|Native|Private 
	// Function /Script/DeadByDaylight.TutorialNotificationController.HideNotification
	// void HideNotification(bool removeAllCachedNotifs);                                                                    // [0x592ac40] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.TutorialObjectiveController
/// Size: 0x00B0 (0x000030 - 0x0000E0)
class UTutorialObjectiveController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xB0];                                      // 0x0030   (0x00B0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TutorialObjectiveController.RemoveObjective
	// void RemoveObjective(FName tutorialObjectiveId);                                                                      // [0x592af80] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialObjectiveController.RemoveAllObjectives
	// void RemoveAllObjectives();                                                                                           // [0x592aec0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialObjectiveController.CompleteObjective
	// void CompleteObjective(FName tutorialObjectiveId, bool removeAfterCompletion);                                        // [0x592a4d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialObjectiveController.AddObjective
	// void AddObjective(FName tutorialObjectiveId);                                                                         // [0x592a370] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.TutorialsUtilities
/// Size: 0x0038 (0x000230 - 0x000268)
class ATutorialsUtilities : public AActor
{ 
public:
	SDK_UNDEFINED(16,2323) /* FMulticastInlineDelegate */ __um(OnTutorialUIReady);                                 // 0x0230   (0x0010)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0240   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.TutorialsUtilities.TriggerTutorialHudFadeOut
	// void TriggerTutorialHudFadeOut();                                                                                     // [0x57ff480] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialsUtilities.TriggerTutorialHudFadeIn
	// void TriggerTutorialHudFadeIn();                                                                                      // [0x592b840] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.TutorialsUtilities.GetTutorialsUtilities
	// class ATutorialsUtilities* GetTutorialsUtilities(class UObject* WorldContextObject);                                  // [0x592abb0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/DeadByDaylight.TutorialsUtilities.DestroyAI
	// void DestroyAI(class AAIController* AIController);                                                                    // [0x592a5c0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.AnimationWidget
/// Size: 0x0008 (0x000298 - 0x0002A0)
class UAnimationWidget : public UUserWidget
{ 
public:
	float                                              _playRate;                                                  // 0x0298   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x029C   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.AnimationWidget.SetPlayRate
	// void SetPlayRate(float Rate);                                                                                         // [0x592b570] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.AnimationWidget.GetPlayRate
	// float GetPlayRate();                                                                                                  // [0x592a820] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.UIController
/// Size: 0x0030 (0x000030 - 0x000060)
class UUIController : public UObject
{ 
public:
	class UGFxObject*                                  m_UIControllerObj;                                          // 0x0030   (0x0008)  
	class UMobileBaseUserWidget*                       _atlantaLoadingWidget;                                      // 0x0038   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0040   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.UMGInventoryItemButton
/// Size: 0x0000 (0x000678 - 0x000678)
class UUMGInventoryItemButton : public UUMGLoadoutItemButton
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.UMGInventoryItemButton.UpdateItemButtonProgressBar
	// void UpdateItemButtonProgressBar(class ACollectable* Item, class UProgressBar* itemProgressBar);                      // [0x5949390] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGInventoryItemButton.UpdateItemButton
	// void UpdateItemButton(class ACollectable* Item);                                                                      // [0x5949300] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGAddonButton
/// Size: 0x0000 (0x000678 - 0x000678)
class UUMGAddonButton : public UUMGInventoryItemButton
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.UMGAddonButton.UpdateAddonButton
	// void UpdateAddonButton(class UItemAddon* addon);                                                                      // [0x592b880] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGAlertsWidget
/// Size: 0x00C0 (0x000338 - 0x0003F8)
class UUMGAlertsWidget : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(48,2324) /* TWeakObjectPtr<UClass*> */ __um(AtlantaScoreAlertComponentClass);                    // 0x0338   (0x0030)  
	SDK_UNDEFINED(48,2325) /* TWeakObjectPtr<UClass*> */ __um(AtlantaStatusEffectAlertComponentClass);             // 0x0368   (0x0030)  
	class UCanvasPanel*                                CanvasPanelAlerts;                                          // 0x0398   (0x0008)  
	float                                              IdleTime;                                                   // 0x03A0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x44];                                      // 0x03A4   (0x0044)  MISSED
	class UClass*                                      _scoreAlertClass;                                           // 0x03E8   (0x0008)  
	class UClass*                                      _statusEffectAlertClass;                                    // 0x03F0   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGAtlantaBaseEventsTemplate
/// Size: 0x0000 (0x000338 - 0x000338)
class UUMGAtlantaBaseEventsTemplate : public UMobileBaseUserWidget
{ 
public:
};

/// Class /Script/DeadByDaylight.UMGAtlantaBonusACEventTemplate
/// Size: 0x0028 (0x000338 - 0x000360)
class UUMGAtlantaBonusACEventTemplate : public UUMGAtlantaBaseEventsTemplate
{ 
public:
	class UUMGAtlCurrencyStorefrontWidget*             currencyStorefrontWidget;                                   // 0x0338   (0x0008)  
	SDK_UNDEFINED(16,2326) /* FString */               __um(LastPackSmallIconPath);                                // 0x0340   (0x0010)  
	float                                              InitialSize;                                                // 0x0350   (0x0004)  
	float                                              AugmentedSize;                                              // 0x0354   (0x0004)  
	int32_t                                            MaxNumberOfPacksToShowBigger;                               // 0x0358   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x035C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.UMGAtlantaCalendarEventsTemplate
/// Size: 0x0008 (0x000338 - 0x000340)
class UUMGAtlantaCalendarEventsTemplate : public UUMGAtlantaBaseEventsTemplate
{ 
public:
	class UUMGAtlantaDailyRewardsGrid*                 DailyRewardGrid;                                            // 0x0338   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGAtlantaCreditsPopup
/// Size: 0x0020 (0x000338 - 0x000358)
class UUMGAtlantaCreditsPopup : public UMobileBaseUserWidget
{ 
public:
	class UUMGHtmlRichText*                            RichTitleText;                                              // 0x0338   (0x0008)  
	class UUMGHtmlRichText*                            RichContentText;                                            // 0x0340   (0x0008)  
	SDK_UNDEFINED(16,2327) /* FString */               __um(_titleDefaultStyle);                                   // 0x0348   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaCreditsPopup.SetCreditTitle
	// void SetCreditTitle(FString Title);                                                                                   // [0x592b0c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGAtlantaCreditsPopup.SetCreditContent
	// void SetCreditContent(FString Content);                                                                               // [0x592b020] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGAtlantaDailyRewardsGrid
/// Size: 0x0198 (0x000338 - 0x0004D0)
class UUMGAtlantaDailyRewardsGrid : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0338   (0x0010)  MISSED
	SDK_UNDEFINED(48,2328) /* TWeakObjectPtr<UClass*> */ __um(BigDailyRewardWidgetTemplate_type);                  // 0x0348   (0x0030)  
	SDK_UNDEFINED(48,2329) /* TWeakObjectPtr<UClass*> */ __um(BigDailyRewardWidgetTemplate_type);                  // 0x0378   (0x0030)  
	SDK_UNDEFINED(48,2330) /* TWeakObjectPtr<UClass*> */ __um(BigDailyRewardWidgetTemplate_type);                  // 0x03A8   (0x0030)  
	SDK_UNDEFINED(48,2331) /* TWeakObjectPtr<UClass*> */ __um(SmallDailyRewardWidgetTemplate_type);                // 0x03D8   (0x0030)  
	SDK_UNDEFINED(48,2332) /* TWeakObjectPtr<UClass*> */ __um(SmallDailyRewardWidgetTemplate_type);                // 0x0408   (0x0030)  
	SDK_UNDEFINED(48,2333) /* TWeakObjectPtr<UClass*> */ __um(SmallDailyRewardWidgetTemplate_type);                // 0x0438   (0x0030)  
	class UUniformGridPanel*                           DailyRewardWidgetsGridPanel;                                // 0x0468   (0x0008)  
	class UCanvasPanel*                                LastDailyRewardWidgetPanel;                                 // 0x0470   (0x0008)  
	int32_t                                            NumberOfItems;                                              // 0x0478   (0x0004)  
	unsigned char                                      UnknownData01_5[0x2C];                                      // 0x047C   (0x002C)  MISSED
	class UClass*                                      _bigWidgetTemplate;                                         // 0x04A8   (0x0008)  
	class UClass*                                      _smallWidgetTemplate;                                       // 0x04B0   (0x0008)  
	TArray<class UUMGDailyRewardWidget*>               _rewardWidgets;                                             // 0x04B8   (0x0010)  
	class UUMGDailyRewardWidget*                       _widgetToAttach;                                            // 0x04C8   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaDailyRewardsGrid.StartRewardsIntroRewardSequence
	// void StartRewardsIntroRewardSequence();                                                                               // [0x5930690] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGAtlantaDailyRewardsGrid.StartIntroSequence
	// void StartIntroSequence();                                                                                            // [0x5930670] Final|Native|Public  
	// Function /Script/DeadByDaylight.UMGAtlantaDailyRewardsGrid.PlayNextRewardIntroAnimation
	// void PlayNextRewardIntroAnimation();                                                                                  // [0x5930630] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGAtlantaDailyRewardsGrid.InitializeLayouts_BP
	// void InitializeLayouts_BP();                                                                                          // [0x61d2f50] Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGAtlantaDailyRewardsScreen
/// Size: 0x00A0 (0x000338 - 0x0003D8)
class UUMGAtlantaDailyRewardsScreen : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0338   (0x0010)  MISSED
	class UUMGAtlantaDailyRewardsGrid*                 DailyRewardWidgetsGrid;                                     // 0x0348   (0x0008)  
	class UCanvasPanel*                                ContinueButtonPanel;                                        // 0x0350   (0x0008)  
	class UUMGPopupButton*                             ContinueButton;                                             // 0x0358   (0x0008)  
	class UTextBlock*                                  RemainingTimeTextBlock;                                     // 0x0360   (0x0008)  
	FSlateColor                                        NormalColor;                                                // 0x0368   (0x0028)  
	FSlateColor                                        WarningColor;                                               // 0x0390   (0x0028)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x03B8   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaDailyRewardsScreen.HandleCurrentActiveDailyRewardStateChanged
	// void HandleCurrentActiveDailyRewardStateChanged(int32_t dailyRewardIndex, int32_t dailyRewardNewState);               // [0x59301c0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGAtlantaDailyRewardsScreen.HandleContinueButtonClick
	// void HandleContinueButtonClick();                                                                                     // [0x4b5a790] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGAtlantaEventsDescription
/// Size: 0x0078 (0x000338 - 0x0003B0)
class UUMGAtlantaEventsDescription : public UMobileBaseUserWidget
{ 
public:
	class UAtlantaEventsTemplateDataAsset*             widgetData;                                                 // 0x0338   (0x0008)  
	class UCanvasPanel*                                ItemsRewards;                                               // 0x0340   (0x0008)  
	class UTextBlock*                                  Title;                                                      // 0x0348   (0x0008)  
	class UTextBlock*                                  Description;                                                // 0x0350   (0x0008)  
	class UTextBlock*                                  TimePeriodTitle;                                            // 0x0358   (0x0008)  
	class UTextBlock*                                  TimePeriodStart;                                            // 0x0360   (0x0008)  
	class UTextBlock*                                  TimePeriodEnd;                                              // 0x0368   (0x0008)  
	class UUMGBaseButtonWidget*                        DeepLinkButton;                                             // 0x0370   (0x0008)  
	class UCanvasPanel*                                TimePeriodCanvas;                                           // 0x0378   (0x0008)  
	class UUMGAtlantaBaseEventsTemplate*               _eventTemplate;                                             // 0x0380   (0x0008)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0388   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaEventsDescription.HandleButtonClicked
	// void HandleButtonClicked();                                                                                           // [0x59300c0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGAtlantaEventsElement
/// Size: 0x0018 (0x000338 - 0x000350)
class UUMGAtlantaEventsElement : public UMobileBaseUserWidget
{ 
public:
	class UVerticalBox*                                ImageBox;                                                   // 0x0338   (0x0008)  
	class UTextBlock*                                  ElementName;                                                // 0x0340   (0x0008)  
	class UUMGPromoPackItemWidget*                     CustomizationWidget;                                        // 0x0348   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGAtlantaEventsScreen
/// Size: 0x0080 (0x000338 - 0x0003B8)
class UUMGAtlantaEventsScreen : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  PageTitle;                                                  // 0x0338   (0x0008)  
	class UWrapBox*                                    WrapBox;                                                    // 0x0340   (0x0008)  
	class UUMGAtlantaEventsDescription*                DescriptionWidget;                                          // 0x0348   (0x0008)  
	class UClass*                                      EventsTabWBPReference;                                      // 0x0350   (0x0008)  
	TArray<class UUMGAtlantaEventsTab*>                _eventsArray;                                               // 0x0358   (0x0010)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x0368   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaEventsScreen.HandleEventTabClicked
	// void HandleEventTabClicked(FString ID);                                                                               // [0x5930290] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGAtlantaEventsScreen.BroadcastOnCloseButtonClicked
	// void BroadcastOnCloseButtonClicked();                                                                                 // [0x4b50a10] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGAtlantaEventsScreen.BroadcastDeepLinkRequest
	// void BroadcastDeepLinkRequest(FString ID);                                                                            // [0x592fc80] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGAtlantaEventsTab
/// Size: 0x0040 (0x000468 - 0x0004A8)
class UUMGAtlantaEventsTab : public UUMGBaseButtonWidget
{ 
public:
	SDK_UNDEFINED(16,2334) /* FString */               __um(_eventId);                                             // 0x0468   (0x0010)  
	class UTextBlock*                                  HotTagText;                                                 // 0x0478   (0x0008)  
	class UTextBlock*                                  NewTagText;                                                 // 0x0480   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0488   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaEventsTab.SetSelectionVisuals
	// void SetSelectionVisuals(bool IsSelected);                                                                            // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGAtlantaEventsTab.SetNewTag
	// void SetNewTag();                                                                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGAtlantaEventsTab.SetHotTag
	// void SetHotTag();                                                                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGAtlantaFriendListScreen
/// Size: 0x03B8 (0x000338 - 0x0006F0)
class UUMGAtlantaFriendListScreen : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0338   (0x0060)  MISSED
	class UWidgetSwitcher*                             ListSwitcher;                                               // 0x0398   (0x0008)  
	class UWidgetSwitcher*                             SearchResultSwitcher;                                       // 0x03A0   (0x0008)  
	class UUMGBaseFriendListElement*                   NonFriendSearchResult;                                      // 0x03A8   (0x0008)  
	class UUMGBaseFriendListElement*                   RequestReceivedSearchResult;                                // 0x03B0   (0x0008)  
	class UUMGBaseFriendListElement*                   RequestSentSearchResult;                                    // 0x03B8   (0x0008)  
	class UUMGBaseFriendListElement*                   FriendSearchResult;                                         // 0x03C0   (0x0008)  
	class UTextBlock*                                  SearchFailureText;                                          // 0x03C8   (0x0008)  
	class UUMGBaseButtonWidget*                        CloseButton;                                                // 0x03D0   (0x0008)  
	class UUMGFriendSearchBarWidget*                   SearchBar;                                                  // 0x03D8   (0x0008)  
	class UHorizontalBox*                              ButtonTabContainer;                                         // 0x03E0   (0x0008)  
	class UUMGFriendListTabWidget*                     FriendListTabWidget;                                        // 0x03E8   (0x0008)  
	class UUMGSuggestionsListTabWidget*                SuggestionListTabWidget;                                    // 0x03F0   (0x0008)  
	class UUMGRequestsListTabWidget*                   RequestListTabWidget;                                       // 0x03F8   (0x0008)  
	class UUMGFriendTabButtonWidget*                   FriendsTabButton;                                           // 0x0400   (0x0008)  
	class UUMGFriendTabButtonWidget*                   SuggestionsTabButton;                                       // 0x0408   (0x0008)  
	class UUMGFriendTabButtonWidget*                   RequestsTabButton;                                          // 0x0410   (0x0008)  
	class UUMGBaseFriendListContextualMenuWidget*      CurrentContextualMenuWidget;                                // 0x0418   (0x0008)  
	SDK_UNDEFINED(48,2335) /* TWeakObjectPtr<UClass*> */ __um(FriendWidget);                                       // 0x0420   (0x0030)  
	SDK_UNDEFINED(48,2336) /* TWeakObjectPtr<UClass*> */ __um(RequestSentWidget);                                  // 0x0450   (0x0030)  
	SDK_UNDEFINED(48,2337) /* TWeakObjectPtr<UClass*> */ __um(FriendRequestReceivedWidget);                        // 0x0480   (0x0030)  
	SDK_UNDEFINED(48,2338) /* TWeakObjectPtr<UClass*> */ __um(FriendsSuggestionWidget);                            // 0x04B0   (0x0030)  
	SDK_UNDEFINED(48,2339) /* TWeakObjectPtr<UClass*> */ __um(FriendsSuggestion);                                  // 0x04E0   (0x0030)  
	SDK_UNDEFINED(48,2340) /* TWeakObjectPtr<UClass*> */ __um(FriendPartyInviteWidgetClass);                       // 0x0510   (0x0030)  
	SDK_UNDEFINED(48,2341) /* TWeakObjectPtr<UClass*> */ __um(ContextualMenuInvite);                               // 0x0540   (0x0030)  
	SDK_UNDEFINED(48,2342) /* TWeakObjectPtr<UClass*> */ __um(ContextualMenuConfirmDeclineAction);                 // 0x0570   (0x0030)  
	unsigned char                                      UnknownData01_5[0x90];                                      // 0x05A0   (0x0090)  MISSED
	SDK_UNDEFINED(80,2343) /* TMap<FString, FFriendWidgetList> */ __um(_existingFriendListWidgets);                // 0x0630   (0x0050)  
	SDK_UNDEFINED(80,2344) /* TMap<FString, UUMGBaseFriendListElement*> */ __um(_existingFriendInvitePartyWidget); // 0x0680   (0x0050)  
	unsigned char                                      UnknownData02_6[0x20];                                      // 0x06D0   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaFriendListScreen.VerifyReceivedFriendRequestFocus
	// void VerifyReceivedFriendRequestFocus(class UExpandableArea* ExpandableArea, bool bIsExpanded);                       // [0x59306b0] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGAtlantaFriendListScreen.OnFinishedOutAnimation
	// void OnFinishedOutAnimation();                                                                                        // [0x5930610] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGAtlantaFriendListScreen.HandleTabButtonClicked
	// void HandleTabButtonClicked(char tabIndex);                                                                           // [0x5930590] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGAtlantaFriendListScreen.HandleSearchInputChanged
	// void HandleSearchInputChanged(FText& inputText);                                                                      // [0x59304c0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.UMGAtlantaFriendListScreen.HandleSearchButtonClicked
	// void HandleSearchButtonClicked();                                                                                     // [0x59304a0] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGAtlantaFriendListScreen.HandleOnActionOnFriend
	// void HandleOnActionOnFriend(FActionOnFriend& ActionOnFriend);                                                         // [0x59303c0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.UMGAtlantaFriendListScreen.HandleContextualMenuAction
	// void HandleContextualMenuAction(EActionOnFriendType Action);                                                          // [0x5930140] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGAtlantaFriendListScreen.HandleCloseButtonClicked
	// void HandleCloseButtonClicked();                                                                                      // [0x5930100] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGAtlantaGenericEventTemplate
/// Size: 0x0020 (0x000338 - 0x000358)
class UUMGAtlantaGenericEventTemplate : public UUMGAtlantaBaseEventsTemplate
{ 
public:
	class UHorizontalBox*                              RelatedItemsBox;                                            // 0x0338   (0x0008)  
	class UClass*                                      EventsElementWBPReference;                                  // 0x0340   (0x0008)  
	class UClass*                                      CustomizationWBPReference;                                  // 0x0348   (0x0008)  
	class UClass*                                      CharacterWBPReference;                                      // 0x0350   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGAtlantaLegalMenuScreen
/// Size: 0x0010 (0x000338 - 0x000348)
class UUMGAtlantaLegalMenuScreen : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0338   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaLegalMenuScreen.SetLegalText
	// void SetLegalText(FString Title, FString LegalText);                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGAtlantaLegalMenuScreen.SetButtonText
	// void SetButtonText(FText& acceptText, FText& declineText);                                                            // [0x61d2f50] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGAtlantaLegalMenuScreen.HandleMenuButtonClickEvent
	// void HandleMenuButtonClickEvent(bool isAccept);                                                                       // [0x5930330] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGGenericPopup
/// Size: 0x00E8 (0x000338 - 0x000420)
class UUMGGenericPopup : public UMobileBaseUserWidget
{ 
public:
	class URichTextBlock*                              Title;                                                      // 0x0338   (0x0008)  
	class UUMGHtmlRichText*                            Message;                                                    // 0x0340   (0x0008)  
	class UImage*                                      TitleBackground;                                            // 0x0348   (0x0008)  
	class UImage*                                      TitleSmoke;                                                 // 0x0350   (0x0008)  
	class UUMGPopupButton*                             RegressionPopupButton;                                      // 0x0358   (0x0008)  
	class UUMGPopupButton*                             AlternativePopupButton;                                     // 0x0360   (0x0008)  
	class UUMGPopupButton*                             ProgressionPopupButton;                                     // 0x0368   (0x0008)  
	FSlateColor                                        ErrorTitleSmokeColor;                                       // 0x0370   (0x0028)  
	FSlateColor                                        ErrorTitleBackgroundColor;                                  // 0x0398   (0x0028)  
	FSlateColor                                        DefaultTitleSmokeColor;                                     // 0x03C0   (0x0028)  
	FSlateColor                                        DefaultTitleBackgroundColor;                                // 0x03E8   (0x0028)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0410   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGGenericPopup.OnPopupDisappearance
	// void OnPopupDisappearance();                                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGGenericPopup.OnPopupAppearance
	// void OnPopupAppearance();                                                                                             // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGAtlantaLevelUpPopup
/// Size: 0x0000 (0x000420 - 0x000420)
class UUMGAtlantaLevelUpPopup : public UUMGGenericPopup
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaLevelUpPopup.OnSetData
	// void OnSetData(int32_t Level, int32_t Prestige, bool prestigeIncreased, TArray<FRewardItemData>& Rewards);            // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGAtlantaMonthlyPassEventTemplate
/// Size: 0x0008 (0x000338 - 0x000340)
class UUMGAtlantaMonthlyPassEventTemplate : public UUMGAtlantaBaseEventsTemplate
{ 
public:
	class UUMGSubscriptionPackButtonWidget*            MonthlyPassWidget;                                          // 0x0338   (0x0008)  
};

/// Struct /Script/DeadByDaylight.PartyMemberUIData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPartyMemberUIData
{ 
	bool                                               _isLocalPlayer;                                             // 0x0000   (0x0001)  
	bool                                               _isReady;                                                   // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	SDK_UNDEFINED(16,2345) /* FString */               __um(_mirrorId);                                            // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,2346) /* FString */               __um(_playerName);                                          // 0x0018   (0x0010)  
	int32_t                                            _playerId;                                                  // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.UMGAtlantaNavigationScreen
/// Size: 0x0060 (0x000338 - 0x000398)
class UUMGAtlantaNavigationScreen : public UMobileBaseUserWidget
{ 
public:
	class UUMGBankAndPlayerInfoWidget*                 BankAndPlayerInfoWidget;                                    // 0x0338   (0x0008)  
	class UTextBlock*                                  TextButtonStart;                                            // 0x0340   (0x0008)  
	ESlateVisibility                                   PlayModeSelectionVisibility;                                // 0x0348   (0x0001)  
	ESlateVisibility                                   CharacterInfoVisibility;                                    // 0x0349   (0x0001)  
	ESlateVisibility                                   BackButtonVisibility;                                       // 0x034A   (0x0001)  
	ESlateVisibility                                   MenuButtonsVisibility;                                      // 0x034B   (0x0001)  
	ESlateVisibility                                   ButtonRoleVisibility;                                       // 0x034C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x034D   (0x0003)  MISSED
	class UButton*                                     ButtonRole;                                                 // 0x0350   (0x0008)  
	class UWidgetSwitcher*                             BottomRightWidgetSwitcher;                                  // 0x0358   (0x0008)  
	class UUMGPartySlotsWidget*                        PartyPlayerSlots;                                           // 0x0360   (0x0008)  
	class UUMGBaseCountdownWidget*                     PartyCountdownLarge;                                        // 0x0368   (0x0008)  
	TArray<FPartyMemberUIData>                         _partyMembers;                                              // 0x0370   (0x0010)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0380   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaNavigationScreen.GetPartyMembersData
	// TArray<FPartyMemberUIData> GetPartyMembersData(int32_t index);                                                        // [0x592ff70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UMGAtlantaNavigationScreen.ButtonClickEvent
	// void ButtonClickEvent(ENavigationScreenButton buttonId);                                                              // [0x592fef0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGAtlantaPromoCodeRewardItemWidget
/// Size: 0x0138 (0x000338 - 0x000470)
class UUMGAtlantaPromoCodeRewardItemWidget : public UMobileBaseUserWidget
{ 
public:
	class UPanelWidget*                                CurrencyItem;                                               // 0x0338   (0x0008)  
	class UImage*                                      CurrencyIcon;                                               // 0x0340   (0x0008)  
	class UTextBlock*                                  CurrencyName;                                               // 0x0348   (0x0008)  
	class UTextBlock*                                  CurrencyAmount;                                             // 0x0350   (0x0008)  
	class UImage*                                      ItemRarityTint;                                             // 0x0358   (0x0008)  
	class UWidgetAnimation*                            RevealAnimationSmall;                                       // 0x0360   (0x0008)  
	class UPanelWidget*                                CustomizationItem;                                          // 0x0368   (0x0008)  
	class UImage*                                      CustomizationIcon;                                          // 0x0370   (0x0008)  
	class UTextBlock*                                  CustomizationName;                                          // 0x0378   (0x0008)  
	class UImage*                                      CustomizationRarityTint;                                    // 0x0380   (0x0008)  
	class UWidgetAnimation*                            RevealAnimationLarge;                                       // 0x0388   (0x0008)  
	class UPanelWidget*                                CharacterPanel;                                             // 0x0390   (0x0008)  
	class UImage*                                      CharacterPortrait;                                          // 0x0398   (0x0008)  
	class UTextBlock*                                  characterName;                                              // 0x03A0   (0x0008)  
	class UPanelWidget*                                TicketPanel;                                                // 0x03A8   (0x0008)  
	class UImage*                                      TicketRarityTint;                                           // 0x03B0   (0x0008)  
	class UImage*                                      TicketIcon;                                                 // 0x03B8   (0x0008)  
	class UTextBlock*                                  TicketName;                                                 // 0x03C0   (0x0008)  
	class UTextBlock*                                  TicketAmount;                                               // 0x03C8   (0x0008)  
	class UPanelWidget*                                OfferingPanel;                                              // 0x03D0   (0x0008)  
	class UImage*                                      OfferingRarityTint;                                         // 0x03D8   (0x0008)  
	class UImage*                                      OfferingIcon;                                               // 0x03E0   (0x0008)  
	class UTextBlock*                                  OfferingName;                                               // 0x03E8   (0x0008)  
	class UTextBlock*                                  OfferingAmount;                                             // 0x03F0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x78];                                      // 0x03F8   (0x0078)  MISSED
};

/// Class /Script/DeadByDaylight.UMGAtlantaPurchasePopup
/// Size: 0x00B0 (0x000338 - 0x0003E8)
class UUMGAtlantaPurchasePopup : public UMobileBaseUserWidget
{ 
public:
	class UWidgetSwitcher*                             LayoutSwitcher;                                             // 0x0338   (0x0008)  
	class UImage*                                      ImagePopup;                                                 // 0x0340   (0x0008)  
	class UTextBlock*                                  OfferTextWithInfo;                                          // 0x0348   (0x0008)  
	class UTextBlock*                                  OfferText;                                                  // 0x0350   (0x0008)  
	class UTextBlock*                                  TitleTextWithInfo;                                          // 0x0358   (0x0008)  
	class UTextBlock*                                  titleText;                                                  // 0x0360   (0x0008)  
	class UTextBlock*                                  descriptionText;                                            // 0x0368   (0x0008)  
	class UHorizontalBox*                              ItemsContainer;                                             // 0x0370   (0x0008)  
	class UUMGPurchaseBuyButton*                       BuyButtonWithInfo;                                          // 0x0378   (0x0008)  
	class UUMGPurchaseBuyButton*                       BuyButton;                                                  // 0x0380   (0x0008)  
	class UUMGBaseButtonWidget*                        CloseButton;                                                // 0x0388   (0x0008)  
	class UUMGPurchaseSticker*                         PurchaseSticker;                                            // 0x0390   (0x0008)  
	SDK_UNDEFINED(48,2347) /* TWeakObjectPtr<UClass*> */ __um(PurchaseItemsInfoWidgetClass);                       // 0x0398   (0x0030)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x03C8   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaPurchasePopup.HandleCloseButtonClicked
	// void HandleCloseButtonClicked();                                                                                      // [0x5930120] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGAtlantaPurchasePopup.HandleBuyButtonClicked
	// void HandleBuyButtonClicked();                                                                                        // [0x59300e0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGAtlantaRankUpPopup
/// Size: 0x0048 (0x000420 - 0x000468)
class UUMGAtlantaRankUpPopup : public UUMGGenericPopup
{ 
public:
	class UUMGTallyRankBanner*                         RankBanner;                                                 // 0x0420   (0x0008)  
	class UHorizontalBox*                              RewardsContainer;                                           // 0x0428   (0x0008)  
	class UCanvasPanel*                                RewardsSection;                                             // 0x0430   (0x0008)  
	SDK_UNDEFINED(48,2348) /* TWeakObjectPtr<UClass*> */ __um(RewardWidgetClass);                                  // 0x0438   (0x0030)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaRankUpPopup.PlayRankUpBannerAnimation
	// void PlayRankUpBannerAnimation();                                                                                     // [0x5930650] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGAltantaRitual
/// Size: 0x0058 (0x000338 - 0x000390)
class UUMGAltantaRitual : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(24,2349) /* FText */                 __um(_claimText);                                           // 0x0338   (0x0018)  
	SDK_UNDEFINED(24,2350) /* FText */                 __um(_claimedText);                                         // 0x0350   (0x0018)  
	SDK_UNDEFINED(24,2351) /* FText */                 __um(_completedText);                                       // 0x0368   (0x0018)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0380   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAltantaRitual.SetData
	// void SetData(FAtlantaRitualUIData& ritual);                                                                           // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGAltantaRitual.BroadcastOnClaimRewardsButtonPressed
	// void BroadcastOnClaimRewardsButtonPressed(int32_t ritualId);                                                          // [0x592fdd0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGAtlantaRitualsScreen
/// Size: 0x00F0 (0x000338 - 0x000428)
class UUMGAtlantaRitualsScreen : public UMobileBaseUserWidget
{ 
public:
	class UUMGAtlantaRitualTab*                        DailyTab;                                                   // 0x0338   (0x0008)  
	class UUMGAtlantaRitualTab*                        WeeklyTab;                                                  // 0x0340   (0x0008)  
	SDK_UNDEFINED(24,2352) /* FText */                 __um(_atlantaRitualTitle);                                  // 0x0348   (0x0018)  
	SDK_UNDEFINED(24,2353) /* FText */                 __um(_endInLabel);                                          // 0x0360   (0x0018)  
	SDK_UNDEFINED(24,2354) /* FText */                 __um(_dailyButtonLabel);                                    // 0x0378   (0x0018)  
	SDK_UNDEFINED(24,2355) /* FText */                 __um(_weeklyButtonLabel);                                   // 0x0390   (0x0018)  
	SDK_UNDEFINED(24,2356) /* FText */                 __um(_dailyRemainingTime);                                  // 0x03A8   (0x0018)  
	SDK_UNDEFINED(24,2357) /* FText */                 __um(_weeklyRemainingTime);                                 // 0x03C0   (0x0018)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x03D8   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaRitualsScreen.SetNewRitualNumbers
	// void SetNewRitualNumbers(int32_t newDailyRitualNumber, int32_t newWeeklyRitualNumber);                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGAtlantaRitualsScreen.BroadcastOnClaimRewardButtonPressed
	// void BroadcastOnClaimRewardButtonPressed(int32_t ritualId);                                                           // [0x592fd40] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGAtlantaRitualsScreen.BroadcastOnBackButtonPressed
	// void BroadcastOnBackButtonPressed();                                                                                  // [0x592fd20] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGAtlantaRitualTab
/// Size: 0x0048 (0x000338 - 0x000380)
class UUMGAtlantaRitualTab : public UMobileBaseUserWidget
{ 
public:
	class UVerticalBox*                                ContainerBox;                                               // 0x0338   (0x0008)  
	SDK_UNDEFINED(48,2358) /* TWeakObjectPtr<UClass*> */ __um(_itemWidgetClass);                                   // 0x0340   (0x0030)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0370   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaRitualTab.BroadcastOnClaimRewardsButtonPressed
	// void BroadcastOnClaimRewardsButtonPressed(int32_t ritualId);                                                          // [0x592fe60] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGAtlantaSeasonEndPopup
/// Size: 0x0040 (0x000420 - 0x000460)
class UUMGAtlantaSeasonEndPopup : public UUMGGenericPopup
{ 
public:
	class UUMGTallyRankBanner*                         OldSurvivorRankBanner;                                      // 0x0420   (0x0008)  
	class UUMGTallyRankBanner*                         NewSurvivorRankBanner;                                      // 0x0428   (0x0008)  
	class UUMGTallyRankBanner*                         OldKillerRankBanner;                                        // 0x0430   (0x0008)  
	class UUMGTallyRankBanner*                         NewKillerRankBanner;                                        // 0x0438   (0x0008)  
	class UHorizontalBox*                              NewRankHorizontalBox;                                       // 0x0440   (0x0008)  
	class UHorizontalBox*                              OldRankHorizontalBox;                                       // 0x0448   (0x0008)  
	FTimerHandle                                       _fadeOutTimerHandle;                                        // 0x0450   (0x0008)  
	float                                              _timerBeforeFadeOutAnimation;                               // 0x0458   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x045C   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaSeasonEndPopup.TriggerFadeOutAnimationTimer
	// void TriggerFadeOutAnimationTimer();                                                                                  // [0x5935f60] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGAtlantaSeasonEndPopup.PlayNewRankFadeInAnimation
	// void PlayNewRankFadeInAnimation();                                                                                    // [0x5935f40] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGAtlantaSettingScreen
/// Size: 0x0200 (0x000338 - 0x000538)
class UUMGAtlantaSettingScreen : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0xB0];                                      // 0x0338   (0x00B0)  MISSED
	class UWidgetSwitcher*                             SettingContextSwitcher;                                     // 0x03E8   (0x0008)  
	class UHorizontalBox*                              SettingTabBox;                                              // 0x03F0   (0x0008)  
	class UHorizontalBox*                              AlwaysDisplayButtonBox;                                     // 0x03F8   (0x0008)  
	SDK_UNDEFINED(48,2359) /* TWeakObjectPtr<UClass*> */ __um(_settingTabButtonClass);                             // 0x0400   (0x0030)  
	SDK_UNDEFINED(48,2360) /* TWeakObjectPtr<UClass*> */ __um(_settingAlwaysDisplayButtonClass);                   // 0x0430   (0x0030)  
	SDK_UNDEFINED(48,2361) /* TWeakObjectPtr<UTexture2D*> */ __um(_buttonBoxDividerAsset);                         // 0x0460   (0x0030)  
	SDK_UNDEFINED(80,2362) /* TMap<EOverlayTabs, TWeakObjectPtr<UClass*>> */ __um(_overlayContextWidgetMap);       // 0x0490   (0x0050)  
	SDK_UNDEFINED(80,2363) /* TMap<EOverlayTabs, UUMGSettingContextWidget*> */ __um(_contextWidgetMap);            // 0x04E0   (0x0050)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0530   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.ShowCreditsOrConsentsPopup
	// void ShowCreditsOrConsentsPopup(FString Title, FString Content);                                                      // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.SetRightTopTextInfo
	// void SetRightTopTextInfo(FText& Title, FString Content, ESlateVisibility textVisibility);                             // [0x61d2f50] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.HandleSurvivorCameraSensitivityChanged
	// void HandleSurvivorCameraSensitivityChanged(int32_t value);                                                           // [0x59358b0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.HandleSettingTabClick
	// void HandleSettingTabClick(int32_t tabIndex);                                                                         // [0x5935780] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.HandleLeaveButtonClick
	// void HandleLeaveButtonClick();                                                                                        // [0x4b5a790] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.HandleLanguageButtonClick
	// void HandleLanguageButtonClick(int32_t index);                                                                        // [0x5935660] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.HandleKillerCameraSensitivityChanged
	// void HandleKillerCameraSensitivityChanged(int32_t value);                                                             // [0x59355d0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.HandleInvertYToggleClick
	// void HandleInvertYToggleClick(bool toggleValue);                                                                      // [0x5935540] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.HandleInteractionButtonToggleClick
	// void HandleInteractionButtonToggleClick(int32_t index);                                                               // [0x59354b0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.HandleHandSideToggleClick
	// void HandleHandSideToggleClick(int32_t index);                                                                        // [0x5935420] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.HandleContextButtonClickEvent
	// void HandleContextButtonClickEvent(int32_t index);                                                                    // [0x5935390] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.HandleAlwaysDisplayButtonClick
	// void HandleAlwaysDisplayButtonClick(int32_t tabIndex);                                                                // [0x5935260] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGAtlantaSettingScreen.HandleAimAssistToggleClick
	// void HandleAimAssistToggleClick(bool toggleValue);                                                                    // [0x59351d0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGAtlantaStoreScreen
/// Size: 0x0038 (0x000338 - 0x000370)
class UUMGAtlantaStoreScreen : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0338   (0x0020)  MISSED
	class UScaleBox*                                   AuricCellsWidget;                                           // 0x0358   (0x0008)  
	class UUniformGridPanel*                           AuricCellsGridPanel;                                        // 0x0360   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0368   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlantaStoreScreen.SetBank
	// void SetBank(ECurrencyType CurrencyType, int32_t Bank);                                                               // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGAtlantaStoreScreen.HandleOnStoreLeft
	// void HandleOnStoreLeft();                                                                                             // [0x4b5a790] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGAtlantaStoreScreen.HandleOnClickedBuyAuricCell
	// void HandleOnClickedBuyAuricCell(int32_t cellIndex);                                                                  // [0x59356f0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGAtlantaTutorialScreen
/// Size: 0x0000 (0x000338 - 0x000338)
class UUMGAtlantaTutorialScreen : public UMobileBaseUserWidget
{ 
public:
};

/// Class /Script/DeadByDaylight.UMGBaseStorefrontWidget
/// Size: 0x0000 (0x000338 - 0x000338)
class UUMGBaseStorefrontWidget : public UMobileBaseUserWidget
{ 
public:
};

/// Class /Script/DeadByDaylight.UMGBaseCurrencyStorefrontWidget
/// Size: 0x0010 (0x000338 - 0x000348)
class UUMGBaseCurrencyStorefrontWidget : public UUMGBaseStorefrontWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0338   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGBaseCurrencyStorefrontWidget.BroadcastOnAuricCellButtonClicked
	// void BroadcastOnAuricCellButtonClicked(int32_t cellIndex);                                                            // [0x5935140] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGAtlCurrencyStorefrontWidget
/// Size: 0x00D0 (0x000348 - 0x000418)
class UUMGAtlCurrencyStorefrontWidget : public UUMGBaseCurrencyStorefrontWidget
{ 
public:
	class UCanvasPanel*                                AuricCellsCanvasPanel;                                      // 0x0348   (0x0008)  
	class UUniformGridPanel*                           AuricCellsGridPanel;                                        // 0x0350   (0x0008)  
	class UHorizontalBox*                              BottomPurchaseBox;                                          // 0x0358   (0x0008)  
	class URichTextBlock*                              BottomRightPurchaseRichText;                                // 0x0360   (0x0008)  
	class UOverlay*                                    BottomTimer;                                                // 0x0368   (0x0008)  
	class UImage*                                      AuricsBgR;                                                  // 0x0370   (0x0008)  
	class UImage*                                      AuricsBgL;                                                  // 0x0378   (0x0008)  
	class UHorizontalBox*                              EventItemsPackContainerBox;                                 // 0x0380   (0x0008)  
	FMargin                                            PaddingEventItemsPackButton;                                // 0x0388   (0x0010)  
	SDK_UNDEFINED(48,2364) /* TWeakObjectPtr<UClass*> */ __um(EventItemsPackWidgetClass);                          // 0x0398   (0x0030)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x03C8   (0x0018)  MISSED
	TArray<class UUMGStoreAuricCellButton*>            _auricCellButtons;                                          // 0x03E0   (0x0010)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x03F0   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlCurrencyStorefrontWidget.UpdateFirstPurchaseForAllAuricCellsEndInUI
	// void UpdateFirstPurchaseForAllAuricCellsEndInUI(FString endInText);                                                   // [0x61d2f50] Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGAtlEndDateTimerWidget
/// Size: 0x0040 (0x000338 - 0x000378)
class UUMGAtlEndDateTimerWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  TextEndIn;                                                  // 0x0338   (0x0008)  
	unsigned char                                      UnknownData00_6[0x38];                                      // 0x0340   (0x0038)  MISSED
};

/// Struct /Script/DeadByDaylight.EventItemsContentTypeUIData
/// Size: 0x0090 (0x000000 - 0x000090)
struct FEventItemsContentTypeUIData
{ 
	EEventItemContentType                              ContentType;                                                // 0x0000   (0x0001)  
	bool                                               NeedRemoveRarityBackground;                                 // 0x0001   (0x0001)  
	bool                                               UseDefaultRarityBackgroundColor;                            // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x0003   (0x0005)  MISSED
	FSlateColor                                        DefaultRarityBackgroundColor;                               // 0x0008   (0x0028)  
	SDK_UNDEFINED(48,2365) /* TWeakObjectPtr<UTexture2D*> */ __um(BackgroundTexture);                              // 0x0030   (0x0030)  
	SDK_UNDEFINED(48,2366) /* TWeakObjectPtr<UTexture2D*> */ __um(RarityBackgroundTexture);                        // 0x0060   (0x0030)  
};

/// Class /Script/DeadByDaylight.UMGAtlEventItemWidget
/// Size: 0x0060 (0x000338 - 0x000398)
class UUMGAtlEventItemWidget : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      SquareImageBackground;                                      // 0x0338   (0x0008)  
	class UImage*                                      SquareRarityBackground;                                     // 0x0340   (0x0008)  
	class UImage*                                      SquareIcon;                                                 // 0x0348   (0x0008)  
	class UImage*                                      PortraitImageBackground;                                    // 0x0350   (0x0008)  
	class UImage*                                      PortraitRarityBackground;                                   // 0x0358   (0x0008)  
	class UImage*                                      PortraitIcon;                                               // 0x0360   (0x0008)  
	class UTextBlock*                                  NameText;                                                   // 0x0368   (0x0008)  
	class UTextBlock*                                  QuantityText;                                               // 0x0370   (0x0008)  
	class UCanvasPanel*                                PortraitCanvas;                                             // 0x0378   (0x0008)  
	class UCanvasPanel*                                SquareCanvas;                                               // 0x0380   (0x0008)  
	TArray<FEventItemsContentTypeUIData>               ContentTypeUIData;                                          // 0x0388   (0x0010)  
};

/// Class /Script/DeadByDaylight.UMGBaseLandingPageStorefrontWidget
/// Size: 0x00F0 (0x000338 - 0x000428)
class UUMGBaseLandingPageStorefrontWidget : public UUMGBaseStorefrontWidget
{ 
public:
	class UHorizontalBox*                              BigButtonsSlot;                                             // 0x0338   (0x0008)  
	class UVerticalBox*                                SmallButtonsSlot1;                                          // 0x0340   (0x0008)  
	class UVerticalBox*                                SmallButtonsSlot2;                                          // 0x0348   (0x0008)  
	SDK_UNDEFINED(48,2367) /* TWeakObjectPtr<UClass*> */ __um(SmallButtonClass);                                   // 0x0350   (0x0030)  
	SDK_UNDEFINED(48,2368) /* TWeakObjectPtr<UClass*> */ __um(MediumButtonClass);                                  // 0x0380   (0x0030)  
	SDK_UNDEFINED(48,2369) /* TWeakObjectPtr<UClass*> */ __um(BigButtonClass);                                     // 0x03B0   (0x0030)  
	FLinearColor                                       DisabledButtonColor;                                        // 0x03E0   (0x0010)  
	SDK_UNDEFINED(24,2370) /* FText */                 __um(DisabledButtonText);                                   // 0x03F0   (0x0018)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0408   (0x0010)  MISSED
	TArray<class UUMGLandingPageButtonWidget*>         _landingPageTabs;                                           // 0x0418   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGBaseLandingPageStorefrontWidget.HandleTabSelected
	// void HandleTabSelected(EStorefrontState& tabId);                                                                      // [0x5935940] Final|Native|Private|HasOutParms 
};

/// Class /Script/DeadByDaylight.UMGAtlLandingPageStorefrontWidget
/// Size: 0x0018 (0x000428 - 0x000440)
class UUMGAtlLandingPageStorefrontWidget : public UUMGBaseLandingPageStorefrontWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0428   (0x0010)  MISSED
	class UUMGBaseButtonWidget*                        AtlantaRedeemCodeBtn;                                       // 0x0438   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGAtlLandingPageStorefrontWidget.OnPromoCodeButtonPressed
	// void OnPromoCodeButtonPressed();                                                                                      // [0x5935c30] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGBasePassStorefrontWidget
/// Size: 0x0038 (0x000338 - 0x000370)
class UUMGBasePassStorefrontWidget : public UUMGBaseStorefrontWidget
{ 
public:
	class UUMGSubscriptionsPageScrollWidget*           SubscriptionsPageScroll;                                    // 0x0338   (0x0008)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x0340   (0x0030)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGBasePassStorefrontWidget.HandleSubscriptionInfoButtonClickedEvent
	// void HandleSubscriptionInfoButtonClickedEvent(FString subscriptionDetails);                                           // [0x5935810] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGBasePassStorefrontWidget.HandleBuySubscriptionPackButtonClickedEvent
	// void HandleBuySubscriptionPackButtonClickedEvent(FName subscriptionPackID);                                           // [0x59352f0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGAtlPassStorefrontWidget
/// Size: 0x0000 (0x000370 - 0x000370)
class UUMGAtlPassStorefrontWidget : public UUMGBasePassStorefrontWidget
{ 
public:
};

/// Class /Script/DeadByDaylight.UMGBaseRootStorefrontWidget
/// Size: 0x00F0 (0x000338 - 0x000428)
class UUMGBaseRootStorefrontWidget : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0338   (0x0048)  MISSED
	class UNamedSlot*                                  StorePageSlot;                                              // 0x0380   (0x0008)  
	class UUMGBaseButtonWidget*                        BackButton;                                                 // 0x0388   (0x0008)  
	class UPanelWidget*                                CurrencyButtonsPanel;                                       // 0x0390   (0x0008)  
	class UTextBlock*                                  StorefrontTitle;                                            // 0x0398   (0x0008)  
	unsigned char                                      UnknownData01_6[0x88];                                      // 0x03A0   (0x0088)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGBaseRootStorefrontWidget.OnPurchaseAuricCellButtonPressed
	// void OnPurchaseAuricCellButtonPressed();                                                                              // [0x4bb3b00] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGBaseRootStorefrontWidget.OnCurrencyButtonLongPressed
	// void OnCurrencyButtonLongPressed(FTooltipPressedData& TooltipPressedData, ECurrencyType CurrencyType);                // [0x59359f0] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.UMGBaseRootStorefrontWidget.OnBackButtonPressed
	// void OnBackButtonPressed();                                                                                           // [0x5930610] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGAtlRootStorefrontWidget
/// Size: 0x0010 (0x000428 - 0x000438)
class UUMGAtlRootStorefrontWidget : public UUMGBaseRootStorefrontWidget
{ 
public:
	class UUMGCurrencyWidget*                          ShardWalletWidget;                                          // 0x0428   (0x0008)  
	class UUMGAuricCellsButton*                        AuricWalletWidget;                                          // 0x0430   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGAtlStorePriceWidget
/// Size: 0x0008 (0x000338 - 0x000340)
class UUMGAtlStorePriceWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  PriceText;                                                  // 0x0338   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGCurrencyWidget
/// Size: 0x0018 (0x000468 - 0x000480)
class UUMGCurrencyWidget : public UUMGBaseButtonWidget
{ 
public:
	ECurrencyType                                      CurrencyType;                                               // 0x0468   (0x0001)  
	unsigned char                                      UnknownData00_6[0x17];                                      // 0x0469   (0x0017)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGCurrencyWidget.HandleTooltipLongPressEvent
	// void HandleTooltipLongPressEvent();                                                                                   // [0x593faa0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGAuricCellsButton
/// Size: 0x0010 (0x000480 - 0x000490)
class UUMGAuricCellsButton : public UUMGCurrencyWidget
{ 
public:
	class UImage*                                      PlusImage;                                                  // 0x0480   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0488   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.UMGAuthentificationProviderListWidget
/// Size: 0x0008 (0x000338 - 0x000340)
class UUMGAuthentificationProviderListWidget : public UMobileBaseUserWidget
{ 
public:
	class UHorizontalBox*                              GuestButtonContainer;                                       // 0x0338   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGAuthentificationProviderListWidget.HideGuestButton
	// void HideGuestButton();                                                                                               // [0x59359d0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGBankAndPlayerInfoWidget
/// Size: 0x00A8 (0x000338 - 0x0003E0)
class UUMGBankAndPlayerInfoWidget : public UMobileBaseUserWidget
{ 
public:
	class UUMGBankWidget*                              BankWidget;                                                 // 0x0338   (0x0008)  
	class UTextBlock*                                  playerNameText;                                             // 0x0340   (0x0008)  
	class UUMGSelectedCharacterWidget*                 SelectedCharacterWidget;                                    // 0x0348   (0x0008)  
	ESlateVisibility                                   RankWidgetVisibility;                                       // 0x0350   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0351   (0x0007)  MISSED
	class UUMGLevelBannerWidget*                       LevelBanner;                                                // 0x0358   (0x0008)  
	class UUMGRankBanner*                              RankBanner;                                                 // 0x0360   (0x0008)  
	class UUMGMainMenuMonthlyPassButton*               MonthlyPassButton;                                          // 0x0368   (0x0008)  
	unsigned char                                      UnknownData01_5[0x60];                                      // 0x0370   (0x0060)  MISSED
	SDK_UNDEFINED(16,2371) /* FMulticastInlineDelegate */ __um(_onCancelPartyButtonClickedEvent);                  // 0x03D0   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGBankAndPlayerInfoWidget.SetPlayerLevelBP
	// void SetPlayerLevelBP(int32_t Level, int32_t devotion, int32_t currentLevelXp, int32_t totalLevelXp, bool IsSlasher, bool playUpdateAnim); // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBankAndPlayerInfoWidget.OnTooltipTriggeredByRankBanner
	// void OnTooltipTriggeredByRankBanner(FTooltipPressedData& TooltipPressedData);                                         // [0x5935e80] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.UMGBankAndPlayerInfoWidget.OnTooltipTriggeredByLevelBannerWidget
	// void OnTooltipTriggeredByLevelBannerWidget(FTooltipPressedData& TooltipPressedData);                                  // [0x5935dc0] Final|Native|Public|HasOutParms 
	// Function /Script/DeadByDaylight.UMGBankAndPlayerInfoWidget.OnTooltipTriggeredByCurrency
	// void OnTooltipTriggeredByCurrency(FTooltipPressedData& TooltipPressedData, ECurrencyType CurrencyType);               // [0x5935cb0] Final|Native|Private|HasOutParms 
	// Function /Script/DeadByDaylight.UMGBankAndPlayerInfoWidget.OnPurchaseAuricCellsButtonClicked
	// void OnPurchaseAuricCellsButtonClicked();                                                                             // [0x5935c50] Final|Native|Public  
	// Function /Script/DeadByDaylight.UMGBankAndPlayerInfoWidget.OnPrestigeButtonClicked
	// void OnPrestigeButtonClicked();                                                                                       // [0x5935c10] Final|Native|Public  
	// Function /Script/DeadByDaylight.UMGBankAndPlayerInfoWidget.OnMainMenuSubscriptionClicked
	// void OnMainMenuSubscriptionClicked();                                                                                 // [0x4ba0a10] Final|Native|Public  
	// Function /Script/DeadByDaylight.UMGBankAndPlayerInfoWidget.OnCancelPartyButtonClicked
	// void OnCancelPartyButtonClicked();                                                                                    // [0x4b5ecd0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGBankWidget
/// Size: 0x0038 (0x000338 - 0x000370)
class UUMGBankWidget : public UMobileBaseUserWidget
{ 
public:
	class UUMGCurrencyWidget*                          BloodPointsCurrency;                                        // 0x0338   (0x0008)  
	class UUMGAuricCellsButton*                        CellsButton;                                                // 0x0340   (0x0008)  
	class UUMGCurrencyWidget*                          IridescentShardsCurrency;                                   // 0x0348   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0350   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGBankWidget.OnPurchaseAuricCellsClicked
	// void OnPurchaseAuricCellsClicked();                                                                                   // [0x5935c70] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGBankWidget.OnCurrencyTooltipRequested
	// void OnCurrencyTooltipRequested(FTooltipPressedData& TooltipPressedData, ECurrencyType CurrencyType);                 // [0x5935b00] Final|Native|Protected|HasOutParms 
};

/// Class /Script/DeadByDaylight.UMGBaseAlertWidget
/// Size: 0x0030 (0x000298 - 0x0002C8)
class UUMGBaseAlertWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0298   (0x0030)  MISSED
};

/// Class /Script/DeadByDaylight.UMGBaseCountdownWidget
/// Size: 0x0068 (0x000338 - 0x0003A0)
class UUMGBaseCountdownWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  TimerTextBlock;                                             // 0x0338   (0x0008)  
	int32_t                                            _timerThreshold;                                            // 0x0340   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0344   (0x0004)  MISSED
	FSlateColor                                        _timerColorBelowThreshold;                                  // 0x0348   (0x0028)  
	FSlateColor                                        _timerColorBeyondThreshold;                                 // 0x0370   (0x0028)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0398   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.UMGBaseCurrencyButtonWidget
/// Size: 0x00A8 (0x000468 - 0x000510)
class UUMGBaseCurrencyButtonWidget : public UUMGBaseButtonWidget
{ 
public:
	class UImage*                                      FXImage;                                                    // 0x0468   (0x0008)  
	class UImage*                                      CurrencyColorImage;                                         // 0x0470   (0x0008)  
	class UImage*                                      CurrencyIcon;                                               // 0x0478   (0x0008)  
	class UTextBlock*                                  PriceText;                                                  // 0x0480   (0x0008)  
	FSlateColor                                        AffordableColor;                                            // 0x0488   (0x0028)  
	FSlateColor                                        NotAffordableColor;                                         // 0x04B0   (0x0028)  
	FLinearColor                                       DisabledOpacity;                                            // 0x04D8   (0x0010)  
	FLinearColor                                       EnabledOpacity;                                             // 0x04E8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x04F8   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.UMGBaseSideMainMenuButton
/// Size: 0x0018 (0x000468 - 0x000480)
class UUMGBaseSideMainMenuButton : public UUMGBaseButtonWidget
{ 
public:
	class UImage*                                      NotificationBadge;                                          // 0x0468   (0x0008)  
	float                                              _baseTextOpacity;                                           // 0x0470   (0x0004)  
	float                                              _highlightTextOpacity;                                      // 0x0474   (0x0004)  
	float                                              _baseIconOpacity;                                           // 0x0478   (0x0004)  
	float                                              _highlightIconOpacity;                                      // 0x047C   (0x0004)  
};

/// Class /Script/DeadByDaylight.UMGBaseToastWidget
/// Size: 0x0068 (0x000338 - 0x0003A0)
class UUMGBaseToastWidget : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      ToastIcon;                                                  // 0x0338   (0x0008)  
	class UTextBlock*                                  ToastText;                                                  // 0x0340   (0x0008)  
	class UProgressBar*                                TimeToastProgression;                                       // 0x0348   (0x0008)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x0350   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGBaseToastWidget.TriggerToastInput
	// void TriggerToastInput(int32_t inputCode);                                                                            // [0x5935f80] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGBaseToastWidget.OnTimerFinished
	// void OnTimerFinished();                                                                                               // [0x5935c90] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGBloodStoreArrayWidget
/// Size: 0x0070 (0x000338 - 0x0003A8)
class UUMGBloodStoreArrayWidget : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0338   (0x0010)  MISSED
	class UUMGBloodStoreRowWidget*                     FirstBloodStoreRowWidget;                                   // 0x0348   (0x0008)  
	class UUMGBloodStoreRowWidget*                     SecondBloodStoreRowWidget;                                  // 0x0350   (0x0008)  
	class UUMGBloodStoreRowWidget*                     ThirdBloodStoreRowWidget;                                   // 0x0358   (0x0008)  
	class UUMGBloodStoreRowWidget*                     FourthBloodStoreRowWidget;                                  // 0x0360   (0x0008)  
	class UUMGBloodStoreRowWidget*                     FifthBloodStoreRowWidget;                                   // 0x0368   (0x0008)  
	TArray<class UUMGBloodStoreRowWidget*>             _bloodStoreRowArray;                                        // 0x0370   (0x0010)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x0380   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGBloodStoreArrayWidget.BroadcastBloodNodeSelected
	// void BroadcastBloodNodeSelected(FString ID);                                                                          // [0x593a700] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGBloodStoreItemPreviewWidget
/// Size: 0x0108 (0x000338 - 0x000440)
class UUMGBloodStoreItemPreviewWidget : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0338   (0x0030)  MISSED
	SDK_UNDEFINED(24,2372) /* FText */                 __um(_itemName);                                            // 0x0368   (0x0018)  
	SDK_UNDEFINED(24,2373) /* FText */                 __um(_itemDescription);                                     // 0x0380   (0x0018)  
	int32_t                                            _itemPrice;                                                 // 0x0398   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x039C   (0x0004)  MISSED
	SDK_UNDEFINED(24,2374) /* FText */                 __um(_refreshPrice);                                        // 0x03A0   (0x0018)  
	SDK_UNDEFINED(24,2375) /* FText */                 __um(_nodeStatusText);                                      // 0x03B8   (0x0018)  
	SDK_UNDEFINED(24,2376) /* FText */                 __um(_refreshTitle);                                        // 0x03D0   (0x0018)  
	SDK_UNDEFINED(24,2377) /* FText */                 __um(_itemSelectionTitle);                                  // 0x03E8   (0x0018)  
	SDK_UNDEFINED(24,2378) /* FText */                 __um(_itemSelectionText);                                   // 0x0400   (0x0018)  
	SDK_UNDEFINED(24,2379) /* FText */                 __um(_purchaseTitle);                                       // 0x0418   (0x0018)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0430   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGBloodStoreItemPreviewWidget.UnselectItem
	// void UnselectItem();                                                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemPreviewWidget.ShowRefreshButton
	// void ShowRefreshButton(bool ShowRefreshButton, bool isRefreshFree);                                                   // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemPreviewWidget.ShowPurchaseButton
	// void ShowPurchaseButton(bool ShowPurchaseButton);                                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemPreviewWidget.DisplayItem
	// void DisplayItem(bool isItemPurchaseable, bool isItemAffordable);                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemPreviewWidget.BroadcastUnselectPressed
	// void BroadcastUnselectPressed();                                                                                      // [0x4b50720] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemPreviewWidget.BroadcastRefreshPressed
	// void BroadcastRefreshPressed();                                                                                       // [0x4b55ed0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemPreviewWidget.BroadcastPurchasePressed
	// void BroadcastPurchasePressed();                                                                                      // [0x4b5a790] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGBloodStoreItemWidget
/// Size: 0x0080 (0x000338 - 0x0003B8)
class UUMGBloodStoreItemWidget : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0338   (0x0010)  MISSED
	class UImage*                                      NodeImage;                                                  // 0x0348   (0x0008)  
	class UImage*                                      BackgroundImage;                                            // 0x0350   (0x0008)  
	class UImage*                                      RarityBackground;                                           // 0x0358   (0x0008)  
	class UCanvasPanel*                                ItemPanel;                                                  // 0x0360   (0x0008)  
	class UCanvasPanel*                                MysteryBoxPanel;                                            // 0x0368   (0x0008)  
	class UImage*                                      MysteryBoxRarityBackground;                                 // 0x0370   (0x0008)  
	class UCanvasPanel*                                CollectedPanel;                                             // 0x0378   (0x0008)  
	class UCanvasPanel*                                ConsumedPanel;                                              // 0x0380   (0x0008)  
	EBloodwebNodeContentType                           _contentType;                                               // 0x0388   (0x0001)  
	bool                                               _isMysteryBox;                                              // 0x0389   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x038A   (0x0002)  MISSED
	FVector2D                                          _bigItemScale;                                              // 0x038C   (0x0008)  
	FVector2D                                          _normalItemScale;                                           // 0x0394   (0x0008)  
	float                                              _consumedOpacity;                                           // 0x039C   (0x0004)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x03A0   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGBloodStoreItemWidget.UnFocusNode
	// void UnFocusNode();                                                                                                   // [0x4b5ea80] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemWidget.SetSelectedVisibilities
	// void SetSelectedVisibilities(bool IsSelected);                                                                        // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemWidget.SetBackgroundImages
	// void SetBackgroundImages();                                                                                           // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemWidget.PlayConsumedAnimation
	// void PlayConsumedAnimation(bool skipIntro);                                                                           // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemWidget.FocusNode
	// void FocusNode();                                                                                                     // [0x4b5ea40] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemWidget.ConsumeNode
	// void ConsumeNode();                                                                                                   // [0x4b5ea60] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemWidget.CollectNode
	// void CollectNode();                                                                                                   // [0x4b5e9e0] Native|Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreItemWidget.BroadcastBloodNodeSelected
	// void BroadcastBloodNodeSelected();                                                                                    // [0x593a7f0] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGBloodStoreRowWidget
/// Size: 0x0098 (0x000338 - 0x0003D0)
class UUMGBloodStoreRowWidget : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0338   (0x0010)  MISSED
	class UHorizontalBox*                              ItemContainer;                                              // 0x0348   (0x0008)  
	class UCanvasPanel*                                LockStatusPanel;                                            // 0x0350   (0x0008)  
	class UCanvasPanel*                                HardLockedStatusPanel;                                      // 0x0358   (0x0008)  
	int32_t                                            _purchasedItemsNbr;                                         // 0x0360   (0x0004)  
	int32_t                                            _requiredItemNbr;                                           // 0x0364   (0x0004)  
	EBloodStoreRowStyle                                _rowStyle;                                                  // 0x0368   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0369   (0x0003)  MISSED
	FMargin                                            _itemPadding;                                               // 0x036C   (0x0010)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x037C   (0x0004)  MISSED
	SDK_UNDEFINED(48,2380) /* TWeakObjectPtr<UClass*> */ __um(_itemWidgetClass);                                   // 0x0380   (0x0030)  
	class UClass*                                      _itemClass;                                                 // 0x03B0   (0x0008)  
	unsigned char                                      UnknownData03_6[0x18];                                      // 0x03B8   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGBloodStoreRowWidget.UnlockRow
	// void UnlockRow(bool PlayAnim);                                                                                        // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreRowWidget.LockRow
	// void LockRow(bool PlayAnim);                                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreRowWidget.BroadcastUnlockAnimationFinished
	// void BroadcastUnlockAnimationFinished();                                                                              // [0x593a830] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGBloodStoreRowWidget.BroadcastBloodNodeSelected
	// void BroadcastBloodNodeSelected(FString ID);                                                                          // [0x593a700] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGBloodStoreSubMenu
/// Size: 0x0030 (0x000338 - 0x000368)
class UUMGBloodStoreSubMenu : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0338   (0x0020)  MISSED
	class UUMGBloodStoreTimer*                         SurvivorTimer;                                              // 0x0358   (0x0008)  
	class UUMGBloodStoreTimer*                         KillerTimer;                                                // 0x0360   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGBloodStoreSubMenu.SetFaction
	// void SetFaction(bool IsKiller);                                                                                       // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreSubMenu.BroadcastExpiredBloodWeb
	// void BroadcastExpiredBloodWeb();                                                                                      // [0x4b55ed0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGBloodStoreSubMenu.BroadcastCharacterRoleButtonClicked
	// void BroadcastCharacterRoleButtonClicked();                                                                           // [0x4b5a790] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGBloodStoreTimer
/// Size: 0x0088 (0x000338 - 0x0003C0)
class UUMGBloodStoreTimer : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0338   (0x0010)  MISSED
	FSlateColor                                        _normalColor;                                               // 0x0348   (0x0028)  
	FSlateColor                                        _warningColor;                                              // 0x0370   (0x0028)  
	class UTextBlock*                                  RemainingTimeTextBlock;                                     // 0x0398   (0x0008)  
	class UImage*                                      RefreshImage;                                               // 0x03A0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x03A8   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.UMGBloodStoreWidget
/// Size: 0x00C0 (0x000338 - 0x0003F8)
class UUMGBloodStoreWidget : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(16,2381) /* FMulticastInlineDelegate */ __um(OnBloodNodeSelected);                               // 0x0338   (0x0010)  
	SDK_UNDEFINED(16,2382) /* FMulticastInlineDelegate */ __um(OnBloodNodePurchase);                               // 0x0348   (0x0010)  
	SDK_UNDEFINED(16,2383) /* FMulticastInlineDelegate */ __um(OnBloodStoreRegenerate);                            // 0x0358   (0x0010)  
	SDK_UNDEFINED(16,2384) /* FMulticastInlineDelegate */ __um(OnCharacterRoleButtonClicked);                      // 0x0368   (0x0010)  
	class UUMGBloodStoreArrayWidget*                   BloodStoreArrayWidget;                                      // 0x0378   (0x0008)  
	class UUMGBloodStoreItemPreviewWidget*             ItemPreviewWidget;                                          // 0x0380   (0x0008)  
	class UUMGBloodStoreSubMenu*                       BloodStoreSubMenuWidget;                                    // 0x0388   (0x0008)  
	SDK_UNDEFINED(24,2385) /* FText */                 __um(_bloodStoreTitle);                                     // 0x0390   (0x0018)  
	SDK_UNDEFINED(24,2386) /* FText */                 __um(_killersTitle);                                        // 0x03A8   (0x0018)  
	SDK_UNDEFINED(24,2387) /* FText */                 __um(_survivorsTitle);                                      // 0x03C0   (0x0018)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x03D8   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGBloodStoreWidget.UnselectNode
	// void UnselectNode();                                                                                                  // [0x593b650] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGBloodStoreWidget.SwitchRole
	// void SwitchRole();                                                                                                    // [0x4b50a10] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGBloodStoreWidget.SetSelectedNode
	// void SetSelectedNode(FString selectedId);                                                                             // [0x593b560] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGBloodStoreWidget.SetFaction
	// void SetFaction(bool IsKiller);                                                                                       // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGBloodStoreWidget.RegenerateBloodStore
	// void RegenerateBloodStore();                                                                                          // [0x593b220] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGBloodStoreWidget.PurchaseSelectedNode
	// void PurchaseSelectedNode();                                                                                          // [0x593b200] Final|Native|Private 
};

/// Struct /Script/DeadByDaylight.PrestigeData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPrestigeData
{ 
	int32_t                                            Level;                                                      // 0x0000   (0x0004)  
	float                                              progress;                                                   // 0x0004   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PurchaseCurrencyData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPurchaseCurrencyData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	ECurrencyType                                      CurrencyType;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            Price;                                                      // 0x000C   (0x0004)  
	float                                              DiscountPercentage;                                         // 0x0010   (0x0004)  
	bool                                               IsAffordable;                                               // 0x0014   (0x0001)  
	unsigned char                                      UnknownData02_6[0xB];                                       // 0x0015   (0x000B)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaFreeTicketAffectedUIData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FAtlantaFreeTicketAffectedUIData
{ 
	SDK_UNDEFINED(16,2388) /* FString */               __um(InEffectBGFilePath);                                   // 0x0000   (0x0010)  
	FName                                              ID;                                                         // 0x0010   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	FDateTime                                          EndDate;                                                    // 0x0020   (0x0008)  
	bool                                               HasFreeTicketToUse;                                         // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterSlotData
/// Size: 0x01D8 (0x000000 - 0x0001D8)
struct FCharacterSlotData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	FName                                              ID;                                                         // 0x0008   (0x000C)  
	int32_t                                            CharacterIndex;                                             // 0x0014   (0x0004)  
	SDK_UNDEFINED(16,2389) /* FString */               __um(IconFilePath);                                         // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,2390) /* FString */               __um(BackgroundImagePath);                                  // 0x0028   (0x0010)  
	SDK_UNDEFINED(24,2391) /* FText */                 __um(DisplayName);                                          // 0x0038   (0x0018)  
	SDK_UNDEFINED(24,2392) /* FText */                 __um(Biography);                                            // 0x0050   (0x0018)  
	SDK_UNDEFINED(16,2393) /* FString */               __um(DLCId);                                                // 0x0068   (0x0010)  
	SDK_UNDEFINED(16,2394) /* FString */               __um(DLCTitle);                                             // 0x0078   (0x0010)  
	SDK_UNDEFINED(16,2395) /* FString */               __um(PackId);                                               // 0x0088   (0x0010)  
	SDK_UNDEFINED(16,2396) /* FString */               __um(PackTitle);                                            // 0x0098   (0x0010)  
	int32_t                                            Level;                                                      // 0x00A8   (0x0004)  
	FPrestigeData                                      PrestigeData;                                               // 0x00AC   (0x0008)  
	ECharacterDifficulty                               Difficulty;                                                 // 0x00B4   (0x0001)  
	bool                                               IsUnlocked;                                                 // 0x00B5   (0x0001)  
	bool                                               IsDLCPurchasable;                                           // 0x00B6   (0x0001)  
	bool                                               IsDLCValid;                                                 // 0x00B7   (0x0001)  
	TArray<FPurchaseCurrencyData>                      PurchaseDataList;                                           // 0x00B8   (0x0010)  
	int32_t                                            ItemsOwned;                                                 // 0x00C8   (0x0004)  
	int32_t                                            TotalItems;                                                 // 0x00CC   (0x0004)  
	bool                                               ShowNew;                                                    // 0x00D0   (0x0001)  
	bool                                               IsDlcLockedKiller;                                          // 0x00D1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x00D2   (0x0006)  MISSED
	FSpecialEventUIInfo                                EventInfo;                                                  // 0x00D8   (0x0060)  
	bool                                               IsEnabled;                                                  // 0x0138   (0x0001)  
	EDisabledItemOption                                DisabledItemOption;                                         // 0x0139   (0x0001)  
	unsigned char                                      UnknownData02_5[0x6];                                       // 0x013A   (0x0006)  MISSED
	bool                                               HasNonSelectedPerks;                                        // 0x0140   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0141   (0x0007)  MISSED
	FAtlantaFreeTicketAffectedUIData                   FreeTicketAffectedData;                                     // 0x0148   (0x0030)  
	unsigned char                                      UnknownData04_5[0x30];                                      // 0x0178   (0x0030)  MISSED
	EPlayerRole                                        PlayerRole;                                                 // 0x01A8   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x01A9   (0x0007)  MISSED
	SDK_UNDEFINED(16,2397) /* FString */               __um(RemainingTimeItem);                                    // 0x01B0   (0x0010)  
	SDK_UNDEFINED(16,2398) /* FString */               __um(RemainingTimeDiscount);                                // 0x01C0   (0x0010)  
	unsigned char                                      UnknownData06_6[0x8];                                       // 0x01D0   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.UMGCharacterButton
/// Size: 0x0238 (0x000338 - 0x000570)
class UUMGCharacterButton : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0338   (0x0010)  MISSED
	class UImage*                                      PortraitIcon;                                               // 0x0348   (0x0008)  
	class UCanvasPanel*                                CharacterSelectedPanel;                                     // 0x0350   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0358   (0x0008)  MISSED
	class UCanvasPanel*                                LevelPanel;                                                 // 0x0360   (0x0008)  
	class UTextBlock*                                  CharacterLevelText;                                         // 0x0368   (0x0008)  
	class UTextBlock*                                  OwnedCustomizationText;                                     // 0x0370   (0x0008)  
	class UTextBlock*                                  TotalCustomizationText;                                     // 0x0378   (0x0008)  
	class UCanvasPanel*                                PricePanel;                                                 // 0x0380   (0x0008)  
	class UUMGCharacterPrice*                          CellPrice;                                                  // 0x0388   (0x0008)  
	class UUMGCharacterPrice*                          ShardPrice;                                                 // 0x0390   (0x0008)  
	FCharacterSlotData                                 CharacterSlotData;                                          // 0x0398   (0x01D8)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterButton.SetIsSelected
	// void SetIsSelected(bool IsSelected);                                                                                  // [0x593b4d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGCharacterButton.SetCharacterData
	// void SetCharacterData(FCharacterSlotData& CharacterData);                                                             // [0x593b240] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGCharacterButton.BroadcastClickedEvent
	// void BroadcastClickedEvent(int32_t CharacterIndex);                                                                   // [0x5935140] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGCharacterFreeTicketButton
/// Size: 0x0050 (0x000338 - 0x000388)
class UUMGCharacterFreeTicketButton : public UMobileBaseUserWidget
{ 
public:
	class UWidgetSwitcher*                             ButtonSwitcher;                                             // 0x0338   (0x0008)  
	class UTextBlock*                                  FreeTicketLeftSecondsText;                                  // 0x0340   (0x0008)  
	class UImage*                                      FreeTicketLeftSecondsBG;                                    // 0x0348   (0x0008)  
	unsigned char                                      UnknownData00_6[0x38];                                      // 0x0350   (0x0038)  MISSED
};

/// Class /Script/DeadByDaylight.UMGCharacterFreeTicketItemButton
/// Size: 0x0020 (0x000338 - 0x000358)
class UUMGCharacterFreeTicketItemButton : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0338   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterFreeTicketItemButton.UpdateWidget
	// void UpdateWidget(FString bgPath, bool IsSlasher, int32_t durationInHours, int32_t itemCount, FSlateColor& IconColor); // [0x61d2f50] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGCharacterFreeTicketItemButton.BroadcastClickEvent
	// void BroadcastClickEvent();                                                                                           // [0x593a810] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGCharacterFreeTicketWidget
/// Size: 0x0060 (0x000338 - 0x000398)
class UUMGCharacterFreeTicketWidget : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(16,2399) /* FMulticastInlineDelegate */ __um(OnUseFreeTicketEvent);                              // 0x0338   (0x0010)  
	class UWidgetSwitcher*                             PanelSwitcher;                                              // 0x0348   (0x0008)  
	class UVerticalBox*                                FreeTicketItemButtonBox;                                    // 0x0350   (0x0008)  
	SDK_UNDEFINED(48,2400) /* TWeakObjectPtr<UClass*> */ __um(_buttonClass);                                       // 0x0358   (0x0030)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0388   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterFreeTicketWidget.UpdateBGColor
	// void UpdateBGColor(bool IsSlasher);                                                                                   // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGCharacterFreeTicketWidget.HandleButtonClickEvent
	// void HandleButtonClickEvent(FString ticketId, FString characterName);                                                 // [0x593a850] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.UMGCharacterInfoScreen
/// Size: 0x00A0 (0x000338 - 0x0003D8)
class UUMGCharacterInfoScreen : public UMobileBaseUserWidget
{ 
public:
	class UCanvasPanel*                                ContentPanel;                                               // 0x0338   (0x0008)  
	SDK_UNDEFINED(48,2401) /* TWeakObjectPtr<UClass*> */ __um(SurvivorInfoWidgetClass);                            // 0x0340   (0x0030)  
	SDK_UNDEFINED(48,2402) /* TWeakObjectPtr<UClass*> */ __um(KillerInfoWidgetClass);                              // 0x0370   (0x0030)  
	class UUMGPopupButton*                             ProgressionButton;                                          // 0x03A0   (0x0008)  
	SDK_UNDEFINED(16,2403) /* FMulticastInlineDelegate */ __um(_onTeachableTooltipTriggeredLongPressEvent);        // 0x03A8   (0x0010)  
	SDK_UNDEFINED(16,2404) /* FMulticastInlineDelegate */ __um(_onPowerItemTooltipTriggeredLongPressEvent);        // 0x03B8   (0x0010)  
	SDK_UNDEFINED(16,2405) /* FMulticastInlineDelegate */ __um(_onProgressionButtonClickEvent);                    // 0x03C8   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterInfoScreen.HandleTeachablePerkTooltipLongPressedEvent
	// void HandleTeachablePerkTooltipLongPressedEvent(FTeachableData& TeachableData, FVector2D& position);                  // [0x593ad00] Final|Native|Private|HasOutParms|HasDefaults 
	// Function /Script/DeadByDaylight.UMGCharacterInfoScreen.HandleProgressionButtonClickEvent
	// void HandleProgressionButtonClickEvent();                                                                             // [0x593ace0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGCharacterInfoScreen.HandlePowerItemTooltipLongPressedEvent
	// void HandlePowerItemTooltipLongPressedEvent(FInventorySlotData& SlotData, FVector2D position);                        // [0x593a9e0] Final|Native|Private|HasOutParms|HasDefaults 
};

/// Class /Script/DeadByDaylight.UMGCharacterInfoWidget
/// Size: 0x0130 (0x000338 - 0x000468)
class UUMGCharacterInfoWidget : public UMobileBaseUserWidget
{ 
public:
	class UScrollBox*                                  CharacterInfoScrollBox;                                     // 0x0338   (0x0008)  
	class UUMGCharacterScrollingInfoWidget*            CharacterScrollingInfoWidget;                               // 0x0340   (0x0008)  
	class UCanvasPanel*                                CharacterDLCPanel;                                          // 0x0348   (0x0008)  
	class UImage*                                      CharacterBackgroundImage;                                   // 0x0350   (0x0008)  
	class UTextBlock*                                  characterName;                                              // 0x0358   (0x0008)  
	SDK_UNDEFINED(24,2406) /* FText */                 __um(_characterDifficultyText);                             // 0x0360   (0x0018)  
	SDK_UNDEFINED(16,2407) /* FString */               __um(_characterDLCText);                                    // 0x0378   (0x0010)  
	bool                                               _isKiller;                                                  // 0x0388   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0389   (0x0007)  MISSED
	FSlateColor                                        _easyColor;                                                 // 0x0390   (0x0028)  
	FSlateColor                                        _intermediaryColor;                                         // 0x03B8   (0x0028)  
	FSlateColor                                        _hardColor;                                                 // 0x03E0   (0x0028)  
	FSlateColor                                        _currentColor;                                              // 0x0408   (0x0028)  
	SDK_UNDEFINED(24,2408) /* FText */                 __um(_characterDLCTitle);                                   // 0x0430   (0x0018)  
	SDK_UNDEFINED(16,2409) /* FMulticastInlineDelegate */ __um(_onTeachableTooltipTriggeredLongPressEvent);        // 0x0448   (0x0010)  
	SDK_UNDEFINED(16,2410) /* FMulticastInlineDelegate */ __um(_onPowerItemTooltipTriggeredLongPressEvent);        // 0x0458   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterInfoWidget.HandleTooltipLongPressedEvent
	// void HandleTooltipLongPressedEvent(FTeachableData& TeachableData, FVector2D& position);                               // [0x593ae20] Final|Native|Private|HasOutParms|HasDefaults 
	// Function /Script/DeadByDaylight.UMGCharacterInfoWidget.HandlePowerItemTooltipLongPressedEvent
	// void HandlePowerItemTooltipLongPressedEvent(FInventorySlotData& SlotData, FVector2D position);                        // [0x593ab60] Final|Native|Private|HasOutParms|HasDefaults 
};

/// Class /Script/DeadByDaylight.UMGCharacterPageScrollWidget
/// Size: 0x00A8 (0x000470 - 0x000518)
class UUMGCharacterPageScrollWidget : public UUMGGridPageScrollWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0470   (0x0010)  MISSED
	SDK_UNDEFINED(48,2411) /* TWeakObjectPtr<UClass*> */ __um(_characterButtonWidgetClass);                        // 0x0480   (0x0030)  
	TArray<FCharacterSlotData>                         _charactersData;                                            // 0x04B0   (0x0010)  
	bool                                               _isKiller;                                                  // 0x04C0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x04C1   (0x0007)  MISSED
	SDK_UNDEFINED(24,2412) /* FText */                 __um(_charactersTitleText);                                 // 0x04C8   (0x0018)  
	SDK_UNDEFINED(24,2413) /* FText */                 __um(_killersTitleText);                                    // 0x04E0   (0x0018)  
	SDK_UNDEFINED(24,2414) /* FText */                 __um(_survivorsTitleText);                                  // 0x04F8   (0x0018)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0510   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterPageScrollWidget.HandleCharacterClicked
	// void HandleCharacterClicked(int32_t CharacterIndex);                                                                  // [0x593a950] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGCharacterPrestigeIcon
/// Size: 0x0008 (0x000338 - 0x000340)
class UUMGCharacterPrestigeIcon : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      PrestigeImage;                                              // 0x0338   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGCharacterPrestigeButton
/// Size: 0x0028 (0x000340 - 0x000368)
class UUMGCharacterPrestigeButton : public UUMGCharacterPrestigeIcon
{ 
public:
	class UButton*                                     PrestigeButton;                                             // 0x0340   (0x0008)  
	class UCanvasPanel*                                PrestigeAnimationCanvas;                                    // 0x0348   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0350   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterPrestigeButton.SetCharacterPrestigeData
	// void SetCharacterPrestigeData(bool CanPrestige, int32_t PrestigeLevel, EPlayerRole Role);                             // [0x593b2f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGCharacterPrestigeButton.OnPrestigeButtonClicked
	// void OnPrestigeButtonClicked();                                                                                       // [0x593b1e0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGCharacterPrice
/// Size: 0x0010 (0x000338 - 0x000348)
class UUMGCharacterPrice : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  PriceTextBlock;                                             // 0x0338   (0x0008)  
	FColor                                             AffordableColor;                                            // 0x0340   (0x0004)  
	FColor                                             UnaffordableColor;                                          // 0x0344   (0x0004)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterPrice.SetCurrencyData
	// void SetCurrencyData(FPurchaseCurrencyData& CurrencyData);                                                            // [0x593b400] Final|Native|Public|HasOutParms 
};

/// Class /Script/DeadByDaylight.UMGCharacterRotationWidget
/// Size: 0x0038 (0x000298 - 0x0002D0)
class UUMGCharacterRotationWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0298   (0x0038)  MISSED
};

/// Class /Script/DeadByDaylight.UMGCharacterScrollingInfoWidget
/// Size: 0x0160 (0x000338 - 0x000498)
class UUMGCharacterScrollingInfoWidget : public UMobileBaseUserWidget
{ 
public:
	class UUMGTeachablePerkButton*                     FirstTeachablePerk;                                         // 0x0338   (0x0008)  
	class UUMGTeachablePerkButton*                     SecondTeachablePerk;                                        // 0x0340   (0x0008)  
	class UUMGTeachablePerkButton*                     ThirdTeachablePerk;                                         // 0x0348   (0x0008)  
	class UCanvasPanel*                                KillerInfoPanel;                                            // 0x0350   (0x0008)  
	class UUMGInventoryItemButton*                     KillerPower;                                                // 0x0358   (0x0008)  
	class UUMGHtmlRichText*                            CharacterBackstoryBox;                                      // 0x0360   (0x0008)  
	SDK_UNDEFINED(24,2415) /* FText */                 __um(_killerPowerName);                                     // 0x0368   (0x0018)  
	SDK_UNDEFINED(24,2416) /* FText */                 __um(_killerSpeedText);                                     // 0x0380   (0x0018)  
	SDK_UNDEFINED(24,2417) /* FText */                 __um(_killerTerrorRadiusText);                              // 0x0398   (0x0018)  
	SDK_UNDEFINED(24,2418) /* FText */                 __um(_killerHeightText);                                    // 0x03B0   (0x0018)  
	SDK_UNDEFINED(24,2419) /* FText */                 __um(_perksTitle);                                          // 0x03C8   (0x0018)  
	SDK_UNDEFINED(24,2420) /* FText */                 __um(_teachablesTitle);                                     // 0x03E0   (0x0018)  
	SDK_UNDEFINED(24,2421) /* FText */                 __um(_powerTitle);                                          // 0x03F8   (0x0018)  
	SDK_UNDEFINED(24,2422) /* FText */                 __um(_attributesTitle);                                     // 0x0410   (0x0018)  
	class UTextBlock*                                  FirstTeachablePerkText;                                     // 0x0428   (0x0008)  
	class UTextBlock*                                  SecondTeachablePerkText;                                    // 0x0430   (0x0008)  
	class UTextBlock*                                  ThirdTeachablePerkText;                                     // 0x0438   (0x0008)  
	SDK_UNDEFINED(24,2423) /* FText */                 __um(_backStoryTitle);                                      // 0x0440   (0x0018)  
	TArray<class UUMGTeachablePerkButton*>             _teachablePerkArray;                                        // 0x0458   (0x0010)  
	TArray<class UTextBlock*>                          _teachablePerkNameArray;                                    // 0x0468   (0x0010)  
	SDK_UNDEFINED(16,2424) /* FMulticastInlineDelegate */ __um(_onTeachableTooltipTriggeredEvent);                 // 0x0478   (0x0010)  
	SDK_UNDEFINED(16,2425) /* FMulticastInlineDelegate */ __um(_onPowerButtonTooltipLongPressEvent);               // 0x0488   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterScrollingInfoWidget.HandleTooltipLongPressedKillerPowerEvent
	// void HandleTooltipLongPressedKillerPowerEvent(FInventorySlotData& ItemData, FVector2D position);                      // [0x593b060] Final|Native|Private|HasOutParms|HasDefaults 
	// Function /Script/DeadByDaylight.UMGCharacterScrollingInfoWidget.HandleTooltipLongPressedEvent
	// void HandleTooltipLongPressedEvent(FTeachableData& TeachableData, FVector2D& position);                               // [0x593af40] Final|Native|Private|HasOutParms|HasDefaults 
};

/// Class /Script/DeadByDaylight.UMGCharacterSelectionWidget
/// Size: 0x0058 (0x000338 - 0x000390)
class UUMGCharacterSelectionWidget : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(16,2426) /* FMulticastInlineDelegate */ __um(OnCharacterSelected);                               // 0x0338   (0x0010)  
	SDK_UNDEFINED(16,2427) /* FMulticastInlineDelegate */ __um(OnCharacterRoleButtonClicked);                      // 0x0348   (0x0010)  
	SDK_UNDEFINED(16,2428) /* FMulticastInlineDelegate */ __um(OnCharacterInfoButtonClicked);                      // 0x0358   (0x0010)  
	class UUMGCharacterPageScrollWidget*               CharacterPageScrollWidget;                                  // 0x0368   (0x0008)  
	class UUMGCharacterSelectSubmenu*                  CharacterSelectSubMenu;                                     // 0x0370   (0x0008)  
	class UUMGCharacterInfoWidget*                     CharacterInfoWidget;                                        // 0x0378   (0x0008)  
	class UWidgetSwitcher*                             CharacterSwitcher;                                          // 0x0380   (0x0008)  
	bool                                               _isKiller;                                                  // 0x0388   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0389   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterSelectionWidget.SwitchPanel
	// void SwitchPanel();                                                                                                   // [0x593fb90] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGCharacterSelectionWidget.BroadcastSelectedCharacter
	// void BroadcastSelectedCharacter(int32_t CharacterIndex);                                                              // [0x5935140] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGCharacterSelectionWidget.BroadcastRoleButtonClicked
	// void BroadcastRoleButtonClicked();                                                                                    // [0x4b55ed0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGCharacterSelectSubmenu
/// Size: 0x0020 (0x000338 - 0x000358)
class UUMGCharacterSelectSubmenu : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0338   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterSelectSubmenu.SetInInfoPanelMode
	// void SetInInfoPanelMode(bool isInInfoPanel);                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGCharacterSelectSubmenu.SetCurrentRole
	// void SetCurrentRole(bool IsKiller);                                                                                   // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGCharacterSelectSubmenu.BroadcastRoleButtonClicked
	// void BroadcastRoleButtonClicked();                                                                                    // [0x4b5a790] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGCharacterSelectSubmenu.BroadcastInfoButtonClicked
	// void BroadcastInfoButtonClicked();                                                                                    // [0x4b55ed0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGCharacterSelectSubmenuButton
/// Size: 0x0008 (0x000468 - 0x000470)
class UUMGCharacterSelectSubmenuButton : public UUMGBaseButtonWidget
{ 
public:
	class UCanvasPanel*                                NotificationPanel;                                          // 0x0468   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGCharacterSlideShowWidget
/// Size: 0x0070 (0x000338 - 0x0003A8)
class UUMGCharacterSlideShowWidget : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(80,2429) /* TMap<FName, TWeakObjectPtr<UTexture2D*>> */ __um(_perkCategoriesIcons);              // 0x0338   (0x0050)  
	float                                              SecondsBeforeNextSlide;                                     // 0x0388   (0x0004)  
	unsigned char                                      UnknownData00_6[0x1C];                                      // 0x038C   (0x001C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGCharacterSlideShowWidget.WaitAndFadeOut
	// void WaitAndFadeOut();                                                                                                // [0x593fbb0] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGCharacterSlideShowWidget.SwitchCharacterSlide
	// void SwitchCharacterSlide();                                                                                          // [0x593fb70] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGCharacterSlideShowWidget.FadeOut
	// void FadeOut();                                                                                                       // [0x593f9e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGCharacterSlideShowWidget.FadeIn
	// void FadeIn();                                                                                                        // [0x593f9c0] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGCharacterSlideShowWidget.DisplayCharacterSlide
	// void DisplayCharacterSlide(FCharacterSlideData& characterSlide);                                                      // [0x61d2f50] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGChargeableInteractionWidget
/// Size: 0x0028 (0x000338 - 0x000360)
class UUMGChargeableInteractionWidget : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      ItemIcon;                                                   // 0x0338   (0x0008)  
	ESlateVisibility                                   InteractionIconVisibility;                                  // 0x0340   (0x0001)  
	ESlateVisibility                                   ItemChargeVisibility;                                       // 0x0341   (0x0001)  
	ESlateVisibility                                   InteractionHudVisibility;                                   // 0x0342   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1D];                                      // 0x0343   (0x001D)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGChargeableInteractionWidget.SetSecondaryMessage
	// void SetSecondaryMessage(FString secondMessage);                                                                      // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGChargeableInteractionWidget.SetProgressbarValue
	// void SetProgressbarValue(float value);                                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGChargeableInteractionWidget.SetProgressBarColor
	// void SetProgressBarColor(EBarColor BarColor);                                                                         // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGChargeableInteractionWidget.SetProficiencyData
	// void SetProficiencyData(int32_t index, FStatusEffectSlotData& proficiencyData);                                       // [0x61d2f50] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGChargeableInteractionWidget.SetOpacity
	// void SetOpacity(float Opacity);                                                                                       // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGChargeableInteractionWidget.SetMessage
	// void SetMessage(FString Message);                                                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGChargeableInteractionWidget.SetItemChargeValue
	// void SetItemChargeValue(float value);                                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGChargeableInteractionWidget.SetItemChargeColor
	// void SetItemChargeColor(EBarColor BarColor);                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGChargeableInteractionWidget.ClearProficienciesData
	// void ClearProficienciesData();                                                                                        // [0x61d2f50] Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGCloseTooltipWidget
/// Size: 0x0018 (0x000338 - 0x000350)
class UUMGCloseTooltipWidget : public UMobileBaseUserWidget
{ 
public:
	class UButton*                                     FullScreenButton;                                           // 0x0338   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0340   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGCloseTooltipWidget.HandleCloseTooltipButton
	// void HandleCloseTooltipButton();                                                                                      // [0x593fa20] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGCommandDebugButton
/// Size: 0x0020 (0x000338 - 0x000358)
class UUMGCommandDebugButton : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  CommandLabel;                                               // 0x0338   (0x0008)  
	class UButton*                                     CommandButton;                                              // 0x0340   (0x0008)  
	SDK_UNDEFINED(16,2430) /* FString */               __um(CommandName);                                          // 0x0348   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGCommandDebugButton.TriggerCommand
	// void TriggerCommand();                                                                                                // [0x4592da0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGControlTypeSelectionWidget
/// Size: 0x0040 (0x000338 - 0x000378)
class UUMGControlTypeSelectionWidget : public UMobileBaseUserWidget
{ 
public:
	class UUMGControlTypeWidget*                       SnapOnJoystick;                                             // 0x0338   (0x0008)  
	class UUMGControlTypeWidget*                       CameraFullScreen;                                           // 0x0340   (0x0008)  
	class UTextBlock*                                  titleText;                                                  // 0x0348   (0x0008)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0350   (0x0028)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGControlTypeSelectionWidget.UpdateControlType
	// void UpdateControlType(EAtlantaControlTypeSetting ControlType);                                                       // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGControlTypeWidget
/// Size: 0x0040 (0x000338 - 0x000378)
class UUMGControlTypeWidget : public UMobileBaseUserWidget
{ 
public:
	class UUMGBaseButtonWidget*                        Button;                                                     // 0x0338   (0x0008)  
	class UTextBlock*                                  MoveTextHalfScreenCanvas;                                   // 0x0340   (0x0008)  
	class UTextBlock*                                  AimTextHalfScreenCanvas;                                    // 0x0348   (0x0008)  
	class UTextBlock*                                  MoveTextFullScreenCanvas;                                   // 0x0350   (0x0008)  
	class UTextBlock*                                  AimTextFullScreenCanvas;                                    // 0x0358   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0360   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGControlTypeWidget.SetOptionChecked
	// void SetOptionChecked(bool IsChecked);                                                                                // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGControlTypeWidget.IsChecked
	// bool IsChecked();                                                                                                     // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGControlTypeWidget.InitializeDefaultLayout
	// void InitializeDefaultLayout(EAtlantaControlTypeSetting ControlType);                                                 // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGControlTypeWidget.HandleButtonClicked
	// void HandleButtonClicked();                                                                                           // [0x593fa00] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGCustomizationCategoriesBar
/// Size: 0x0010 (0x000338 - 0x000348)
class UUMGCustomizationCategoriesBar : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0338   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGCustomizationCategoriesBar.SetSelectedCategory
	// void SetSelectedCategory(ECustomizationCategory category);                                                            // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGCustomizationCategoriesBar.SetRole
	// void SetRole(bool IsKiller);                                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGCustomizationCategoriesBar.BroadcastCustomizationCategoryButtonPressed
	// void BroadcastCustomizationCategoryButtonPressed(ECustomizationCategory categoryIndex);                               // [0x593f7b0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGCustomizationInfoWidget
/// Size: 0x0180 (0x000338 - 0x0004B8)
class UUMGCustomizationInfoWidget : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      Icon;                                                       // 0x0338   (0x0008)  
	class UImage*                                      Background;                                                 // 0x0340   (0x0008)  
	class URichTextBlock*                              InformationText;                                            // 0x0348   (0x0008)  
	FSlateColor                                        BackgroundColor;                                            // 0x0350   (0x0028)  
	FSlateColor                                        TextColor;                                                  // 0x0378   (0x0028)  
	FSlateColor                                        IconColor;                                                  // 0x03A0   (0x0028)  
	SDK_UNDEFINED(48,2431) /* TWeakObjectPtr<UTexture2D*> */ __um(DefaultIcon);                                    // 0x03C8   (0x0030)  
	SDK_UNDEFINED(48,2432) /* TWeakObjectPtr<UTexture2D*> */ __um(KillerIcon);                                     // 0x03F8   (0x0030)  
	SDK_UNDEFINED(48,2433) /* TWeakObjectPtr<UTexture2D*> */ __um(SurvivorIcon);                                   // 0x0428   (0x0030)  
	SDK_UNDEFINED(48,2434) /* TWeakObjectPtr<UTexture2D*> */ __um(BreakableIcon);                                  // 0x0458   (0x0030)  
	SDK_UNDEFINED(48,2435) /* TWeakObjectPtr<UTexture2D*> */ __um(UnbreakableIcon);                                // 0x0488   (0x0030)  
};

/// Class /Script/DeadByDaylight.UMGCustomizationItemPriceWidget
/// Size: 0x0100 (0x000338 - 0x000438)
class UUMGCustomizationItemPriceWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  CurrencyValue;                                              // 0x0338   (0x0008)  
	class UTextBlock*                                  DiscountPercentageContainer;                                // 0x0340   (0x0008)  
	class UTextBlock*                                  DiscountPercentage;                                         // 0x0348   (0x0008)  
	class UImage*                                      CurrencyIcon;                                               // 0x0350   (0x0008)  
	SDK_UNDEFINED(80,2436) /* TMap<ECurrencyType, TWeakObjectPtr<UTexture2D*>> */ __um(CurrencyTextures);          // 0x0358   (0x0050)  
	FSlateColor                                        AffordableCurrencyTextColor;                                // 0x03A8   (0x0028)  
	FSlateColor                                        AffordableSpecialCurrencyTextColor;                         // 0x03D0   (0x0028)  
	FSlateColor                                        NonAffordableCurrencyTextColor;                             // 0x03F8   (0x0028)  
	SDK_UNDEFINED(16,2437) /* FString */               __um(_itemId);                                              // 0x0420   (0x0010)  
	ECurrencyType                                      _currencyType;                                              // 0x0430   (0x0001)  
	bool                                               _hasDiscountPercentage;                                     // 0x0431   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0432   (0x0006)  MISSED
};

/// Class /Script/DeadByDaylight.UMGCustomizationItemBuyButton
/// Size: 0x0088 (0x000438 - 0x0004C0)
class UUMGCustomizationItemBuyButton : public UUMGCustomizationItemPriceWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0438   (0x0010)  MISSED
	class UImage*                                      CurrencyColorStripe;                                        // 0x0448   (0x0008)  
	SDK_UNDEFINED(80,2438) /* TMap<ECurrencyType, FColor> */ __um(_currencyStripeColors);                          // 0x0450   (0x0050)  
	FLinearColor                                       _disabledOpacity;                                           // 0x04A0   (0x0010)  
	FLinearColor                                       _enabledOpacity;                                            // 0x04B0   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGCustomizationItemBuyButton.BroadcastUnlockWithCurrency
	// void BroadcastUnlockWithCurrency();                                                                                   // [0x593f8c0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGCustomizationItemWidget
/// Size: 0x00A0 (0x000338 - 0x0003D8)
class UUMGCustomizationItemWidget : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0338   (0x0010)  MISSED
	class UImage*                                      RarityBackground;                                           // 0x0348   (0x0008)  
	class UImage*                                      PaintOverlay;                                               // 0x0350   (0x0008)  
	class UImage*                                      Icon;                                                       // 0x0358   (0x0008)  
	class UCanvasPanel*                                NewIndicator;                                               // 0x0360   (0x0008)  
	class UCanvasPanel*                                OutfitIndicator;                                            // 0x0368   (0x0008)  
	class UVerticalBox*                                PricesContainer;                                            // 0x0370   (0x0008)  
	class UCanvasPanel*                                ItemSelectedBorder;                                         // 0x0378   (0x0008)  
	class UCanvasPanel*                                EquippedContainer;                                          // 0x0380   (0x0008)  
	SDK_UNDEFINED(48,2439) /* TWeakObjectPtr<UClass*> */ __um(_customizationItemPriceWidgetClass);                 // 0x0388   (0x0030)  
	TArray<class UUMGCustomizationItemPriceWidget*>    _priceWidgets;                                              // 0x03B8   (0x0010)  
	int32_t                                            _itemIndex;                                                 // 0x03C8   (0x0004)  
	FName                                              _itemId;                                                    // 0x03CC   (0x000C)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGCustomizationItemWidget.BroadcastAvailableItemSelected
	// void BroadcastAvailableItemSelected();                                                                                // [0x593f620] Final|Native|Protected|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.StoreItemSlotData
/// Size: 0x01E0 (0x000000 - 0x0001E0)
struct FStoreItemSlotData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	FName                                              ItemId;                                                     // 0x0008   (0x000C)  
	ECustomizationCategory                             category;                                                   // 0x0014   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	FName                                              MirrorsId;                                                  // 0x0018   (0x000C)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	SDK_UNDEFINED(16,2440) /* FString */               __um(IconPath);                                             // 0x0028   (0x0010)  
	SDK_UNDEFINED(16,2441) /* FString */               __um(DisplayName);                                          // 0x0038   (0x0010)  
	SDK_UNDEFINED(16,2442) /* FString */               __um(DisplayCollectionName);                                // 0x0048   (0x0010)  
	SDK_UNDEFINED(16,2443) /* FString */               __um(Description);                                          // 0x0058   (0x0010)  
	SDK_UNDEFINED(16,2444) /* FString */               __um(RoleCategoryInfo);                                     // 0x0068   (0x0010)  
	SDK_UNDEFINED(16,2445) /* FString */               __um(RarityPartInfo);                                       // 0x0078   (0x0010)  
	EItemRarity                                        Rarity;                                                     // 0x0088   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0089   (0x0007)  MISSED
	FSpecialEventUIInfo                                EventInfo;                                                  // 0x0090   (0x0060)  
	TArray<FPurchaseCurrencyData>                      PurchaseDataList;                                           // 0x00F0   (0x0010)  
	TArray<FName>                                      ParentBundleIds;                                            // 0x0100   (0x0010)  
	TArray<FName>                                      ChildrenItemIds;                                            // 0x0110   (0x0010)  
	FCustomTransformation                              CustomTransformation;                                       // 0x0120   (0x0014)  
	bool                                               IsOwned;                                                    // 0x0134   (0x0001)  
	bool                                               IsBuyable;                                                  // 0x0135   (0x0001)  
	bool                                               IsEquipped;                                                 // 0x0136   (0x0001)  
	bool                                               IsNewInStore;                                               // 0x0137   (0x0001)  
	bool                                               IsLocked;                                                   // 0x0138   (0x0001)  
	bool                                               IsInStore;                                                  // 0x0139   (0x0001)  
	bool                                               IsVisceral;                                                 // 0x013A   (0x0001)  
	bool                                               HasPlayMoriButton;                                          // 0x013B   (0x0001)  
	EPlayerRole                                        AssociatedRole;                                             // 0x013C   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x013D   (0x0003)  MISSED
	FDateTime                                          ReleaseDate;                                                // 0x0140   (0x0008)  
	bool                                               IsEnabled;                                                  // 0x0148   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x0149   (0x0007)  MISSED
	SDK_UNDEFINED(16,2446) /* FString */               __um(RemainingTimeItem);                                    // 0x0150   (0x0010)  
	SDK_UNDEFINED(16,2447) /* FString */               __um(RemainingTimeDiscount);                                // 0x0160   (0x0010)  
	unsigned char                                      UnknownData06_6[0x70];                                      // 0x0170   (0x0070)  MISSED
};

/// Class /Script/DeadByDaylight.UMGCustomizationPageScrollWidget
/// Size: 0x0068 (0x000470 - 0x0004D8)
class UUMGCustomizationPageScrollWidget : public UUMGGridPageScrollWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0470   (0x0010)  MISSED
	SDK_UNDEFINED(48,2448) /* TWeakObjectPtr<UClass*> */ __um(_customizationItemWidgetClass);                      // 0x0480   (0x0030)  
	TArray<FStoreItemSlotData>                         _availableItemsData;                                        // 0x04B0   (0x0010)  
	TArray<class UUMGCustomizationItemWidget*>         _itemWidgets;                                               // 0x04C0   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x04D0   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGCustomizationPageScrollWidget.OnAvailableItemSelectedCallback
	// void OnAvailableItemSelectedCallback(int32_t itemIndex);                                                              // [0x593fae0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGCustomizationScreenWidget
/// Size: 0x00B0 (0x000338 - 0x0003E8)
class UUMGCustomizationScreenWidget : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0338   (0x0030)  MISSED
	class UUMGCustomizationPageScrollWidget*           PageScrollWidget;                                           // 0x0368   (0x0008)  
	class UUMGCustomizationCategoriesBar*              CustomizationCategoriesBar;                                 // 0x0370   (0x0008)  
	class UTextBlock*                                  CategoryLabel;                                              // 0x0378   (0x0008)  
	class UTextBlock*                                  CurrentlyEquippedLabel;                                     // 0x0380   (0x0008)  
	class UCanvasPanel*                                AvailableInOutfitsContainer;                                // 0x0388   (0x0008)  
	class UCanvasPanel*                                UnlockItemContainer;                                        // 0x0390   (0x0008)  
	class UUMGCustomizationItemWidget*                 OutfitItem;                                                 // 0x0398   (0x0008)  
	class UVerticalBox*                                PriceContainer;                                             // 0x03A0   (0x0008)  
	SDK_UNDEFINED(48,2449) /* TWeakObjectPtr<UClass*> */ __um(PriceButtonWidgetClass);                             // 0x03A8   (0x0030)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x03D8   (0x0004)  MISSED
	FName                                              _currentSelectedItem;                                       // 0x03DC   (0x000C)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGCustomizationScreenWidget.SetCategoryLabel
	// void SetCategoryLabel(ECustomizationCategory category);                                                               // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGCustomizationScreenWidget.BroadcastUnlockWithCurrencyEvent
	// void BroadcastUnlockWithCurrencyEvent(int32_t currencyId, FString combinedItem);                                      // [0x593f8e0] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGCustomizationScreenWidget.BroadcastCustomizationCategoryButtonPressed
	// void BroadcastCustomizationCategoryButtonPressed(int32_t categoryIndex);                                              // [0x593f830] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGCustomizationScreenWidget.BroadcastAvailableItemSelectedEvent
	// void BroadcastAvailableItemSelectedEvent(int32_t itemIndex, FStoreItemSlotData& SelectedItem, FStoreItemSlotData& parentItem); // [0x593f640] Final|Native|Private|HasOutParms 
};

/// Class /Script/DeadByDaylight.UMGCustomizationTooltipContentWidget
/// Size: 0x0030 (0x000338 - 0x000368)
class UUMGCustomizationTooltipContentWidget : public UMobileBaseUserWidget
{ 
public:
	class UUMGHtmlRichText*                            ItemDescription;                                            // 0x0338   (0x0008)  
	class UUMGCustomizationInfoWidget*                 OutfitInformation;                                          // 0x0340   (0x0008)  
	class UUMGCustomizationInfoWidget*                 RoleInformation;                                            // 0x0348   (0x0008)  
	class UUMGCustomizationInfoWidget*                 ReplacementInformation;                                     // 0x0350   (0x0008)  
	class UUMGCustomizationItemPriceWidget*            AuricCellsPrice;                                            // 0x0358   (0x0008)  
	class UUMGCustomizationItemPriceWidget*            IridescentShardsPrice;                                      // 0x0360   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGCustomizationTooltipHeaderWidget
/// Size: 0x0018 (0x000338 - 0x000350)
class UUMGCustomizationTooltipHeaderWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  Title;                                                      // 0x0338   (0x0008)  
	class UTextBlock*                                  CollectionName;                                             // 0x0340   (0x0008)  
	class UTextBlock*                                  CategoryAndRarityText;                                      // 0x0348   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGCustomizationTooltipHeaderWidget.SetOutfitComposition
	// void SetOutfitComposition(bool IsUnbreakable, TArray<ECustomizationCategory>& composition);                           // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGDailyRewardWidget
/// Size: 0x00A0 (0x000468 - 0x000508)
class UUMGDailyRewardWidget : public UUMGBaseButtonWidget
{ 
public:
	SDK_UNDEFINED(16,2450) /* FMulticastInlineDelegate */ __um(OnDailyRewardStateChanged);                         // 0x0468   (0x0010)  
	bool                                               IsMarkedSpecial;                                            // 0x0478   (0x0001)  
	EUMGDailyRewardWidgetState                         State;                                                      // 0x0479   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x047A   (0x0006)  MISSED
	class UTextBlock*                                  AmountText;                                                 // 0x0480   (0x0008)  
	class UTextBlock*                                  ItemNameText;                                               // 0x0488   (0x0008)  
	class UTextBlock*                                  RewardNumberText;                                           // 0x0490   (0x0008)  
	class UWidgetSwitcher*                             RewardTypeSwitcher;                                         // 0x0498   (0x0008)  
	class UCanvasPanel*                                ItemInfoPanel;                                              // 0x04A0   (0x0008)  
	class UCanvasPanel*                                OfferingInfoPanel;                                          // 0x04A8   (0x0008)  
	class UCanvasPanel*                                GenericInfoPanel;                                           // 0x04B0   (0x0008)  
	class UCanvasPanel*                                FreeTicketInfoPanel;                                        // 0x04B8   (0x0008)  
	class UCanvasPanel*                                CrateKeyInfoPanel;                                          // 0x04C0   (0x0008)  
	class UImage*                                      ItemIcon;                                                   // 0x04C8   (0x0008)  
	class UImage*                                      OfferingIcon;                                               // 0x04D0   (0x0008)  
	class UImage*                                      GenericRewardIcon;                                          // 0x04D8   (0x0008)  
	class UImage*                                      FreeTicketRewardIcon;                                       // 0x04E0   (0x0008)  
	class UImage*                                      ParentItemIcon;                                             // 0x04E8   (0x0008)  
	class UImage*                                      CrateKeyRewardIcon;                                         // 0x04F0   (0x0008)  
	class UCanvasPanel*                                ParentItemPanel;                                            // 0x04F8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0500   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGDailyRewardWidget.StopIdleAnimationForState
	// void StopIdleAnimationForState(EUMGDailyRewardWidgetState inState);                                                   // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGDailyRewardWidget.SetStateVisuals
	// void SetStateVisuals(EUMGDailyRewardWidgetState inState);                                                             // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGDailyRewardWidget.SetRarityColors
	// void SetRarityColors(FColor BackgroundColor, FColor TintColor);                                                       // [0x61d2f50] Event|Protected|HasDefaults|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGDailyRewardWidget.PlayIdleAnimationForState
	// void PlayIdleAnimationForState(EUMGDailyRewardWidgetState inState);                                                   // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGDailyRewardWidget.HandleUnlockRewardAnimationFinished
	// void HandleUnlockRewardAnimationFinished();                                                                           // [0x593fa80] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGDailyRewardWidget.HandleUnlockMysteryRewardAnimationFinished
	// void HandleUnlockMysteryRewardAnimationFinished();                                                                    // [0x593fac0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGDailyRewardWidget.HandleDiscoverRewardAnimationFinished
	// void HandleDiscoverRewardAnimationFinished();                                                                         // [0x593fa80] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGDailyRewardWidget.HandleCollectRewardAnimationFinished
	// void HandleCollectRewardAnimationFinished();                                                                          // [0x593fa60] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGDailyRewardWidget.HandleCollectButtonClick
	// void HandleCollectButtonClick();                                                                                      // [0x593fa40] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGDailyRewardWidget.DiscoverMysteryReward
	// void DiscoverMysteryReward();                                                                                         // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGDailyRewardWidget.CollectReward
	// void CollectReward();                                                                                                 // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGDownloadProgressionWidget
/// Size: 0x0018 (0x000338 - 0x000350)
class UUMGDownloadProgressionWidget : public UMobileBaseUserWidget
{ 
public:
	class UProgressBar*                                ProgressBar;                                                // 0x0338   (0x0008)  
	class UTextBlock*                                  DownloadPercentage;                                         // 0x0340   (0x0008)  
	class UTextBlock*                                  DownloadDescription;                                        // 0x0348   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGDownloadProgressionWidget.UpdateProgression
	// void UpdateProgression(FDownloadProgression& DownloadProgression);                                                    // [0x5945550] Final|Native|Public|HasOutParms 
};

/// Class /Script/DeadByDaylight.UMGDragWidget
/// Size: 0x0020 (0x000298 - 0x0002B8)
class UUMGDragWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0298   (0x0010)  MISSED
	TArray<class UCustomWidgetWrapper_HudEditor*>      _allEditableWidgets;                                        // 0x02A8   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGDragWidget.SetClampToViewportDirty
	// void SetClampToViewportDirty();                                                                                       // [0x5944c10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGDragWidget.GetAllEditableWidgets
	// TArray<UCustomWidgetWrapper_HudEditor*> GetAllEditableWidgets();                                                      // [0x5944450] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.UMGDragWidget_HudEditor
/// Size: 0x0060 (0x0002B8 - 0x000318)
class UUMGDragWidget_HudEditor : public UUMGDragWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x02B8   (0x0020)  MISSED
	class UClass*                                      OnSelectionWidgetClass;                                     // 0x02D8   (0x0008)  
	class UClass*                                      DragLinkWidgetClass;                                        // 0x02E0   (0x0008)  
	class UCustomWidgetWrapper_HudEditor*              _customWrapper;                                             // 0x02E8   (0x0008)  
	class UUserWidget*                                 _selectionWidget;                                           // 0x02F0   (0x0008)  
	class UUMGHudEditorDragConstraintWidget*           _dragLinkWidget;                                            // 0x02F8   (0x0008)  
	class UUMGDragWidget_HudEditor*                    _parentLinkWidget;                                          // 0x0300   (0x0008)  
	class UUMGDragWidget_HudEditor*                    _childLinkWidget;                                           // 0x0308   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0310   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGDragWidget_HudEditor.SetOnSelection
	// void SetOnSelection(bool IsSelected);                                                                                 // [0x5944f20] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGDragWidget_HudEditor.GetCustomWrapper
	// class UCustomWidgetWrapper_HudEditor* GetCustomWrapper();                                                             // [0x5944510] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.UMGEndGameCollapseProgressWidget
/// Size: 0x0040 (0x000338 - 0x000378)
class UUMGEndGameCollapseProgressWidget : public UMobileBaseUserWidget
{ 
public:
	class UProgressBar*                                ProgressBar;                                                // 0x0338   (0x0008)  
	class UCanvasPanel*                                MarkerLeftCanvas;                                           // 0x0340   (0x0008)  
	class UCanvasPanel*                                MarkerRightCanvas;                                          // 0x0348   (0x0008)  
	class UHorizontalBoxSlot*                          _markerLeftBox;                                             // 0x0350   (0x0008)  
	class UHorizontalBoxSlot*                          _markerRightBox;                                            // 0x0358   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0360   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.UMGEndGameCollapseWidget
/// Size: 0x0080 (0x000338 - 0x0003B8)
class UUMGEndGameCollapseWidget : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	float                                              _progressBarInterpSpeed;                                    // 0x0340   (0x0004)  
	bool                                               _slowMode;                                                  // 0x0344   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0345   (0x0003)  MISSED
	class UCanvasPanel*                                NormalBar;                                                  // 0x0348   (0x0008)  
	class UCanvasPanel*                                SlowBar;                                                    // 0x0350   (0x0008)  
	class UUMGEndGameCollapseProgressWidget*           NormalProgressBar;                                          // 0x0358   (0x0008)  
	class UUMGEndGameCollapseProgressWidget*           SlowProgressBar;                                            // 0x0360   (0x0008)  
	unsigned char                                      UnknownData02_5[0x48];                                      // 0x0368   (0x0048)  MISSED
	class UUMGEndGameCollapseProgressWidget*           _topBar;                                                    // 0x03B0   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGEndGameCollapseWidget.PlayToZeroAnimation
	// void PlayToZeroAnimation();                                                                                           // [0x61d2f50] Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGFogWidget
/// Size: 0x0048 (0x000338 - 0x000380)
class UUMGFogWidget : public UMobileBaseUserWidget
{ 
public:
	class UUMGBankAndPlayerInfoWidget*                 BankAndPlayerInfoWidget;                                    // 0x0338   (0x0008)  
	unsigned char                                      UnknownData00_6[0x40];                                      // 0x0340   (0x0040)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGFogWidget.OnRankTooltipTriggered
	// void OnRankTooltipTriggered(FTooltipPressedData& TooltipPressedData);                                                 // [0x59447d0] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.UMGFogWidget.OnLevelTooltipTriggered
	// void OnLevelTooltipTriggered(FTooltipPressedData& TooltipPressedData);                                                // [0x5944710] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.UMGFogWidget.OnCurrencyTooltipTriggered
	// void OnCurrencyTooltipTriggered(FTooltipPressedData& TooltipPressedData, ECurrencyType CurrencyType);                 // [0x5944600] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.UMGFogWidget.HandleOnSettingButtonClick
	// void HandleOnSettingButtonClick();                                                                                    // [0x593fa20] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGGameplayAlertWidget
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class UUMGGameplayAlertWidget : public UUMGBaseAlertWidget
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.UMGGameplayAlertWidget.UpdateWidget
	// void UpdateWidget(FStatusEffectSlotData& statusEffectData, FInventorySlotData& originatorData);                       // [0x61d2f50] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGGhostfaceSpecific
/// Size: 0x0010 (0x000338 - 0x000348)
class UUMGGhostfaceSpecific : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      LeftLeanImage;                                              // 0x0338   (0x0008)  
	class UImage*                                      RightLeanImage;                                             // 0x0340   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGHtmlRichText
/// Size: 0x0000 (0x0006D0 - 0x0006D0)
class UUMGHtmlRichText : public URichTextBlock
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.UMGHtmlRichText.SetHTMLText
	// void SetHTMLText(FString InText);                                                                                     // [0x5944cc0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGHtmlTextDecorator
/// Size: 0x0000 (0x000030 - 0x000030)
class UUMGHtmlTextDecorator : public URichTextBlockDecorator
{ 
public:
};

/// Class /Script/DeadByDaylight.UMGHudEditorDragConstraintWidget
/// Size: 0x0040 (0x000298 - 0x0002D8)
class UUMGHudEditorDragConstraintWidget : public UUserWidget
{ 
public:
	class USizeBox*                                    LinkSizeBox;                                                // 0x0298   (0x0008)  
	class UUserWidget*                                 _childWidget;                                               // 0x02A0   (0x0008)  
	class UUserWidget*                                 _parentWidget;                                              // 0x02A8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x02B0   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.UMGHudEditorLayoutScreen
/// Size: 0x0010 (0x000298 - 0x0002A8)
class UUMGHudEditorLayoutScreen : public UUserWidget
{ 
public:
	TArray<class UUMGDragWidget_HudEditor*>            _editableWidgets;                                           // 0x0298   (0x0010)  
};

/// Class /Script/DeadByDaylight.UMGHudEditorLayoutWidget
/// Size: 0x0078 (0x0002B8 - 0x000330)
class UUMGHudEditorLayoutWidget : public UUMGDragWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x02B8   (0x0010)  MISSED
	class UUMGHudEditorScreen*                         hudEditorScreen;                                            // 0x02C8   (0x0008)  
	class UAkAudioEvent*                               _onSaveOverlapSound;                                        // 0x02D0   (0x0008)  
	class UUMGDragWidget_HudEditor*                    _currentWidgetToEdit;                                       // 0x02D8   (0x0008)  
	SDK_UNDEFINED(80,2451) /* TMap<UUMGHudEditorLayoutScreen*, bool> */ __um(_isSaveDirtyMap);                     // 0x02E0   (0x0050)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.ShowSurvivorLayout
	// void ShowSurvivorLayout();                                                                                            // [0x5945260] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.ShowKillerLayout
	// void ShowKillerLayout();                                                                                              // [0x5945240] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.SetWidgetToEdit
	// void SetWidgetToEdit(class UUMGDragWidget_HudEditor* Widget);                                                         // [0x5945040] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.SetSaveOverlapSound
	// void SetSaveOverlapSound(class UAkAudioEvent* onSaveOverlapSound);                                                    // [0x5944fb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.SetHudEditorScreen
	// void SetHudEditorScreen(class UUMGHudEditorScreen* hudEditorScreen);                                                  // [0x5944d60] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.SaveLayout
	// void SaveLayout();                                                                                                    // [0x5944bf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.ResetLayout
	// void ResetLayout();                                                                                                   // [0x5944bd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.OnSaveDirty
	// void OnSaveDirty(bool IsDirty);                                                                                       // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.GetHudEditorWrapperToEdit
	// class UCustomWidgetWrapper_HudEditor* GetHudEditorWrapperToEdit();                                                    // [0x5944570] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.GetCurrentDragWidget
	// class UUMGDragWidget_HudEditor* GetCurrentDragWidget();                                                               // [0x59444e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.FlipLayout
	// void FlipLayout();                                                                                                    // [0x5944430] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorLayoutWidget.FlagSaveAsDirty
	// void FlagSaveAsDirty();                                                                                               // [0x5944410] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGHudEditorScreen
/// Size: 0x0070 (0x000298 - 0x000308)
class UUMGHudEditorScreen : public UUserWidget
{ 
public:
	class UUMGHudEditorLayoutWidget*                   _hudEditorLayoutWidget;                                     // 0x0298   (0x0008)  
	class UUMGHudEditorVersionWidget*                  _versionSwapWidget;                                         // 0x02A0   (0x0008)  
	SDK_UNDEFINED(80,2452) /* TMap<EPlayerRole, UUMGHudEditorLayoutScreen*> */ __um(_storedLayoutScreens);         // 0x02A8   (0x0050)  
	class UUMGHudEditorLayoutScreen*                   _currentLayoutScreen;                                       // 0x02F8   (0x0008)  
	class UAkAudioEvent*                               _onDropOverlapSound;                                        // 0x0300   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGHudEditorScreen.ShowHudLayout
	// void ShowHudLayout(EPlayerRole Role);                                                                                 // [0x59451c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorScreen.SetWidgets
	// void SetWidgets(class UUMGHudEditorLayoutWidget* hudEditorLayoutWidget, class UUMGHudEditorVersionWidget* versionSwapWidget); // [0x59450d0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGHudEditorScreen.SetEditorDropErrorOverlapSound
	// void SetEditorDropErrorOverlapSound(class UAkAudioEvent* onDropOverlapSound);                                         // [0x5944c30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorScreen.RegisterEditorLayoutScreen
	// void RegisterEditorLayoutScreen(EPlayerRole Role, class UUMGHudEditorLayoutScreen* screen);                           // [0x59449d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorScreen.Quit
	// void Quit();                                                                                                          // [0x5944890] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorScreen.GetVersionSwapWidget
	// class UUMGHudEditorVersionWidget* GetVersionSwapWidget();                                                             // [0x59445a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.UMGHudEditorVersionWidget
/// Size: 0x0028 (0x000298 - 0x0002C0)
class UUMGHudEditorVersionWidget : public UUserWidget
{ 
public:
	class UButton*                                     VersionButton;                                              // 0x0298   (0x0008)  
	class UUMGDragWidget_HudEditor*                    _onEditWidget;                                              // 0x02A0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x02A8   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGHudEditorVersionWidget.Show
	// void Show();                                                                                                          // [0x59451a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorVersionWidget.OnButtonClick
	// void OnButtonClick();                                                                                                 // [0x59445e0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGHudEditorVersionWidget.Hide
	// void Hide();                                                                                                          // [0x59445c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGInboxMessageEntryWidget
/// Size: 0x0068 (0x000298 - 0x000300)
class UUMGInboxMessageEntryWidget : public UUserWidget
{ 
public:
	FInboxMessageUIData                                _messageData;                                               // 0x0298   (0x0060)  
	bool                                               _isCurrentSelection;                                        // 0x02F8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02F9   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGInboxMessageEntryWidget.UpdateMessageData
	// void UpdateMessageData(FInboxMessageUIData messageData);                                                              // [0x5945280] Native|Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGInboxMessageEntryWidget.SetMessageData
	// void SetMessageData(FInboxMessageUIData& messageData);                                                                // [0x5944df0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGInboxMessageEntryWidget.GetElapsedTime
	// FInboxMessageElapsedTime GetElapsedTime();                                                                            // [0x5944530] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGInboxScreen
/// Size: 0x00A8 (0x000338 - 0x0003E0)
class UUMGInboxScreen : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0xA8];                                      // 0x0338   (0x00A8)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGInboxScreen.UpdateMessagesCount
	// void UpdateMessagesCount(EInboxMessageUIType MessageType, int32_t unclaimedCount, int32_t unreadCount, int32_t TotalCount); // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGInboxScreen.UpdateMessage
	// void UpdateMessage(FInboxMessageUIData& Message);                                                                     // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGInboxScreen.SetSocialMessages
	// void SetSocialMessages(TArray<FInboxMessageUIData>& messages, int32_t unreadCount, int32_t TotalCount);               // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGInboxScreen.SetRewardsMessages
	// void SetRewardsMessages(TArray<FInboxMessageUIData>& messages, int32_t unclaimedCount, int32_t unreadCount, int32_t TotalCount); // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGInboxScreen.SetNewsMessages
	// void SetNewsMessages(TArray<FInboxMessageUIData>& messages, int32_t unreadCount, int32_t TotalCount);                 // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGInboxScreen.RemoveMessageFromPanel
	// bool RemoveMessageFromPanel(class UPanelWidget* containingPanel, FString MessageId, bool hasSeparator);               // [0x5944aa0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGInboxScreen.RemoveMessage
	// void RemoveMessage(FString MessageId);                                                                                // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGInboxScreen.ReadMessageEvent
	// void ReadMessageEvent(FString MessageId);                                                                             // [0x5944930] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGInboxScreen.ReadAllMessagesEvent
	// void ReadAllMessagesEvent(EInboxMessageUIType MessageType);                                                           // [0x59448b0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGInboxScreen.FindWidgetIndexByMessageId
	// int32_t FindWidgetIndexByMessageId(class UPanelWidget* containingPanel, FString MessageId);                           // [0x5944320] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGInboxScreen.FindMessageWidgetById
	// class UUMGInboxMessageEntryWidget* FindMessageWidgetById(class UPanelWidget* containingPanel, FString MessageId);     // [0x5944230] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGInboxScreen.CleanMessageEvent
	// void CleanMessageEvent(FString MessageId);                                                                            // [0x5944190] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGInboxScreen.CleanAllMessagesEvent
	// void CleanAllMessagesEvent(EInboxMessageUIType MessageType);                                                          // [0x5944110] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGInboxScreen.ClaimMessageEvent
	// void ClaimMessageEvent(FString MessageId);                                                                            // [0x5944070] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGInboxScreen.ClaimAllMessagesEvent
	// void ClaimAllMessagesEvent(EInboxMessageUIType MessageType);                                                          // [0x5943ff0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGInboxScreen.ButtonClickEvent
	// void ButtonClickEvent(EInboxScreenButton buttonId);                                                                   // [0x4bb2620] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGLacerationStatusEffectUI
/// Size: 0x0080 (0x000338 - 0x0003B8)
class UUMGLacerationStatusEffectUI : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      LacerationDecoration;                                       // 0x0338   (0x0008)  
	class UImage*                                      LacerationFill;                                             // 0x0340   (0x0008)  
	TArray<int32_t>                                    _maximumLacerationDefinitions;                              // 0x0348   (0x0010)  
	TArray<class UPaperSprite*>                        _lacerationDecorationImages;                                // 0x0358   (0x0010)  
	TArray<class UTexture2D*>                          _lacerationFillImages;                                      // 0x0368   (0x0010)  
	FLinearColor                                       _lacerationDefaultColor;                                    // 0x0378   (0x0010)  
	FLinearColor                                       _lacerationFillFullColor;                                   // 0x0388   (0x0010)  
	FName                                              _glassShatterDisintigrateAnimationName;                     // 0x0398   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x03A4   (0x0004)  MISSED
	class UMaterialInstanceDynamic*                    _lacerationFillFullMI;                                      // 0x03A8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x03B0   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGLacerationStatusEffectUI.OnFinishedBoomAnimation
	// void OnFinishedBoomAnimation();                                                                                       // [0x5948870] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGLandingPageButtonWidget
/// Size: 0x0050 (0x000468 - 0x0004B8)
class UUMGLandingPageButtonWidget : public UUMGBaseButtonWidget
{ 
public:
	class UCanvasPanel*                                BigTag;                                                     // 0x0468   (0x0008)  
	class UCanvasPanel*                                SmallTag;                                                   // 0x0470   (0x0008)  
	class UTextBlock*                                  TagText;                                                    // 0x0478   (0x0008)  
	class URichTextBlock*                              BannerTitleText;                                            // 0x0480   (0x0008)  
	class UImage*                                      BannerImage;                                                // 0x0488   (0x0008)  
	class UImage*                                      TitleColorBg;                                               // 0x0490   (0x0008)  
	class UImage*                                      BorderColor;                                                // 0x0498   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x04A0   (0x0018)  MISSED
};

/// Class /Script/DeadByDaylight.UMGLevelBannerWidget
/// Size: 0x0060 (0x000338 - 0x000398)
class UUMGLevelBannerWidget : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	class UButton*                                     TooltipButton;                                              // 0x0340   (0x0008)  
	class UTextBlock*                                  PlayerLevelText;                                            // 0x0348   (0x0008)  
	class UTextBlock*                                  PlayerDevotionText;                                         // 0x0350   (0x0008)  
	class UTextBlock*                                  PlayerCurrentExperienceText;                                // 0x0358   (0x0008)  
	class UTextBlock*                                  PlayerNextLevelExperienceText;                              // 0x0360   (0x0008)  
	class UProgressBar*                                XPProgressBar;                                              // 0x0368   (0x0008)  
	class UHorizontalBox*                              XPTextContainer;                                            // 0x0370   (0x0008)  
	class UAkAudioEvent*                               OnLongPressSound;                                           // 0x0378   (0x0008)  
	class UImage*                                      TooltipHighlightPicture;                                    // 0x0380   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0388   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGLevelBannerWidget.StopHighlight
	// void StopHighlight();                                                                                                 // [0x5949200] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLevelBannerWidget.StartHighlight
	// void StartHighlight();                                                                                                // [0x59491d0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLevelBannerWidget.SetProgressbarValue
	// void SetProgressbarValue(float progress);                                                                             // [0x59490c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLevelBannerWidget.SetInfoBP
	// void SetInfoBP(int32_t PlayerLevel, int32_t PlayerPrestige, int32_t CurrentExperience, int32_t NextLevelExperience);  // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLevelBannerWidget.SetInfo
	// void SetInfo(int32_t PlayerLevel, int32_t PlayerPrestige, int32_t CurrentExperience, int32_t NextLevelExperience);    // [0x5948970] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLevelBannerWidget.SetExperienceVisibilityBP
	// void SetExperienceVisibilityBP(bool isExperienceVisible, bool isBig);                                                 // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLevelBannerWidget.OnTooltipButtonLongPressEvent
	// void OnTooltipButtonLongPressEvent();                                                                                 // [0x59488b0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGLoadingScreenWidget
/// Size: 0x0030 (0x000338 - 0x000368)
class UUMGLoadingScreenWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  Description;                                                // 0x0338   (0x0008)  
	class UImage*                                      HintIcon;                                                   // 0x0340   (0x0008)  
	class UProgressBar*                                LoadingBar;                                                 // 0x0348   (0x0008)  
	class UPanelWidget*                                KillerPanel;                                                // 0x0350   (0x0008)  
	class UPanelWidget*                                SurvivorPanel;                                              // 0x0358   (0x0008)  
	class UTextBlock*                                  Title;                                                      // 0x0360   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGLoadoutBaseWidget
/// Size: 0x0058 (0x000338 - 0x000390)
class UUMGLoadoutBaseWidget : public UMobileBaseUserWidget
{ 
public:
	class UUMGLoadoutItemButton*                       ItemOrPowerButton;                                          // 0x0338   (0x0008)  
	class UUMGLoadoutItemButton*                       AddonFirstButton;                                           // 0x0340   (0x0008)  
	class UUMGLoadoutItemButton*                       AddonSecondButton;                                          // 0x0348   (0x0008)  
	class UUMGLoadoutItemButton*                       OfferingButton;                                             // 0x0350   (0x0008)  
	class UUMGLoadoutItemButton*                       PerkFirstButton;                                            // 0x0358   (0x0008)  
	class UUMGLoadoutItemButton*                       PerkSecondButton;                                           // 0x0360   (0x0008)  
	class UUMGLoadoutItemButton*                       PerkThirdButton;                                            // 0x0368   (0x0008)  
	class UUMGLoadoutItemButton*                       PerkFourthButton;                                           // 0x0370   (0x0008)  
	TArray<class UUMGLoadoutItemButton*>               LoadoutItemButtons;                                         // 0x0378   (0x0010)  
	bool                                               usingMatchRules;                                            // 0x0388   (0x0001)  
	bool                                               perkSlotsLockedByAdmin;                                     // 0x0389   (0x0001)  
	bool                                               IsSlasher;                                                  // 0x038A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x038B   (0x0005)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGLoadoutBaseWidget.SetLoadoutData
	// void SetLoadoutData(TArray<FInventorySlotData>& loadoutData, bool usingMatchRules, bool perkSlotsLockedByAdmin, ELoadoutSlot LoadoutSlot, bool IsSlasher, bool isClickable); // [0x5948e00] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutBaseWidget.SetIsSelectedLoadoutItemButton
	// void SetIsSelectedLoadoutItemButton(ELoadoutSlot LoadoutSlot);                                                        // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLoadoutBaseWidget.SetDividerImageColor
	// void SetDividerImageColor(FLinearColor Color);                                                                        // [0x61d2f50] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGLoadoutFilterButton
/// Size: 0x0028 (0x000338 - 0x000360)
class UUMGLoadoutFilterButton : public UMobileBaseUserWidget
{ 
public:
	class UButton*                                     ActionButton;                                               // 0x0338   (0x0008)  
	SDK_UNDEFINED(16,2453) /* FMulticastInlineDelegate */ __um(OnLoadoutFilterButtonClicked);                      // 0x0340   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0350   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGLoadoutFilterButton.SetIsSelected
	// void SetIsSelected(bool IsSelected);                                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLoadoutFilterButton.SetIcon
	// void SetIcon(TWeakObjectPtr<UTexture2D*>& Icon);                                                                      // [0x61d2f50] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLoadoutFilterButton.OnActionButtonClick
	// void OnActionButtonClick();                                                                                           // [0x59487b0] Final|Native|Public  
	// Function /Script/DeadByDaylight.UMGLoadoutFilterButton.InitFilterButton
	// void InitFilterButton(FName& filterName, TWeakObjectPtr<UTexture2D*> filterTexture);                                  // [0x5948520] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGLoadoutFilterWidget
/// Size: 0x0078 (0x000338 - 0x0003B0)
class UUMGLoadoutFilterWidget : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(16,2454) /* FMulticastInlineDelegate */ __um(OnLoadoutFilterClicked);                            // 0x0338   (0x0010)  
	SDK_UNDEFINED(48,2455) /* TWeakObjectPtr<UClass*> */ __um(AtlantaLoadoutFilterButtonClass);                    // 0x0348   (0x0030)  
	class UHorizontalBox*                              FilterContainerBox;                                         // 0x0378   (0x0008)  
	TArray<FName>                                      Filters;                                                    // 0x0380   (0x0010)  
	TArray<class UUMGLoadoutFilterButton*>             FilterButtons;                                              // 0x0390   (0x0010)  
	class UUMGLoadoutFilterButton*                     SelectedFilterButton;                                       // 0x03A0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x03A8   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGLoadoutFilterWidget.OnFilterButtonClicked
	// void OnFilterButtonClicked(FName filterName);                                                                         // [0x59487d0] Final|Native|Public  
	// Function /Script/DeadByDaylight.UMGLoadoutFilterWidget.InitFilterWidget
	// void InitFilterWidget(TMap<FName, TWeakObjectPtr<UTexture2D*>>& filtersInfo);                                         // [0x5948690] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutFilterWidget.ClearSelectedFilter
	// void ClearSelectedFilter();                                                                                           // [0x5948420] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGLoadoutPageScrollWidget
/// Size: 0x0110 (0x000468 - 0x000578)
class UUMGLoadoutPageScrollWidget : public UUMGPageScrollWidget
{ 
public:
	bool                                               ShouldResizeWidget;                                         // 0x0468   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0469   (0x0007)  MISSED
	SDK_UNDEFINED(48,2456) /* TWeakObjectPtr<UClass*> */ __um(_itemWidgetClass);                                   // 0x0470   (0x0030)  
	EInventoryGridFormat                               _gridFormat;                                                // 0x04A0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x04A1   (0x0007)  MISSED
	TArray<FInventorySlotData>                         _inventoryData;                                             // 0x04A8   (0x0010)  
	TArray<int32_t>                                    _inventorySelectedItemIndexes;                              // 0x04B8   (0x0010)  
	SDK_UNDEFINED(16,2457) /* FString */               __um(_subtitle);                                            // 0x04C8   (0x0010)  
	unsigned char                                      UnknownData02_6[0xA0];                                      // 0x04D8   (0x00A0)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGLoadoutPageScrollWidget.SetItemWidgetClass
	// void SetItemWidgetClass();                                                                                            // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLoadoutPageScrollWidget.SetItemIsSelected
	// void SetItemIsSelected(int32_t index, bool IsSelected);                                                               // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLoadoutPageScrollWidget.SetInventoryData
	// void SetInventoryData(EInventoryGridFormat gridFormat, TArray<FInventorySlotData>& InventoryData, TArray<int32_t>& selectedItemsIndexes, FString trackingItemName, FString Subtitle); // [0x5948ac0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLoadoutPageScrollWidget.HandleItemClicked
	// void HandleItemClicked(FName ItemId);                                                                                 // [0x5948480] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGLoadoutWidget
/// Size: 0x0068 (0x000390 - 0x0003F8)
class UUMGLoadoutWidget : public UUMGLoadoutBaseWidget
{ 
public:
	SDK_UNDEFINED(24,2458) /* FText */                 __um(InventoryItemTypeText);                                // 0x0390   (0x0018)  
	SDK_UNDEFINED(24,2459) /* FText */                 __um(InventoryFilterText);                                  // 0x03A8   (0x0018)  
	class UUMGLoadoutPageScrollWidget*                 PageScrollWidget;                                           // 0x03C0   (0x0008)  
	SDK_UNDEFINED(24,2460) /* FText */                 __um(LoadoutTitleText);                                     // 0x03C8   (0x0018)  
	SDK_UNDEFINED(24,2461) /* FText */                 __um(InventoryPanelTitleText);                              // 0x03E0   (0x0018)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGLoadoutWidget.SetInventoryData
	// void SetInventoryData(EInventoryGridFormat gridFormat, TArray<FInventorySlotData>& InventoryData, TArray<int32_t>& selectedItemsIndexes, FString trackingItemName, FString Subtitle); // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGLobbyJoinedWidget
/// Size: 0x0080 (0x000338 - 0x0003B8)
class UUMGLobbyJoinedWidget : public UMobileBaseUserWidget
{ 
public:
	bool                                               LocalPlayerIsSlasher;                                       // 0x0338   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0339   (0x0007)  MISSED
	SDK_UNDEFINED(24,2462) /* FText */                 __um(TextLeaveLobby);                                       // 0x0340   (0x0018)  
	SDK_UNDEFINED(24,2463) /* FText */                 __um(TextPlayerNotReadyYet);                                // 0x0358   (0x0018)  
	SDK_UNDEFINED(24,2464) /* FText */                 __um(TextWaitingPlayers);                                   // 0x0370   (0x0018)  
	SDK_UNDEFINED(24,2465) /* FText */                 __um(TextToBeReady);                                        // 0x0388   (0x0018)  
	class UHorizontalBox*                              CommandButtonsContainer;                                    // 0x03A0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x03A8   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGLobbyJoinedWidget.UpdatePlayersLatency
	// void UpdatePlayersLatency(TMap<int32_t, float>& playersLatency, bool isHost);                                         // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLobbyJoinedWidget.SetWidgetsVisibility
	// void SetWidgetsVisibility(bool widgetsVisibilty);                                                                     // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLobbyJoinedWidget.SetReadyStatus
	// void SetReadyStatus(TArray<FPlayerReadyStatusData>& playersReadyStatusData);                                          // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLobbyJoinedWidget.SetLocalPlayerInfo
	// void SetLocalPlayerInfo(FPlayerInfoData& PlayerInfoData);                                                             // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLobbyJoinedWidget.SetLobbyTimer
	// void SetLobbyTimer(int32_t Seconds);                                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLobbyJoinedWidget.SetLoadoutDataForLocalPlayer
	// void SetLoadoutDataForLocalPlayer(TArray<FInventorySlotData>& loadoutData, bool usingMatchRules, bool perkSlotsLockedByAdmin, bool IsSlasher); // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLobbyJoinedWidget.RemovePlayersInfo
	// void RemovePlayersInfo(int32_t playerID);                                                                             // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLobbyJoinedWidget.HandleLeaveButtonClicked
	// void HandleLeaveButtonClicked();                                                                                      // [0x4ba0460] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLobbyJoinedWidget.AddPlayerInfo
	// void AddPlayerInfo(int32_t playerID, FPlayerInfoData& PlayerInfoData, bool IsPlayerReady, TArray<FInventorySlotData>& loadoutData); // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGLobbyOfferingItemWidget
/// Size: 0x0000 (0x000338 - 0x000338)
class UUMGLobbyOfferingItemWidget : public UMobileBaseUserWidget
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.UMGLobbyOfferingItemWidget.SetOfferingData
	// void SetOfferingData(FInventorySlotData& Data);                                                                       // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLobbyOfferingItemWidget.HideOfferingItem
	// void HideOfferingItem();                                                                                              // [0x4b94bd0] Final|Native|Public  
	// Function /Script/DeadByDaylight.UMGLobbyOfferingItemWidget.GetOfferingIcons
	// TMap<FName, TWeakObjectPtr<UTexture2D*>> GetOfferingIcons();                                                          // [0x594dc10] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGLobbyOfferingWidget
/// Size: 0x0060 (0x000338 - 0x000398)
class UUMGLobbyOfferingWidget : public UMobileBaseUserWidget
{ 
public:
	class UCanvasPanel*                                CanvasOffering;                                             // 0x0338   (0x0008)  
	SDK_UNDEFINED(48,2466) /* TWeakObjectPtr<UClass*> */ __um(LobbyOfferingItemClass);                             // 0x0340   (0x0030)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0370   (0x0028)  MISSED
};

/// Class /Script/DeadByDaylight.UMGLobbyScreen
/// Size: 0x0048 (0x000338 - 0x000380)
class UUMGLobbyScreen : public UMobileBaseUserWidget
{ 
public:
	class UUMGLobbySearchingWidget*                    LobbySearchingWidget;                                       // 0x0338   (0x0008)  
	SDK_UNDEFINED(16,2467) /* FMulticastInlineDelegate */ __um(OnJoinedLobbyLeaved);                               // 0x0340   (0x0010)  
	SDK_UNDEFINED(16,2468) /* FMulticastInlineDelegate */ __um(OnSearchingLobbyCancelled);                         // 0x0350   (0x0010)  
	class UWidgetSwitcher*                             LobbySwitcher;                                              // 0x0360   (0x0008)  
	class UUMGLobbyJoinedWidget*                       LobbyJoinedWidget;                                          // 0x0368   (0x0008)  
	class UUMGLobbyOfferingWidget*                     OfferingWidget;                                             // 0x0370   (0x0008)  
	class UUMGFogWidget*                               FogWidget;                                                  // 0x0378   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGLobbyScreen.HandleSearchingLobbyCancel
	// void HandleSearchingLobbyCancel();                                                                                    // [0x4b94c60] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGLobbyScreen.HandleJoinedLobbyLeave
	// void HandleJoinedLobbyLeave();                                                                                        // [0x593fa20] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGLobbySearchingWidget
/// Size: 0x00E8 (0x000390 - 0x000478)
class UUMGLobbySearchingWidget : public UUMGLoadoutBaseWidget
{ 
public:
	class UUMGBankAndPlayerInfoWidget*                 BankAndPlayerInfoWidget;                                    // 0x0390   (0x0008)  
	SDK_UNDEFINED(24,2469) /* FText */                 __um(ItemOrPowerText);                                      // 0x0398   (0x0018)  
	SDK_UNDEFINED(24,2470) /* FText */                 __um(AddonText);                                            // 0x03B0   (0x0018)  
	SDK_UNDEFINED(24,2471) /* FText */                 __um(OfferingText);                                         // 0x03C8   (0x0018)  
	SDK_UNDEFINED(24,2472) /* FText */                 __um(PerksText);                                            // 0x03E0   (0x0018)  
	SDK_UNDEFINED(24,2473) /* FText */                 __um(TextWaitingForPlayers);                                // 0x03F8   (0x0018)  
	SDK_UNDEFINED(24,2474) /* FText */                 __um(TextEstimatedTimeTitle);                               // 0x0410   (0x0018)  
	class UButton*                                     ButtonCancelSearching;                                      // 0x0428   (0x0008)  
	class UUMGPartySlotsWidget*                        PartySlots;                                                 // 0x0430   (0x0008)  
	unsigned char                                      UnknownData00_6[0x40];                                      // 0x0438   (0x0040)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGLobbySearchingWidget.SetWaitingTimer
	// void SetWaitingTimer(int32_t Seconds);                                                                                // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLobbySearchingWidget.SetEstimatedWaitingTimer
	// void SetEstimatedWaitingTimer(int32_t Seconds);                                                                       // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGLobbySearchingWidget.OnRankTooltipTriggered
	// void OnRankTooltipTriggered(FTooltipPressedData& TooltipPressedData);                                                 // [0x594e380] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.UMGLobbySearchingWidget.OnLevelTooltipTriggered
	// void OnLevelTooltipTriggered(FTooltipPressedData& TooltipPressedData);                                                // [0x594e1d0] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.UMGLobbySearchingWidget.OnCurrencyTooltipTriggered
	// void OnCurrencyTooltipTriggered(FTooltipPressedData& TooltipPressedData, ECurrencyType CurrencyType);                 // [0x594e030] Final|Native|Protected|HasOutParms 
	// Function /Script/DeadByDaylight.UMGLobbySearchingWidget.HandleLeaveButtonClicked
	// void HandleLeaveButtonClicked();                                                                                      // [0x594de90] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGLoginPopup
/// Size: 0x0018 (0x000420 - 0x000438)
class UUMGLoginPopup : public UUMGGenericPopup
{ 
public:
	class UUMGAuthentificationProviderListWidget*      AuthenticationProviderList;                                 // 0x0420   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0428   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGLoginPopup.ChooseProvider
	// void ChooseProvider(char Provider);                                                                                   // [0x594d9e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGMainMenuMonthlyPassButton
/// Size: 0x0050 (0x000338 - 0x000388)
class UUMGMainMenuMonthlyPassButton : public UMobileBaseUserWidget
{ 
public:
	class UWidgetSwitcher*                             ButtonSwitcher;                                             // 0x0338   (0x0008)  
	class UButton*                                     ActiveButton;                                               // 0x0340   (0x0008)  
	class UButton*                                     NonActiveButton;                                            // 0x0348   (0x0008)  
	SDK_UNDEFINED(24,2475) /* FText */                 __um(playerName);                                           // 0x0350   (0x0018)  
	class UAkAudioEvent*                               OnClickSound;                                               // 0x0368   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0370   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGMainMenuMonthlyPassButton.OnButtonClick
	// void OnButtonClick();                                                                                                 // [0x594e010] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGMapThemeWidget
/// Size: 0x0000 (0x000338 - 0x000338)
class UUMGMapThemeWidget : public UMobileBaseUserWidget
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.UMGMapThemeWidget.SetThemeName
	// void SetThemeName(FString ThemeName);                                                                                 // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGMapThemeWidget.SetMapName
	// void SetMapName(FString MapName);                                                                                     // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGMenuBaseBanner
/// Size: 0x0028 (0x000480 - 0x0004A8)
class UUMGMenuBaseBanner : public UUMGBaseSideMainMenuButton
{ 
public:
	class UImage*                                      BannerImage;                                                // 0x0480   (0x0008)  
	class UTextBlock*                                  Title;                                                      // 0x0488   (0x0008)  
	SDK_UNDEFINED(16,2476) /* TScriptInterface<Class> */ __um(DefaultBanner);                                      // 0x0490   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x04A0   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.UMGMenuEventsBanner
/// Size: 0x0018 (0x0004A8 - 0x0004C0)
class UUMGMenuEventsBanner : public UUMGMenuBaseBanner
{ 
public:
	class UImage*                                      EventsIcon;                                                 // 0x04A8   (0x0008)  
	class UTextBlock*                                  FallbackTitle;                                              // 0x04B0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x04B8   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGMenuEventsBanner.SetDefaultWidgetLayout
	// void SetDefaultWidgetLayout();                                                                                        // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGMenuEventsBanner.SetCustomWidgetLayout
	// void SetCustomWidgetLayout();                                                                                         // [0x61d2f50] Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGMenuMarketingBanner
/// Size: 0x0008 (0x0004A8 - 0x0004B0)
class UUMGMenuMarketingBanner : public UUMGMenuBaseBanner
{ 
public:
	class UTextBlock*                                  Subtitle;                                                   // 0x04A8   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGMonthlyPassRewardItemWidget
/// Size: 0x0058 (0x000338 - 0x000390)
class UUMGMonthlyPassRewardItemWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  itemAmount;                                                 // 0x0338   (0x0008)  
	class UTextBlock*                                  ItemName;                                                   // 0x0340   (0x0008)  
	class UImage*                                      ItemIcon;                                                   // 0x0348   (0x0008)  
	class UImage*                                      CheckIcon;                                                  // 0x0350   (0x0008)  
	class UImage*                                      ItemFrame;                                                  // 0x0358   (0x0008)  
	class UImage*                                      ItemRarityBackground;                                       // 0x0360   (0x0008)  
	class UCanvasPanel*                                ItemPaintPanel;                                             // 0x0368   (0x0008)  
	FLinearColor                                       ActiveItemFrameColor;                                       // 0x0370   (0x0010)  
	FLinearColor                                       NonActiveItemFrameColor;                                    // 0x0380   (0x0010)  
};

/// Class /Script/DeadByDaylight.UMGMonthlyPassCurrencyWidget
/// Size: 0x0008 (0x000390 - 0x000398)
class UUMGMonthlyPassCurrencyWidget : public UUMGMonthlyPassRewardItemWidget
{ 
public:
	class UImage*                                      CurrencyBackground;                                         // 0x0390   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGMonthlyPassFreeTicketWidget
/// Size: 0x0000 (0x000390 - 0x000390)
class UUMGMonthlyPassFreeTicketWidget : public UUMGMonthlyPassRewardItemWidget
{ 
public:
};

/// Class /Script/DeadByDaylight.UMGNavigationButtonWidget
/// Size: 0x0010 (0x000468 - 0x000478)
class UUMGNavigationButtonWidget : public UUMGBaseButtonWidget
{ 
public:
	class UWidget*                                     NotificationPanel;                                          // 0x0468   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0470   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGNavigationButtonWidget.SetIsSelected
	// void SetIsSelected(bool IsSelected);                                                                                  // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGNavigationButtonWidget.SetIcon
	// void SetIcon(class UTexture2D* Icon);                                                                                 // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGObjectivesWidget
/// Size: 0x0008 (0x000338 - 0x000340)
class UUMGObjectivesWidget : public UMobileBaseUserWidget
{ 
public:
	ESlateVisibility                                   PanelEscapeRequirementsVisibility;                          // 0x0338   (0x0001)  
	ESlateVisibility                                   PanelGeneratorVisibility;                                   // 0x0339   (0x0001)  
	ESlateVisibility                                   PanelFindExitVisibility;                                    // 0x033A   (0x0001)  
	ESlateVisibility                                   PanelHatchVisibility;                                       // 0x033B   (0x0001)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x033C   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGObjectivesWidget.UpdateTextMessage
	// void UpdateTextMessage(FText& textFind, FText& textExit, FText& textOr);                                              // [0x61d2f50] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGObjectivesWidget.UpdateGeneratorCount
	// void UpdateGeneratorCount(int32_t Count);                                                                             // [0x61d2f50] Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGPartyBotSlotWidget
/// Size: 0x0180 (0x000338 - 0x0004B8)
class UUMGPartyBotSlotWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  RoleText;                                                   // 0x0338   (0x0008)  
	class UTextBlock*                                  BotDifficultyText;                                          // 0x0340   (0x0008)  
	class UTextBlock*                                  CharacterNameText;                                          // 0x0348   (0x0008)  
	class UUMGBaseButtonWidget*                        EditButton;                                                 // 0x0350   (0x0008)  
	class UImage*                                      EditIcon;                                                   // 0x0358   (0x0008)  
	class UUMGBaseButtonWidget*                        InvitePartyButton;                                          // 0x0360   (0x0008)  
	class UCanvasPanel*                                InvitePartyCanvas;                                          // 0x0368   (0x0008)  
	SDK_UNDEFINED(80,2477) /* TMap<EAIDifficultyLevel, FSlateColor> */ __um(DifficultyColors);                     // 0x0370   (0x0050)  
	unsigned char                                      UnknownData00_6[0xF8];                                      // 0x03C0   (0x00F8)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGPartyBotSlotWidget.HandleInvitePartyButtonEvent
	// void HandleInvitePartyButtonEvent();                                                                                  // [0x58cc2d0] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGPartyBotSlotWidget.HandleEditButtonEvent
	// void HandleEditButtonEvent();                                                                                         // [0x594dd90] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGPartyCountdownWidget
/// Size: 0x0020 (0x0003A0 - 0x0003C0)
class UUMGPartyCountdownWidget : public UUMGBaseCountdownWidget
{ 
public:
	class UButton*                                     UnreadyButton;                                              // 0x03A0   (0x0008)  
	class UCanvasPanel*                                UnreadyButtonContainer;                                     // 0x03A8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x03B0   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGPartyCountdownWidget.OnUnreadyButtonClicked
	// void OnUnreadyButtonClicked();                                                                                        // [0x4ba01b0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGPartyPlayerSlotWidget
/// Size: 0x0288 (0x000338 - 0x0005C0)
class UUMGPartyPlayerSlotWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  playerName;                                                 // 0x0338   (0x0008)  
	class UTextBlock*                                  AdditionalInformationText;                                  // 0x0340   (0x0008)  
	class UImage*                                      FriendIcon;                                                 // 0x0348   (0x0008)  
	class UUMGBaseButtonWidget*                        KickPlayerButton;                                           // 0x0350   (0x0008)  
	FSlateFontInfo                                     CharacterNameStyle;                                         // 0x0358   (0x0058)  
	FSlateFontInfo                                     PlayerInMatchStyle;                                         // 0x03B0   (0x0058)  
	float                                              PlayerInMatchOpacity;                                       // 0x0408   (0x0004)  
	float                                              PlayerInLobbyOpacity;                                       // 0x040C   (0x0004)  
	class UWidget*                                     PlayerInformationContainer;                                 // 0x0410   (0x0008)  
	class UCanvasPanel*                                ReadyIconsCanvas;                                           // 0x0418   (0x0008)  
	class UCanvasPanel*                                RequestRoleIconsCanvas;                                     // 0x0420   (0x0008)  
	class UWidgetSwitcher*                             RoleSwitcher;                                               // 0x0428   (0x0008)  
	class UImage*                                      LeaderIcon;                                                 // 0x0430   (0x0008)  
	unsigned char                                      UnknownData00_6[0x188];                                     // 0x0438   (0x0188)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGPartyPlayerSlotWidget.SetVisualsFromState
	// void SetVisualsFromState(EPartyPlayerSlotWidgetState widgetState);                                                    // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGPartyPlayerSlotWidget.HandleKickPlayerButtonEvent
	// void HandleKickPlayerButtonEvent();                                                                                   // [0x594de70] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGPartySlotsWidget
/// Size: 0x0100 (0x000338 - 0x000438)
class UUMGPartySlotsWidget : public UMobileBaseUserWidget
{ 
public:
	class UPanelWidget*                                PartyPlayerSlotsContainer;                                  // 0x0338   (0x0008)  
	TArray<class UUMGPartyPlayerSlotWidget*>           _partyPlayerSlots;                                          // 0x0340   (0x0010)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0350   (0x0008)  MISSED
	class UVerticalBox*                                PartyBotSlotsContainer;                                     // 0x0358   (0x0008)  
	SDK_UNDEFINED(48,2478) /* TWeakObjectPtr<UClass*> */ __um(PartyBotSlotWidgetClass);                            // 0x0360   (0x0030)  
	int32_t                                            MaxSlotCount;                                               // 0x0390   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0394   (0x0004)  MISSED
	FSlateColor                                        ConflictingCharacterColor;                                  // 0x0398   (0x0028)  
	FSlateColor                                        NormalCharacterColor;                                       // 0x03C0   (0x0028)  
	unsigned char                                      UnknownData02_6[0x50];                                      // 0x03E8   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGPartySlotsWidget.SwapWidgets
	// void SwapWidgets(int32_t first, int32_t second);                                                                      // [0x594e8b0] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGPartySlotsWidget.SetWidgetState
	// void SetWidgetState(int32_t index, EPartyPlayerSlotWidgetState State);                                                // [0x594e7e0] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGPartySlotsWidget.RearrangePartySlots
	// void RearrangePartySlots();                                                                                           // [0x594e460] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGPartySlotsWidget.HandleKickPlayerButtonClickEvent
	// void HandleKickPlayerButtonClickEvent(FString friendKrakenID);                                                        // [0x594ddd0] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGPartySlotsWidget.HandleInviteFriendButtonClickEvent
	// void HandleInviteFriendButtonClickEvent();                                                                            // [0x594ddb0] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGPartySlotsWidget.HandleBotEditButtonClickEvent
	// void HandleBotEditButtonClickEvent(int32_t index);                                                                    // [0x594dd00] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UmgPlayerHud
/// Size: 0x02C8 (0x000298 - 0x000560)
class UUmgPlayerHud : public UUserWidget
{ 
public:
	class UCanvasPanel*                                GameStartingPanel;                                          // 0x0298   (0x0008)  
	class UCanvasPanel*                                InGamePanel;                                                // 0x02A0   (0x0008)  
	class UAtlantaSkillCheckWidget*                    SkillCheckWidget;                                           // 0x02A8   (0x0008)  
	class UUMGMapThemeWidget*                          MapThemeWidget;                                             // 0x02B0   (0x0008)  
	class UUMGAlertsWidget*                            AtlantaAlertsWidget;                                        // 0x02B8   (0x0008)  
	class UUMGObjectivesWidget*                        AtlantaObjectivesWidget;                                    // 0x02C0   (0x0008)  
	class UPerkHudWidget*                              AtlantaPerksWidget;                                         // 0x02C8   (0x0008)  
	class UPerkActionButton*                           ActivablePerkActionButton;                                  // 0x02D0   (0x0008)  
	class UUMGStatusEffectsWidget*                     AtlantaStatusEffectsWidget;                                 // 0x02D8   (0x0008)  
	class UUMGChargeableInteractionWidget*             AtlantaInteractionWidget;                                   // 0x02E0   (0x0008)  
	class UAtlantaPromptWidget*                        AtlantaPromptWidget;                                        // 0x02E8   (0x0008)  
	class UAtlantaPromptWidget*                        AtlantaTutorialPromptWidget;                                // 0x02F0   (0x0008)  
	class UUMGPlayersStatusWidget*                     AtlantaPlayersStatusWidget;                                 // 0x02F8   (0x0008)  
	class UVerticalBox*                                AtlantaObjectivesContainer;                                 // 0x0300   (0x0008)  
	class UActionButton*                               ActionButton;                                               // 0x0308   (0x0008)  
	class UCanvasPanel*                                ActionButtonContainer;                                      // 0x0310   (0x0008)  
	class UPerkSoundHudWidget*                         PerkSoundHudWidget;                                         // 0x0318   (0x0008)  
	class UMobileBaseUserWidget*                       CenterInteractionButton;                                    // 0x0320   (0x0008)  
	class UCanvasPanel*                                CenterInteractionContainer;                                 // 0x0328   (0x0008)  
	class UCanvasPanel*                                CancelButtonContainer;                                      // 0x0330   (0x0008)  
	class UUMGEndGameCollapseWidget*                   EndGameCollapseWidget;                                      // 0x0338   (0x0008)  
	SDK_UNDEFINED(16,2479) /* FMulticastInlineDelegate */ __um(OnPerkClickedEvent);                                // 0x0340   (0x0010)  
	SDK_UNDEFINED(16,2480) /* FMulticastInlineDelegate */ __um(OnTutorialLeaveClickedEvent);                       // 0x0350   (0x0010)  
	SDK_UNDEFINED(16,2481) /* FMulticastInlineDelegate */ __um(OnTutorialNextClickedEvent);                        // 0x0360   (0x0010)  
	SDK_UNDEFINED(16,2482) /* FMulticastInlineDelegate */ __um(OnSettingsClickedEvent);                            // 0x0370   (0x0010)  
	class ADBDPlayerController*                        LocalController;                                            // 0x0380   (0x0008)  
	class UAtlantaHudDirectionalStick*                 AtlantaDirectionalStick;                                    // 0x0388   (0x0008)  
	class UCanvasPanel*                                AtlantaDirectionalStickContainer;                           // 0x0390   (0x0008)  
	class ADBDPlayer*                                  _localPlayer;                                               // 0x0398   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x03A0   (0x0008)  MISSED
	FSlateBrush                                        _unlockedVirtualJoystickThumbImage;                         // 0x03A8   (0x0090)  
	FSlateBrush                                        _lockedVirtualJoystickThumbImage;                           // 0x0438   (0x0090)  
	unsigned char                                      UnknownData01_6[0x98];                                      // 0x04C8   (0x0098)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UmgPlayerHud.TutorialTallyNextSelected
	// void TutorialTallyNextSelected();                                                                                     // [0x4b80660] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgPlayerHud.TutorialTallyLeaveSelected
	// void TutorialTallyLeaveSelected();                                                                                    // [0x4b94c60] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgPlayerHud.SetVirtualJoystickThumbImage
	// void SetVirtualJoystickThumbImage(bool locked);                                                                       // [0x594e750] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgPlayerHud.OnSettingsButtonPressed
	// void OnSettingsButtonPressed();                                                                                       // [0x594e440] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgPlayerHud.OnPerkClicked
	// void OnPerkClicked(FName perkId, bool clickedOnPerksWidget);                                                          // [0x594e290] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgPlayerHud.OnInteractionStarted
	// void OnInteractionStarted(class UInteractionDefinition* Interaction);                                                 // [0x4b86140] Native|Protected     
	// Function /Script/DeadByDaylight.UmgPlayerHud.OnInteractionEnded
	// void OnInteractionEnded(class UInteractionDefinition* Interaction);                                                   // [0x594e140] Native|Protected     
	// Function /Script/DeadByDaylight.UmgPlayerHud.OnInitializeHUD
	// void OnInitializeHUD();                                                                                               // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UmgPlayerHud.IsInteractionAvailable
	// bool IsInteractionAvailable(EInputInteractionType interactionType);                                                   // [0x594df80] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UmgPlayerHud.IsInteractionAllowed
	// bool IsInteractionAllowed(class UInteractionDefinition* Interaction);                                                 // [0x594dee0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UmgPlayerHud.IsInitialized
	// bool IsInitialized();                                                                                                 // [0x594deb0] Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UmgPlayerHud.GetInteractionIconByType
	// FSlateBrush GetInteractionIconByType(EInputInteractionType interactionInputType);                                     // [0x594daf0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UmgPlayerHud.GetCurrentOrAvailableInteractionOfType
	// class UInteractionDefinition* GetCurrentOrAvailableInteractionOfType(EInputInteractionType interactionInputType);     // [0x594da60] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.UmgPlayableHud
/// Size: 0x0000 (0x000560 - 0x000560)
class UUmgPlayableHud : public UUmgPlayerHud
{ 
public:
};

/// Class /Script/DeadByDaylight.UMGPlayerRankInfo
/// Size: 0x0060 (0x000338 - 0x000398)
class UUMGPlayerRankInfo : public UMobileBaseUserWidget
{ 
public:
	class UUMGTallyPipsContainer*                      PipsContainerWidget;                                        // 0x0338   (0x0008)  
	class UUMGTallyRankFrame*                          RankFrameWidget;                                            // 0x0340   (0x0008)  
	class UImage*                                      Background;                                                 // 0x0348   (0x0008)  
	class UTextBlock*                                  TitleLabel;                                                 // 0x0350   (0x0008)  
	class UTextBlock*                                  RankLabel;                                                  // 0x0358   (0x0008)  
	class UTextBlock*                                  pipLabel;                                                   // 0x0360   (0x0008)  
	class UCanvasPanel*                                HighlightContainer;                                         // 0x0368   (0x0008)  
	FLinearColor                                       _survivorColorBackground;                                   // 0x0370   (0x0010)  
	FLinearColor                                       _killerColorBackground;                                     // 0x0380   (0x0010)  
	float                                              _disableOpacity;                                            // 0x0390   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0394   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGPlayerRankInfo.SetData
	// void SetData(int32_t Rank, int32_t PipsRequiredForNextRank, int32_t filledPips, FText TitleLabel, FText pipLabel, EPlayerRole PlayerRole, bool IsHighlight); // [0x594e480] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGPlayersStatusWidget
/// Size: 0x0100 (0x000338 - 0x000438)
class UUMGPlayersStatusWidget : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(80,2483) /* TMap<EPlayerRole, FCustomizedHudPlayerWrapperIdMapContainer> */ __um(CustomizedHudWrapperIdMap); // 0x0338   (0x0050)  
	SDK_UNDEFINED(48,2484) /* TWeakObjectPtr<UClass*> */ __um(PlayerStatusIconClass);                              // 0x0388   (0x0030)  
	class UHorizontalBox*                              playersContainer;                                           // 0x03B8   (0x0008)  
	SDK_UNDEFINED(80,2485) /* TMap<FString, UUMGPlayerStatusIcon*> */ __um(playerIconsByName);                     // 0x03C0   (0x0050)  
	TArray<class UUMGPlayerStatusIcon*>                _playerIcons;                                               // 0x0410   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0420   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGPlayersStatusWidget.OnPlayerStatusClicked
	// void OnPlayerStatusClicked(class UUMGPlayerStatusIcon* playerStatusIcon);                                             // [0x59528c0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGPlayerStatusIcon
/// Size: 0x0280 (0x000338 - 0x0005B8)
class UUMGPlayerStatusIcon : public UMobileBaseUserWidget
{ 
public:
	class UProgressBar*                                HealthBar;                                                  // 0x0338   (0x0008)  
	class UProgressBar*                                TimerBar;                                                   // 0x0340   (0x0008)  
	class UCanvasPanel*                                HealthBarContainer;                                         // 0x0348   (0x0008)  
	class UCanvasPanel*                                TimerBarContainer;                                          // 0x0350   (0x0008)  
	class UTextBlock*                                  playerName;                                                 // 0x0358   (0x0008)  
	class UImage*                                      StatusIconBloodTop;                                         // 0x0360   (0x0008)  
	class UImage*                                      StatusIconBloodBottom;                                      // 0x0368   (0x0008)  
	class UImage*                                      StatusIcon;                                                 // 0x0370   (0x0008)  
	class UCanvasPanel*                                ObsessionCanvas;                                            // 0x0378   (0x0008)  
	class UCanvasPanel*                                BrokenIndicatorCanvas;                                      // 0x0380   (0x0008)  
	class UCanvasPanel*                                AfflictionCanvas;                                           // 0x0388   (0x0008)  
	class UCanvasPanel*                                AfflictionIntroCanvas;                                      // 0x0390   (0x0008)  
	class UCanvasPanel*                                SleepStatusCanvas;                                          // 0x0398   (0x0008)  
	class UCanvasPanel*                                SleepTimerCanvas;                                           // 0x03A0   (0x0008)  
	class UCanvasPanel*                                ReverseBearTrapCanvas;                                      // 0x03A8   (0x0008)  
	class UImage*                                      ReverseBearTrapArrow;                                       // 0x03B0   (0x0008)  
	class UCanvasPanel*                                SicknessCanvas;                                             // 0x03B8   (0x0008)  
	class UImage*                                      SicknessFill;                                               // 0x03C0   (0x0008)  
	class UCanvasPanel*                                SpectateCanvas;                                             // 0x03C8   (0x0008)  
	class UCanvasPanel*                                SelectedSpectatorCanvas;                                    // 0x03D0   (0x0008)  
	class UCanvasPanel*                                AgonyCanvas;                                                // 0x03D8   (0x0008)  
	class UCanvasPanel*                                HandsGrabbing;                                              // 0x03E0   (0x0008)  
	float                                              SicknessFillHighOpacity;                                    // 0x03E8   (0x0004)  
	float                                              SicknessFillLowOpacity;                                     // 0x03EC   (0x0004)  
	class UCanvasPanel*                                StatusEffectContainerCanvas;                                // 0x03F0   (0x0008)  
	class UMaterialInstanceDynamic*                    SicknessFillMI;                                             // 0x03F8   (0x0008)  
	class UTexture2D*                                  _hookedTexture;                                             // 0x0400   (0x0008)  
	class UTexture2D*                                  _hookedBloodTexture;                                        // 0x0408   (0x0008)  
	class UTexture2D*                                  _trappedTexture;                                            // 0x0410   (0x0008)  
	class UTexture2D*                                  _trappedBloodTexture;                                       // 0x0418   (0x0008)  
	class UTexture2D*                                  _deadTexture;                                               // 0x0420   (0x0008)  
	class UTexture2D*                                  _deadBloodTexture;                                          // 0x0428   (0x0008)  
	class UTexture2D*                                  _escapedTexture;                                            // 0x0430   (0x0008)  
	class UTexture2D*                                  _carriedTexture;                                            // 0x0438   (0x0008)  
	class UTexture2D*                                  _injuredTexture;                                            // 0x0440   (0x0008)  
	class UTexture2D*                                  _injuredBloodTexture;                                       // 0x0448   (0x0008)  
	class UTexture2D*                                  _crawlingTexture;                                           // 0x0450   (0x0008)  
	class UTexture2D*                                  _crawlingBloodTexture;                                      // 0x0458   (0x0008)  
	class UTexture2D*                                  _sacrificedTexture;                                         // 0x0460   (0x0008)  
	class UTexture2D*                                  _sacrificedBloodTexture;                                    // 0x0468   (0x0008)  
	class UTexture2D*                                  _disconnectedTexture;                                       // 0x0470   (0x0008)  
	class UTexture2D*                                  _deathBedTexture;                                           // 0x0478   (0x0008)  
	class UTexture2D*                                  _defaultTexture;                                            // 0x0480   (0x0008)  
	SDK_UNDEFINED(48,2486) /* TWeakObjectPtr<UClass*> */ __um(UMGStalkingStatusEffectUIClass);                     // 0x0488   (0x0030)  
	SDK_UNDEFINED(48,2487) /* TWeakObjectPtr<UClass*> */ __um(UMGLacerationStatusEffectUIClass);                   // 0x04B8   (0x0030)  
	int32_t                                            _maxNumberCharacterInName;                                  // 0x04E8   (0x0004)  
	unsigned char                                      UnknownData00_5[0xBC];                                      // 0x04EC   (0x00BC)  MISSED
	class UUMGStalkingStatusEffectUI*                  _stalkingStatusEffectUI;                                    // 0x05A8   (0x0008)  
	class UUMGLacerationStatusEffectUI*                _lacerationStatusEffectUI;                                  // 0x05B0   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGPlayerStatusIcon.SetSleepingTimer
	// void SetSleepingTimer(float progress);                                                                                // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGPlayerStatusIcon.SetReverseTrapProgressionTimer
	// void SetReverseTrapProgressionTimer(float Seconds);                                                                   // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGPlayerStatusIcon.OnPlayerStatusButtonClicked
	// void OnPlayerStatusButtonClicked();                                                                                   // [0x59528a0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGPopupButton
/// Size: 0x0038 (0x000468 - 0x0004A0)
class UUMGPopupButton : public UUMGBaseButtonWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x14];                                      // 0x0468   (0x0014)  MISSED
	float                                              DisabledOpacity;                                            // 0x047C   (0x0004)  
	float                                              EnabledOpacity;                                             // 0x0480   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0484   (0x0004)  MISSED
	class UImage*                                      VFXs;                                                       // 0x0488   (0x0008)  
	class UImage*                                      Line;                                                       // 0x0490   (0x0008)  
	class UImage*                                      FXSmoke;                                                    // 0x0498   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGPopupButton.OnButtonReleased
	// void OnButtonReleased();                                                                                              // [0x5952880] Native|Public        
	// Function /Script/DeadByDaylight.UMGPopupButton.OnButtonPressed
	// void OnButtonPressed();                                                                                               // [0x5952860] Native|Public        
	// Function /Script/DeadByDaylight.UMGPopupButton.OnButtonClicked
	// void OnButtonClicked();                                                                                               // [0x4b96770] Native|Public        
};

/// Class /Script/DeadByDaylight.UMGPromoPackItemWidget
/// Size: 0x0038 (0x000468 - 0x0004A0)
class UUMGPromoPackItemWidget : public UUMGBaseButtonWidget
{ 
public:
	class UCanvasPanel*                                SelectedPanel;                                              // 0x0468   (0x0008)  
	class UCanvasPanel*                                BackgroundPanel;                                            // 0x0470   (0x0008)  
	class UCanvasPanel*                                AmountPanel;                                                // 0x0478   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0480   (0x0020)  MISSED
};

/// Class /Script/DeadByDaylight.UMGPromoPackCharacterWidget
/// Size: 0x0008 (0x0004A0 - 0x0004A8)
class UUMGPromoPackCharacterWidget : public UUMGPromoPackItemWidget
{ 
public:
	class UCanvasPanel*                                OwnedPanel;                                                 // 0x04A0   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGPromoPackContentWidget
/// Size: 0x0028 (0x000338 - 0x000360)
class UUMGPromoPackContentWidget : public UMobileBaseUserWidget
{ 
public:
	class UHorizontalBox*                              Content;                                                    // 0x0338   (0x0008)  
	class UPromoPackContentDataAsset*                  WidgetPerContentType;                                       // 0x0340   (0x0008)  
	class UScrollBox*                                  ScrollBox;                                                  // 0x0348   (0x0008)  
	SDK_UNDEFINED(16,2488) /* TArray<TWeakObjectPtr<UVerticalBox*>> */ __um(_itemsContainer);                      // 0x0350   (0x0010)  
};

/// Class /Script/DeadByDaylight.UMGPromoPackCurrencyWidget
/// Size: 0x0000 (0x0004A0 - 0x0004A0)
class UUMGPromoPackCurrencyWidget : public UUMGPromoPackItemWidget
{ 
public:
};

/// Class /Script/DeadByDaylight.UMGPromoPackPurchaseCurrencyButtonWidget
/// Size: 0x0020 (0x000510 - 0x000530)
class UUMGPromoPackPurchaseCurrencyButtonWidget : public UUMGBaseCurrencyButtonWidget
{ 
public:
	class UTextBlock*                                  PercentageDiscountText;                                     // 0x0510   (0x0008)  
	class UTextBlock*                                  UndiscountedPrice;                                          // 0x0518   (0x0008)  
	class UCanvasPanel*                                PercentageDiscountCanvas;                                   // 0x0520   (0x0008)  
	class UOverlay*                                    OverlayUndiscountedPrice;                                   // 0x0528   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGPromoPackSelectedItemWidget
/// Size: 0x0038 (0x000338 - 0x000370)
class UUMGPromoPackSelectedItemWidget : public UMobileBaseUserWidget
{ 
public:
	class UUMGHtmlRichText*                            ItemDescription;                                            // 0x0338   (0x0008)  
	class UImage*                                      ItemTypeIcon;                                               // 0x0340   (0x0008)  
	class UTextBlock*                                  ItemName;                                                   // 0x0348   (0x0008)  
	class UTextBlock*                                  ItemSubTitle;                                               // 0x0350   (0x0008)  
	class UNamedSlot*                                  SelectedItemSlot;                                           // 0x0358   (0x0008)  
	class UUMGPromoPackItemWidget*                     SelectedItem;                                               // 0x0360   (0x0008)  
	class UScrollBox*                                  ScrollBox;                                                  // 0x0368   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGPromoPackSuggestionButton
/// Size: 0x0010 (0x000468 - 0x000478)
class UUMGPromoPackSuggestionButton : public UUMGBaseButtonWidget
{ 
public:
	class URichTextBlock*                              RichTextButtonLabel;                                        // 0x0468   (0x0008)  
	class UImage*                                      LineGlow;                                                   // 0x0470   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGPurchaseBuyButton
/// Size: 0x0008 (0x000468 - 0x000470)
class UUMGPurchaseBuyButton : public UUMGBaseButtonWidget
{ 
public:
	class UTextBlock*                                  PriceText;                                                  // 0x0468   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGPurchaseCurrencyWidget
/// Size: 0x0088 (0x000338 - 0x0003C0)
class UUMGPurchaseCurrencyWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  PercentageDiscountText;                                     // 0x0338   (0x0008)  
	class UImage*                                      CurrencyIcon;                                               // 0x0340   (0x0008)  
	class UTextBlock*                                  PriceText;                                                  // 0x0348   (0x0008)  
	class UTextBlock*                                  UndiscountedPrice;                                          // 0x0350   (0x0008)  
	class UImage*                                      CurrencyColorImage;                                         // 0x0358   (0x0008)  
	class UOverlay*                                    OriginalPriceOverlay;                                       // 0x0360   (0x0008)  
	class UCanvasPanel*                                DiscountCanvas;                                             // 0x0368   (0x0008)  
	FSlateColor                                        AffordableColor;                                            // 0x0370   (0x0028)  
	FSlateColor                                        NotAffordableColor;                                         // 0x0398   (0x0028)  
};

/// Class /Script/DeadByDaylight.UMGPurchaseItemsInfo
/// Size: 0x0018 (0x000338 - 0x000350)
class UUMGPurchaseItemsInfo : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      Icon;                                                       // 0x0338   (0x0008)  
	class UTextBlock*                                  Quantity;                                                   // 0x0340   (0x0008)  
	class UTextBlock*                                  ItemName;                                                   // 0x0348   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGPurchaseSticker
/// Size: 0x0008 (0x000338 - 0x000340)
class UUMGPurchaseSticker : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  TextDiscount;                                               // 0x0338   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGQueueStatusIconWidget
/// Size: 0x0038 (0x000338 - 0x000370)
class UUMGQueueStatusIconWidget : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      statusIndicator;                                            // 0x0338   (0x0008)  
	FLinearColor                                       AcceptableColor;                                            // 0x0340   (0x0010)  
	FLinearColor                                       ModerateColor;                                              // 0x0350   (0x0010)  
	FLinearColor                                       LongColor;                                                  // 0x0360   (0x0010)  
};

/// Class /Script/DeadByDaylight.UMGRankBanner
/// Size: 0x0038 (0x000338 - 0x000370)
class UUMGRankBanner : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	class UUMGTallyRankFrame*                          RankFrameWidget;                                            // 0x0340   (0x0008)  
	class UButton*                                     TooltipButton;                                              // 0x0348   (0x0008)  
	class UImage*                                      HighlightImage;                                             // 0x0350   (0x0008)  
	class UAkAudioEvent*                               OnLongPressSound;                                           // 0x0358   (0x0008)  
	SDK_UNDEFINED(16,2489) /* FMulticastInlineDelegate */ __um(_onLongPressRankTooltipEvent);                      // 0x0360   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGRankBanner.StopHighlight
	// void StopHighlight();                                                                                                 // [0x5949200] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGRankBanner.StartHighlight
	// void StartHighlight();                                                                                                // [0x59491d0] Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGRankBanner.SetData
	// void SetData(int32_t Rank, EPlayerRole PlayerRole);                                                                   // [0x5952a30] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGRankBanner.HandleTooltipLongPressedEvent
	// void HandleTooltipLongPressedEvent();                                                                                 // [0x5952840] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGReceivedFriendRequestListElement
/// Size: 0x0008 (0x0003F8 - 0x000400)
class UUMGReceivedFriendRequestListElement : public UUMGBaseFriendListElement
{ 
public:
	class URichTextBlock*                              FriendRequestStatusRichText;                                // 0x03F8   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGRefundDataWidget
/// Size: 0x0000 (0x000338 - 0x000338)
class UUMGRefundDataWidget : public UMobileBaseUserWidget
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.UMGRefundDataWidget.SetDataAndUpdateWidget
	// void SetDataAndUpdateWidget(FRefundUIData& RefundUIData);                                                             // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
};

/// Struct /Script/DeadByDaylight.RewardLayoutWidgetToGenerate
/// Size: 0x0090 (0x000000 - 0x000090)
struct FRewardLayoutWidgetToGenerate
{ 
	SDK_UNDEFINED(48,2490) /* TWeakObjectPtr<UClass*> */ __um(CharacterRewardWidget);                              // 0x0000   (0x0030)  
	SDK_UNDEFINED(48,2491) /* TWeakObjectPtr<UClass*> */ __um(CurrencyRewardWidget);                               // 0x0030   (0x0030)  
	SDK_UNDEFINED(48,2492) /* TWeakObjectPtr<UClass*> */ __um(SpacerWidget);                                       // 0x0060   (0x0030)  
};

/// Class /Script/DeadByDaylight.UMGRewardPopupLayout
/// Size: 0x0180 (0x000338 - 0x0004B8)
class UUMGRewardPopupLayout : public UMobileBaseUserWidget
{ 
public:
	class UHorizontalBox*                              TopHorizontalBox;                                           // 0x0338   (0x0008)  
	class UHorizontalBox*                              BottomHorizontalBox;                                        // 0x0340   (0x0008)  
	class UUMGRewardSlotTutorialPopupRewardWidget*     FirstCharacter;                                             // 0x0348   (0x0008)  
	class UUMGRewardSlotTutorialPopupRewardWidget*     SecondCharacter;                                            // 0x0350   (0x0008)  
	class UUMGRewardSlotTutorialPopupRewardWidget*     ThirdCharacter;                                             // 0x0358   (0x0008)  
	class UUMGRewardSlotTutorialPopupRewardWidget*     FourthCharacter;                                            // 0x0360   (0x0008)  
	class UUMGRewardSlotTutorialPopupRewardWidget*     FifthCharacter;                                             // 0x0368   (0x0008)  
	class UUMGRewardSlotTutorialPopupRewardWidget*     AuricCells;                                                 // 0x0370   (0x0008)  
	class UUMGRewardSlotTutorialPopupRewardWidget*     IridescentShards;                                           // 0x0378   (0x0008)  
	class UUMGRewardSlotTutorialPopupRewardWidget*     BloodPoints;                                                // 0x0380   (0x0008)  
	FRewardLayoutWidgetToGenerate                      TopWidgetToGenerate;                                        // 0x0388   (0x0090)  
	FRewardLayoutWidgetToGenerate                      BottomWidgetToGenerate;                                     // 0x0418   (0x0090)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x04A8   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.UMGRewardSlotTutorialPopupRewardWidget
/// Size: 0x0028 (0x000338 - 0x000360)
class UUMGRewardSlotTutorialPopupRewardWidget : public UMobileBaseUserWidget
{ 
public:
	class UTextBlock*                                  RewardText;                                                 // 0x0338   (0x0008)  
	class UImage*                                      RewardPicture;                                              // 0x0340   (0x0008)  
	class UWidget*                                     UnlockedPanel;                                              // 0x0348   (0x0008)  
	class UWidget*                                     MissedRewardPanel;                                          // 0x0350   (0x0008)  
	float                                              RewardUnlockedTextOpacity;                                  // 0x0358   (0x0004)  
	float                                              RewardToBeMissedTextOpacity;                                // 0x035C   (0x0004)  
};

/// Class /Script/DeadByDaylight.UMGRewardWidget
/// Size: 0x0008 (0x000338 - 0x000340)
class UUMGRewardWidget : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      CheckIcon;                                                  // 0x0338   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGRewardWidget.SetData
	// void SetData(FRewardItemData& RewardData);                                                                            // [0x61d2f50] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGRichTextRewardItemDecorator
/// Size: 0x0008 (0x000030 - 0x000038)
class UUMGRichTextRewardItemDecorator : public URichTextBlockDecorator
{ 
public:
	class UDataTable*                                  RewardSet;                                                  // 0x0030   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGRitualClaimRewardButton
/// Size: 0x0018 (0x000468 - 0x000480)
class UUMGRitualClaimRewardButton : public UUMGBaseButtonWidget
{ 
public:
	SDK_UNDEFINED(16,2493) /* FMulticastInlineDelegate */ __um(OnPressedAnimationCompleted);                       // 0x0468   (0x0010)  
	class UCanvasPanel*                                ClaimFxPanel;                                               // 0x0478   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGRitualClaimRewardButton.SetClaimedButtonStatus
	// void SetClaimedButtonStatus(bool isClaimed, float percent);                                                           // [0x5952950] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGRitualClaimRewardButton.OnPressedAnimationCompleted__DelegateSignature
	// void OnPressedAnimationCompleted__DelegateSignature();                                                                // [0x61d2f50] MulticastDelegate|Public|Delegate 
	// Function /Script/DeadByDaylight.UMGRitualClaimRewardButton.BroadcastOnPressedAnimationCompleted
	// void BroadcastOnPressedAnimationCompleted();                                                                          // [0x59527a0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGRitualRefreshButton
/// Size: 0x0010 (0x000468 - 0x000478)
class UUMGRitualRefreshButton : public UUMGBaseButtonWidget
{ 
public:
	class UCanvasPanel*                                RefreshCanvas;                                              // 0x0468   (0x0008)  
	class UWidgetSwitcher*                             RefreshSwitcher;                                            // 0x0470   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGRitualRefreshButton.SetRefreshButton
	// void SetRefreshButton(int32_t Currency, ECurrencyType currentyType, bool isAdsRefresh);                               // [0x5952b00] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGRoleSelectionScreen
/// Size: 0x0020 (0x000338 - 0x000358)
class UUMGRoleSelectionScreen : public UMobileBaseUserWidget
{ 
public:
	int32_t                                            _newInboxMessageCount;                                      // 0x0338   (0x0004)  
	unsigned char                                      UnknownData00_6[0x1C];                                      // 0x033C   (0x001C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGRoleSelectionScreen.ButtonClickEvent
	// void ButtonClickEvent(ERoleSelectionScreenButton buttonId);                                                           // [0x59527c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGRoleSwitcherWidget
/// Size: 0x0060 (0x000298 - 0x0002F8)
class UUMGRoleSwitcherWidget : public UUserWidget
{ 
public:
	bool                                               _isCurrentRoleRoleSwitcher;                                 // 0x0298   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0299   (0x0003)  MISSED
	float                                              _touchDeltaTolerance;                                       // 0x029C   (0x0004)  
	unsigned char                                      UnknownData01_6[0x58];                                      // 0x02A0   (0x0058)  MISSED
};

/// Class /Script/DeadByDaylight.UMGScoreAlertWidget
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class UUMGScoreAlertWidget : public UUMGBaseAlertWidget
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.UMGScoreAlertWidget.UpdateWidget
	// void UpdateWidget(EDBDScoreCategory scoreType, FString Title, int32_t ScoreValue, float progress, FText& defaultScoreText); // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGSelectedCharacterWidget
/// Size: 0x0048 (0x000338 - 0x000380)
class UUMGSelectedCharacterWidget : public UMobileBaseUserWidget
{ 
public:
	class UUMGCharacterPrestigeButton*                 PrestigeButton;                                             // 0x0338   (0x0008)  
	class UTextBlock*                                  CharacterNameText;                                          // 0x0340   (0x0008)  
	class UTextBlock*                                  CharacterLevelText;                                         // 0x0348   (0x0008)  
	class UVerticalBox*                                CharacterLevelVerticalBox;                                  // 0x0350   (0x0008)  
	class UImage*                                      LeaderIcon;                                                 // 0x0358   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0360   (0x0010)  MISSED
	SDK_UNDEFINED(16,2494) /* FMulticastInlineDelegate */ __um(_onCancelPartyButtonClick);                         // 0x0370   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGSelectedCharacterWidget.SetVisualsForReadyState
	// void SetVisualsForReadyState(bool IsPlayerReady);                                                                     // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGSelectedCharacterWidget.SetVisualsForPartyState
	// void SetVisualsForPartyState(bool triggerPartyVisuals);                                                               // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGSelectedCharacterWidget.OnPrestigeButtonClicked
	// void OnPrestigeButtonClicked();                                                                                       // [0x5955210] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGSettingContextWidget
/// Size: 0x0018 (0x000338 - 0x000350)
class UUMGSettingContextWidget : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0338   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGSettingContextWidget.SetContextTitle
	// void SetContextTitle(FText& contextTitle);                                                                            // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGSettingContextWidget.HandleContextButtonClickEvent
	// void HandleContextButtonClickEvent(int32_t buttonData);                                                               // [0x5954ed0] Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGSettingAboutContextWidget
/// Size: 0x0010 (0x000350 - 0x000360)
class UUMGSettingAboutContextWidget : public UUMGSettingContextWidget
{ 
public:
	class UUMGSettingContextButton*                    EULAButton;                                                 // 0x0350   (0x0008)  
	class UUMGSettingContextButton*                    CreditsButton;                                              // 0x0358   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGSettingAboutContextWidget.SetVersionNumber
	// void SetVersionNumber(FString VersionNumber);                                                                         // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGSettingContextButton
/// Size: 0x0018 (0x000338 - 0x000350)
class UUMGSettingContextButton : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(16,2495) /* FMulticastInlineDelegate */ __um(OnSettingContextButtonClickEvent);                  // 0x0338   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0348   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGSettingContextButton.SetIsSelected
	// void SetIsSelected(bool IsSelected);                                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGSettingContextButton.SetContextButtonData
	// void SetContextButtonData(int32_t buttonId);                                                                          // [0x5955230] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingContextButton.SetButtonText
	// void SetButtonText(FString ButtonText);                                                                               // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGSettingContextButton.HandleSettingContextButtonClick
	// void HandleSettingContextButtonClick();                                                                               // [0x4bb3a50] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingContextButton.GetContextButtonData
	// int32_t GetContextButtonData();                                                                                       // [0x5954e10] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGSettingControlsContextWidget
/// Size: 0x0090 (0x000350 - 0x0003E0)
class UUMGSettingControlsContextWidget : public UUMGSettingContextWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0350   (0x0060)  MISSED
	bool                                               AimAssist;                                                  // 0x03B0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x03B1   (0x0003)  MISSED
	int32_t                                            HandSide;                                                   // 0x03B4   (0x0004)  
	int32_t                                            InteractionButton;                                          // 0x03B8   (0x0004)  
	bool                                               InvertY;                                                    // 0x03BC   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x03BD   (0x0003)  MISSED
	float                                              KillerCameraSensitivity;                                    // 0x03C0   (0x0004)  
	float                                              SurvivorCameraSensitivity;                                  // 0x03C4   (0x0004)  
	unsigned char                                      UnknownData03_6[0x18];                                      // 0x03C8   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGSettingControlsContextWidget.HandleSurvivorCameraSensitivityChanged
	// void HandleSurvivorCameraSensitivityChanged(float sliderValue);                                                       // [0x5955190] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingControlsContextWidget.HandleKillerCameraSensitivityChanged
	// void HandleKillerCameraSensitivityChanged(float sliderValue);                                                         // [0x5955110] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingControlsContextWidget.HandleInvertYToggleClick
	// void HandleInvertYToggleClick(bool toggleValue);                                                                      // [0x5955080] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingControlsContextWidget.HandleInteractionButtonToggleClick
	// void HandleInteractionButtonToggleClick(int32_t index);                                                               // [0x5954ff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingControlsContextWidget.HandleHandSideToggleClick
	// void HandleHandSideToggleClick(int32_t index);                                                                        // [0x5954f60] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingControlsContextWidget.HandleAimAssistToggleClick
	// void HandleAimAssistToggleClick(bool toggleValue);                                                                    // [0x5954e40] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGSettingLanguageContextWidget
/// Size: 0x0048 (0x000350 - 0x000398)
class UUMGSettingLanguageContextWidget : public UUMGSettingContextWidget
{ 
public:
	class UScrollBox*                                  LanguageScrollBox;                                          // 0x0350   (0x0008)  
	SDK_UNDEFINED(48,2496) /* TWeakObjectPtr<UClass*> */ __um(_languageButtonClass);                               // 0x0358   (0x0030)  
	int32_t                                            _languageListRowGap;                                        // 0x0388   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x038C   (0x0004)  MISSED
	class UUMGSettingContextButton*                    _selectedLanguageButton;                                    // 0x0390   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGSettingMenuButton
/// Size: 0x0018 (0x000338 - 0x000350)
class UUMGSettingMenuButton : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0338   (0x0018)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGSettingMenuButton.SetTabButtonText
	// void SetTabButtonText(FText& ButtonText);                                                                             // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGSettingMenuButton.SetIsSelected
	// void SetIsSelected(bool IsSelected);                                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGSettingMenuButton.HandleSettingTabButtonClick
	// void HandleSettingTabButtonClick();                                                                                   // [0x5959310] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGSettingSettingsContextWidget
/// Size: 0x00C8 (0x000350 - 0x000418)
class UUMGSettingSettingsContextWidget : public UUMGSettingContextWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x90];                                      // 0x0350   (0x0090)  MISSED
	bool                                               MainVolumeOn;                                               // 0x03E0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x03E1   (0x0003)  MISSED
	float                                              MainVolume;                                                 // 0x03E4   (0x0004)  
	bool                                               MenuVolumeOn;                                               // 0x03E8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x03E9   (0x0003)  MISSED
	float                                              MenuVolume;                                                 // 0x03EC   (0x0004)  
	bool                                               IsLoggedIn;                                                 // 0x03F0   (0x0001)  
	bool                                               IsEnableUserCenterWithLoggedOut;                            // 0x03F1   (0x0001)  
	bool                                               IsLeaveTutorialButtonVisible;                               // 0x03F2   (0x0001)  
	bool                                               IsAutoDeclineFriendRequestOn;                               // 0x03F3   (0x0001)  
	unsigned char                                      UnknownData03_6[0x24];                                      // 0x03F4   (0x0024)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGSettingSettingsContextWidget.ShowLinkAccountRow
	// void ShowLinkAccountRow(bool isShow);                                                                                 // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGSettingSettingsContextWidget.HandleUserCenterButtonClick
	// void HandleUserCenterButtonClick();                                                                                   // [0x4ba01b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingSettingsContextWidget.HandleMenuVolumeToggleClick
	// void HandleMenuVolumeToggleClick(bool toggleValue);                                                                   // [0x5959280] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingSettingsContextWidget.HandleMenuVolumeChanged
	// void HandleMenuVolumeChanged(float sliderValue);                                                                      // [0x5959200] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingSettingsContextWidget.HandleMainVolumeToggleClick
	// void HandleMainVolumeToggleClick(bool toggleValue);                                                                   // [0x5959170] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingSettingsContextWidget.HandleMainVolumeChanged
	// void HandleMainVolumeChanged(float sliderValue);                                                                      // [0x59590f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingSettingsContextWidget.HandleLogOutButtonClick
	// void HandleLogOutButtonClick();                                                                                       // [0x59590d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingSettingsContextWidget.HandleLogInButtonClick
	// void HandleLogInButtonClick();                                                                                        // [0x59590b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingSettingsContextWidget.HandleLeaveTutorialButtonClick
	// void HandleLeaveTutorialButtonClick();                                                                                // [0x4ba0a10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSettingSettingsContextWidget.HandleAutoDeclineFriendRequestToggleClick
	// void HandleAutoDeclineFriendRequestToggleClick(bool toggleValue);                                                     // [0x5958f20] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGSettingSubscriptionStatus
/// Size: 0x00A8 (0x000298 - 0x000340)
class UUMGSettingSubscriptionStatus : public UUserWidget
{ 
public:
	SDK_UNDEFINED(24,2497) /* FText */                 __um(SubscriptionStatusText);                               // 0x0298   (0x0018)  
	SDK_UNDEFINED(24,2498) /* FText */                 __um(StatusText);                                           // 0x02B0   (0x0018)  
	SDK_UNDEFINED(24,2499) /* FText */                 __um(InactiveStatusText);                                   // 0x02C8   (0x0018)  
	SDK_UNDEFINED(24,2500) /* FText */                 __um(EndText);                                              // 0x02E0   (0x0018)  
	class UWidgetSwitcher*                             TypeSwitcher;                                               // 0x02F8   (0x0008)  
	class UHorizontalBox*                              ActiveWidget;                                               // 0x0300   (0x0008)  
	class UOverlay*                                    InactiveWidget;                                             // 0x0308   (0x0008)  
	class UTextBlock*                                  titleText;                                                  // 0x0310   (0x0008)  
	class UTextBlock*                                  DisplayName;                                                // 0x0318   (0x0008)  
	class UTextBlock*                                  Status;                                                     // 0x0320   (0x0008)  
	class UTextBlock*                                  StatusInactive;                                             // 0x0328   (0x0008)  
	class UTextBlock*                                  End;                                                        // 0x0330   (0x0008)  
	class UTextBlock*                                  EndDate;                                                    // 0x0338   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGSettingTutorialContextWidget
/// Size: 0x0028 (0x000350 - 0x000378)
class UUMGSettingTutorialContextWidget : public UUMGSettingContextWidget
{ 
public:
	class UUMGSettingContextButton*                    SurvivorTutorialButton;                                     // 0x0350   (0x0008)  
	class UUMGSettingContextButton*                    KillerTutorialButton;                                       // 0x0358   (0x0008)  
	class UUMGSettingContextButton*                    SurvivorCinematicButton;                                    // 0x0360   (0x0008)  
	class UUMGSettingContextButton*                    KillerCinematicButton;                                      // 0x0368   (0x0008)  
	class UUMGSettingContextButton*                    LoreCinematicButton;                                        // 0x0370   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGShadersPrecompilingProgressionWidget
/// Size: 0x0010 (0x000338 - 0x000348)
class UUMGShadersPrecompilingProgressionWidget : public UMobileBaseUserWidget
{ 
public:
	class UProgressBar*                                _progressBar;                                               // 0x0338   (0x0008)  
	class UTextBlock*                                  _progressionText;                                           // 0x0340   (0x0008)  
};

/// Class /Script/DeadByDaylight.UmgSpectatorHud
/// Size: 0x0020 (0x000560 - 0x000580)
class UUmgSpectatorHud : public UUmgPlayerHud
{ 
public:
	SDK_UNDEFINED(16,2501) /* FMulticastInlineDelegate */ __um(OnLeaveSpectateClicked);                            // 0x0560   (0x0010)  
	SDK_UNDEFINED(16,2502) /* FMulticastInlineDelegate */ __um(OnPlayerSpectate);                                  // 0x0570   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UmgSpectatorHud.OnPlayerStatusSelected
	// void OnPlayerStatusSelected(FString playerName);                                                                      // [0x5959500] Final|Native|Private 
	// Function /Script/DeadByDaylight.UmgSpectatorHud.HandleLeaveSpectateClicked
	// void HandleLeaveSpectateClicked();                                                                                    // [0x5959090] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGSplashScreen
/// Size: 0x0070 (0x000338 - 0x0003A8)
class UUMGSplashScreen : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(16,2503) /* FMulticastInlineDelegate */ __um(OnSaveGamePopupCompleteEvent);                      // 0x0338   (0x0010)  
	SDK_UNDEFINED(16,2504) /* FMulticastInlineDelegate */ __um(OnScreenTouched);                                   // 0x0348   (0x0010)  
	class UCanvasPanel*                                SavePopup;                                                  // 0x0358   (0x0008)  
	class UTextBlock*                                  GameVersion;                                                // 0x0360   (0x0008)  
	class UTextBlock*                                  LoadingState;                                               // 0x0368   (0x0008)  
	class UTextBlock*                                  PressKey;                                                   // 0x0370   (0x0008)  
	class UButton*                                     TapButton;                                                  // 0x0378   (0x0008)  
	class UTextBlock*                                  SaveGameTitle;                                              // 0x0380   (0x0008)  
	class UTextBlock*                                  SaveGameDescription;                                        // 0x0388   (0x0008)  
	class UUMGDownloadProgressionWidget*               DownloadProgression;                                        // 0x0390   (0x0008)  
	class UUMGCharacterSlideShowWidget*                CharacterSlideShow;                                         // 0x0398   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x03A0   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGSplashScreen.OnTapButtonClicked
	// void OnTapButtonClicked();                                                                                            // [0x59595e0] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGSplashScreen.OnSaveGamePopupComplete
	// void OnSaveGamePopupComplete();                                                                                       // [0x59595a0] Final|Native|Public|BlueprintCallable|Const 
};

/// Class /Script/DeadByDaylight.UMGStalkingStatusEffectUI
/// Size: 0x0050 (0x000338 - 0x000388)
class UUMGStalkingStatusEffectUI : public UMobileBaseUserWidget
{ 
public:
	class UCanvasPanel*                                StalkedCanvas;                                              // 0x0338   (0x0008)  
	class UImage*                                      StalkingFillFull;                                           // 0x0340   (0x0008)  
	class UImage*                                      StalkingFillLines;                                          // 0x0348   (0x0008)  
	class UImage*                                      StalkingRedBackground;                                      // 0x0350   (0x0008)  
	FName                                              StalkingStartAnimationName;                                 // 0x0358   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0364   (0x0004)  MISSED
	class UMaterialInstanceDynamic*                    _stalkingFillFullMI;                                        // 0x0368   (0x0008)  
	class UMaterialInstanceDynamic*                    _stalkingFillLinesMI;                                       // 0x0370   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0378   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.StatusEffectSlotData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FStatusEffectSlotData
{ 
	SDK_UNDEFINED(16,2505) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2506) /* FString */               __um(IconFilePath);                                         // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2507) /* FString */               __um(DisplayName);                                          // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2508) /* FString */               __um(Description);                                          // 0x0030   (0x0010)  
	EStatusEffectType                                  StatusEffectType;                                           // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0041   (0x0003)  MISSED
	int32_t                                            Level;                                                      // 0x0044   (0x0004)  
};

/// Class /Script/DeadByDaylight.UMGStatusEffectIcon
/// Size: 0x0048 (0x000678 - 0x0006C0)
class UUMGStatusEffectIcon : public UUMGLoadoutItemButton
{ 
public:
	FStatusEffectSlotData                              statusEffectData;                                           // 0x0678   (0x0048)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGStatusEffectIcon.UpdateWidget
	// void UpdateWidget();                                                                                                  // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGStatusEffectIcon.UpdatePercentageFill
	// void UpdatePercentageFill(float Percentage);                                                                          // [0x61d2f50] Event|Public|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGStatusEffectsWidget
/// Size: 0x0090 (0x000338 - 0x0003C8)
class UUMGStatusEffectsWidget : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(48,2509) /* TWeakObjectPtr<UClass*> */ __um(AtlantaStatusEffectIconClass);                       // 0x0338   (0x0030)  
	class UHorizontalBox*                              StatusEffectsBox;                                           // 0x0368   (0x0008)  
	SDK_UNDEFINED(80,2510) /* TMap<FName, UUMGStatusEffectIcon*> */ __um(_statusEffectsMap);                       // 0x0370   (0x0050)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x03C0   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGStatusEffectsWidget.RemoveExistingStatusEffect
	// void RemoveExistingStatusEffect(FString statusEffectId);                                                              // [0x5959620] Final|Native|Protected|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.CurrencyPurchaseData
/// Size: 0x0068 (0x000000 - 0x000068)
struct FCurrencyPurchaseData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	SDK_UNDEFINED(16,2511) /* FString */               __um(IconPath);                                             // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,2512) /* FString */               __um(CurrencyName);                                         // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,2513) /* FString */               __um(CurrencyIcon);                                         // 0x0028   (0x0010)  
	int32_t                                            CurrencyAmount;                                             // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2514) /* FString */               __um(DisplayedPrice);                                       // 0x0040   (0x0010)  
	float                                              BonusPercentage;                                            // 0x0050   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	FDateTime                                          BonusEndDate;                                               // 0x0058   (0x0008)  
	int32_t                                            BasicCurrencyAmount;                                        // 0x0060   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.UMGStoreAuricCellButton
/// Size: 0x00A8 (0x000468 - 0x000510)
class UUMGStoreAuricCellButton : public UUMGBaseButtonWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0468   (0x0010)  MISSED
	FCurrencyPurchaseData                              CurrencyPurchaseData;                                       // 0x0478   (0x0068)  
	class UTextBlock*                                  AuricCellTitleText;                                         // 0x04E0   (0x0008)  
	class UOverlay*                                    Timer;                                                      // 0x04E8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x04F0   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGStoreAuricCellButton.UpdateWidget
	// void UpdateWidget(int32_t Multiplier, FDateTime EndDate);                                                             // [0x61d2f50] Event|Public|HasDefaults|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGStoreAuricCellButton.UpdateFirstPurchaseEndInUI
	// void UpdateFirstPurchaseEndInUI(FString endInString);                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGStoreAuricCellButton.ReportInvalidPercentage
	// void ReportInvalidPercentage(float Percentage);                                                                       // [0x496cad0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGStoreAuricCellButton.HasBonusExpired
	// bool HasBonusExpired(FDateTime EndDate);                                                                              // [0x59593d0] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGStoreEventItemsPackButton
/// Size: 0x00B8 (0x000338 - 0x0003F0)
class UUMGStoreEventItemsPackButton : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      ImageIcon;                                                  // 0x0338   (0x0008)  
	class UTextBlock*                                  titleText;                                                  // 0x0340   (0x0008)  
	class UTextBlock*                                  CurrencyAmountText;                                         // 0x0348   (0x0008)  
	class UTextBlock*                                  CurrencyNameText;                                           // 0x0350   (0x0008)  
	class UUniformGridPanel*                           UniformGridPanel;                                           // 0x0358   (0x0008)  
	class UUMGBaseButtonWidget*                        BuyButton;                                                  // 0x0360   (0x0008)  
	class UUMGAtlStorePriceWidget*                     StorePriceWidget;                                           // 0x0368   (0x0008)  
	class UUMGAtlEndDateTimerWidget*                   EndDateTimerWidget;                                         // 0x0370   (0x0008)  
	class UCanvasPanel*                                SelectedImageBox;                                           // 0x0378   (0x0008)  
	SDK_UNDEFINED(48,2515) /* TWeakObjectPtr<UClass*> */ __um(EventItemWidgetClassPtr);                            // 0x0380   (0x0030)  
	int32_t                                            nbColumns;                                                  // 0x03B0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x3C];                                      // 0x03B4   (0x003C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGStoreEventItemsPackButton.ShowSelectedCanvas
	// void ShowSelectedCanvas();                                                                                            // [0x5959970] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGStoreEventItemsPackButton.HideSelectedCanvas
	// void HideSelectedCanvas();                                                                                            // [0x59594a0] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGStoreEventItemsPackButton.HandleEndDateTimerReached
	// void HandleEndDateTimerReached();                                                                                     // [0x5959070] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGStoreEventItemsPackButton.HandleButtonClicked
	// void HandleButtonClicked();                                                                                           // [0x5958fb0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGStorefrontCustomizationWidget
/// Size: 0x0010 (0x0004A0 - 0x0004B0)
class UUMGStorefrontCustomizationWidget : public UUMGPromoPackItemWidget
{ 
public:
	class UTextBlock*                                  CustomizationQuantityText;                                  // 0x04A0   (0x0008)  
	class UCanvasPanel*                                CustomizationQuantityPanel;                                 // 0x04A8   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGStreamVideoWidget
/// Size: 0x0048 (0x000338 - 0x000380)
class UUMGStreamVideoWidget : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      VideoImage;                                                 // 0x0338   (0x0008)  
	class UButton*                                     TapButton;                                                  // 0x0340   (0x0008)  
	class UUMGBaseButtonWidget*                        SkipButton;                                                 // 0x0348   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0350   (0x0010)  MISSED
	float                                              _timerShowSkipButton;                                       // 0x0360   (0x0004)  
	unsigned char                                      UnknownData01_6[0x1C];                                      // 0x0364   (0x001C)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGStreamVideoWidget.OnTapButtonClicked
	// void OnTapButtonClicked();                                                                                            // [0x5959600] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGStreamVideoWidget.OnSkipButtonClicked
	// void OnSkipButtonClicked();                                                                                           // [0x59595c0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGSubscriptionPackButtonWidget
/// Size: 0x0158 (0x000468 - 0x0005C0)
class UUMGSubscriptionPackButtonWidget : public UUMGBaseButtonWidget
{ 
public:
	class USubscriptionRewardDataAsset*                WidgetPerRewardType;                                        // 0x0468   (0x0008)  
	class UCanvasPanel*                                ButtonPressedVFX;                                           // 0x0470   (0x0008)  
	class UCanvasPanel*                                PricePanel;                                                 // 0x0478   (0x0008)  
	class UImage*                                      TitleIcon;                                                  // 0x0480   (0x0008)  
	class UTextBlock*                                  Title;                                                      // 0x0488   (0x0008)  
	class UTextBlock*                                  Price;                                                      // 0x0490   (0x0008)  
	class UCanvasPanel*                                RenewalDatePanel;                                           // 0x0498   (0x0008)  
	class UTextBlock*                                  RenewalDateText;                                            // 0x04A0   (0x0008)  
	class UUniformGridPanel*                           PurchaseRewardsGrid;                                        // 0x04A8   (0x0008)  
	class UUniformGridPanel*                           DailyRewardsGrid;                                           // 0x04B0   (0x0008)  
	class UImage*                                      PortraitBorder;                                             // 0x04B8   (0x0008)  
	class UButton*                                     InfoButton;                                                 // 0x04C0   (0x0008)  
	class UImage*                                      ActiveBackgroundImage;                                      // 0x04C8   (0x0008)  
	class UImage*                                      NonActiveBackgroundImage;                                   // 0x04D0   (0x0008)  
	FLinearColor                                       ActiveTextColor;                                            // 0x04D8   (0x0010)  
	FLinearColor                                       NonActiveTextColor;                                         // 0x04E8   (0x0010)  
	FLinearColor                                       TextColor;                                                  // 0x04F8   (0x0010)  
	FLinearColor                                       ActiveSmokeBackgroundTint;                                  // 0x0508   (0x0010)  
	FLinearColor                                       NonActiveSmokeBackgroundTint;                               // 0x0518   (0x0010)  
	class UImage*                                      PurchaseRewardsSmokeBackground;                             // 0x0528   (0x0008)  
	class UImage*                                      DailyRewardsSmokeBackground;                                // 0x0530   (0x0008)  
	FLinearColor                                       ActiveTitleBackgroundTint;                                  // 0x0538   (0x0010)  
	FLinearColor                                       NonActiveTitleBackgroundTint;                               // 0x0548   (0x0010)  
	class UImage*                                      TitleBackground;                                            // 0x0558   (0x0008)  
	class UCanvasPanel*                                ActiveFrame;                                                // 0x0560   (0x0008)  
	class UCanvasPanel*                                NonActiveFrame;                                             // 0x0568   (0x0008)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x0570   (0x0050)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGSubscriptionPackButtonWidget.OnInfoButtonClicked
	// void OnInfoButtonClicked();                                                                                           // [0x59594e0] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGSubscriptionsPageScrollWidget
/// Size: 0x0078 (0x000470 - 0x0004E8)
class UUMGSubscriptionsPageScrollWidget : public UUMGGridPageScrollWidget
{ 
public:
	SDK_UNDEFINED(48,2516) /* TWeakObjectPtr<UClass*> */ __um(SubscriptionPackButtonClass);                        // 0x0470   (0x0030)  
	FVector2D                                          ItemPadding;                                                // 0x04A0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x40];                                      // 0x04A8   (0x0040)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGSubscriptionsPageScrollWidget.HandleSubscriptionInfoButtonClickedEvent
	// void HandleSubscriptionInfoButtonClickedEvent(FString subscriptionDetails);                                           // [0x5959330] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGSubscriptionsPageScrollWidget.HandleBuySubscriptionPackButtonClickedEvent
	// void HandleBuySubscriptionPackButtonClickedEvent(FName subscriptionPackID);                                           // [0x5958fd0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UmgSurvivorHud
/// Size: 0x0300 (0x000560 - 0x000860)
class UUmgSurvivorHud : public UUmgPlayableHud
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0560   (0x0008)  MISSED
	class UActionButton*                               CrouchButton;                                               // 0x0568   (0x0008)  
	class UCanvasPanel*                                CrouchButtonContainer;                                      // 0x0570   (0x0008)  
	class UWiggleWidget*                               StruggleWidget;                                             // 0x0578   (0x0008)  
	class UCanvasPanel*                                StruggleWidgetContainer;                                    // 0x0580   (0x0008)  
	class UWiggleWidget*                               WiggleWidget;                                               // 0x0588   (0x0008)  
	class UCanvasPanel*                                WiggleWidgetContainer;                                      // 0x0590   (0x0008)  
	class ACamperPlayer*                               Survivor;                                                   // 0x0598   (0x0008)  
	class UActionButton*                               CancelButton;                                               // 0x05A0   (0x0008)  
	class UCanvasPanel*                                CenterInteractionButtonContainer;                           // 0x05A8   (0x0008)  
	class UCanvasPanel*                                LookBackButtonContainer;                                    // 0x05B0   (0x0008)  
	class UAtlantaHudLookBackJoystick*                 LookBackJoystick;                                           // 0x05B8   (0x0008)  
	class UActionButton*                               SkillCheckButton;                                           // 0x05C0   (0x0008)  
	class UCanvasPanel*                                SkillCheckButtonCanvas;                                     // 0x05C8   (0x0008)  
	class UCanvasPanel*                                InsaneSkillCheckButtonCanvas;                               // 0x05D0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x05D8   (0x0008)  MISSED
	FSlateBrush                                        _unpressedLookBackJoystickThumbImage;                       // 0x05E0   (0x0090)  
	FSlateBrush                                        _pressedLookBackJoystickThumbImage;                         // 0x0670   (0x0090)  
	unsigned char                                      UnknownData02_5[0x20];                                      // 0x0700   (0x0020)  MISSED
	FSlateBrush                                        _unpressedLookBackJoystickBackgroundImage;                  // 0x0720   (0x0090)  
	FSlateBrush                                        _pressedLookBackJoystickBackgroundImage;                    // 0x07B0   (0x0090)  
	unsigned char                                      UnknownData03_6[0x20];                                      // 0x0840   (0x0020)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UmgSurvivorHud.UpdateCancelButton
	// void UpdateCancelButton();                                                                                            // [0x5959990] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.ShouldUseContextualItemButton
	// bool ShouldUseContextualItemButton();                                                                                 // [0x5959940] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.SetSkillCheckButtonPosition
	// void SetSkillCheckButtonPosition(bool IsInsane);                                                                      // [0x59598b0] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.SetNonRestrictedControlsVisibility
	// void SetNonRestrictedControlsVisibility(bool visible);                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.SetLookBackJoystickPosition
	// void SetLookBackJoystickPosition(FVector2D& position);                                                                // [0x5959820] Final|Native|Private|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.SetLookBackJoystickImage
	// void SetLookBackJoystickImage(bool Pressed);                                                                          // [0x5959790] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.RespondToVirtualJoystickPressChanged
	// void RespondToVirtualJoystickPressChanged(int32_t controlIndex, bool Pressed);                                        // [0x59596c0] Final|Native|Public  
	// Function /Script/DeadByDaylight.UmgSurvivorHud.OnCancelButtonClicked
	// void OnCancelButtonClicked();                                                                                         // [0x59594c0] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.InitializeLookBackJoystickPosition
	// void InitializeLookBackJoystickPosition();                                                                            // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.HasSecondaryActionAvailable
	// bool HasSecondaryActionAvailable();                                                                                   // [0x5959470] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.GetLookBackJoystickNormalizedOffset
	// FVector2D GetLookBackJoystickNormalizedOffset();                                                                      // [0x5958ee0] Final|Native|Private|HasDefaults|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.GetLookBackJoystickIsPressed
	// bool GetLookBackJoystickIsPressed();                                                                                  // [0x5958eb0] Final|Native|Private|BlueprintCallable 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.GetCenterItemText
	// FText GetCenterItemText();                                                                                            // [0x5958e30] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.GetCenterItemIcon
	// class UTexture2D* GetCenterItemIcon();                                                                                // [0x5958e00] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UmgSurvivorHud.CenterItemClicked
	// void CenterItemClicked(bool fromCancelRequest);                                                                       // [0x5958d70] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGSwitcherScreen
/// Size: 0x00B0 (0x000338 - 0x0003E8)
class UUMGSwitcherScreen : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(16,2517) /* FMulticastInlineDelegate */ __um(OnLoadoutWidgetSlotClicked);                        // 0x0338   (0x0010)  
	SDK_UNDEFINED(16,2518) /* FMulticastInlineDelegate */ __um(OnLoadoutWidgetInventoryItemSelected);              // 0x0348   (0x0010)  
	SDK_UNDEFINED(16,2519) /* FMulticastInlineDelegate */ __um(OnLoadoutWidgetInventoryItemUnselected);            // 0x0358   (0x0010)  
	unsigned char                                      UnknownData00_5[0x60];                                      // 0x0368   (0x0060)  MISSED
	class UWidgetSwitcher*                             ContainerWidgetSwitcher;                                    // 0x03C8   (0x0008)  
	class UUMGBloodStoreWidget*                        BloodStoreWidget;                                           // 0x03D0   (0x0008)  
	class UUMGLoadoutWidget*                           LoadoutWidget;                                              // 0x03D8   (0x0008)  
	class UUMGCharacterSelectionWidget*                CharacterSelectionWidget;                                   // 0x03E0   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGSwitcherScreen.BroadcastSlotClickedEvent
	// void BroadcastSlotClickedEvent(int32_t LoadoutSlot);                                                                  // [0x5935140] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSwitcherScreen.BroadcastItemUnSelectedEvent
	// void BroadcastItemUnSelectedEvent(int32_t itemIndex);                                                                 // [0x595ed70] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSwitcherScreen.BroadcastItemSelectedEvent
	// void BroadcastItemSelectedEvent(int32_t itemIndex);                                                                   // [0x59356f0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSwitcherScreen.BroadcastCharacterSelectedEvent
	// void BroadcastCharacterSelectedEvent(int32_t CharacterIndex);                                                         // [0x595ece0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSwitcherScreen.BroadcastCharacterRoleButtonClickedEvent
	// void BroadcastCharacterRoleButtonClickedEvent();                                                                      // [0x595ecc0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSwitcherScreen.BroadcastCharacterInfoButtonClickedEvent
	// void BroadcastCharacterInfoButtonClickedEvent();                                                                      // [0x595eca0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSwitcherScreen.BroadcastBloodStoreRegenerate
	// void BroadcastBloodStoreRegenerate(int32_t characterId);                                                              // [0x59358b0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSwitcherScreen.BroadcastBloodNodeSelected
	// void BroadcastBloodNodeSelected(int32_t characterId, int32_t NodeId, int32_t nodeDepth);                              // [0x595eb90] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGSwitcherScreen.BroadcastBloodNodePurchase
	// void BroadcastBloodNodePurchase(int32_t characterId);                                                                 // [0x59355d0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGTallyBloodpointsScoreWidget
/// Size: 0x0000 (0x000338 - 0x000338)
class UUMGTallyBloodpointsScoreWidget : public UMobileBaseUserWidget
{ 
public:


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyBloodpointsScoreWidget.UpdateWidgetByScoreData
	// void UpdateWidgetByScoreData(FText& Title, class UTexture2D* Asset, int32_t ScoreValue);                              // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGTallyListElementWidget
/// Size: 0x0010 (0x000338 - 0x000348)
class UUMGTallyListElementWidget : public UMobileBaseUserWidget
{ 
public:
	int32_t                                            ElementIndex;                                               // 0x0338   (0x0004)  
	FVector2D                                          WidgetSize;                                                 // 0x033C   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0344   (0x0004)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyListElementWidget.OnPlayInAnimation
	// void OnPlayInAnimation();                                                                                             // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGTallyListElementWidget.OnPageVisibilityChanged
	// void OnPageVisibilityChanged(bool IsVisible, bool wasInAnimationPlayed);                                              // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGTallyListElementWidget.OnInAnimationFinished
	// void OnInAnimationFinished();                                                                                         // [0x4b5ea40] Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGTallyBloodpointsWidget
/// Size: 0x01A0 (0x000348 - 0x0004E8)
class UUMGTallyBloodpointsWidget : public UUMGTallyListElementWidget
{ 
public:
	ESlateVisibility                                   _itemBoxVisibility;                                         // 0x0348   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0349   (0x0007)  MISSED
	SDK_UNDEFINED(24,2520) /* FText */                 __um(_labelTotalScore);                                     // 0x0350   (0x0018)  
	SDK_UNDEFINED(24,2521) /* FText */                 __um(_labelItemTitle);                                      // 0x0368   (0x0018)  
	SDK_UNDEFINED(24,2522) /* FText */                 __um(_labelItemAddOnTitle);                                 // 0x0380   (0x0018)  
	FLinearColor                                       _labelItemTitleColor;                                       // 0x0398   (0x0010)  
	class UHorizontalBox*                              BoxScoreCategory;                                           // 0x03A8   (0x0008)  
	SDK_UNDEFINED(80,2523) /* TMap<EDBDScoreCategory, FScoreCategoryUIExtraData> */ __um(_scoreCategoryExtraDataMap); // 0x03B0   (0x0050)  
	unsigned char                                      UnknownData01_6[0xE8];                                      // 0x0400   (0x00E8)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyBloodpointsWidget.UpdateTallyTotalBloodpoints
	// void UpdateTallyTotalBloodpoints(int32_t totalValue);                                                                 // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGTallyBloodpointsWidget.UpdateTallyRewardWidget
	// void UpdateTallyRewardWidget(FString rewardName, int32_t existReward, int32_t addReward);                             // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGTallyBloodpointsWidget.UpdateTallyItemWidget
	// void UpdateTallyItemWidget(FTallyItemChangedData& Data);                                                              // [0x61d2f50] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGTallyBloodpointsWidget.ShowTallyItemWidget
	// void ShowTallyItemWidget(bool isShow);                                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGTallyBonusVisualWidget
/// Size: 0x0058 (0x000338 - 0x000390)
class UUMGTallyBonusVisualWidget : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(80,2524) /* TMap<int32_t, TWeakObjectPtr<UTexture2D*>> */ __um(MultiplierTextureMap);            // 0x0338   (0x0050)  
	class UImage*                                      MultiplierImage;                                            // 0x0388   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGTallyCharacterProgressionBar
/// Size: 0x0028 (0x000338 - 0x000360)
class UUMGTallyCharacterProgressionBar : public UMobileBaseUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0338   (0x0020)  MISSED
	class UProgressBar*                                ProgressBar;                                                // 0x0358   (0x0008)  
};

/// Class /Script/DeadByDaylight.UMGTallyCharacterProgressionWidget
/// Size: 0x0088 (0x000348 - 0x0003D0)
class UUMGTallyCharacterProgressionWidget : public UUMGTallyListElementWidget
{ 
public:
	class UUMGTallyCharacterProgressionBar*            CharacterProgressionBar;                                    // 0x0348   (0x0008)  
	class UTextBlock*                                  TextCharacterCurrentExperience;                             // 0x0350   (0x0008)  
	class UTextBlock*                                  TextExperienceForNextLevel;                                 // 0x0358   (0x0008)  
	class UTextBlock*                                  TextExperienceEarned;                                       // 0x0360   (0x0008)  
	class UTextBlock*                                  TextCurrentLevel;                                           // 0x0368   (0x0008)  
	class UImage*                                      CharacterPicture;                                           // 0x0370   (0x0008)  
	class UImage*                                      prestigeIcon;                                               // 0x0378   (0x0008)  
	class UTextBlock*                                  TextCharacterName;                                          // 0x0380   (0x0008)  
	int32_t                                            ExperiencePerSecond;                                        // 0x0388   (0x0004)  
	unsigned char                                      UnknownData00_6[0x44];                                      // 0x038C   (0x0044)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyCharacterProgressionWidget.StartSequence
	// void StartSequence();                                                                                                 // [0x595fb70] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGTallyCharacterProgressionWidget.StartNewLevel
	// void StartNewLevel();                                                                                                 // [0x595f700] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGTallyCharacterProgressionWidget.SetWidgetToFinalState
	// void SetWidgetToFinalState();                                                                                         // [0x595fb50] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGTallyCharacterProgressionWidget.OnFullBarOut
	// void OnFullBarOut();                                                                                                  // [0x595f700] Final|Native|Private 
	// Function /Script/DeadByDaylight.UMGTallyCharacterProgressionWidget.OnFullBarIn
	// void OnFullBarIn();                                                                                                   // [0x595f6e0] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.UMGTallyEmblemMarker
/// Size: 0x0058 (0x000338 - 0x000390)
class UUMGTallyEmblemMarker : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      QualityImage;                                               // 0x0338   (0x0008)  
	SDK_UNDEFINED(80,2525) /* TMap<EEmblemQuality, FEmblemQualityImages> */ __um(_qualityImages);                  // 0x0340   (0x0050)  
};

/// Class /Script/DeadByDaylight.UMGTallyEmblemProgressBar
/// Size: 0x0098 (0x000338 - 0x0003D0)
class UUMGTallyEmblemProgressBar : public UMobileBaseUserWidget
{ 
public:
	class UProgressBar*                                ProgressBar;                                                // 0x0338   (0x0008)  
	class UCanvasPanel*                                QualityContainer;                                           // 0x0340   (0x0008)  
	SDK_UNDEFINED(48,2526) /* TWeakObjectPtr<UClass*> */ __um(EmblemQualityClass);                                 // 0x0348   (0x0030)  
	FVector2D                                          _emblemQualityAlignment;                                    // 0x0378   (0x0008)  
	SDK_UNDEFINED(80,2527) /* TMap<EEmblemQuality, FSlateBrush> */ __um(_qualityFillImages);                       // 0x0380   (0x0050)  
};

/// Class /Script/DeadByDaylight.UMGTallyEmblemProgressionWidget
/// Size: 0x0070 (0x000338 - 0x0003A8)
class UUMGTallyEmblemProgressionWidget : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      PositiveIcon;                                               // 0x0338   (0x0008)  
	class UImage*                                      NegativeIcon;                                               // 0x0340   (0x0008)  
	class UTextBlock*                                  PercentText;                                                // 0x0348   (0x0008)  
	class UTextBlock*                                  descriptionText;                                            // 0x0350   (0x0008)  
	FSlateColor                                        WarningPercentColor;                                        // 0x0358   (0x0028)  
	FSlateColor                                        WarningDescriptionColor;                                    // 0x0380   (0x0028)  
};

/// Class /Script/DeadByDaylight.UMGTallyEmblemsWidget
/// Size: 0x0048 (0x000348 - 0x000390)
class UUMGTallyEmblemsWidget : public UUMGTallyListElementWidget
{ 
public:
	SDK_UNDEFINED(48,2528) /* TWeakObjectPtr<UClass*> */ __um(EmblemWidgetClass);                                  // 0x0348   (0x0030)  
	class UHorizontalBox*                              EmblemsContainer;                                           // 0x0378   (0x0008)  
	TArray<class UUMGTallyEmblemWidget*>               _emblems;                                                   // 0x0380   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyEmblemsWidget.GetEmblems
	// TArray<UUMGTallyEmblemWidget*> GetEmblems();                                                                          // [0x595ee00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.UMGTallyEmblemWidget
/// Size: 0x0060 (0x000338 - 0x000398)
class UUMGTallyEmblemWidget : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(80,2529) /* TMap<EEmblemQuality, UTexture2D*> */ __um(_emblemBackgrounds);                       // 0x0338   (0x0050)  
	class UImage*                                      BackgroundImage;                                            // 0x0388   (0x0008)  
	class UImage*                                      IconImage;                                                  // 0x0390   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyEmblemWidget.PlayFadeInAnimation
	// void PlayFadeInAnimation();                                                                                           // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGTallyListWidget
/// Size: 0x00F0 (0x000468 - 0x000558)
class UUMGTallyListWidget : public UUMGPageScrollWidget
{ 
public:
	SDK_UNDEFINED(24,2530) /* FText */                 __um(TopLeftText);                                          // 0x0468   (0x0018)  
	SDK_UNDEFINED(24,2531) /* FText */                 __um(TopRightText);                                         // 0x0480   (0x0018)  
	class UCanvasPanel*                                ListBGPanel;                                                // 0x0498   (0x0008)  
	EPlayerRole                                        _playerRole;                                                // 0x04A0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x04A1   (0x0007)  MISSED
	SDK_UNDEFINED(80,2532) /* TSet<int32_t> */         __um(_inAnimationPlayedPages);                              // 0x04A8   (0x0050)  
	SDK_UNDEFINED(80,2533) /* TMap<ETallyListPageID, UUMGTallyListElementWidget*> */ __um(_listItemWidgets);       // 0x04F8   (0x0050)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0548   (0x0010)  MISSED
};

/// Class /Script/DeadByDaylight.UMGTallyPip
/// Size: 0x0010 (0x000338 - 0x000348)
class UUMGTallyPip : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      Filling;                                                    // 0x0338   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0340   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyPip.HideFilling
	// void HideFilling();                                                                                                   // [0x595f6c0] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGTallyPipsContainer
/// Size: 0x0038 (0x000338 - 0x000370)
class UUMGTallyPipsContainer : public UMobileBaseUserWidget
{ 
public:
	class UHorizontalBox*                              PipsContainer;                                              // 0x0338   (0x0008)  
	SDK_UNDEFINED(16,2534) /* TArray<TWeakObjectPtr<UClass*>> */ __um(_pipsClasses);                               // 0x0340   (0x0010)  
	FMargin                                            _pipsPadding;                                               // 0x0350   (0x0010)  
	TArray<class UUMGTallyPip*>                        Pips;                                                       // 0x0360   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyPipsContainer.SetData
	// void SetData(int32_t Rank, int32_t PipsRequiredForNextRank, int32_t filledPips);                                      // [0x595f720] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGTallyPlayerLevelWidget
/// Size: 0x0048 (0x000348 - 0x000390)
class UUMGTallyPlayerLevelWidget : public UUMGTallyListElementWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0348   (0x0048)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyPlayerLevelWidget.OnSetInitialPlayerXp
	// void OnSetInitialPlayerXp(int32_t initialXp, FPlayerLevelData& initialLevelData);                                     // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGTallyPlayerLevelWidget.OnSetFinalPlayerXp
	// void OnSetFinalPlayerXp(int32_t finalXp, TArray<FPlayerLevelData>& reachedLevels, TArray<FXpBonusData>& xpBonuses, TArray<FRewardItemData>& rewardsEarned); // [0x61d2f50] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGTallyPlayerLevelWidget.GetXpBonuses
	// TArray<FXpBonusData> GetXpBonuses();                                                                                  // [0x595f2a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UMGTallyPlayerLevelWidget.GetRewardsEarned
	// TArray<FRewardItemData> GetRewardsEarned();                                                                           // [0x595f0f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UMGTallyPlayerLevelWidget.GetReachedLevels
	// TArray<FPlayerLevelData> GetReachedLevels();                                                                          // [0x595f010] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UMGTallyPlayerLevelWidget.GetInitialXp
	// int32_t GetInitialXp();                                                                                               // [0x595efc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UMGTallyPlayerLevelWidget.GetFinalXp
	// int32_t GetFinalXp();                                                                                                 // [0x595efa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.UMGTallyProgressBar
/// Size: 0x0028 (0x000338 - 0x000360)
class UUMGTallyProgressBar : public UMobileBaseUserWidget
{ 
public:
	class UProgressBar*                                ProgressBar;                                                // 0x0338   (0x0008)  
	class UCanvasPanel*                                PipsContainer;                                              // 0x0340   (0x0008)  
	SDK_UNDEFINED(16,2535) /* TArray<TWeakObjectPtr<UClass*>> */ __um(_pipsClasses);                               // 0x0348   (0x0010)  
	FVector2D                                          _pipsAlignment;                                             // 0x0358   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyProgressBar.SetPercent
	// void SetPercent(float value);                                                                                         // [0x595f900] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGTallyProgressBar.GetPipsCount
	// int32_t GetPipsCount();                                                                                               // [0x595efe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.UMGTallyRankBanner
/// Size: 0x0018 (0x000338 - 0x000350)
class UUMGTallyRankBanner : public UMobileBaseUserWidget
{ 
public:
	class UUMGTallyPipsContainer*                      PipsContainerWidget;                                        // 0x0338   (0x0008)  
	class UUMGRankBanner*                              RankBanner;                                                 // 0x0340   (0x0008)  
	class UImage*                                      SmokeBackground;                                            // 0x0348   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyRankBanner.SetAsLocked
	// void SetAsLocked(bool locked);                                                                                        // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.UMGTallyRankFrame
/// Size: 0x0010 (0x000338 - 0x000348)
class UUMGTallyRankFrame : public UMobileBaseUserWidget
{ 
public:
	class UImage*                                      Frame;                                                      // 0x0338   (0x0008)  
	class UTextBlock*                                  label;                                                      // 0x0340   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyRankFrame.SetData
	// void SetData(int32_t Rank, EPlayerRole PlayerRole);                                                                   // [0x595f830] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.EmblemProgressionData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FEmblemProgressionData
{ 
	SDK_UNDEFINED(16,2536) /* FString */               __um(ProgressionText);                                      // 0x0000   (0x0010)  
	float                                              ProgressionPercent;                                         // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.EmblemSlotData
/// Size: 0x0070 (0x000000 - 0x000070)
struct FEmblemSlotData
{ 
	EEmblemQuality                                     Quality;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,2537) /* FString */               __um(Title);                                                // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,2538) /* FString */               __um(Description);                                          // 0x0018   (0x0010)  
	int32_t                                            Score;                                                      // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2539) /* TArray<FString> */       __um(IconPaths);                                            // 0x0030   (0x0010)  
	TArray<int32_t>                                    ThresholdPoints;                                            // 0x0040   (0x0010)  
	float                                              CurrentPoints;                                              // 0x0050   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	TArray<FEmblemProgressionData>                     ProgressionData;                                            // 0x0058   (0x0010)  
	int32_t                                            CharacterExperience;                                        // 0x0068   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x006C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.TallyScorePipsData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FTallyScorePipsData
{ 
	float                                              Threshold;                                                  // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<float>                                      PipThresholds;                                              // 0x0008   (0x0010)  
	TArray<FEmblemSlotData>                            Scores;                                                     // 0x0018   (0x0010)  
	int32_t                                            PipsDelta;                                                  // 0x0028   (0x0004)  
	bool                                               IsSlasher;                                                  // 0x002C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x002D   (0x0003)  MISSED
};

/// Class /Script/DeadByDaylight.UMGTallyRankWidget
/// Size: 0x00A0 (0x000348 - 0x0003E8)
class UUMGTallyRankWidget : public UUMGTallyListElementWidget
{ 
public:
	FMargin                                            _emblemsPadding;                                            // 0x0348   (0x0010)  
	SDK_UNDEFINED(48,2540) /* TWeakObjectPtr<UClass*> */ __um(EmblemWidgetClass);                                  // 0x0358   (0x0030)  
	class UHorizontalBox*                              EmblemsContainer;                                           // 0x0388   (0x0008)  
	class UUMGTallyProgressBar*                        ProgressBar;                                                // 0x0390   (0x0008)  
	class UUMGTallyRankBanner*                         RankBanner;                                                 // 0x0398   (0x0008)  
	class UTextBlock*                                  RankProgressLabel;                                          // 0x03A0   (0x0008)  
	TArray<class UUMGTallyEmblemWidget*>               _emblems;                                                   // 0x03A8   (0x0010)  
	FTallyScorePipsData                                _scoreData;                                                 // 0x03B8   (0x0030)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyRankWidget.GetScoreData
	// FTallyScorePipsData GetScoreData();                                                                                   // [0x595f190] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.UMGTallyRankWidget.GetEmblems
	// TArray<UUMGTallyEmblemWidget*> GetEmblems();                                                                          // [0x595eed0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Struct /Script/DeadByDaylight.PlayerCardItemData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FPlayerCardItemData
{ 
	SDK_UNDEFINED(16,2541) /* FString */               __um(IconPath);                                             // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2542) /* FString */               __um(SecondaryIconPath);                                    // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2543) /* FString */               __um(AnimationFilePath);                                    // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2544) /* FString */               __um(AnimationLinkageId);                                   // 0x0030   (0x0010)  
};

/// Struct /Script/DeadByDaylight.TallyPlayerResultData
/// Size: 0x0370 (0x000000 - 0x000370)
struct FTallyPlayerResultData
{ 
	FName                                              CharacterIconPath;                                          // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2545) /* FString */               __um(playerID);                                             // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2546) /* FString */               __um(PlatformAccountId);                                    // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2547) /* FString */               __um(MirrorsId);                                            // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,2548) /* FString */               __um(playerName);                                           // 0x0040   (0x0010)  
	SDK_UNDEFINED(16,2549) /* FString */               __um(characterName);                                        // 0x0050   (0x0010)  
	int32_t                                            PlayerScore;                                                // 0x0060   (0x0004)  
	int32_t                                            PlayerRank;                                                 // 0x0064   (0x0004)  
	EGameState                                         PlayerStatus;                                               // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0069   (0x0007)  MISSED
	FInventorySlotData                                 OfferingData;                                               // 0x0070   (0x0128)  
	TArray<FInventorySlotData>                         PerksData;                                                  // 0x0198   (0x0010)  
	FInventorySlotData                                 ItemData;                                                   // 0x01A8   (0x0128)  
	TArray<FInventorySlotData>                         AddonsData;                                                 // 0x02D0   (0x0010)  
	FPrestigeData                                      PrestigeData;                                               // 0x02E0   (0x0008)  
	bool                                               IsReported;                                                 // 0x02E8   (0x0001)  
	bool                                               IsSlasher;                                                  // 0x02E9   (0x0001)  
	bool                                               IsMyScore;                                                  // 0x02EA   (0x0001)  
	bool                                               IsOffNetwork;                                               // 0x02EB   (0x0001)  
	bool                                               ShowPortraitBorder;                                         // 0x02EC   (0x0001)  
	bool                                               IsABot;                                                     // 0x02ED   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x02EE   (0x0002)  MISSED
	FPlayerCardItemData                                EquippedBanner;                                             // 0x02F0   (0x0040)  
	FPlayerCardItemData                                EquippedBadge;                                              // 0x0330   (0x0040)  
};

/// Class /Script/DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget
/// Size: 0x03A0 (0x000390 - 0x000730)
class UUMGTallyScoreboardPlayerInfoWidget : public UUMGLoadoutBaseWidget
{ 
public:
	SDK_UNDEFINED(16,2550) /* FMulticastInlineDelegate */ __um(OnTallyScoreboardAddFriendEvent);                   // 0x0390   (0x0010)  
	SDK_UNDEFINED(16,2551) /* FMulticastInlineDelegate */ __um(OnTallyScoreboardReportEvent);                      // 0x03A0   (0x0010)  
	class UImage*                                      ImageHorizontalSeparation;                                  // 0x03B0   (0x0008)  
	FTallyPlayerResultData                             PlayerResultData;                                           // 0x03B8   (0x0370)  
	bool                                               LoadoutIsBlocked;                                           // 0x0728   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0729   (0x0007)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.UpdateWidget
	// void UpdateWidget();                                                                                                  // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.UpdateReported
	// void UpdateReported();                                                                                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.UpdateLoadout
	// void UpdateLoadout();                                                                                                 // [0x595fb90] Final|Native|Protected|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.SetPlayerScoreData
	// void SetPlayerScoreData(FTallyPlayerResultData& resultData);                                                          // [0x595faa0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.SetPlayerReported
	// void SetPlayerReported(bool isReport);                                                                                // [0x595fa10] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.SetPlayerLoadoutBlocked
	// void SetPlayerLoadoutBlocked(bool isBlock);                                                                           // [0x595f980] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.HandleReportEvent
	// void HandleReportEvent(FName buttonId);                                                                               // [0x595f530] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.HandleAddFriendEvent
	// void HandleAddFriendEvent(FName buttonId);                                                                            // [0x595f3a0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.UMGTallyScoreboardWidget
/// Size: 0x00A0 (0x000348 - 0x0003E8)
class UUMGTallyScoreboardWidget : public UUMGTallyListElementWidget
{ 
public:
	SDK_UNDEFINED(16,2552) /* FMulticastInlineDelegate */ __um(OnTallyScoreboardAddFriendEvent);                   // 0x0348   (0x0010)  
	SDK_UNDEFINED(16,2553) /* FMulticastInlineDelegate */ __um(OnTallyScoreboardReportEvent);                      // 0x0358   (0x0010)  
	SDK_UNDEFINED(24,2554) /* FText */                 __um(LabelTextRank);                                        // 0x0368   (0x0018)  
	SDK_UNDEFINED(24,2555) /* FText */                 __um(LabelTextScore);                                       // 0x0380   (0x0018)  
	SDK_UNDEFINED(24,2556) /* FText */                 __um(LabelTextStatus);                                      // 0x0398   (0x0018)  
	class UUMGTallyScoreboardPlayerInfoWidget*         KillerWidget;                                               // 0x03B0   (0x0008)  
	class UUMGTallyScoreboardPlayerInfoWidget*         FirstSurvivorWidget;                                        // 0x03B8   (0x0008)  
	class UUMGTallyScoreboardPlayerInfoWidget*         SecondSurvivorWidget;                                       // 0x03C0   (0x0008)  
	class UUMGTallyScoreboardPlayerInfoWidget*         ThirdSurvivorWidget;                                        // 0x03C8   (0x0008)  
	class UUMGTallyScoreboardPlayerInfoWidget*         FourthSurvivorWidget;                                       // 0x03D0   (0x0008)  
	TArray<class UUMGTallyScoreboardPlayerInfoWidget*> SurvivorWidgets;                                            // 0x03D8   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGTallyScoreboardWidget.SetFadeOut
	// void SetFadeOut();                                                                                                    // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.UMGTallyScoreboardWidget.HandleReportEvent
	// void HandleReportEvent(FString playerID);                                                                             // [0x595f5d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.UMGTallyScoreboardWidget.HandleAddFriendEvent
	// void HandleAddFriendEvent(FString playerID);                                                                          // [0x595f440] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/DeadByDaylight.TeachableData
/// Size: 0x0140 (0x000000 - 0x000140)
struct FTeachableData
{ 
	FInventorySlotData                                 InventorySlotData;                                          // 0x0000   (0x0128)  
	ETeachableStatus                                   Status;                                                     // 0x0128   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0129   (0x0003)  MISSED
	int32_t                                            UnlockLevel;                                                // 0x012C   (0x0004)  
	SDK_UNDEFINED(16,2557) /* FString */               __um(Message);                                              // 0x0130   (0x0010)  
};

/// Class /Script/DeadByDaylight.UMGTeachablePerkButton
/// Size: 0x0160 (0x000338 - 0x000498)
class UUMGTeachablePerkButton : public UMobileBaseUserWidget
{ 
public:
	class UPerkActionButton*                           TeachablePerkButton;                                        // 0x0338   (0x0008)  
	class UImage*                                      LockedStatusIcon;                                           // 0x0340   (0x0008)  
	FTeachableData                                     _teachableData;                                             // 0x0348   (0x0140)  
	SDK_UNDEFINED(16,2558) /* FMulticastInlineDelegate */ __um(_onTeachablePerkTooltipLongPressEvent);             // 0x0488   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGTeachablePerkButton.HandleTooltipLongPressedEvent
	// void HandleTooltipLongPressedEvent(FInventorySlotData& ItemData, FVector2D position);                                 // [0x5964b20] Final|Native|Private|HasOutParms|HasDefaults 
};

/// Class /Script/DeadByDaylight.UMGToastNotificationScreen
/// Size: 0x0168 (0x000338 - 0x0004A0)
class UUMGToastNotificationScreen : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(48,2559) /* TWeakObjectPtr<UClass*> */ __um(NotificationToast);                                  // 0x0338   (0x0030)  
	SDK_UNDEFINED(48,2560) /* TWeakObjectPtr<UClass*> */ __um(InvitationPartyToast);                               // 0x0368   (0x0030)  
	class UVerticalBox*                                ToastsContainer;                                            // 0x0398   (0x0008)  
	unsigned char                                      UnknownData00_5[0x30];                                      // 0x03A0   (0x0030)  MISSED
	SDK_UNDEFINED(80,2561) /* TMap<uint32_t, UUMGBaseToastWidget*> */ __um(_toastsDisplayedOnScreen);              // 0x03D0   (0x0050)  
	unsigned char                                      UnknownData01_6[0x80];                                      // 0x0420   (0x0080)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.UMGToastNotificationScreen.HandleOnPromptSelected
	// void HandleOnPromptSelected(int32_t notificationId);                                                                  // [0x5964a90] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGToastNotificationScreen.HandleOnNotificationDisplayEnd
	// void HandleOnNotificationDisplayEnd(int32_t notificationId);                                                          // [0x5964a00] Final|Native|Protected 
	// Function /Script/DeadByDaylight.UMGToastNotificationScreen.HandleOnButtonSelected
	// void HandleOnButtonSelected(int32_t buttonId, int32_t notificationId);                                                // [0x5964930] Final|Native|Protected 
};

/// Class /Script/DeadByDaylight.UMGTooltipContentPlayerLevelWidget
/// Size: 0x0030 (0x000338 - 0x000368)
class UUMGTooltipContentPlayerLevelWidget : public UMobileBaseUserWidget
{ 
public:
	SDK_UNDEFINED(24,2562) /* FText */                 __um(PlayerLevelText);                                      // 0x0338   (0x0018)  
	class UUMGLevelBannerWidget*                       LevelBanner;                                                // 0x0350   (0x0008)  
	class URichTextBlock*                              LevelExperienceRichText;                                    // 0x0358   (0x0008)  
	class UTextBlock*                                  ExperienceToNextLevelText;                                  // 0x0360   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.UMGTooltipContentPlayerLevelWidget.SetInfo
	// void SetInfo(int32_t PlayerLevel, int32_t PlayerPrestige, int32_t CurrentExperience, int32_t NextLevelExperience);    // [0x59653a0] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.UMGUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UUMGUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.UnbrokenPalletsRestrictedPlacementAreaStrategy
/// Size: 0x0020 (0x0000A0 - 0x0000C0)
class UUnbrokenPalletsRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
{ 
public:
	TArray<class APallet*>                             _unbrokenPallets;                                           // 0x00A0   (0x0010)  
	FName                                              _palletCollisionBoxWhenDroppedTagName;                      // 0x00B0   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/DeadByDaylight.UnlockPersonalPerksPopupScreen
/// Size: 0x0000 (0x000140 - 0x000140)
class UUnlockPersonalPerksPopupScreen : public UGenericPopupScreen
{ 
public:
};

/// Class /Script/DeadByDaylight.UsableWithPerkFlagPerkIconStrategy
/// Size: 0x0018 (0x000038 - 0x000050)
class UUsableWithPerkFlagPerkIconStrategy : public UBasePerkIconStrategy
{ 
public:
	TArray<FGameplayTag>                               _perkTagsOnPlayer;                                          // 0x0038   (0x0010)  
	bool                                               _playerShouldHaveTags;                                      // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Class /Script/DeadByDaylight.VaultableComponent
/// Size: 0x0020 (0x0000B8 - 0x0000D8)
class UVaultableComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,2563) /* FMulticastInlineDelegate */ __um(OnVault);                                           // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00C8   (0x0010)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.VaultableComponent.SignalVault
	// void SignalVault(class ADBDPlayer* Survivor, float InteractionTime);                                                  // [0x59658d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.VaultableComponent.OnChaseEnded
	// void OnChaseEnded(class ADBDPlayer* Survivor, float ChaseTimer);                                                      // [0x5965030] Final|Native|Private 
};

/// Class /Script/DeadByDaylight.VaultFastDefintion
/// Size: 0x0000 (0x000680 - 0x000680)
class UVaultFastDefintion : public UVaultDefinition
{ 
public:
};

/// Class /Script/DeadByDaylight.VersioningUtilities
/// Size: 0x0000 (0x000030 - 0x000030)
class UVersioningUtilities : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/DeadByDaylight.VisibleHatchRestrictedPlacementAreaStrategy
/// Size: 0x0008 (0x0000A0 - 0x0000A8)
class UVisibleHatchRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A0   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.VomitStateComponent
/// Size: 0x0098 (0x0000B8 - 0x000150)
class UVomitStateComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00B8   (0x0008)  MISSED
	FTagStateBool                                      _isIdle;                                                    // 0x00C0   (0x0030)  
	FTagStateBool                                      _isCharging;                                                // 0x00F0   (0x0030)  
	FTagStateBool                                      _isVomiting;                                                // 0x0120   (0x0030)  


	/// Functions
	// Function /Script/DeadByDaylight.VomitStateComponent.SetVomitState
	// void SetVomitState(ELinkedVomitState newVomitState);                                                                  // [0x59657b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.VomitStateComponent.SetObjectState
	// void SetObjectState(class UGameplayTagContainerComponent* objectState);                                               // [0x59654f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.VomitStateComponent.IsVomiting
	// bool IsVomiting();                                                                                                    // [0x5964cd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.VomitStateComponent.getVomitState
	// ELinkedVomitState getVomitState();                                                                                    // [0x5861e60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/DeadByDaylight.WakerObject
/// Size: 0x0030 (0x000338 - 0x000368)
class AWakerObject : public AInteractable
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0338   (0x0008)  MISSED
	class UCamperDreamworldComponent*                  _linkedCamperDreamworldComponent;                           // 0x0340   (0x0008)  
	bool                                               IsInteracting;                                              // 0x0348   (0x0001)  
	bool                                               _chargeComplete;                                            // 0x0349   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1E];                                      // 0x034A   (0x001E)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.WakerObject.UpdateVisibilityAndOutline
	// void UpdateVisibilityAndOutline();                                                                                    // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.WakerObject.SetChargeComplete
	// void SetChargeComplete(bool complete);                                                                                // [0x5965310] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.WakerObject.OnRep_LinkedCamperChanged
	// void OnRep_LinkedCamperChanged(class UCamperDreamworldComponent* Previous);                                           // [0x59651d0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.WakerObject.OnNewLinkedCamper
	// void OnNewLinkedCamper(class UCamperDreamworldComponent* dreamworldComponent);                                        // [0x61d2f50] Event|Public|BlueprintEvent 
	// Function /Script/DeadByDaylight.WakerObject.OnLinkedCamperDreamStateChanged
	// void OnLinkedCamperDreamStateChanged(bool IsInDreamworld, bool locallyObservedChanged);                               // [0x5965100] Final|Native|Protected 
	// Function /Script/DeadByDaylight.WakerObject.OnAnyCamperDreamStateChanged
	// void OnAnyCamperDreamStateChanged(bool IsInDreamworld, bool locallyObservedChanged);                                  // [0x5964f60] Final|Native|Protected 
	// Function /Script/DeadByDaylight.WakerObject.LinkCampersOnLevelReadyToPlay
	// void LinkCampersOnLevelReadyToPlay();                                                                                 // [0x5964e70] Final|Native|Public  
	// Function /Script/DeadByDaylight.WakerObject.IsLinkedToCamper
	// bool IsLinkedToCamper(class ADBDPlayer* camper);                                                                      // [0x59647c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.WakerObject.HasLinkedCamper
	// bool HasLinkedCamper();                                                                                               // [0x5964ca0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.WakerObject.GetMesh
	// class USkeletalMeshComponent* GetMesh();                                                                              // [0x61d2f50] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.WakerObject.GetIsInteracting
	// bool GetIsInteracting();                                                                                              // [0x59648d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.WakerObject.GetInteractorPrimitiveComponent
	// class UPrimitiveComponent* GetInteractorPrimitiveComponent();                                                         // [0x58e7710] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.WakerObject.GetInteractionPercentComplete
	// float GetInteractionPercentComplete();                                                                                // [0x5964890] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.WakerObject.GetChargeComplete
	// bool GetChargeComplete();                                                                                             // [0x5964860] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.WakerObject.CanWakeUpCamper
	// bool CanWakeUpCamper(class ADBDPlayer* camper);                                                                       // [0x59647c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.WakerObject.BindToCamperDreamStateChanged
	// void BindToCamperDreamStateChanged(class ADBDPlayer* Player);                                                         // [0x5964730] Final|Native|Public  
};

/// Class /Script/DeadByDaylight.WalesCypherHandler
/// Size: 0x0010 (0x000038 - 0x000048)
class UWalesCypherHandler : public ULocalPlayerSubsystem
{ 
public:
	class UWalesCypherParameters*                      _walesCypherParams;                                         // 0x0038   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0040   (0x0008)  MISSED
};

/// Class /Script/DeadByDaylight.WalesCypherParameters
/// Size: 0x0018 (0x000038 - 0x000050)
class UWalesCypherParameters : public UDataAsset
{ 
public:
	SDK_UNDEFINED(16,2564) /* FString */               __um(AUDIO_EVENT);                                          // 0x0038   (0x0010)  
	int32_t                                            SLASHER_INDEX;                                              // 0x0048   (0x0004)  
	int32_t                                            CAMPER_INDEX;                                               // 0x004C   (0x0004)  
};

/// Class /Script/DeadByDaylight.WalletHandler
/// Size: 0x0140 (0x000030 - 0x000170)
class UWalletHandler : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x140];                                     // 0x0030   (0x0140)  MISSED
};

/// Struct /Script/DeadByDaylight.WeightBasedItemData
/// Size: 0x0014 (0x000000 - 0x000014)
struct FWeightBasedItemData
{ 
	FItemIdDropdown                                    ItemId;                                                     // 0x0000   (0x0010)  
	float                                              Weight;                                                     // 0x0010   (0x0004)  
};

/// Class /Script/DeadByDaylight.WeightBasedSearchableItemStrategy
/// Size: 0x0010 (0x000038 - 0x000048)
class UWeightBasedSearchableItemStrategy : public USearchableItemStrategy
{ 
public:
	TArray<FWeightBasedItemData>                       _weightBasedItems;                                          // 0x0038   (0x0010)  
};

/// Class /Script/DeadByDaylight.WeightedElement
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeightedElement : public UInterface
{ 
public:
};

/// Class /Script/DeadByDaylight.WiggleWidget
/// Size: 0x0020 (0x000338 - 0x000358)
class UWiggleWidget : public UMobileBaseUserWidget
{ 
public:
	float                                              TimeBetweenAnimationStart;                                  // 0x0338   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x033C   (0x0004)  MISSED
	class UMobileBaseUserWidget*                       WiggleButtonLeft;                                           // 0x0340   (0x0008)  
	class UMobileBaseUserWidget*                       WiggleButtonRight;                                          // 0x0348   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0350   (0x0008)  MISSED


	/// Functions
	// Function /Script/DeadByDaylight.WiggleWidget.BecomeUnavailable
	// void BecomeUnavailable();                                                                                             // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/DeadByDaylight.WiggleWidget.BecomeAvailable
	// void BecomeAvailable();                                                                                               // [0x61d2f50] Event|Protected|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/DeadByDaylight.Window
/// Size: 0x0098 (0x000338 - 0x0003D0)
class AWindow : public AInteractable
{ 
public:
	class UPrimitiveComponent*                         _windowCollider;                                            // 0x0338   (0x0008)  
	class UBoxComponent*                               _collisionBox1;                                             // 0x0340   (0x0008)  
	class UBoxComponent*                               _collisionBox2;                                             // 0x0348   (0x0008)  
	bool                                               _isBlockedByLevel;                                          // 0x0350   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0351   (0x0007)  MISSED
	SDK_UNDEFINED(80,2565) /* TMap<ACamperPlayer*, FVaultData> */ __um(_survivorVaultData);                        // 0x0358   (0x0050)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x03A8   (0x0008)  MISSED
	class UBlockableComponent*                         _blockableComponent;                                        // 0x03B0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x03B8   (0x0010)  MISSED
	class UDBDNavEvadeLoopComponent*                   _navEvadeLoopComponent;                                     // 0x03C8   (0x0008)  


	/// Functions
	// Function /Script/DeadByDaylight.Window.OnRep_blockedByLevel
	// void OnRep_blockedByLevel();                                                                                          // [0x5965260] Final|Native|Private 
	// Function /Script/DeadByDaylight.Window.OnFastVault
	// void OnFastVault(class ADBDPlayer* Player, class UInteractionDefinition* Interaction);                                // [0x61d2f50] Event|Protected|BlueprintEvent 
	// Function /Script/DeadByDaylight.Window.NotifyOnFastVault
	// void NotifyOnFastVault(class ADBDPlayer* Player, class UInteractionDefinition* Interaction);                          // [0x5964e90] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Window.IsWindowVaultBlockedFor
	// bool IsWindowVaultBlockedFor(class ADBDPlayer* Player);                                                               // [0x5964d00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/DeadByDaylight.Window.Authority_SetBlockedByLevel
	// void Authority_SetBlockedByLevel(bool isBlockedByLevel);                                                              // [0x59646a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/DeadByDaylight.Window.Authority_OnVaultInternal
	// void Authority_OnVaultInternal(class ADBDPlayer* Player, bool canBlockVault);                                         // [0x59645d0] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
};

/// Class /Script/DeadByDaylight.XboxProfileDAL
/// Size: 0x0000 (0x000088 - 0x000088)
class UXboxProfileDAL : public UPlayerProfileDAL
{ 
public:
};

/// Class /Script/DeadByDaylight.ZoneDetectorComponent
/// Size: 0x0038 (0x0000B8 - 0x0000F0)
class UZoneDetectorComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B8   (0x0018)  MISSED
	TArray<class UPrimitiveComponent*>                 _zones;                                                     // 0x00D0   (0x0010)  
	TArray<FName>                                      _tags;                                                      // 0x00E0   (0x0010)  


	/// Functions
	// Function /Script/DeadByDaylight.ZoneDetectorComponent.OnOverlapExit
	// void OnOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x5965fd0] Final|Native|Protected 
	// Function /Script/DeadByDaylight.ZoneDetectorComponent.OnOverlapEnter
	// void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x5965db0] Final|Native|Protected|HasOutParms 
};

/// Struct /Script/DeadByDaylight.CombinedExperimentData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FCombinedExperimentData
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/DeadByDaylight.ScoreEventData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FScoreEventData
{ 
	class AActor*                                      Target;                                                     // 0x0000   (0x0008)  
	float                                              PercentToAward;                                             // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UObject*                                     CustomObjectParameter;                                      // 0x0010   (0x0008)  
};

/// Struct /Script/DeadByDaylight.InteractionPlayerProperties
/// Size: 0x0044 (0x000000 - 0x000044)
struct FInteractionPlayerProperties
{ 
	FVector_NetQuantize                                PlayerPositionAtStart;                                      // 0x0000   (0x000C)  
	FRotator                                           PlayerRotationAtStart;                                      // 0x000C   (0x000C)  
	SDK_UNDEFINED(8,2566) /* TWeakObjectPtr<ADBDPlayer*> */ __um(requester);                                       // 0x0018   (0x0008)  
	FVector_NetQuantize                                SnapPositionAtStart;                                        // 0x0020   (0x000C)  
	FRotator                                           SnapRotationAtStart;                                        // 0x002C   (0x000C)  
	float                                              SnapDistanceAtStart;                                        // 0x0038   (0x0004)  
	float                                              SnapTimeAtStart;                                            // 0x003C   (0x0004)  
	bool                                               ShouldSnapPosition;                                         // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0041   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.TooltipPressedData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FTooltipPressedData
{ 
	FVector2D                                          touchPosition;                                              // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0008   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.CamperHealResult
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCamperHealResult
{ 
	ECamperDamageState                                 PreviousDamageState;                                        // 0x0000   (0x0001)  
	ECamperDamageState                                 CurrentDamageState;                                         // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	int32_t                                            HealAmount;                                                 // 0x0004   (0x0004)  
	TArray<class ADBDPlayer*>                          Healers;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.TargetFocusTimer
/// Size: 0x0038 (0x000000 - 0x000038)
struct FTargetFocusTimer
{ 
	class ACamperPlayer*                               _camper;                                                    // 0x0000   (0x0008)  
	FDBDTimer                                          _cooldownTimer;                                             // 0x0008   (0x0028)  
	float                                              _totalTime;                                                 // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.InteractionArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FInteractionArray
{ 
	SDK_UNDEFINED(16,2567) /* TArray<TWeakObjectPtr<UInteractionDefinition*>> */ __um(_interactions);              // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.FirecrackerEffectData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FFirecrackerEffectData
{ 
	class AFirecracker*                                Firecracker;                                                // 0x0000   (0x0008)  
	bool                                               IsInRange;                                                  // 0x0008   (0x0001)  
	bool                                               IsFirstTime;                                                // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x000A   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.MaxSpeedValidate
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMaxSpeedValidate
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/DeadByDaylight.SnappingData
/// Size: 0x0024 (0x000000 - 0x000024)
struct FSnappingData
{ 
	bool                                               DoSnapPosition;                                             // 0x0000   (0x0001)  
	bool                                               DoSnapRotation;                                             // 0x0001   (0x0001)  
	bool                                               DoSnapRoll;                                                 // 0x0002   (0x0001)  
	bool                                               useZCoord;                                                  // 0x0003   (0x0001)  
	bool                                               sweepOnFinalSnap;                                           // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	FVector                                            targetPosition;                                             // 0x0008   (0x000C)  
	FRotator                                           TargetRotation;                                             // 0x0014   (0x000C)  
	float                                              Duration;                                                   // 0x0020   (0x0004)  
};

/// Struct /Script/DeadByDaylight.CosmeticPieceMeshLoadingData
/// Size: 0x03F0 (0x000000 - 0x0003F0)
struct FCosmeticPieceMeshLoadingData
{ 
	unsigned char                                      UnknownData00_2[0x3E8];                                     // 0x0000   (0x03E8)  MISSED
	class USkeletalMesh*                               SkeletalMesh;                                               // 0x03E8   (0x0008)  
};

/// Struct /Script/DeadByDaylight.AkObservedPlayerSoundLoop
/// Size: 0x0018 (0x000028 - 0x000040)
struct FAkObservedPlayerSoundLoop : FAkSoundLoop
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0028   (0x0010)  MISSED
	SDK_UNDEFINED(8,2568) /* TWeakObjectPtr<UPlayerPerspectiveComponent*> */ __um(_perspectiveComponent);          // 0x0038   (0x0008)  
};

/// Struct /Script/DeadByDaylight.AIDetectedStimulus
/// Size: 0x0088 (0x000000 - 0x000088)
struct FAIDetectedStimulus
{ 
	SDK_UNDEFINED(8,2569) /* TWeakObjectPtr<AActor*> */ __um(Instigator);                                          // 0x0000   (0x0008)  
	FVector                                            Location;                                                   // 0x0008   (0x000C)  
	FRotator                                           Rotation;                                                   // 0x0014   (0x000C)  
	FVector                                            Velocity;                                                   // 0x0020   (0x000C)  
	FVector                                            LastHasBeenSeenLocation;                                    // 0x002C   (0x000C)  
	FVector                                            LastHasBeenSeenDirection;                                   // 0x0038   (0x000C)  
	float                                              LastHasBeenSeenTime;                                        // 0x0044   (0x0004)  
	float                                              NextHasBeenSeenUpdateTime;                                  // 0x0048   (0x0004)  
	float                                              AtTime;                                                     // 0x004C   (0x0004)  
	FName                                              Tag;                                                        // 0x0050   (0x000C)  
	unsigned char                                      UnknownData00_6[0x2C];                                      // 0x005C   (0x002C)  MISSED
};

/// Struct /Script/DeadByDaylight.AIRoll
/// Size: 0x0024 (0x000000 - 0x000024)
struct FAIRoll
{ 
	FAITunableParameter                                Random;                                                     // 0x0000   (0x0010)  
	FAITunableParameter                                OnFailCooldown;                                             // 0x0010   (0x0010)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0020   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.PerkIdDropdown
/// Size: 0x0000 (0x000010 - 0x000010)
struct FPerkIdDropdown : FPerkDropdown
{ 
};

/// Struct /Script/DeadByDaylight.ClippedActor
/// Size: 0x0060 (0x000000 - 0x000060)
struct FClippedActor
{ 
	SDK_UNDEFINED(16,2570) /* TArray<TWeakObjectPtr<UPrimitiveComponent*>> */ __um(DisplayComponents);             // 0x0000   (0x0010)  
	SDK_UNDEFINED(80,2571) /* TMap<UPrimitiveComponent*, TWeakObjectPtr<UPrimitiveComponent*>> */ __um(CollidingPrimitives); // 0x0010   (0x0050)  
};

/// Struct /Script/DeadByDaylight.AimAssistInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAimAssistInfo
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/DeadByDaylight.AnimationMapping
/// Size: 0x0048 (0x000008 - 0x000050)
struct FAnimationMapping : FDBDTableRowBase
{ 
	SDK_UNDEFINED(48,2572) /* TWeakObjectPtr<UAnimMontage*> */ __um(MontageAsset);                                 // 0x0008   (0x0030)  
	TArray<FName>                                      Tags;                                                       // 0x0038   (0x0010)  
	class UAnimMontage*                                _montage;                                                   // 0x0048   (0x0008)  
};

/// Struct /Script/DeadByDaylight.AnimationMappingRow
/// Size: 0x0010 (0x000008 - 0x000018)
struct FAnimationMappingRow : FDBDTableRowBase
{ 
	TArray<FAnimationMapping>                          Mappings;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AnimBudgeterGameConfig
/// Size: 0x0028 (0x000000 - 0x000028)
struct FAnimBudgeterGameConfig
{ 
	bool                                               Enabled;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Ps4Budget;                                                  // 0x0004   (0x0004)  
	float                                              Ps5Budget;                                                  // 0x0008   (0x0004)  
	float                                              XboxOneBudget;                                              // 0x000C   (0x0004)  
	float                                              XsxBudget;                                                  // 0x0010   (0x0004)  
	float                                              SwitchBudget;                                               // 0x0014   (0x0004)  
	TArray<float>                                      SteamBudgets;                                               // 0x0018   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ArchiveS3Journal
/// Size: 0x0008 (0x000000 - 0x000008)
struct FArchiveS3Journal
{ 
	int32_t                                            Nodes;                                                      // 0x0000   (0x0004)  
	int32_t                                            StartingPages;                                              // 0x0004   (0x0004)  
};

/// Struct /Script/DeadByDaylight.SpecialBehaviourSpawnableComponent
/// Size: 0x0038 (0x000000 - 0x000038)
struct FSpecialBehaviourSpawnableComponent
{ 
	SDK_UNDEFINED(48,2573) /* TWeakObjectPtr<UClass*> */ __um(Component);                                          // 0x0000   (0x0030)  
	bool                                               ShouldSpawnOnSurvivor;                                      // 0x0030   (0x0001)  
	bool                                               ShouldSpawnOnKiller;                                        // 0x0031   (0x0001)  
	bool                                               ShouldSpawnOnGameState;                                     // 0x0032   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x0033   (0x0005)  MISSED
};

/// Struct /Script/DeadByDaylight.ArchiveQuestSpecialBehaviour
/// Size: 0x0040 (0x000018 - 0x000058)
struct FArchiveQuestSpecialBehaviour : FDBDTableRowBaseWithId
{ 
	SDK_UNDEFINED(24,2574) /* FText */                 __um(Description);                                          // 0x0018   (0x0018)  
	EContextualType                                    Type;                                                       // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	FName                                              SpawnObjectId;                                              // 0x0034   (0x000C)  
	EAdditiveBehaviour                                 AdditiveBehaviour;                                          // 0x0040   (0x0001)  
	EStackingBehaviours                                StackableBehaviour;                                         // 0x0041   (0x0001)  
	EOwnershipBehaviour                                OwnershipBehaviour;                                         // 0x0042   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0043   (0x0001)  MISSED
	int32_t                                            SpawnQuantity;                                              // 0x0044   (0x0004)  
	TArray<FSpecialBehaviourSpawnableComponent>        SpawnableComponents;                                        // 0x0048   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ArchiveDefinition
/// Size: 0x00C0 (0x000018 - 0x0000D8)
struct FArchiveDefinition : FDBDTableRowBaseWithId
{ 
	SDK_UNDEFINED(24,2575) /* FText */                 __um(Title);                                                // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2576) /* FText */                 __um(Description);                                          // 0x0030   (0x0018)  
	SDK_UNDEFINED(16,2577) /* FString */               __um(PurchasePassPicturePath);                              // 0x0048   (0x0010)  
	SDK_UNDEFINED(16,2578) /* FString */               __um(PurchaseTierPicturePath);                              // 0x0058   (0x0010)  
	SDK_UNDEFINED(24,2579) /* FText */                 __um(PurchasePassPopupMessage);                             // 0x0068   (0x0018)  
	EArchivesEventStyle                                EventStyle;                                                 // 0x0080   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0081   (0x0007)  MISSED
	SDK_UNDEFINED(48,2580) /* TWeakObjectPtr<UTexture2D*> */ __um(StoryBookMarkTexture);                           // 0x0088   (0x0030)  
	SDK_UNDEFINED(16,2581) /* FString */               __um(StyleFrameLabel);                                      // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,2582) /* FString */               __um(EventStoryLabel);                                      // 0x00C8   (0x0010)  
};

/// Struct /Script/DeadByDaylight.QuestEventDefinition
/// Size: 0x0040 (0x000018 - 0x000058)
struct FQuestEventDefinition : FDBDTableRowBaseWithId
{ 
	TArray<FGameplayTag>                               TrackedGameEvents;                                          // 0x0018   (0x0010)  
	SDK_UNDEFINED(48,2583) /* TWeakObjectPtr<UClass*> */ __um(QuestEventEvaluator);                                // 0x0028   (0x0030)  
};

/// Struct /Script/DeadByDaylight.ArchiveQuestObjectiveDefinition
/// Size: 0x0048 (0x000018 - 0x000060)
struct FArchiveQuestObjectiveDefinition : FDBDTableRowBaseWithId
{ 
	SDK_UNDEFINED(24,2584) /* FText */                 __um(Description);                                          // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2585) /* FText */                 __um(RulesDescription);                                     // 0x0030   (0x0018)  
	EQuestProgressionType                              ProgressionType;                                            // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	TArray<FName>                                      DescriptionParameters;                                      // 0x0050   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ArchiveNodeDefinition
/// Size: 0x0050 (0x000018 - 0x000068)
struct FArchiveNodeDefinition : FDBDTableRowBaseWithId
{ 
	SDK_UNDEFINED(24,2586) /* FText */                 __um(DisplayName);                                          // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2587) /* FText */                 __um(Description);                                          // 0x0030   (0x0018)  
	SDK_UNDEFINED(16,2588) /* FString */               __um(IconPath);                                             // 0x0048   (0x0010)  
	EPlayerRole                                        PlayerRole;                                                 // 0x0058   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0059   (0x0003)  MISSED
	FName                                              cinematicId;                                                // 0x005C   (0x000C)  
};

/// Struct /Script/DeadByDaylight.RewardTrackTierData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FRewardTrackTierData
{ 
	uint32_t                                           TierId;                                                     // 0x0000   (0x0004)  
	uint32_t                                           TierGroup;                                                  // 0x0004   (0x0004)  
	TArray<FRewardResponseItem>                        Free;                                                       // 0x0008   (0x0010)  
	bool                                               Free_IsSet;                                                 // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	TArray<FRewardResponseItem>                        Premium;                                                    // 0x0020   (0x0010)  
	bool                                               Premium_IsSet;                                              // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.RewardTrackData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FRewardTrackData
{ 
	TArray<FRewardTrackTierData>                       TierInfo;                                                   // 0x0000   (0x0010)  
	uint32_t                                           Requirement;                                                // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x14];                                      // 0x0014   (0x0014)  MISSED
};

/// Struct /Script/DeadByDaylight.ArchiveRewardsData
/// Size: 0x0078 (0x000000 - 0x000078)
struct FArchiveRewardsData
{ 
	int32_t                                            XpRequirement;                                              // 0x0000   (0x0004)  
	int32_t                                            StarsEarnedPerLevel;                                        // 0x0004   (0x0004)  
	SDK_UNDEFINED(16,2589) /* FString */               __um(PreStartDate);                                         // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,2590) /* FString */               __um(StartDate);                                            // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,2591) /* FString */               __um(EndDate);                                              // 0x0028   (0x0010)  
	SDK_UNDEFINED(16,2592) /* FString */               __um(PostEndDate);                                          // 0x0038   (0x0010)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x0048   (0x0030)  MISSED
};

/// Struct /Script/DeadByDaylight.ArchivesConfig
/// Size: 0x0004 (0x000000 - 0x000004)
struct FArchivesConfig
{ 
	int32_t                                            CommunityNodeRefreshInterval;                               // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PlayerDataForQuestConditions
/// Size: 0x0088 (0x000000 - 0x000088)
struct FPlayerDataForQuestConditions
{ 
	unsigned char                                      UnknownData00_1[0x88];                                      // 0x0000   (0x0088)  MISSED
};

/// Struct /Script/DeadByDaylight.StoryLevel
/// Size: 0x00E0 (0x000000 - 0x0000E0)
struct FStoryLevel
{ 
	SDK_UNDEFINED(16,2593) /* TArray<FString> */       __um(Start);                                                // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2594) /* TArray<FString> */       __um(End);                                                  // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2595) /* FString */               __um(StartDate);                                            // 0x0020   (0x0010)  
	SDK_UNDEFINED(80,2596) /* TMap<FString, FArchivesNodeDefinition> */ __um(Nodes);                               // 0x0030   (0x0050)  
	TArray<FRewardResponseItem>                        EndNodeRewards;                                             // 0x0080   (0x0010)  
	bool                                               EndNodeRewards_IsSet;                                       // 0x0090   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0091   (0x0007)  MISSED
	TArray<FRewardResponseItem>                        LevelRewards;                                               // 0x0098   (0x0010)  
	bool                                               LevelRewards_IsSet;                                         // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x00A9   (0x0007)  MISSED
	TArray<FRewardResponseItem>                        TaskRewards;                                                // 0x00B0   (0x0010)  
	bool                                               TaskRewards_IsSet;                                          // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x00C1   (0x0007)  MISSED
	TArray<FRewardResponseItem>                        ChallengeRewards;                                           // 0x00C8   (0x0010)  
	bool                                               ChallengeRewards_IsSet;                                     // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.ArchivesMapFromS3
/// Size: 0x0040 (0x000000 - 0x000040)
struct FArchivesMapFromS3
{ 
	TArray<FStoryLevel>                                Level;                                                      // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2597) /* FString */               __um(RiftId);                                               // 0x0010   (0x0010)  
	bool                                               RiftId_IsSet;                                               // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	SDK_UNDEFINED(16,2598) /* FString */               __um(SpecialEventId);                                       // 0x0028   (0x0010)  
	bool                                               SpecialEventId_IsSet;                                       // 0x0038   (0x0001)  
	bool                                               NewTomePopup;                                               // 0x0039   (0x0001)  
	bool                                               NewTomePopup_IsSet;                                         // 0x003A   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x003B   (0x0005)  MISSED
};

/// Struct /Script/DeadByDaylight.ArchivesNodeCoordinates
/// Size: 0x0010 (0x000000 - 0x000010)
struct FArchivesNodeCoordinates
{ 
	double                                             X;                                                          // 0x0000   (0x0008)  
	double                                             Y;                                                          // 0x0008   (0x0008)  
};

/// Struct /Script/DeadByDaylight.ArchivesNodeDefinition
/// Size: 0x00C8 (0x000000 - 0x0000C8)
struct FArchivesNodeDefinition
{ 
	SDK_UNDEFINED(16,2599) /* FString */               __um(ClientInfoId);                                         // 0x0000   (0x0010)  
	FArchivesNodeCoordinates                           Coordinates;                                                // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2600) /* TArray<FString> */       __um(Neighbors);                                            // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2601) /* FString */               __um(NodeType);                                             // 0x0030   (0x0010)  
	SDK_UNDEFINED(80,2602) /* TMap<FString, FArchivesObjective> */ __um(Objectives);                               // 0x0040   (0x0050)  
	bool                                               Objectives_IsSet;                                           // 0x0090   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0091   (0x0007)  MISSED
	SDK_UNDEFINED(16,2603) /* TArray<FString> */       __um(Journal);                                              // 0x0098   (0x0010)  
	bool                                               Journal_IsSet;                                              // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x00A9   (0x0007)  MISSED
	TArray<FRewardResponseItem>                        Reward;                                                     // 0x00B0   (0x0010)  
	bool                                               Reward_IsSet;                                               // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x00C1   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.ArchivesQuestCondition
/// Size: 0x0020 (0x000000 - 0x000020)
struct FArchivesQuestCondition
{ 
	SDK_UNDEFINED(16,2604) /* FString */               __um(Key);                                                  // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2605) /* TArray<FString> */       __um(value);                                                // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ArchivesQuestEvent
/// Size: 0x0040 (0x000000 - 0x000040)
struct FArchivesQuestEvent
{ 
	SDK_UNDEFINED(16,2606) /* FString */               __um(QuestEventId);                                         // 0x0000   (0x0010)  
	int32_t                                            Repetition;                                                 // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(16,2607) /* FString */               __um(Parameters);                                           // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,2608) /* FString */               __um(Operation);                                            // 0x0028   (0x0010)  
	bool                                               Parameters_IsSet;                                           // 0x0038   (0x0001)  
	bool                                               Operation_IsSet;                                            // 0x0039   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x003A   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.ArchivesQuestSpecialBehaviour
/// Size: 0x0028 (0x000000 - 0x000028)
struct FArchivesQuestSpecialBehaviour
{ 
	SDK_UNDEFINED(16,2609) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2610) /* FString */               __um(Params);                                               // 0x0010   (0x0010)  
	bool                                               Params_IsSet;                                               // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.ArchivesObjective
/// Size: 0x0060 (0x000000 - 0x000060)
struct FArchivesObjective
{ 
	SDK_UNDEFINED(16,2611) /* FString */               __um(ObjectiveId);                                          // 0x0000   (0x0010)  
	bool                                               ObjectiveId_IsSet;                                          // 0x0010   (0x0001)  
	bool                                               IncrementWithEventRepetitions;                              // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0012   (0x0002)  MISSED
	int32_t                                            NeededProgression;                                          // 0x0014   (0x0004)  
	TArray<FArchivesQuestCondition>                    Conditions;                                                 // 0x0018   (0x0010)  
	bool                                               Conditions_IsSet;                                           // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	TArray<FArchivesQuestEvent>                        QuestEvent;                                                 // 0x0030   (0x0010)  
	bool                                               QuestEvent_IsSet;                                           // 0x0040   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0041   (0x0007)  MISSED
	TArray<FArchivesQuestSpecialBehaviour>             SpecialBehaviours;                                          // 0x0048   (0x0010)  
	bool                                               SpecialBehaviours_IsSet;                                    // 0x0058   (0x0001)  
	bool                                               IsCommunityObjective;                                       // 0x0059   (0x0001)  
	bool                                               IsCommunityObjective_IsSet;                                 // 0x005A   (0x0001)  
	unsigned char                                      UnknownData03_6[0x5];                                       // 0x005B   (0x0005)  MISSED
};

/// Struct /Script/DeadByDaylight.ArmIKSensorDatum
/// Size: 0x0030 (0x000000 - 0x000030)
struct FArmIKSensorDatum
{ 
	FName                                              ShoulderBoneName;                                           // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x24];                                      // 0x000C   (0x0024)  MISSED
};

/// Struct /Script/DeadByDaylight.AssignedPerkProperties
/// Size: 0x0014 (0x000000 - 0x000014)
struct FAssignedPerkProperties
{ 
	FName                                              perkId;                                                     // 0x0000   (0x000C)  
	int32_t                                            PerkLevel;                                                  // 0x000C   (0x0004)  
	bool                                               IsTeachable;                                                // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaAuricCellPacksUIData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FAtlantaAuricCellPacksUIData
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
	TArray<FCurrencyPurchaseData>                      CurrencyPurchaseData;                                       // 0x0010   (0x0010)  
	int32_t                                            FirstPurchaseBundleMultiplier;                              // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	FDateTime                                          FirstPurchaseBundleMultiplierEndDate;                       // 0x0028   (0x0008)  
	bool                                               isSet;                                                      // 0x0030   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaBaseEventsUIData
/// Size: 0x00E8 (0x000000 - 0x0000E8)
struct FAtlantaBaseEventsUIData
{ 
	SDK_UNDEFINED(16,2612) /* FString */               __um(eventID);                                              // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2613) /* FString */               __um(Type);                                                 // 0x0010   (0x0010)  
	SDK_UNDEFINED(24,2614) /* FText */                 __um(Title);                                                // 0x0020   (0x0018)  
	SDK_UNDEFINED(24,2615) /* FText */                 __um(Description);                                          // 0x0038   (0x0018)  
	SDK_UNDEFINED(16,2616) /* FString */               __um(CampaignName);                                         // 0x0050   (0x0010)  
	class UTexture2DDynamic*                           Image;                                                      // 0x0060   (0x0008)  
	int32_t                                            EventPriority;                                              // 0x0068   (0x0004)  
	int32_t                                            BannerPriority;                                             // 0x006C   (0x0004)  
	SDK_UNDEFINED(16,2617) /* FString */               __um(DeepLink);                                             // 0x0070   (0x0010)  
	FDateTime                                          StartDate;                                                  // 0x0080   (0x0008)  
	FDateTime                                          EndDate;                                                    // 0x0088   (0x0008)  
	FDateTime                                          DisplayStartDate;                                           // 0x0090   (0x0008)  
	FDateTime                                          DisplayEndDate;                                             // 0x0098   (0x0008)  
	FDateTime                                          BannerStartDate;                                            // 0x00A0   (0x0008)  
	FDateTime                                          BannerEndDate;                                              // 0x00A8   (0x0008)  
	FDateTime                                          HotStartDate;                                               // 0x00B0   (0x0008)  
	FDateTime                                          HotEndDate;                                                 // 0x00B8   (0x0008)  
	FDateTime                                          NewStartDate;                                               // 0x00C0   (0x0008)  
	FDateTime                                          NewEndDate;                                                 // 0x00C8   (0x0008)  
	SDK_UNDEFINED(16,2618) /* TArray<FString> */       __um(RelatedItemsId);                                       // 0x00D0   (0x0010)  
	bool                                               mustHideParticipateButton;                                  // 0x00E0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00E1   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaBonusACEventsUIData
/// Size: 0x0038 (0x0000E8 - 0x000120)
struct FAtlantaBonusACEventsUIData : FAtlantaBaseEventsUIData
{ 
	FAtlantaAuricCellPacksUIData                       auricPacksData;                                             // 0x00E8   (0x0038)  
};

/// Struct /Script/DeadByDaylight.AtlantaCalendarEventsUIData
/// Size: 0x0030 (0x0000E8 - 0x000118)
struct FAtlantaCalendarEventsUIData : FAtlantaBaseEventsUIData
{ 
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x00E8   (0x0030)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaDeepLinkData
/// Size: 0x0018 (0x000008 - 0x000020)
struct FAtlantaDeepLinkData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,2619) /* FString */               __um(URL);                                                  // 0x0008   (0x0010)  
	EDeepLinkUid                                       DeepLink;                                                   // 0x0018   (0x0001)  
	bool                                               HasCustomParameters;                                        // 0x0019   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x001A   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.DeviceProfiles
/// Size: 0x0038 (0x000008 - 0x000040)
struct FDeviceProfiles : FDBDTableRowBase
{ 
	SDK_UNDEFINED(24,2620) /* FText */                 __um(Cpu);                                                  // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,2621) /* FText */                 __um(GPU);                                                  // 0x0020   (0x0018)  
	int32_t                                            Quality;                                                    // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaEventElementUIData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FAtlantaEventElementUIData
{ 
	EPromoPackContentType                              ElementType;                                                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(24,2622) /* FText */                 __um(DisplayName);                                          // 0x0008   (0x0018)  
	FName                                              NameID;                                                     // 0x0020   (0x000C)  
	FColor                                             Color;                                                      // 0x002C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.BaseItemData
/// Size: 0x01C0 (0x000008 - 0x0001C8)
struct FBaseItemData : FDBDTableRowBase
{ 
	EInventoryItemType                                 Type;                                                       // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	FItemUIData                                        UIData;                                                     // 0x0010   (0x0120)  
	SDK_UNDEFINED(24,2623) /* FText */                 __um(GenericDisplayName);                                   // 0x0130   (0x0018)  
	SDK_UNDEFINED(48,2624) /* TWeakObjectPtr<UClass*> */ __um(ItemBlueprint);                                      // 0x0148   (0x0030)  
	SDK_UNDEFINED(48,2625) /* TWeakObjectPtr<UDBDPrimaryDataAsset*> */ __um(AssetData);                            // 0x0178   (0x0030)  
	SDK_UNDEFINED(16,2626) /* FString */               __um(ItemId);                                               // 0x01A8   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x01B8   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.ItemData
/// Size: 0x0090 (0x0001C8 - 0x000258)
struct FItemData : FBaseItemData
{ 
	SDK_UNDEFINED(48,2627) /* TWeakObjectPtr<USkeletalMesh*> */ __um(ItemMesh);                                    // 0x01C8   (0x0030)  
	EItemHandPosition                                  HandPosition;                                               // 0x01F8   (0x0001)  
	EPlayerRole                                        Role;                                                       // 0x01F9   (0x0001)  
	EItemRarity                                        Rarity;                                                     // 0x01FA   (0x0001)  
	bool                                               Inventory;                                                  // 0x01FB   (0x0001)  
	bool                                               Chest;                                                      // 0x01FC   (0x0001)  
	EKillerAbilities                                   RequiredKillerAbility;                                      // 0x01FD   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x01FE   (0x0002)  MISSED
	FItemAvailability                                  Availability;                                               // 0x0200   (0x0040)  
	bool                                               IsInNonViolentBuild;                                        // 0x0240   (0x0001)  
	bool                                               IsAvailableInAtlantaBuild;                                  // 0x0241   (0x0001)  
	bool                                               AntiDLC;                                                    // 0x0242   (0x0001)  
	bool                                               Bloodweb;                                                   // 0x0243   (0x0001)  
	bool                                               CanKeepInLoadout;                                           // 0x0244   (0x0001)  
	bool                                               IsBotSupported;                                             // 0x0245   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0246   (0x0002)  MISSED
	FName                                              eventID;                                                    // 0x0248   (0x000C)  
	bool                                               CanUseAfterEventEnd;                                        // 0x0254   (0x0001)  
	ELoadoutItemType                                   ItemType;                                                   // 0x0255   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x0256   (0x0002)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaFreeTicketUIData
/// Size: 0x0028 (0x000258 - 0x000280)
struct FAtlantaFreeTicketUIData : FItemData
{ 
	FSlateColor                                        IconColor;                                                  // 0x0258   (0x0028)  
};

/// Struct /Script/DeadByDaylight.AtlantaFreeTicketCombinedData
/// Size: 0x0290 (0x000000 - 0x000290)
struct FAtlantaFreeTicketCombinedData
{ 
	FAtlantaFreeTicketUIData                           UIData;                                                     // 0x0000   (0x0280)  
	EPlayerRole                                        Role;                                                       // 0x0280   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0281   (0x0003)  MISSED
	int32_t                                            DurationInMinutes;                                          // 0x0284   (0x0004)  
	int32_t                                            Quantity;                                                   // 0x0288   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x028C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaGenericEventUIData
/// Size: 0x0010 (0x0000E8 - 0x0000F8)
struct FAtlantaGenericEventUIData : FAtlantaBaseEventsUIData
{ 
	TArray<FAtlantaEventElementUIData>                 elementsUIData;                                             // 0x00E8   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AtlantaKillerSoundDistanceData
/// Size: 0x0010 (0x000008 - 0x000018)
struct FAtlantaKillerSoundDistanceData : FDBDTableRowBase
{ 
	float                                              MinRadiusSoundDistance;                                     // 0x0008   (0x0004)  
	float                                              MaxRadiusSoundDistance;                                     // 0x000C   (0x0004)  
	float                                              MinRangeSoundHeard;                                         // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaKillerSoundConditionData
/// Size: 0x0018 (0x000008 - 0x000020)
struct FAtlantaKillerSoundConditionData : FDBDTableRowBase
{ 
	FName                                              RTPCAudioID;                                                // 0x0008   (0x000C)  
	float                                              ComparisonValue;                                            // 0x0014   (0x0004)  
	EKillerSoundComparisonType                         ValueComparisonType;                                        // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaKillerSoundIndicatorData
/// Size: 0x0030 (0x000008 - 0x000038)
struct FAtlantaKillerSoundIndicatorData : FDBDTableRowBase
{ 
	float                                              MinRadiusSoundDistance;                                     // 0x0008   (0x0004)  
	float                                              MaxRadiusSoundDistance;                                     // 0x000C   (0x0004)  
	float                                              MinRangeSoundHeard;                                         // 0x0010   (0x0004)  
	bool                                               CanBeGlobalSound;                                           // 0x0014   (0x0001)  
	bool                                               CanDiminishWithDistance;                                    // 0x0015   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0016   (0x0002)  MISSED
	TArray<FAtlantaKillerSoundConditionData>           GlobalSoundConditions;                                      // 0x0018   (0x0010)  
	TArray<FAtlantaKillerSoundConditionData>           DiminishWithDistanceConditions;                             // 0x0028   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AtlantaMonthlyPassEventUIData
/// Size: 0x0040 (0x0000E8 - 0x000128)
struct FAtlantaMonthlyPassEventUIData : FAtlantaBaseEventsUIData
{ 
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x00E8   (0x0040)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaNoiseIndicatorDistanceData
/// Size: 0x0018 (0x000008 - 0x000020)
struct FAtlantaNoiseIndicatorDistanceData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,2628) /* FString */               __um(Description);                                          // 0x0008   (0x0010)  
	float                                              DistanceForNoiseIndicatorToAppear;                          // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaOnBoardingData
/// Size: 0x0040 (0x000008 - 0x000048)
struct FAtlantaOnBoardingData : FDBDTableRowBase
{ 
	FName                                              onBoardingID;                                               // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(24,2629) /* FText */                 __um(Title);                                                // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2630) /* FText */                 __um(Description);                                          // 0x0030   (0x0018)  
};

/// Struct /Script/DeadByDaylight.AtlantaRewardUIData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FAtlantaRewardUIData
{ 
	FName                                              ID;                                                         // 0x0000   (0x000C)  
	EAtlantaRewardType                                 Type;                                                       // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	int32_t                                            Quantity;                                                   // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(16,2631) /* FString */               __um(IconFilePath);                                         // 0x0018   (0x0010)  
	ECurrencyType                                      Currency;                                                   // 0x0028   (0x0001)  
	EItemRarity                                        Rarity;                                                     // 0x0029   (0x0001)  
	unsigned char                                      UnknownData02_5[0x6];                                       // 0x002A   (0x0006)  MISSED
	SDK_UNDEFINED(24,2632) /* FText */                 __um(DisplayName);                                          // 0x0030   (0x0018)  
	SDK_UNDEFINED(24,2633) /* FText */                 __um(Description);                                          // 0x0048   (0x0018)  
};

/// Struct /Script/DeadByDaylight.AtlantaRitualRewardUIData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAtlantaRitualRewardUIData
{ 
	EAtlantaRitualRewardUIType                         Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Quantity;                                                   // 0x0004   (0x0004)  
	SDK_UNDEFINED(16,2634) /* FString */               __um(IconFilePath);                                         // 0x0008   (0x0010)  
	EItemRarity                                        Rarity;                                                     // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaSubRitualUIData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAtlantaSubRitualUIData
{ 
	SDK_UNDEFINED(16,2635) /* FString */               __um(Description);                                          // 0x0000   (0x0010)  
	int32_t                                            TargetNumber;                                               // 0x0010   (0x0004)  
	int32_t                                            CurrentNumber;                                              // 0x0014   (0x0004)  
};

/// Struct /Script/DeadByDaylight.AtlantaRitualUIData
/// Size: 0x0068 (0x000000 - 0x000068)
struct FAtlantaRitualUIData
{ 
	int32_t                                            ID;                                                         // 0x0000   (0x0004)  
	EAltantaRitualUIType                               Type;                                                       // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	SDK_UNDEFINED(16,2636) /* FString */               __um(Title);                                                // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,2637) /* FString */               __um(Description);                                          // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,2638) /* FString */               __um(IconFilePath);                                         // 0x0028   (0x0010)  
	bool                                               IsNew;                                                      // 0x0038   (0x0001)  
	bool                                               isClaimed;                                                  // 0x0039   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x003A   (0x0002)  MISSED
	float                                              ProgressPercentage;                                         // 0x003C   (0x0004)  
	int32_t                                            RefreshPrice;                                               // 0x0040   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	TArray<FAtlantaRitualRewardUIData>                 Rewards;                                                    // 0x0048   (0x0010)  
	TArray<FAtlantaSubRitualUIData>                    SubRituals;                                                 // 0x0058   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AtlantaRitualsUIScreenData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FAtlantaRitualsUIScreenData
{ 
	FDateTime                                          DailyRefreshTime;                                           // 0x0000   (0x0008)  
	FDateTime                                          WeeklyRefreshTime;                                          // 0x0008   (0x0008)  
	TArray<FAtlantaRitualUIData>                       DailyRituals;                                               // 0x0010   (0x0010)  
	TArray<FAtlantaRitualUIData>                       WeeklyRituals;                                              // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AtlantaTutorialEndReward
/// Size: 0x0020 (0x000008 - 0x000028)
struct FAtlantaTutorialEndReward : FDBDTableRowBase
{ 
	int32_t                                            BloodpointReward;                                           // 0x0008   (0x0004)  
	int32_t                                            AuricCellsRewards;                                          // 0x000C   (0x0004)  
	int32_t                                            FearTokensReward;                                           // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<FName>                                      CharactersRewards;                                          // 0x0018   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AtlantaTutorialLevelData
/// Size: 0x0068 (0x000008 - 0x000070)
struct FAtlantaTutorialLevelData : FDBDTableRowBase
{ 
	FName                                              ID;                                                         // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(24,2639) /* FText */                 __um(Title);                                                // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2640) /* FText */                 __um(Description);                                          // 0x0030   (0x0018)  
	SDK_UNDEFINED(16,2641) /* FString */               __um(IconPath);                                             // 0x0048   (0x0010)  
	SDK_UNDEFINED(16,2642) /* FString */               __um(MapName);                                              // 0x0058   (0x0010)  
	bool                                               IsKillerTutorial;                                           // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0069   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.TutorialNotificationData
/// Size: 0x00A8 (0x000008 - 0x0000B0)
struct FTutorialNotificationData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(24,2643) /* FText */                 __um(Title);                                                // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,2644) /* FText */                 __um(Description);                                          // 0x0020   (0x0018)  
	SDK_UNDEFINED(16,2645) /* FString */               __um(IconPath);                                             // 0x0038   (0x0010)  
	SDK_UNDEFINED(48,2646) /* TWeakObjectPtr<UTexture2D*> */ __um(Icon);                                           // 0x0048   (0x0030)  
	SDK_UNDEFINED(48,2647) /* TWeakObjectPtr<UTexture2D*> */ __um(Image);                                          // 0x0078   (0x0030)  
	bool                                               IsShowAnalyticEnabled;                                      // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00A9   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.AtlantaTutorialNotificationData
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
struct FAtlantaTutorialNotificationData : FTutorialNotificationData
{ 
	SDK_UNDEFINED(16,2648) /* TArray<TWeakObjectPtr<UPaperSprite*>> */ __um(Textures);                             // 0x00B0   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AtlantaTutorialTallyData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAtlantaTutorialTallyData
{ 
	bool                                               IsKiller;                                                   // 0x0000   (0x0001)  
	bool                                               FirstTimeCompleted;                                         // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	int32_t                                            BloodpointsScore;                                           // 0x0004   (0x0004)  
	int32_t                                            AuricCells;                                                 // 0x0008   (0x0004)  
	int32_t                                            FearTokens;                                                 // 0x000C   (0x0004)  
	TArray<FName>                                      Characters;                                                 // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AttackEventTypeDetails
/// Size: 0x0028 (0x000008 - 0x000030)
struct FAttackEventTypeDetails : FDBDTableRowBase
{ 
	FGameplayTag                                       GameplayTag;                                                // 0x0008   (0x000C)  
	EAttackEventType                                   AttackEventType;                                            // 0x0014   (0x0001)  
	bool                                               CanBeProtective;                                            // 0x0015   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0016   (0x0002)  MISSED
	int32_t                                            AssociatedCharacter;                                        // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2649) /* FString */               __um(Description);                                          // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AttackHitResult
/// Size: 0x0088 (0x000000 - 0x000088)
struct FAttackHitResult
{ 
	class ADBDPlayer*                                  Attacker;                                                   // 0x0000   (0x0008)  
	class ADBDPlayer*                                  Target;                                                     // 0x0008   (0x0008)  
	class UDBDAttack*                                  Attack;                                                     // 0x0010   (0x0008)  
	bool                                               IsBasicAttack;                                              // 0x0018   (0x0001)  
	bool                                               CosmeticOnly;                                               // 0x0019   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6E];                                      // 0x001A   (0x006E)  MISSED
};

/// Struct /Script/DeadByDaylight.BackendCinematicsContentData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FBackendCinematicsContentData
{ 
	SDK_UNDEFINED(16,2650) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	bool                                               AllowSkip;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	SDK_UNDEFINED(16,2651) /* FString */               __um(StartDate);                                            // 0x0018   (0x0010)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0028   (0x0008)  MISSED
	SDK_UNDEFINED(16,2652) /* FString */               __um(EndDate);                                              // 0x0030   (0x0010)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0040   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.BackendCinematicsContent
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBackendCinematicsContent
{ 
	TArray<FBackendCinematicsContentData>              Cinematics;                                                 // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BalanceToolOverrideEntry
/// Size: 0x0030 (0x000000 - 0x000030)
struct FBalanceToolOverrideEntry
{ 
	SDK_UNDEFINED(16,2653) /* FString */               __um(DbName);                                               // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2654) /* FString */               __um(RowName);                                              // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2655) /* FString */               __um(value);                                                // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BalanceToolGameConfig
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBalanceToolGameConfig
{ 
	TArray<FBalanceToolOverrideEntry>                  Overrides;                                                  // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BaseTooltipData
/// Size: 0x0098 (0x000000 - 0x000098)
struct FBaseTooltipData
{ 
	SDK_UNDEFINED(16,2656) /* FString */               __um(Title);                                                // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2657) /* FString */               __um(Description);                                          // 0x0010   (0x0010)  
	FVector2D                                          touchPosition;                                              // 0x0020   (0x0008)  
	SDK_UNDEFINED(48,2658) /* TWeakObjectPtr<UClass*> */ __um(LeftTooltipWidgetAsset);                             // 0x0028   (0x0030)  
	SDK_UNDEFINED(48,2659) /* TWeakObjectPtr<UClass*> */ __um(RightTooltipWidgetAsset);                            // 0x0058   (0x0030)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0088   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.BlindPackData
/// Size: 0x0000 (0x0001C8 - 0x0001C8)
struct FBlindPackData : FBaseItemData
{ 
};

/// Struct /Script/DeadByDaylight.BloodDecal
/// Size: 0x006C (0x000000 - 0x00006C)
struct FBloodDecal
{ 
	unsigned char                                      UnknownData00_1[0x6C];                                      // 0x0000   (0x006C)  MISSED
};

/// Struct /Script/DeadByDaylight.BloodstoreRowUnlockThreshold
/// Size: 0x0008 (0x000008 - 0x000010)
struct FBloodstoreRowUnlockThreshold : FDBDTableRowBase
{ 
	int32_t                                            PreviousRowPurchasedItemsCount;                             // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.BloodwebContentTypePerRingDistribution
/// Size: 0x0058 (0x000008 - 0x000060)
struct FBloodwebContentTypePerRingDistribution : FDBDTableRowBase
{ 
	int32_t                                            PerkPerRingMinCount;                                        // 0x0008   (0x0004)  
	int32_t                                            PerkPerRingMaxCount;                                        // 0x000C   (0x0004)  
	int32_t                                            PerkPerRingWeight;                                          // 0x0010   (0x0004)  
	int32_t                                            OfferingPerRingMinCount;                                    // 0x0014   (0x0004)  
	int32_t                                            OfferingPerRingMaxCount;                                    // 0x0018   (0x0004)  
	int32_t                                            OfferingPerRingWeight;                                      // 0x001C   (0x0004)  
	int32_t                                            ItemPerRingMinCount;                                        // 0x0020   (0x0004)  
	int32_t                                            ItemPerRingMaxCount;                                        // 0x0024   (0x0004)  
	int32_t                                            ItemPerRingWeight;                                          // 0x0028   (0x0004)  
	int32_t                                            AddOnPerRingMinCount;                                       // 0x002C   (0x0004)  
	int32_t                                            AddOnPerRingMaxCount;                                       // 0x0030   (0x0004)  
	int32_t                                            AddOnPerRingWeight;                                         // 0x0034   (0x0004)  
	int32_t                                            ChestPerRingMinCount;                                       // 0x0038   (0x0004)  
	int32_t                                            ChestPerRingMaxCount;                                       // 0x003C   (0x0004)  
	int32_t                                            ChestPerRingWeight;                                         // 0x0040   (0x0004)  
	int32_t                                            PerksPackPerRingMinCount;                                   // 0x0044   (0x0004)  
	int32_t                                            PerksPackPerRingMaxCount;                                   // 0x0048   (0x0004)  
	int32_t                                            PerksPackPerRingWeight;                                     // 0x004C   (0x0004)  
	int32_t                                            IridiscentShardsPackPerRingMinCount;                        // 0x0050   (0x0004)  
	int32_t                                            IridiscentShardsPackPerRingMaxCount;                        // 0x0054   (0x0004)  
	int32_t                                            IridiscentShardsPackPerRingWeight;                          // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x005C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.BloodwebCostModifier
/// Size: 0x0008 (0x000008 - 0x000010)
struct FBloodwebCostModifier : FDBDTableRowBase
{ 
	EBloodwebNodeContentType                           Type;                                                       // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              CostModifier;                                               // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.BlockingNode
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBlockingNode
{ 
	SDK_UNDEFINED(16,2660) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	int32_t                                            BlockingCount;                                              // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.BloodwebRingComposition
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBloodwebRingComposition
{ 
	int32_t                                            EntityStartingRound;                                        // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<int32_t>                                    NodeCountPerRing;                                           // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BloodwebRarityCost
/// Size: 0x0028 (0x000000 - 0x000028)
struct FBloodwebRarityCost
{ 
	int32_t                                            Artifact;                                                   // 0x0000   (0x0004)  
	int32_t                                            Common;                                                     // 0x0004   (0x0004)  
	int32_t                                            Legendary;                                                  // 0x0008   (0x0004)  
	int32_t                                            Rare;                                                       // 0x000C   (0x0004)  
	int32_t                                            SpecialEvent;                                               // 0x0010   (0x0004)  
	int32_t                                            Spectral;                                                   // 0x0014   (0x0004)  
	int32_t                                            Teachable;                                                  // 0x0018   (0x0004)  
	int32_t                                            UltraRare;                                                  // 0x001C   (0x0004)  
	int32_t                                            Uncommon;                                                   // 0x0020   (0x0004)  
	int32_t                                            VeryRare;                                                   // 0x0024   (0x0004)  
};

/// Struct /Script/DeadByDaylight.BloodwebTypeCostModifiers
/// Size: 0x0014 (0x000000 - 0x000014)
struct FBloodwebTypeCostModifiers
{ 
	float                                              addon;                                                      // 0x0000   (0x0004)  
	float                                              Chest;                                                      // 0x0004   (0x0004)  
	float                                              Items;                                                      // 0x0008   (0x0004)  
	float                                              offerings;                                                  // 0x000C   (0x0004)  
	float                                              Perks;                                                      // 0x0010   (0x0004)  
};

/// Struct /Script/DeadByDaylight.BloodwebChestProbability
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBloodwebChestProbability
{ 
	SDK_UNDEFINED(16,2661) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2662) /* FString */               __um(ChestRarity);                                          // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BloodwebEventChestProbability
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBloodwebEventChestProbability
{ 
	SDK_UNDEFINED(16,2663) /* FString */               __um(eventID);                                              // 0x0000   (0x0010)  
	TArray<FBloodwebChestProbability>                  Chests;                                                     // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BloodwebGenerationRulesData
/// Size: 0x0070 (0x000000 - 0x000070)
struct FBloodwebGenerationRulesData
{ 
	TArray<FBloodwebRingComposition>                   RingComposition;                                            // 0x0000   (0x0010)  
	FBloodwebRarityCost                                RarityCost;                                                 // 0x0010   (0x0028)  
	FBloodwebTypeCostModifiers                         TypeCostModifiers;                                          // 0x0038   (0x0014)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	TArray<FBloodwebChestProbability>                  ChestProbability;                                           // 0x0050   (0x0010)  
	TArray<FBloodwebEventChestProbability>             EventChestProbability;                                      // 0x0060   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BloodwebMandatoryContentByLevel
/// Size: 0x0028 (0x000008 - 0x000030)
struct FBloodwebMandatoryContentByLevel : FDBDTableRowBase
{ 
	int32_t                                            Level;                                                      // 0x0008   (0x0004)  
	FName                                              ForcedItem01;                                               // 0x000C   (0x000C)  
	FName                                              ForcedItem02;                                               // 0x0018   (0x000C)  
	FName                                              ForcedItem03;                                               // 0x0024   (0x000C)  
};

/// Struct /Script/DeadByDaylight.ContentPerWebDistribution
/// Size: 0x0010 (0x000000 - 0x000010)
struct FContentPerWebDistribution
{ 
	int32_t                                            CumulativeWeight;                                           // 0x0000   (0x0004)  
	int32_t                                            Weight;                                                     // 0x0004   (0x0004)  
	int32_t                                            MinCount;                                                   // 0x0008   (0x0004)  
	int32_t                                            MaxCount;                                                   // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.ContentPerRingDistribution
/// Size: 0x0030 (0x000000 - 0x000030)
struct FContentPerRingDistribution
{ 
	TArray<int32_t>                                    WeightList;                                                 // 0x0000   (0x0010)  
	TArray<int32_t>                                    MinCountList;                                               // 0x0010   (0x0010)  
	TArray<int32_t>                                    MaxCountList;                                               // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.RarityPerWebDistribution
/// Size: 0x000C (0x000000 - 0x00000C)
struct FRarityPerWebDistribution
{ 
	int32_t                                            Weight;                                                     // 0x0000   (0x0004)  
	int32_t                                            MinCount;                                                   // 0x0004   (0x0004)  
	int32_t                                            MaxCount;                                                   // 0x0008   (0x0004)  
};

/// Struct /Script/DeadByDaylight.RarityPerRingDistribution
/// Size: 0x0030 (0x000000 - 0x000030)
struct FRarityPerRingDistribution
{ 
	TArray<int32_t>                                    WeightList;                                                 // 0x0000   (0x0010)  
	TArray<int32_t>                                    MinCountList;                                               // 0x0010   (0x0010)  
	TArray<int32_t>                                    MaxCountList;                                               // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AccessNode
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAccessNode
{ 
	SDK_UNDEFINED(16,2664) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	int32_t                                            AccessCost;                                                 // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.BloodwebNodeCost
/// Size: 0x0008 (0x000008 - 0x000010)
struct FBloodwebNodeCost : FDBDTableRowBase
{ 
	EItemRarity                                        Rarity;                                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            Cost;                                                       // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.BloodwebNodeRarityCost
/// Size: 0x0008 (0x000008 - 0x000010)
struct FBloodwebNodeRarityCost : FDBDTableRowBase
{ 
	EItemRarity                                        Rarity;                                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            Cost;                                                       // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.BloodwebNodesPerRingDistribution
/// Size: 0x0008 (0x000008 - 0x000010)
struct FBloodwebNodesPerRingDistribution : FDBDTableRowBase
{ 
	int32_t                                            MinCount;                                                   // 0x0008   (0x0004)  
	int32_t                                            MaxCount;                                                   // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.BloodwebPrestigeModifiers
/// Size: 0x0020 (0x000008 - 0x000028)
struct FBloodwebPrestigeModifiers : FDBDTableRowBase
{ 
	float                                              CommonItemProbabilityModifier;                              // 0x0008   (0x0004)  
	float                                              UncommonItemProbabilityModifier;                            // 0x000C   (0x0004)  
	float                                              RareItemProbabilityModifier;                                // 0x0010   (0x0004)  
	float                                              VeryRareItemProbabilityModifier;                            // 0x0014   (0x0004)  
	float                                              UltraRareItemProbabilityModifier;                           // 0x0018   (0x0004)  
	float                                              ArtifactItemProbabilityModifier;                            // 0x001C   (0x0004)  
	float                                              SpectralItemProbabilityModifier;                            // 0x0020   (0x0004)  
	float                                              LegendaryItemProbabilityModifier;                           // 0x0024   (0x0004)  
};

/// Struct /Script/DeadByDaylight.BloodwebProgressionValue
/// Size: 0x00E8 (0x000008 - 0x0000F0)
struct FBloodwebProgressionValue : FDBDTableRowBase
{ 
	int32_t                                            InnerRingNodeCount;                                         // 0x0008   (0x0004)  
	int32_t                                            MiddleRingNodeCount;                                        // 0x000C   (0x0004)  
	int32_t                                            OuterRingNodeCount;                                         // 0x0010   (0x0004)  
	int32_t                                            Common_MinCount;                                            // 0x0014   (0x0004)  
	int32_t                                            Common_MaxCount;                                            // 0x0018   (0x0004)  
	int32_t                                            Uncommon_MinCount;                                          // 0x001C   (0x0004)  
	int32_t                                            Uncommon_MaxCount;                                          // 0x0020   (0x0004)  
	int32_t                                            Rare_MinCount;                                              // 0x0024   (0x0004)  
	int32_t                                            Rare_MaxCount;                                              // 0x0028   (0x0004)  
	int32_t                                            VeryRare_MinCount;                                          // 0x002C   (0x0004)  
	int32_t                                            VeryRare_MaxCount;                                          // 0x0030   (0x0004)  
	int32_t                                            UltraRare_MinCount;                                         // 0x0034   (0x0004)  
	int32_t                                            UltraRare_MaxCount;                                         // 0x0038   (0x0004)  
	int32_t                                            Artifact_MinCount;                                          // 0x003C   (0x0004)  
	int32_t                                            Artifact_MaxCount;                                          // 0x0040   (0x0004)  
	int32_t                                            Spectral_MinCount;                                          // 0x0044   (0x0004)  
	int32_t                                            Spectral_MaxCount;                                          // 0x0048   (0x0004)  
	int32_t                                            SpecialEvent_MinCount;                                      // 0x004C   (0x0004)  
	int32_t                                            SpecialEvent_MaxCount;                                      // 0x0050   (0x0004)  
	int32_t                                            Legendary_MinCount;                                         // 0x0054   (0x0004)  
	int32_t                                            Legendary_MaxCount;                                         // 0x0058   (0x0004)  
	int32_t                                            InnerRingCommonItemProbability;                             // 0x005C   (0x0004)  
	int32_t                                            MiddleRingCommonItemProbability;                            // 0x0060   (0x0004)  
	int32_t                                            OuterRingCommonItemProbability;                             // 0x0064   (0x0004)  
	int32_t                                            InnerRingUncommonItemProbability;                           // 0x0068   (0x0004)  
	int32_t                                            MiddleRingUncommonItemProbability;                          // 0x006C   (0x0004)  
	int32_t                                            OuterRingUncommonItemProbability;                           // 0x0070   (0x0004)  
	int32_t                                            InnerRingRareItemProbability;                               // 0x0074   (0x0004)  
	int32_t                                            MiddleRingRareItemProbability;                              // 0x0078   (0x0004)  
	int32_t                                            OuterRingRareItemProbability;                               // 0x007C   (0x0004)  
	int32_t                                            InnerRingVeryRareItemProbability;                           // 0x0080   (0x0004)  
	int32_t                                            MiddleRingVeryRareItemProbability;                          // 0x0084   (0x0004)  
	int32_t                                            OuterRingVeryRareItemProbability;                           // 0x0088   (0x0004)  
	int32_t                                            InnerRingUltraRareItemProbability;                          // 0x008C   (0x0004)  
	int32_t                                            MiddleRingUltraRareItemProbability;                         // 0x0090   (0x0004)  
	int32_t                                            OuterRingUltraRareItemProbability;                          // 0x0094   (0x0004)  
	int32_t                                            InnerRingArtifactItemProbability;                           // 0x0098   (0x0004)  
	int32_t                                            MiddleRingArtifactItemProbability;                          // 0x009C   (0x0004)  
	int32_t                                            OuterRingArtifactItemProbability;                           // 0x00A0   (0x0004)  
	int32_t                                            InnerRingSpectralItemProbability;                           // 0x00A4   (0x0004)  
	int32_t                                            MiddleRingSpectralItemProbability;                          // 0x00A8   (0x0004)  
	int32_t                                            OuterRingSpectralItemProbability;                           // 0x00AC   (0x0004)  
	int32_t                                            InnerRingSpecialEventItemProbability;                       // 0x00B0   (0x0004)  
	int32_t                                            MiddleRingSpecialEventItemProbability;                      // 0x00B4   (0x0004)  
	int32_t                                            OuterRingSpecialEventItemProbability;                       // 0x00B8   (0x0004)  
	int32_t                                            InnerRingLegendaryItemProbability;                          // 0x00BC   (0x0004)  
	int32_t                                            MiddleRingLegendaryItemProbability;                         // 0x00C0   (0x0004)  
	int32_t                                            OuterRingLegendaryItemProbability;                          // 0x00C4   (0x0004)  
	int32_t                                            InnerRingEpicItemProbability;                               // 0x00C8   (0x0004)  
	int32_t                                            MiddleRingEpicItemProbability;                              // 0x00CC   (0x0004)  
	int32_t                                            OuterRingEpicItemProbability;                               // 0x00D0   (0x0004)  
	int32_t                                            InnerRingSuperEpicItemProbability;                          // 0x00D4   (0x0004)  
	int32_t                                            MiddleRingSuperEpicItemProbability;                         // 0x00D8   (0x0004)  
	int32_t                                            OuterRingSuperEpicItemProbability;                          // 0x00DC   (0x0004)  
	int32_t                                            InnerRingUltraEpicItemProbability;                          // 0x00E0   (0x0004)  
	int32_t                                            MiddleRingUltraEpicItemProbability;                         // 0x00E4   (0x0004)  
	int32_t                                            OuterRingUltraEpicItemProbability;                          // 0x00E8   (0x0004)  
	int32_t                                            EntityStartingRound;                                        // 0x00EC   (0x0004)  
};

/// Struct /Script/DeadByDaylight.BloodwebRarityPerRingDistribution
/// Size: 0x0090 (0x000008 - 0x000098)
struct FBloodwebRarityPerRingDistribution : FDBDTableRowBase
{ 
	int32_t                                            CommonMinCount;                                             // 0x0008   (0x0004)  
	int32_t                                            CommonMaxCount;                                             // 0x000C   (0x0004)  
	int32_t                                            CommonWeight;                                               // 0x0010   (0x0004)  
	int32_t                                            UncommonMinCount;                                           // 0x0014   (0x0004)  
	int32_t                                            UncommonMaxCount;                                           // 0x0018   (0x0004)  
	int32_t                                            UncommonWeight;                                             // 0x001C   (0x0004)  
	int32_t                                            RareMinCount;                                               // 0x0020   (0x0004)  
	int32_t                                            RareMaxCount;                                               // 0x0024   (0x0004)  
	int32_t                                            RareWeight;                                                 // 0x0028   (0x0004)  
	int32_t                                            VeryRareMinCount;                                           // 0x002C   (0x0004)  
	int32_t                                            VeryRareMaxCount;                                           // 0x0030   (0x0004)  
	int32_t                                            VeryRareWeight;                                             // 0x0034   (0x0004)  
	int32_t                                            UltraRareMinCount;                                          // 0x0038   (0x0004)  
	int32_t                                            UltraRareMaxCount;                                          // 0x003C   (0x0004)  
	int32_t                                            UltraRareWeight;                                            // 0x0040   (0x0004)  
	int32_t                                            ArtefactMinCount;                                           // 0x0044   (0x0004)  
	int32_t                                            ArtefactMaxCount;                                           // 0x0048   (0x0004)  
	int32_t                                            ArtefactWeight;                                             // 0x004C   (0x0004)  
	int32_t                                            SpectralMinCount;                                           // 0x0050   (0x0004)  
	int32_t                                            SpectralMaxCount;                                           // 0x0054   (0x0004)  
	int32_t                                            SpectralWeight;                                             // 0x0058   (0x0004)  
	int32_t                                            SpecialEventMinCount;                                       // 0x005C   (0x0004)  
	int32_t                                            SpecialEventMaxCount;                                       // 0x0060   (0x0004)  
	int32_t                                            SpecialEventWeight;                                         // 0x0064   (0x0004)  
	int32_t                                            LegendaryMinCount;                                          // 0x0068   (0x0004)  
	int32_t                                            LegendaryMaxCount;                                          // 0x006C   (0x0004)  
	int32_t                                            LegendaryWeight;                                            // 0x0070   (0x0004)  
	int32_t                                            EpicMinCount;                                               // 0x0074   (0x0004)  
	int32_t                                            EpicMaxCount;                                               // 0x0078   (0x0004)  
	int32_t                                            EpicWeight;                                                 // 0x007C   (0x0004)  
	int32_t                                            SuperEpicMinCount;                                          // 0x0080   (0x0004)  
	int32_t                                            SuperEpicMaxCount;                                          // 0x0084   (0x0004)  
	int32_t                                            SuperEpicWeight;                                            // 0x0088   (0x0004)  
	int32_t                                            UltraEpicMinCount;                                          // 0x008C   (0x0004)  
	int32_t                                            UltraEpicMaxCount;                                          // 0x0090   (0x0004)  
	int32_t                                            UltraEpicWeight;                                            // 0x0094   (0x0004)  
};

/// Struct /Script/DeadByDaylight.DBDPerPlatformFloat
/// Size: 0x0004 (0x000000 - 0x000004)
struct FDBDPerPlatformFloat
{ 
	FPerPlatformFloat                                  value;                                                      // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.DBDPerPlatformInt
/// Size: 0x0004 (0x000000 - 0x000004)
struct FDBDPerPlatformInt
{ 
	FPerPlatformInt                                    value;                                                      // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.BonusPointEventsItemData
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FBonusPointEventsItemData
{ 
	SDK_UNDEFINED(16,2665) /* FString */               __um(EventTitle);                                           // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2666) /* FString */               __um(EventDescription);                                     // 0x0010   (0x0010)  
	bool                                               EventDescription_IsSet;                                     // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0021   (0x0003)  MISSED
	uint32_t                                           EventType;                                                  // 0x0024   (0x0004)  
	double                                             Multiplier;                                                 // 0x0028   (0x0008)  
	SDK_UNDEFINED(16,2667) /* FString */               __um(starttime);                                            // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,2668) /* FString */               __um(EndTime);                                              // 0x0040   (0x0010)  
	unsigned char                                      UnknownData01_6[0x50];                                      // 0x0050   (0x0050)  MISSED
};

/// Struct /Script/DeadByDaylight.BonusPointEventsData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBonusPointEventsData
{ 
	TArray<FBonusPointEventsItemData>                  BonusPointEvents;                                           // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BotMatchConfig
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBotMatchConfig
{ 
	SDK_UNDEFINED(16,2669) /* TArray<FString> */       __um(DSPlatformSBM);                                        // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2670) /* TArray<FString> */       __um(DSPlatformTutorialBotMatch);                           // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.BundleData
/// Size: 0x0130 (0x000000 - 0x000130)
struct FBundleData
{ 
	FName                                              ID;                                                         // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FItemUIData                                        UIData;                                                     // 0x0010   (0x0120)  
};

/// Struct /Script/DeadByDaylight.CamperDamageResult
/// Size: 0x0060 (0x000000 - 0x000060)
struct FCamperDamageResult
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
	class AActor*                                      damageSource;                                               // 0x0010   (0x0008)  
	class ACharacter*                                  damagePlayerOwner;                                          // 0x0018   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0020   (0x0008)  MISSED
	class UGameplayModifierContainer*                  KOPreventedSource;                                          // 0x0028   (0x0008)  
	unsigned char                                      UnknownData02_6[0x30];                                      // 0x0030   (0x0030)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterCustomizationDataTable
/// Size: 0x0038 (0x000008 - 0x000040)
struct FCharacterCustomizationDataTable : FDBDTableRowBase
{ 
	int32_t                                            CharacterIndex;                                             // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(48,2671) /* TWeakObjectPtr<UDataTable*> */ __um(CustomizationStoreDB);                           // 0x0010   (0x0030)  
};

/// Struct /Script/DeadByDaylight.SlideShowDescription
/// Size: 0x0060 (0x000008 - 0x000068)
struct FSlideShowDescription : FDBDTableRowBase
{ 
	FName                                              ID;                                                         // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(24,2672) /* FText */                 __um(Overview);                                             // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2673) /* FText */                 __um(Playstyle);                                            // 0x0030   (0x0018)  
	SDK_UNDEFINED(16,2674) /* FString */               __um(ImageFilePath);                                        // 0x0048   (0x0010)  
	TArray<EPerkCategory>                              PerkCategory;                                               // 0x0058   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterDescription
/// Size: 0x0238 (0x000008 - 0x000240)
struct FCharacterDescription : FDBDTableRowBase
{ 
	int32_t                                            CharacterIndex;                                             // 0x0008   (0x0004)  
	EPlayerRole                                        Role;                                                       // 0x000C   (0x0001)  
	ECharacterDifficulty                               Difficulty;                                                 // 0x000D   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x000E   (0x0002)  MISSED
	SDK_UNDEFINED(24,2675) /* FText */                 __um(DisplayName);                                          // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,2676) /* FText */                 __um(BackStory);                                            // 0x0028   (0x0018)  
	SDK_UNDEFINED(24,2677) /* FText */                 __um(Biography);                                            // 0x0040   (0x0018)  
	FName                                              IconFilePath;                                               // 0x0058   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0064   (0x0004)  MISSED
	class UTexture2D*                                  HudIcon;                                                    // 0x0068   (0x0008)  
	FName                                              BackgroundImagePath;                                        // 0x0070   (0x000C)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x007C   (0x0004)  MISSED
	TArray<FCustomizedMeshPart>                        CustomizationDescription;                                   // 0x0080   (0x0010)  
	SDK_UNDEFINED(16,2678) /* FString */               __um(ChapterDlcId);                                         // 0x0090   (0x0010)  
	SDK_UNDEFINED(16,2679) /* TArray<FString> */       __um(AdditionalDlcIds);                                     // 0x00A0   (0x0010)  
	bool                                               AvailableIfDlcInstalled;                                    // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x00B1   (0x0003)  MISSED
	FName                                              DebugName;                                                  // 0x00B4   (0x000C)  
	bool                                               IsInChunk0;                                                 // 0x00C0   (0x0001)  
	bool                                               IsAvailableInNonViolentBuild;                               // 0x00C1   (0x0001)  
	bool                                               IsAvailableInAtlantaBuild;                                  // 0x00C2   (0x0001)  
	unsigned char                                      UnknownData04_5[0x1];                                       // 0x00C3   (0x0001)  MISSED
	uint32_t                                           PlatformExclusiveFlag;                                      // 0x00C4   (0x0004)  
	SDK_UNDEFINED(48,2680) /* TWeakObjectPtr<UClass*> */ __um(GamePawn);                                           // 0x00C8   (0x0030)  
	SDK_UNDEFINED(48,2681) /* TWeakObjectPtr<UClass*> */ __um(MenuPawn);                                           // 0x00F8   (0x0030)  
	FName                                              DefaultItem;                                                // 0x0128   (0x000C)  
	FName                                              DefaultPerk;                                                // 0x0134   (0x000C)  
	EGender                                            gender;                                                     // 0x0140   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x0141   (0x0007)  MISSED
	TArray<EKillerAbilities>                           KillerAbilities;                                            // 0x0148   (0x0010)  
	FDataTableProxy                                    TunableDB;                                                  // 0x0158   (0x0040)  
	EKillerHeight                                      KillerHeight;                                               // 0x0198   (0x0001)  
	unsigned char                                      UnknownData06_5[0x7];                                       // 0x0199   (0x0007)  MISSED
	FSlideShowDescription                              SlideShowDescriptions;                                      // 0x01A0   (0x0068)  
	bool                                               HideStoreCustomizations;                                    // 0x0208   (0x0001)  
	unsigned char                                      UnknownData07_5[0x7];                                       // 0x0209   (0x0007)  MISSED
	TArray<FName>                                      CustomizationCategories;                                    // 0x0210   (0x0010)  
	SDK_UNDEFINED(16,2682) /* FString */               __um(characterId);                                          // 0x0220   (0x0010)  
	unsigned char                                      UnknownData08_6[0x10];                                      // 0x0230   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterDescriptionOverride
/// Size: 0x00D0 (0x000008 - 0x0000D8)
struct FCharacterDescriptionOverride : FDBDTableRowBase
{ 
	TArray<FName>                                      RequiredItemIds;                                            // 0x0008   (0x0010)  
	SDK_UNDEFINED(24,2683) /* FText */                 __um(DisplayNameOverride);                                  // 0x0018   (0x0018)  
	SDK_UNDEFINED(48,2684) /* TWeakObjectPtr<UTexture2D*> */ __um(HudIconOverride);                                // 0x0030   (0x0030)  
	SDK_UNDEFINED(48,2685) /* TWeakObjectPtr<UClass*> */ __um(MenuBlueprint);                                      // 0x0060   (0x0030)  
	SDK_UNDEFINED(48,2686) /* TWeakObjectPtr<UClass*> */ __um(GameBlueprint);                                      // 0x0090   (0x0030)  
	FName                                              IconFilePathOverride;                                       // 0x00C0   (0x000C)  
	FName                                              MoriVideoOverrideId;                                        // 0x00CC   (0x000C)  
};

/// Struct /Script/DeadByDaylight.KillerAttributesData
/// Size: 0x000C (0x000000 - 0x00000C)
struct FKillerAttributesData
{ 
	float                                              Speed;                                                      // 0x0000   (0x0004)  
	float                                              TerrorRadius;                                               // 0x0004   (0x0004)  
	EKillerHeight                                      Height;                                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterInfoData
/// Size: 0x0330 (0x000000 - 0x000330)
struct FCharacterInfoData
{ 
	FCharacterSlotData                                 SlotData;                                                   // 0x0000   (0x01D8)  
	SDK_UNDEFINED(16,2687) /* FString */               __um(Description);                                          // 0x01D8   (0x0010)  
	TArray<FTeachableData>                             TeachablePerksData;                                         // 0x01E8   (0x0010)  
	FInventorySlotData                                 PowerData;                                                  // 0x01F8   (0x0128)  
	FKillerAttributesData                              KillerAttributesData;                                       // 0x0320   (0x000C)  
	bool                                               IsKiller;                                                   // 0x032C   (0x0001)  
	bool                                               IsEnabled;                                                  // 0x032D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x032E   (0x0002)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterLevelData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCharacterLevelData
{ 
	int32_t                                            Level;                                                      // 0x0000   (0x0004)  
	int32_t                                            ExperienceToNextLevel;                                      // 0x0004   (0x0004)  
	bool                                               IsComplete;                                                 // 0x0008   (0x0001)  
	bool                                               HasPerksBeenSelected;                                       // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x000A   (0x0006)  MISSED
	TArray<FAssignedPerkProperties>                    PerkSelection;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.LoadoutPresetListId
/// Size: 0x0008 (0x000000 - 0x000008)
struct FLoadoutPresetListId
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterSlideData
/// Size: 0x0068 (0x000000 - 0x000068)
struct FCharacterSlideData
{ 
	SDK_UNDEFINED(16,2688) /* FString */               __um(DisplayName);                                          // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2689) /* FString */               __um(Overview);                                             // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2690) /* FString */               __um(Playstyle);                                            // 0x0020   (0x0010)  
	EPlayerRole                                        Role;                                                       // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	SDK_UNDEFINED(16,2691) /* FString */               __um(ImageFilePath);                                        // 0x0038   (0x0010)  
	TArray<EPerkCategory>                              SurvivorPerkCategories;                                     // 0x0048   (0x0010)  
	SDK_UNDEFINED(16,2692) /* FString */               __um(KillerPowerIconPath);                                  // 0x0058   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterViewTarget
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCharacterViewTarget
{ 
	ECharacterCameraViewType                           Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,2693) /* FString */               __um(RawData);                                              // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ChaseUpdateInfo
/// Size: 0x0048 (0x000000 - 0x000048)
struct FChaseUpdateInfo
{ 
	FTargetFocusTimer                                  ChaseTimer;                                                 // 0x0000   (0x0038)  
	float                                              SurvivorTravelDistance;                                     // 0x0038   (0x0004)  
	float                                              KillerTravelDistance;                                       // 0x003C   (0x0004)  
	ECamperDamageState                                 ChaseStartHealthStatus;                                     // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.MaterialMapForClip
/// Size: 0x0020 (0x000008 - 0x000028)
struct FMaterialMapForClip : FDBDTableRowBase
{ 
	class UMaterialInterface*                          SrcMaterial;                                                // 0x0008   (0x0008)  
	class UMaterialInterface*                          DstMaterial;                                                // 0x0010   (0x0008)  
	SDK_UNDEFINED(16,2694) /* TArray<TWeakObjectPtr<UStaticMesh*>> */ __um(StaticMeshToApply);                     // 0x0018   (0x0010)  
};

/// Struct /Script/DeadByDaylight.StaticMeshesArrayForClip
/// Size: 0x0010 (0x000000 - 0x000010)
struct FStaticMeshesArrayForClip
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.CombinedPartyFriendData
/// Size: 0x0168 (0x000000 - 0x000168)
struct FCombinedPartyFriendData
{ 
	unsigned char                                      UnknownData00_1[0x168];                                     // 0x0000   (0x0168)  MISSED
};

/// Struct /Script/DeadByDaylight.CombinedSpecialEventData
/// Size: 0x0348 (0x000000 - 0x000348)
struct FCombinedSpecialEventData
{ 
	unsigned char                                      UnknownData00_1[0x348];                                     // 0x0000   (0x0348)  MISSED
};

/// Struct /Script/DeadByDaylight.AkEventWithSubtitle
/// Size: 0x0038 (0x000000 - 0x000038)
struct FAkEventWithSubtitle
{ 
	class UAkAudioEvent*                               AudioEvent;                                                 // 0x0000   (0x0008)  
	char                                               Weight;                                                     // 0x0008   (0x0001)  
	bool                                               HasSubtitles;                                               // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x000A   (0x0006)  MISSED
	TArray<FCustomSoundFXData>                         RequiredAudioSwitch;                                        // 0x0010   (0x0010)  
	TArray<FCustomSoundFXData>                         ForbiddenAudioSwitch;                                       // 0x0020   (0x0010)  
	uint32_t                                           DelayMsBeforeSubtitles;                                     // 0x0030   (0x0004)  
	int32_t                                            SubtitleEventPriority;                                      // 0x0034   (0x0004)  
};

/// Struct /Script/DeadByDaylight.CommentatorAudioContext
/// Size: 0x0030 (0x000000 - 0x000030)
struct FCommentatorAudioContext
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	TArray<FAkEventWithSubtitle>                       AudioEvents;                                                // 0x0008   (0x0010)  
	int32_t                                            PlayProbability;                                            // 0x0018   (0x0004)  
	FInt32Range                                        Delay;                                                      // 0x001C   (0x0010)  
	char                                               NumMatchesBeforeContextRepeat;                              // 0x002C   (0x0001)  
	char                                               NumOccurencesBeforeEventRepeat;                             // 0x002D   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x002E   (0x0002)  MISSED
};

/// Struct /Script/DeadByDaylight.CommentatorContextCodeMapping
/// Size: 0x0010 (0x000008 - 0x000018)
struct FCommentatorContextCodeMapping : FDBDTableRowBase
{ 
	FGameplayTag                                       GameEventTag;                                               // 0x0008   (0x000C)  
	ECommentatorContextCode                            CommentatorContextCode;                                     // 0x0014   (0x0001)  
	EPlayerTeam                                        RequiredPlayerTeam;                                         // 0x0015   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0016   (0x0002)  MISSED
};

/// Struct /Script/DeadByDaylight.ConsentContentVersionData
/// Size: 0x00C0 (0x000000 - 0x0000C0)
struct FConsentContentVersionData
{ 
	SDK_UNDEFINED(16,2695) /* FString */               __um(label);                                                // 0x0000   (0x0010)  
	int64_t                                            EntryDate;                                                  // 0x0010   (0x0008)  
	SDK_UNDEFINED(80,2696) /* TMap<FString, FString> */ __um(Title);                                               // 0x0018   (0x0050)  
	SDK_UNDEFINED(80,2697) /* TMap<FString, FString> */ __um(Content);                                             // 0x0068   (0x0050)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00B8   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.ConsentContentData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FConsentContentData
{ 
	SDK_UNDEFINED(16,2698) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	TArray<FConsentContentVersionData>                 Versions;                                                   // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ConsentDefinitionData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FConsentDefinitionData
{ 
	SDK_UNDEFINED(16,2699) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2700) /* TArray<FString> */       __um(platform);                                             // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2701) /* TArray<FString> */       __um(Sku);                                                  // 0x0020   (0x0010)  
	bool                                               Sku_IsSet;                                                  // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	SDK_UNDEFINED(16,2702) /* TArray<FString> */       __um(Language);                                             // 0x0038   (0x0010)  
	bool                                               NeedAcceptance;                                             // 0x0048   (0x0001)  
	bool                                               IsMandatory;                                                // 0x0049   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x004A   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.ContentMetadata
/// Size: 0x0018 (0x000000 - 0x000018)
struct FContentMetadata
{ 
	bool                                               RebootClient;                                               // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,2703) /* FString */               __um(DeploymentDate);                                       // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ContentScheduleRecord
/// Size: 0x0158 (0x000000 - 0x000158)
struct FContentScheduleRecord
{ 
	int32_t                                            Priority;                                                   // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(16,2704) /* FString */               __um(Description);                                          // 0x0008   (0x0010)  
	bool                                               Description_IsSet;                                          // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	SDK_UNDEFINED(16,2705) /* TArray<FString> */       __um(GameModes);                                            // 0x0020   (0x0010)  
	bool                                               GameModes_IsSet;                                            // 0x0030   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	SDK_UNDEFINED(16,2706) /* FString */               __um(LinkedEventId);                                        // 0x0038   (0x0010)  
	bool                                               LinkedEventId_IsSet;                                        // 0x0048   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	SDK_UNDEFINED(80,2707) /* TMap<FString, float> */  __um(MapsThemeWeight);                                      // 0x0050   (0x0050)  
	bool                                               MapsThemeWeight_IsSet;                                      // 0x00A0   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x00A1   (0x0007)  MISSED
	SDK_UNDEFINED(80,2708) /* TMap<FString, float> */  __um(MapsWeight);                                           // 0x00A8   (0x0050)  
	bool                                               MapsWeight_IsSet;                                           // 0x00F8   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x00F9   (0x0007)  MISSED
	SDK_UNDEFINED(16,2709) /* TArray<FString> */       __um(FeaturedMap);                                          // 0x0100   (0x0010)  
	bool                                               FeaturedMap_IsSet;                                          // 0x0110   (0x0001)  
	unsigned char                                      UnknownData06_5[0x17];                                      // 0x0111   (0x0017)  MISSED
	SDK_UNDEFINED(16,2710) /* FString */               __um(StartDate);                                            // 0x0128   (0x0010)  
	bool                                               StartDate_IsSet;                                            // 0x0138   (0x0001)  
	unsigned char                                      UnknownData07_5[0x7];                                       // 0x0139   (0x0007)  MISSED
	SDK_UNDEFINED(16,2711) /* FString */               __um(EndDate);                                              // 0x0140   (0x0010)  
	bool                                               EndDate_IsSet;                                              // 0x0150   (0x0001)  
	unsigned char                                      UnknownData08_6[0x7];                                       // 0x0151   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.ContentScheduleData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FContentScheduleData
{ 
	TArray<FContentScheduleRecord>                     Schedule;                                                   // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0010   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.ContextEventData
/// Size: 0x0068 (0x000000 - 0x000068)
struct FContextEventData
{ 
	SDK_UNDEFINED(16,2712) /* FString */               __um(ContextGroupName);                                     // 0x0000   (0x0010)  
	uint32_t                                           ContextGroupUid;                                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(16,2713) /* FString */               __um(PreviousContextName);                                  // 0x0018   (0x0010)  
	uint32_t                                           PreviousContextUid;                                         // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2714) /* FString */               __um(CurrentContextName);                                   // 0x0030   (0x0010)  
	uint32_t                                           CurrentContextUid;                                          // 0x0040   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	SDK_UNDEFINED(16,2715) /* FString */               __um(NextContextName);                                      // 0x0048   (0x0010)  
	uint32_t                                           NextContextUid;                                             // 0x0058   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x005C   (0x0004)  MISSED
	FDateTime                                          Timestamp;                                                  // 0x0060   (0x0008)  
};

/// Struct /Script/DeadByDaylight.CoreRitualsBackendData
/// Size: 0x0028 (0x000008 - 0x000030)
struct FCoreRitualsBackendData : FDBDTableRowBase
{ 
	int32_t                                            DifficultyThreshold;                                        // 0x0008   (0x0004)  
	float                                              DifficultyTolerance;                                        // 0x000C   (0x0004)  
	int32_t                                            DifficultyDisplayThreshold;                                 // 0x0010   (0x0004)  
	ERewardType                                        DifficultyRewardsType;                                      // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	int32_t                                            DifficultyRewardsAmount;                                    // 0x0018   (0x0004)  
	ECurrencyType                                      DifficultyRewardsId;                                        // 0x001C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x001D   (0x0003)  MISSED
	SDK_UNDEFINED(16,2716) /* FString */               __um(ritualId);                                             // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CurrencyPackData
/// Size: 0x0008 (0x000258 - 0x000260)
struct FCurrencyPackData : FItemData
{ 
	ECurrencyType                                      CurrencyType;                                               // 0x0258   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0259   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.CurrencyUIData
/// Size: 0x0070 (0x000008 - 0x000078)
struct FCurrencyUIData : FDBDTableRowBase
{ 
	ECurrencyType                                      CurrencyType;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	SDK_UNDEFINED(24,2717) /* FText */                 __um(Description);                                          // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,2718) /* FText */                 __um(DisplayName);                                          // 0x0028   (0x0018)  
	SDK_UNDEFINED(16,2719) /* FString */               __um(IconPath);                                             // 0x0040   (0x0010)  
	FSlateColor                                        CurrencyColorTheme;                                         // 0x0050   (0x0028)  
};

/// Struct /Script/DeadByDaylight.CustomizationCategoryData
/// Size: 0x0040 (0x000008 - 0x000048)
struct FCustomizationCategoryData : FDBDTableRowBase
{ 
	FName                                              ID;                                                         // 0x0008   (0x000C)  
	ECustomizationCategory                             category;                                                   // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	SDK_UNDEFINED(16,2720) /* FString */               __um(IconPath);                                             // 0x0018   (0x0010)  
	SDK_UNDEFINED(24,2721) /* FText */                 __um(DisplayName);                                          // 0x0028   (0x0018)  
	EPlayerRole                                        Role;                                                       // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.MaterialReplacerArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMaterialReplacerArray
{ 
	TArray<FMaterialReplacerData>                      MaterialsMap;                                               // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CustomizationItemDropdown
/// Size: 0x000E (0x000002 - 0x000010)
struct FCustomizationItemDropdown : FRoleDropdown
{ 
	unsigned char                                      UnknownData00_2[0x2];                                       // 0x0002   (0x0002)  MISSED
	FName                                              ItemId;                                                     // 0x0004   (0x000C)  
};

/// Struct /Script/DeadByDaylight.CustomizationTooltipData
/// Size: 0x01F8 (0x000098 - 0x000290)
struct FCustomizationTooltipData : FBaseTooltipData
{ 
	unsigned char                                      UnknownData00_1[0x1F8];                                     // 0x0098   (0x01F8)  MISSED
};

/// Struct /Script/DeadByDaylight.ItemVfxLoadingData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FItemVfxLoadingData
{ 
	class AItemVfx*                                    ItemVfx;                                                    // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.AccessoryLoadingData
/// Size: 0x00E8 (0x000000 - 0x0000E8)
struct FAccessoryLoadingData
{ 
	unsigned char                                      UnknownData00_2[0xE0];                                      // 0x0000   (0x00E0)  MISSED
	class UAccessory*                                  Accessory;                                                  // 0x00E0   (0x0008)  
};

/// Struct /Script/DeadByDaylight.DailyRewardData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FDailyRewardData
{ 
	EAtlantaRewardType                                 RewardType;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            CurrencyAmount;                                             // 0x0004   (0x0004)  
	SDK_UNDEFINED(16,2722) /* FString */               __um(IconPath);                                             // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,2723) /* FString */               __um(ParentIconPath);                                       // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,2724) /* FString */               __um(ItemName);                                             // 0x0028   (0x0010)  
	int32_t                                            index;                                                      // 0x0038   (0x0004)  
	bool                                               IsMarkedSpecial;                                            // 0x003C   (0x0001)  
	EItemRarity                                        ItemRarity;                                                 // 0x003D   (0x0001)  
	EUMGDailyRewardWidgetState                         State;                                                      // 0x003E   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1];                                       // 0x003F   (0x0001)  MISSED
};

/// Struct /Script/DeadByDaylight.DailyRewardCalendarData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FDailyRewardCalendarData
{ 
	TArray<FDailyRewardData>                           DailyRewardList;                                            // 0x0000   (0x0010)  
	int32_t                                            CurrentlyActiveDailyRewardIndex;                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FDateTime                                          CalendarStartDate;                                          // 0x0018   (0x0008)  
	FDateTime                                          CalendarExpirationDate;                                     // 0x0020   (0x0008)  
	bool                                               isSet;                                                      // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.MovementConversionData
/// Size: 0x0003 (0x000000 - 0x000003)
struct FMovementConversionData
{ 
	unsigned char                                      UnknownData00_1[0x3];                                       // 0x0000   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.AICamperDodgeTunableRowData
/// Size: 0x0050 (0x000008 - 0x000058)
struct FAICamperDodgeTunableRowData : FDBDTableRowBase
{ 
	int32_t                                            characterId;                                                // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(24,2725) /* FText */                 __um(Description);                                          // 0x0010   (0x0018)  
	EAIDodgeType                                       BestDodgeType;                                              // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	TArray<EAIDodgeTechnique>                          DodgeTechniques;                                            // 0x0030   (0x0010)  
	bool                                               RequireInSight;                                             // 0x0040   (0x0001)  
	bool                                               RequireAttackState;                                         // 0x0041   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x0042   (0x0002)  MISSED
	float                                              Duration;                                                   // 0x0044   (0x0004)  
	float                                              ReactionTime;                                               // 0x0048   (0x0004)  
	float                                              Range;                                                      // 0x004C   (0x0004)  
	float                                              AttackPlusSurvivorHalfWidth;                                // 0x0050   (0x0004)  
	float                                              FieldOfView;                                                // 0x0054   (0x0004)  
};

/// Struct /Script/DeadByDaylight.AIItemWeightTunableRowData
/// Size: 0x0010 (0x000008 - 0x000018)
struct FAIItemWeightTunableRowData : FDBDTableRowBase
{ 
	float                                              CountWeight;                                                // 0x0008   (0x0004)  
	float                                              EnergyWeight;                                               // 0x000C   (0x0004)  
	float                                              ConditionalWeight;                                          // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.AIDifficultyTunableRowData
/// Size: 0x0010 (0x000008 - 0x000018)
struct FAIDifficultyTunableRowData : FDBDTableRowBase
{ 
	float                                              VeryEasy;                                                   // 0x0008   (0x0004)  
	float                                              Easy;                                                       // 0x000C   (0x0004)  
	float                                              Medium;                                                     // 0x0010   (0x0004)  
	float                                              Hard;                                                       // 0x0014   (0x0004)  
};

/// Struct /Script/DeadByDaylight.AtlantaRitualContainer
/// Size: 0x0050 (0x000000 - 0x000050)
struct FAtlantaRitualContainer
{ 
	SDK_UNDEFINED(80,2726) /* TMap<FString, FAtlantaRitualSetArray> */ __um(RitualsMap);                           // 0x0000   (0x0050)  
};

/// Struct /Script/DeadByDaylight.AtlantaRitualSetArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAtlantaRitualSetArray
{ 
	TArray<FAtlantaRitualSet>                          rituals;                                                    // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AtlantaRitualSetIndex
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAtlantaRitualSetIndex
{ 
	int32_t                                            index;                                                      // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(16,2727) /* FString */               __um(ritualType);                                           // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AtlantaRitualDefinition
/// Size: 0x0060 (0x000008 - 0x000068)
struct FAtlantaRitualDefinition : FDBDTableRowBase
{ 
	SDK_UNDEFINED(24,2728) /* FText */                 __um(DisplayName);                                          // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,2729) /* FText */                 __um(Description);                                          // 0x0020   (0x0018)  
	SDK_UNDEFINED(48,2730) /* TWeakObjectPtr<UTexture2D*> */ __um(Texture);                                        // 0x0038   (0x0030)  
};

/// Struct /Script/DeadByDaylight.AttackSubstateRequestResult
/// Size: 0x0003 (0x000000 - 0x000003)
struct FAttackSubstateRequestResult
{ 
	bool                                               IsValid;                                                    // 0x0000   (0x0001)  
	EAttackSubstate                                    RequestedNextSubstate;                                      // 0x0001   (0x0001)  
	EAttackSubstate                                    ServerNextSubstate;                                         // 0x0002   (0x0001)  
};

/// Struct /Script/DeadByDaylight.PerMeshInstancingData
/// Size: 0x0190 (0x000000 - 0x000190)
struct FPerMeshInstancingData
{ 
	SDK_UNDEFINED(80,2731) /* TMap<uint32_t, UInstancedStaticMeshComponent*> */ __um(gpuCulling_hashToInstancedMeshes); // 0x0000   (0x0050)  
	SDK_UNDEFINED(80,2732) /* TMap<uint32_t, UInstancedStaticMeshComponent*> */ __um(gpuCullingSwap_hashToInstancedMeshes); // 0x0050   (0x0050)  
	SDK_UNDEFINED(80,2733) /* TMap<uint32_t, UInstancedStaticMeshComponent*> */ __um(hism_hashToInstancedMeshes);  // 0x00A0   (0x0050)  
	unsigned char                                      UnknownData00_6[0xA0];                                      // 0x00F0   (0x00A0)  MISSED
};

/// Struct /Script/DeadByDaylight.WebPath
/// Size: 0x0028 (0x000000 - 0x000028)
struct FWebPath
{ 
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0000   (0x0028)  MISSED
};

/// Struct /Script/DeadByDaylight.WebNode
/// Size: 0x0028 (0x000000 - 0x000028)
struct FWebNode
{ 
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0000   (0x0028)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterSavedInventoryData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCharacterSavedInventoryData
{ 
	uint32_t                                           Version;                                                    // 0x0000   (0x0004)  
	FName                                              Name;                                                       // 0x0004   (0x000C)  
};

/// Struct /Script/DeadByDaylight.SavedCharacterLevelData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSavedCharacterLevelData
{ 
	int32_t                                            Level;                                                      // 0x0000   (0x0004)  
	bool                                               HasPerksBeenSelected;                                       // 0x0004   (0x0001)  
	bool                                               HasPerkSelectionBeenGenerated;                              // 0x0005   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0006   (0x0002)  MISSED
	TArray<FAssignedPerkProperties>                    PerkSelection;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterSavedProfileData
/// Size: 0x01A0 (0x000000 - 0x0001A0)
struct FCharacterSavedProfileData
{ 
	int32_t                                            BloodWebLevel;                                              // 0x0000   (0x0004)  
	int32_t                                            TimesConfronted;                                            // 0x0004   (0x0004)  
	TArray<FDateTime>                                  PrestigeEarnedDates;                                        // 0x0008   (0x0010)  
	FBloodWebPersistentData                            BloodWebData;                                               // 0x0018   (0x0050)  
	FPlayerLoadoutData                                 CharacterLoadoutData;                                       // 0x0068   (0x00A8)  
	FEquippedPlayerCustomization                       CurrentCustomization;                                       // 0x0110   (0x0038)  
	TArray<FName>                                      UniquePerksAdded;                                           // 0x0148   (0x0010)  
	bool                                               CharacterBloodwebMigrationIsDone;                           // 0x0158   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0159   (0x0007)  MISSED
	TArray<FCharacterSavedInventoryData>               InventoryData;                                              // 0x0160   (0x0010)  
	TArray<FSavedCharacterLevelData>                   CharacterLevelData;                                         // 0x0170   (0x0010)  
	TArray<FSavedStatsData>                            StatProgression;                                            // 0x0180   (0x0010)  
	int32_t                                            PrestigeLevel;                                              // 0x0190   (0x0004)  
	int32_t                                            LegacyPrestigeLevel;                                        // 0x0194   (0x0004)  
	int32_t                                            CharacterExperience;                                        // 0x0198   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x019C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.CurrencyConversion
/// Size: 0x0050 (0x000000 - 0x000050)
struct FCurrencyConversion
{ 
	SDK_UNDEFINED(80,2734) /* TMap<ECurrencyType, float> */ __um(AmountInOtherCurrency);                           // 0x0000   (0x0050)  
};

/// Struct /Script/DeadByDaylight.DailyRitualPossibleCharacters
/// Size: 0x0030 (0x000000 - 0x000030)
struct FDailyRitualPossibleCharacters
{ 
	TArray<int32_t>                                    CharacterIDs;                                               // 0x0000   (0x0010)  
	TArray<EPlayerRole>                                Roles;                                                      // 0x0010   (0x0010)  
	TArray<EPlayerRole>                                SelectOneCharacterFromRoles;                                // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.DailyRitualDefinition
/// Size: 0x00D0 (0x000008 - 0x0000D8)
struct FDailyRitualDefinition : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,2735) /* FString */               __um(ritualId);                                             // 0x0008   (0x0010)  
	SDK_UNDEFINED(24,2736) /* FText */                 __um(DisplayName);                                          // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2737) /* FText */                 __um(Description);                                          // 0x0030   (0x0018)  
	SDK_UNDEFINED(16,2738) /* FString */               __um(IconPath);                                             // 0x0048   (0x0010)  
	FDailyRitualPossibleCharacters                     PossibleCharacters;                                         // 0x0058   (0x0030)  
	TArray<EDBDScoreTypes>                             TrackedEvents;                                              // 0x0088   (0x0010)  
	TArray<FGameplayTag>                               TrackedGameEvents;                                          // 0x0098   (0x0010)  
	SDK_UNDEFINED(48,2739) /* TWeakObjectPtr<UClass*> */ __um(Evaluator);                                          // 0x00A8   (0x0030)  
};

/// Struct /Script/DeadByDaylight.RitualEvent
/// Size: 0x0030 (0x000000 - 0x000030)
struct FRitualEvent
{ 
	EDBDScoreTypes                                     scoreType;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FGameplayTag                                       gameEventType;                                              // 0x0004   (0x000C)  
	float                                              Amount;                                                     // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	class ADBDPlayer*                                  Instigator;                                                 // 0x0018   (0x0008)  
	class ADBDPlayerState*                             InstigatorPlayerState;                                      // 0x0020   (0x0008)  
	class AActor*                                      Target;                                                     // 0x0028   (0x0008)  
};

/// Struct /Script/DeadByDaylight.AttackTypeDetails
/// Size: 0x0020 (0x000008 - 0x000028)
struct FAttackTypeDetails : FDBDTableRowBase
{ 
	EAttackType                                        attackType;                                                 // 0x0008   (0x0001)  
	bool                                               IsBasicAttack;                                              // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x000A   (0x0002)  MISSED
	int32_t                                            AssociatedCharacter;                                        // 0x000C   (0x0004)  
	SDK_UNDEFINED(24,2740) /* FText */                 __um(Description);                                          // 0x0010   (0x0018)  
};

/// Struct /Script/DeadByDaylight.LevelUpDetails
/// Size: 0x0050 (0x000008 - 0x000058)
struct FLevelUpDetails : FDBDTableRowBase
{ 
	int32_t                                            Level;                                                      // 0x0008   (0x0004)  
	int32_t                                            Prestige;                                                   // 0x000C   (0x0004)  
	SDK_UNDEFINED(24,2741) /* FText */                 __um(Title);                                                // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,2742) /* FText */                 __um(Description);                                          // 0x0028   (0x0018)  
	FName                                              ItemId;                                                     // 0x0040   (0x000C)  
	EInventoryItemType                                 ItemType;                                                   // 0x004C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x004D   (0x0003)  MISSED
	int32_t                                            AssociatedCharacter;                                        // 0x0050   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.EACClientInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FEACClientInfo
{ 
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0000   (0x0028)  MISSED
};

/// Struct /Script/DeadByDaylight.EmblemProgressionDescriptionByQuality
/// Size: 0x0020 (0x000000 - 0x000020)
struct FEmblemProgressionDescriptionByQuality
{ 
	EEmblemQuality                                     EmblemQuality;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(24,2743) /* FText */                 __um(Description);                                          // 0x0008   (0x0018)  
};

/// Struct /Script/DeadByDaylight.EmblemProgressionID
/// Size: 0x0030 (0x000000 - 0x000030)
struct FEmblemProgressionID
{ 
	EEmblemProgressionType                             EmblemProgressionType;                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(24,2744) /* FText */                 __um(DefaultDescription);                                   // 0x0008   (0x0018)  
	TArray<FEmblemProgressionDescriptionByQuality>     DescriptionsByQuality;                                      // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.DBDEmblemDefinition
/// Size: 0x00A8 (0x000008 - 0x0000B0)
struct FDBDEmblemDefinition : FDBDTableRowBase
{ 
	FName                                              ID;                                                         // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(24,2745) /* FText */                 __um(Name);                                                 // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2746) /* FText */                 __um(Description);                                          // 0x0030   (0x0018)  
	TArray<EPlayerRole>                                Roles;                                                      // 0x0048   (0x0010)  
	SDK_UNDEFINED(48,2747) /* TWeakObjectPtr<UClass*> */ __um(CustomEmblem);                                       // 0x0058   (0x0030)  
	SDK_UNDEFINED(16,2748) /* TArray<FString> */       __um(IconFilePaths);                                        // 0x0088   (0x0010)  
	EEmblemEvaluation                                  EmblemEvaluation;                                           // 0x0098   (0x0001)  
	bool                                               Enabled;                                                    // 0x0099   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x009A   (0x0006)  MISSED
	TArray<FEmblemProgressionID>                       EmblemProgressionData;                                      // 0x00A0   (0x0010)  
};

/// Struct /Script/DeadByDaylight.EndOfMatchRPCData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FEndOfMatchRPCData
{ 
	SDK_UNDEFINED(16,2749) /* FString */               __um(_jsonData);                                            // 0x0000   (0x0010)  
	bool                                               _isValid;                                                   // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.LanguageMapping
/// Size: 0x0018 (0x000008 - 0x000020)
struct FLanguageMapping : FTableRowBase
{ 
	SDK_UNDEFINED(16,2750) /* FString */               __um(Language);                                             // 0x0008   (0x0010)  
	ECustomerSupportLanguages                          CustomerSupportId;                                          // 0x0018   (0x0001)  
	EForumLanguages                                    ForumId;                                                    // 0x0019   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x001A   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.KeyDisplayInfo
/// Size: 0x0040 (0x000000 - 0x000040)
struct FKeyDisplayInfo
{ 
	FKey                                               Key;                                                        // 0x0000   (0x0020)  
	SDK_UNDEFINED(16,2751) /* FString */               __um(KeyDisplayName);                                       // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2752) /* FString */               __um(PromptType);                                           // 0x0030   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SaveDataBase
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSaveDataBase
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	int32_t                                            VersionNumber;                                              // 0x0008   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.LegacyPlayerSavedProfileDataShared
/// Size: 0x0040 (0x000000 - 0x000040)
struct FLegacyPlayerSavedProfileDataShared
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	SDK_UNDEFINED(16,2753) /* FString */               __um(playerName);                                           // 0x0008   (0x0010)  
	int32_t                                            SelectedCamperIndex;                                        // 0x0018   (0x0004)  
	int32_t                                            SelectedSlasherIndex;                                       // 0x001C   (0x0004)  
	TArray<FName>                                      SelectedCharacterCustomization;                             // 0x0020   (0x0010)  
	int32_t                                            SlasherSkulls;                                              // 0x0030   (0x0004)  
	int32_t                                            CamperSkulls;                                               // 0x0034   (0x0004)  
	int32_t                                            CamperStreak;                                               // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.LegacySavedDailyRitualInstance
/// Size: 0x0078 (0x000000 - 0x000078)
struct FLegacySavedDailyRitualInstance
{ 
	FName                                              RitualKey;                                                  // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<int32_t>                                    CharacterIDs;                                               // 0x0010   (0x0010)  
	TArray<EPlayerRole>                                Roles;                                                      // 0x0020   (0x0010)  
	float                                              progress;                                                   // 0x0030   (0x0004)  
	float                                              Threshold;                                                  // 0x0034   (0x0004)  
	float                                              Tolerance;                                                  // 0x0038   (0x0004)  
	float                                              DisplayThreshold;                                           // 0x003C   (0x0004)  
	float                                              ExpReward;                                                  // 0x0040   (0x0004)  
	bool                                               Active;                                                     // 0x0044   (0x0001)  
	bool                                               Rewarded;                                                   // 0x0045   (0x0001)  
	bool                                               StateChanged;                                               // 0x0046   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0047   (0x0001)  MISSED
	FDateTime                                          DateAssigned;                                               // 0x0048   (0x0008)  
	int32_t                                            NbGameElapsed;                                              // 0x0050   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	TArray<EDBDScoreTypes>                             TrackedEvents;                                              // 0x0058   (0x0010)  
	TArray<FGameplayTag>                               TrackedGameEvents;                                          // 0x0068   (0x0010)  
};

/// Struct /Script/DeadByDaylight.LegacySavedDailyRitualContainer
/// Size: 0x0018 (0x000000 - 0x000018)
struct FLegacySavedDailyRitualContainer
{ 
	FDateTime                                          LastRitualReceivedDate;                                     // 0x0000   (0x0008)  
	TArray<FLegacySavedDailyRitualInstance>            rituals;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.LegacySavedFearMarketItemInstance
/// Size: 0x0018 (0x000000 - 0x000018)
struct FLegacySavedFearMarketItemInstance
{ 
	FName                                              ItemId;                                                     // 0x0000   (0x000C)  
	int32_t                                            Cost;                                                       // 0x000C   (0x0004)  
	int32_t                                            BloodpointConversion;                                       // 0x0010   (0x0004)  
	bool                                               Purchased;                                                  // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0015   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.LegacySavedFearMarketOfferingInstance
/// Size: 0x0020 (0x000000 - 0x000020)
struct FLegacySavedFearMarketOfferingInstance
{ 
	TArray<FLegacySavedFearMarketItemInstance>         ObjectsForSale;                                             // 0x0000   (0x0010)  
	FDateTime                                          starttime;                                                  // 0x0010   (0x0008)  
	FDateTime                                          EndTime;                                                    // 0x0018   (0x0008)  
};

/// Struct /Script/DeadByDaylight.LegacySavedPlayerLoadoutData
/// Size: 0x0098 (0x000000 - 0x000098)
struct FLegacySavedPlayerLoadoutData
{ 
	FName                                              Item;                                                       // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<FName>                                      ItemAddOns;                                                 // 0x0010   (0x0010)  
	TArray<FName>                                      CamperPerks;                                                // 0x0020   (0x0010)  
	TArray<int32_t>                                    CamperPerkLevels;                                           // 0x0030   (0x0010)  
	FName                                              CamperFavor;                                                // 0x0040   (0x000C)  
	FName                                              Power;                                                      // 0x004C   (0x000C)  
	TArray<FName>                                      PowerAddOns;                                                // 0x0058   (0x0010)  
	TArray<FName>                                      SlasherPerks;                                               // 0x0068   (0x0010)  
	TArray<int32_t>                                    SlasherPerkLevels;                                          // 0x0078   (0x0010)  
	FName                                              SlasherFavor;                                               // 0x0088   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.LegacyPlayerSavedProfileDataLocal
/// Size: 0x0180 (0x000000 - 0x000180)
struct FLegacyPlayerSavedProfileDataLocal
{ 
	int32_t                                            Tokens;                                                     // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FName>                                      offerings;                                                  // 0x0008   (0x0010)  
	bool                                               FirstTimePlaying;                                           // 0x0018   (0x0001)  
	bool                                               HasBeenGivenKillerTutorialEndReward;                        // 0x0019   (0x0001)  
	bool                                               HasBeenGivenSurvivorTutorialEndReward;                      // 0x001A   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x001B   (0x0001)  MISSED
	int32_t                                            Wins;                                                       // 0x001C   (0x0004)  
	int32_t                                            Losses;                                                     // 0x0020   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	SDK_UNDEFINED(80,2754) /* TMap<int32_t, FLegacyCharacterSavedProfileData> */ __um(CharacterData);              // 0x0028   (0x0050)  
	uint64_t                                           CurrentSeasonTicks;                                         // 0x0078   (0x0008)  
	FLegacySavedDailyRitualContainer                   DailyRituals;                                               // 0x0080   (0x0018)  
	FLegacySavedFearMarketOfferingInstance             FearMarket;                                                 // 0x0098   (0x0020)  
	FLegacySavedPlayerLoadoutData                      LastConnectedLoadout;                                       // 0x00B8   (0x0098)  
	int32_t                                            LastConnectedCharacterIndex;                                // 0x0150   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0154   (0x0004)  MISSED
	FDateTime                                          DisconnectPenaltyTime;                                      // 0x0158   (0x0008)  
	int32_t                                            _bloodpoints;                                               // 0x0160   (0x0004)  
	int32_t                                            _bonusBloodpoints;                                          // 0x0164   (0x0004)  
	int32_t                                            _unclampedBloodpoints;                                      // 0x0168   (0x0004)  
	int32_t                                            _fearTokens;                                                // 0x016C   (0x0004)  
	FDateTime                                          _ongoingGameTime;                                           // 0x0170   (0x0008)  
	bool                                               _fearTokensMigrated;                                        // 0x0178   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x0179   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.LegacyPlayerSavedProfileData
/// Size: 0x01D0 (0x000010 - 0x0001E0)
struct FLegacyPlayerSavedProfileData : FSaveDataBase
{ 
	SDK_UNDEFINED(16,2755) /* FString */               __um(PlayerUID);                                            // 0x0010   (0x0010)  
	FLegacyPlayerSavedProfileDataShared                SharedData;                                                 // 0x0020   (0x0040)  
	FLegacyPlayerSavedProfileDataLocal                 LocalData;                                                  // 0x0060   (0x0180)  
};

/// Struct /Script/DeadByDaylight.LegacySavedBloodwebNodeProperties
/// Size: 0x0018 (0x000000 - 0x000018)
struct FLegacySavedBloodwebNodeProperties
{ 
	EBloodwebNodeContentType                           ContentType;                                                // 0x0000   (0x0001)  
	EItemRarity                                        Rarity;                                                     // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	SDK_UNDEFINED(16,2756) /* TArray<FString> */       __um(Tags);                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.LegacySavedBloodwebNodeGate
/// Size: 0x0020 (0x000000 - 0x000020)
struct FLegacySavedBloodwebNodeGate
{ 
	FName                                              Description;                                                // 0x0000   (0x000C)  
	EItemRarity                                        Rarity;                                                     // 0x000C   (0x0001)  
	EPlayerRole                                        Role;                                                       // 0x000D   (0x0001)  
	EBloodwebNodeGateTypes                             GateType;                                                   // 0x000E   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x000F   (0x0001)  MISSED
	SDK_UNDEFINED(16,2757) /* FString */               __um(Param);                                                // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.LegacySavedBloodwebChest
/// Size: 0x0030 (0x000000 - 0x000030)
struct FLegacySavedBloodwebChest
{ 
	FName                                              ID;                                                         // 0x0000   (0x000C)  
	FName                                              eventID;                                                    // 0x000C   (0x000C)  
	EItemRarity                                        Rarity;                                                     // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	TArray<float>                                      GivenItemRarity;                                            // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.LegacySavedBloodwebNode
/// Size: 0x0080 (0x000000 - 0x000080)
struct FLegacySavedBloodwebNode
{ 
	FLegacySavedBloodwebNodeProperties                 Properties;                                                 // 0x0000   (0x0018)  
	TArray<FLegacySavedBloodwebNodeGate>               Gates;                                                      // 0x0018   (0x0010)  
	EBloodwebNodeState                                 State;                                                      // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	SDK_UNDEFINED(16,2758) /* FString */               __um(NodeId);                                               // 0x0030   (0x0010)  
	FName                                              ContentId;                                                  // 0x0040   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	FLegacySavedBloodwebChest                          BloodwebChest;                                              // 0x0050   (0x0030)  
};

/// Struct /Script/DeadByDaylight.LegacySavedBloodWebRingPersistentData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FLegacySavedBloodWebRingPersistentData
{ 
	TArray<FLegacySavedBloodwebNode>                   NodeData;                                                   // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.LegacySavedBloodWebPersistentData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FLegacySavedBloodWebPersistentData
{ 
	int32_t                                            VersionNumber;                                              // 0x0000   (0x0004)  
	int32_t                                            Level;                                                      // 0x0004   (0x0004)  
	TArray<FLegacySavedBloodWebRingPersistentData>     RingData;                                                   // 0x0008   (0x0010)  
	TArray<FName>                                      Paths;                                                      // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,2759) /* FString */               __um(EntityCurrentNode);                                    // 0x0028   (0x0010)  
	FDateTime                                          GenerationDate;                                             // 0x0038   (0x0008)  
};

/// Struct /Script/DeadByDaylight.LegacyCharacterSavedInventoryData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FLegacyCharacterSavedInventoryData
{ 
	uint32_t                                           Version;                                                    // 0x0000   (0x0004)  
	FName                                              Name;                                                       // 0x0004   (0x000C)  
	int64_t                                            TimeObtainedSinceEpoch;                                     // 0x0010   (0x0008)  
};

/// Struct /Script/DeadByDaylight.LegacyCharacterSavedProfileData
/// Size: 0x0130 (0x000000 - 0x000130)
struct FLegacyCharacterSavedProfileData
{ 
	int32_t                                            VersionNumber;                                              // 0x0000   (0x0004)  
	int32_t                                            BloodPoints;                                                // 0x0004   (0x0004)  
	int32_t                                            BloodWebLevel;                                              // 0x0008   (0x0004)  
	int32_t                                            PrestigeLevel;                                              // 0x000C   (0x0004)  
	int32_t                                            TimesConfronted;                                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<FDateTime>                                  PrestigeDates;                                              // 0x0018   (0x0010)  
	FLegacySavedBloodWebPersistentData                 BloodWebData;                                               // 0x0028   (0x0040)  
	FLegacySavedPlayerLoadoutData                      CharacterLoadoutData;                                       // 0x0068   (0x0098)  
	TArray<FName>                                      Inventory;                                                  // 0x0100   (0x0010)  
	TArray<FLegacyCharacterSavedInventoryData>         InventoryData;                                              // 0x0110   (0x0010)  
	TArray<FName>                                      CurrentCustomization;                                       // 0x0120   (0x0010)  
};

/// Struct /Script/DeadByDaylight.OutlineOverrideConfig
/// Size: 0x0060 (0x000000 - 0x000060)
struct FOutlineOverrideConfig
{ 
	SDK_UNDEFINED(16,2760) /* TArray<TWeakObjectPtr<UMaterialInterface*>> */ __um(TranslucencyDefaultMaterialsOverride); // 0x0000   (0x0010)  
	SDK_UNDEFINED(80,2761) /* TMap<TWeakObjectPtr<UClass*>, FOutlineConfig> */ __um(OutlineOverride);              // 0x0010   (0x0050)  
};

/// Struct /Script/DeadByDaylight.OutlineConfig
/// Size: 0x0010 (0x000000 - 0x000010)
struct FOutlineConfig
{ 
	SDK_UNDEFINED(16,2762) /* TArray<TWeakObjectPtr<UMaterialInterface*>> */ __um(TranslucencyMaterials);          // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.OutlineColourConfiguration
/// Size: 0x0010 (0x000000 - 0x000010)
struct FOutlineColourConfiguration
{ 
	FLinearColor                                       ColourValue;                                                // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SessionInfos
/// Size: 0x0048 (0x000000 - 0x000048)
struct FSessionInfos
{ 
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0000   (0x0048)  MISSED
};

/// Struct /Script/DeadByDaylight.AnimData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FAnimData
{ 
	ECharacterStance                                   Stance;                                                     // 0x0000   (0x0001)  
};

/// Struct /Script/DeadByDaylight.PlayerFinishStats
/// Size: 0x0001 (0x000000 - 0x000001)
struct FPlayerFinishStats
{ 
	int8_t                                             NumberOfSurvivorsKilledOrSacrificed;                        // 0x0000   (0x0001)  
};

/// Struct /Script/DeadByDaylight.LookInputScalingData
/// Size: 0x0080 (0x000000 - 0x000080)
struct FLookInputScalingData
{ 
	unsigned char                                      UnknownData00_1[0x80];                                      // 0x0000   (0x0080)  MISSED
};

/// Struct /Script/DeadByDaylight.LookInputAxisScalingData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FLookInputAxisScalingData
{ 
	FDBDTimer                                          ScalingTimer;                                               // 0x0000   (0x0028)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Struct /Script/DeadByDaylight.PlayerFinishedPlayingData
/// Size: 0x0004 (0x000000 - 0x000004)
struct FPlayerFinishedPlayingData
{ 
	int32_t                                            HexTotemCount;                                              // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.ReleaseSavedData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FReleaseSavedData
{ 
	bool                                               NewChapterPopupSeen;                                        // 0x0000   (0x0001)  
};

/// Struct /Script/DeadByDaylight.SpecialEventSavedData
/// Size: 0x0002 (0x000000 - 0x000002)
struct FSpecialEventSavedData
{ 
	bool                                               EventEntryScreenOpened;                                     // 0x0000   (0x0001)  
	bool                                               EventSplashScreenSeen;                                      // 0x0001   (0x0001)  
};

/// Struct /Script/DeadByDaylight.LoadoutPresetsDataForGameType
/// Size: 0x0010 (0x000000 - 0x000010)
struct FLoadoutPresetsDataForGameType
{ 
	TArray<FCharacterLoadoutPresetsList>               CharacterLoadoutPresetsList;                                // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.PlayerDataSync
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FPlayerDataSync
{ 
	FPlayerStateData                                   PlayerData;                                                 // 0x0000   (0x0058)  
	FEquippedPlayerCustomization                       EquippedCustomization;                                      // 0x0058   (0x0038)  
	FName                                              EquipedItemId;                                              // 0x0090   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x009C   (0x0004)  MISSED
	TArray<FName>                                      EquipedItemAddonIds;                                        // 0x00A0   (0x0010)  
};

/// Struct /Script/DeadByDaylight.PlayerHUDInfos
/// Size: 0x0058 (0x000008 - 0x000060)
struct FPlayerHUDInfos : FDBDTableRowBase
{ 
	EPlayerRole                                        Role;                                                       // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	SDK_UNDEFINED(48,2763) /* TWeakObjectPtr<UClass*> */ __um(HUDClass);                                           // 0x0010   (0x0030)  
	FSoftObjectPath                                    TouchInterfaceName;                                         // 0x0040   (0x0020)  
};

/// Struct /Script/DeadByDaylight.RankResetStartingPips
/// Size: 0x0004 (0x000000 - 0x000004)
struct FRankResetStartingPips
{ 
	int32_t                                            NewPipAmount;                                               // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.RankGroupDefinition
/// Size: 0x0018 (0x000000 - 0x000018)
struct FRankGroupDefinition
{ 
	int32_t                                            RankThreshold;                                              // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<float>                                      PipThresholds;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.RankDefinition
/// Size: 0x0004 (0x000000 - 0x000004)
struct FRankDefinition
{ 
	int32_t                                            PipsRequired;                                               // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.KeyTupleBool
/// Size: 0x0010 (0x000000 - 0x000010)
struct FKeyTupleBool
{ 
	FName                                              Key;                                                        // 0x0000   (0x000C)  
	bool                                               value;                                                      // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.CharacterSavedInventoryDataV7
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCharacterSavedInventoryDataV7
{ 
	FName                                              ID;                                                         // 0x0000   (0x000C)  
	int32_t                                            Num;                                                        // 0x000C   (0x0004)  
	SDK_UNDEFINED(16,2764) /* FString */               __um(I);                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.AssignedPerkPropertiesV7
/// Size: 0x0014 (0x000000 - 0x000014)
struct FAssignedPerkPropertiesV7
{ 
	FName                                              perkId;                                                     // 0x0000   (0x000C)  
	int32_t                                            PerkLevel;                                                  // 0x000C   (0x0004)  
	bool                                               IsTeachable;                                                // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.SavedCharacterLevelDataV7
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSavedCharacterLevelDataV7
{ 
	int32_t                                            Level;                                                      // 0x0000   (0x0004)  
	bool                                               HasPerksBeenSelected;                                       // 0x0004   (0x0001)  
	bool                                               HasPerkSelectionBeenGenerated;                              // 0x0005   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0006   (0x0002)  MISSED
	TArray<FAssignedPerkPropertiesV7>                  PerkSelection;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SavedStatsDataV7
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSavedStatsDataV7
{ 
	FName                                              Name;                                                       // 0x0000   (0x000C)  
	float                                              value;                                                      // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.SavedCharmSlotData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSavedCharmSlotData
{ 
	int8_t                                             slotIndex;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              CharmId;                                                    // 0x0004   (0x000C)  
};

/// Struct /Script/DeadByDaylight.CharacterSavedProfileDataV7
/// Size: 0x0158 (0x000000 - 0x000158)
struct FCharacterSavedProfileDataV7
{ 
	int32_t                                            BloodWebLevel;                                              // 0x0000   (0x0004)  
	int32_t                                            PrestigeLevel;                                              // 0x0004   (0x0004)  
	int32_t                                            CharacterExperience;                                        // 0x0008   (0x0004)  
	int32_t                                            TimesConfronted;                                            // 0x000C   (0x0004)  
	SDK_UNDEFINED(16,2765) /* TArray<FString> */       __um(PrestigeDates);                                        // 0x0010   (0x0010)  
	FLegacySavedBloodWebPersistentData                 BloodWebData;                                               // 0x0020   (0x0040)  
	FLegacySavedPlayerLoadoutData                      CharacterLoadoutData;                                       // 0x0060   (0x0098)  
	TArray<FCharacterSavedInventoryDataV7>             Inventory;                                                  // 0x00F8   (0x0010)  
	TArray<FSavedCharacterLevelDataV7>                 CharacterProgression;                                       // 0x0108   (0x0010)  
	TArray<FSavedStatsDataV7>                          StatProgression;                                            // 0x0118   (0x0010)  
	TArray<FName>                                      CurrentCustomization;                                       // 0x0128   (0x0010)  
	TArray<FSavedCharmSlotData>                        CurrentCharmCustomization;                                  // 0x0138   (0x0010)  
	TArray<FName>                                      UniquePerksAdded;                                           // 0x0148   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterKeyTuple
/// Size: 0x0160 (0x000000 - 0x000160)
struct FCharacterKeyTuple
{ 
	int32_t                                            Key;                                                        // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	FCharacterSavedProfileDataV7                       Data;                                                       // 0x0008   (0x0158)  
};

/// Struct /Script/DeadByDaylight.SavedDailyRitualContainerV7
/// Size: 0x0040 (0x000000 - 0x000040)
struct FSavedDailyRitualContainerV7
{ 
	SDK_UNDEFINED(16,2766) /* FString */               __um(LastRitualReceivedDate);                               // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2767) /* FString */               __um(LastRitualPopupDate);                                  // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2768) /* FString */               __um(LastRitualDismissedDate);                              // 0x0020   (0x0010)  
	TArray<FLegacySavedDailyRitualInstance>            rituals;                                                    // 0x0030   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SavedFearMarketOfferingInstanceV7
/// Size: 0x0030 (0x000000 - 0x000030)
struct FSavedFearMarketOfferingInstanceV7
{ 
	TArray<FLegacySavedFearMarketItemInstance>         ObjectsForSale;                                             // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2769) /* FString */               __um(starttime);                                            // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2770) /* FString */               __um(EndTime);                                              // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SavedSpecialEventDataV7
/// Size: 0x0028 (0x000000 - 0x000028)
struct FSavedSpecialEventDataV7
{ 
	FName                                              eventID;                                                    // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<int32_t>                                    SeenCinematics;                                             // 0x0010   (0x0010)  
	bool                                               EventEntryScreenOpened;                                     // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.SaveDataV7
/// Size: 0x03E0 (0x000010 - 0x0003F0)
struct FSaveDataV7 : FSaveDataBase
{ 
	SDK_UNDEFINED(16,2771) /* FString */               __um(PlayerUID);                                            // 0x0010   (0x0010)  
	int32_t                                            SelectedCamperIndex;                                        // 0x0020   (0x0004)  
	int32_t                                            SelectedSlasherIndex;                                       // 0x0024   (0x0004)  
	TArray<FName>                                      offerings;                                                  // 0x0028   (0x0010)  
	bool                                               FirstTimePlaying;                                           // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	int32_t                                            ConsecutiveMatchStreak;                                     // 0x003C   (0x0004)  
	bool                                               HasBeenGivenKillerTutorialEndReward;                        // 0x0040   (0x0001)  
	bool                                               HasBeenGivenSurvivorTutorialEndReward;                      // 0x0041   (0x0001)  
	bool                                               HasSeenBloodpointsOnboardingCurrencyPopup;                  // 0x0042   (0x0001)  
	bool                                               HasSeenAuricCellsOnboardingCurrencyPopup;                   // 0x0043   (0x0001)  
	bool                                               HasSeenIridescentShardsOnboardingCurrencyPopup;             // 0x0044   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0045   (0x0003)  MISSED
	uint64_t                                           CurrentSeasonTicks;                                         // 0x0048   (0x0008)  
	int32_t                                            LastConnectedCharacterIndex;                                // 0x0050   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	SDK_UNDEFINED(16,2772) /* FString */               __um(DisconnectPenaltyTime);                                // 0x0058   (0x0010)  
	SDK_UNDEFINED(16,2773) /* FString */               __um(LastMatchEndTime);                                     // 0x0068   (0x0010)  
	SDK_UNDEFINED(16,2774) /* FString */               __um(LastMatchStartTime);                                   // 0x0078   (0x0010)  
	SDK_UNDEFINED(16,2775) /* FString */               __um(LastKillerMatchEndTime);                               // 0x0088   (0x0010)  
	SDK_UNDEFINED(16,2776) /* FString */               __um(LastSurvivorMatchEndTime);                             // 0x0098   (0x0010)  
	int32_t                                            Experience;                                                 // 0x00A8   (0x0004)  
	int32_t                                            BonusExperience;                                            // 0x00AC   (0x0004)  
	int32_t                                            FearTokens;                                                 // 0x00B0   (0x0004)  
	bool                                               FearTokensMigrated;                                         // 0x00B4   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x00B5   (0x0003)  MISSED
	SDK_UNDEFINED(16,2777) /* FString */               __um(OngoingGameTime);                                      // 0x00B8   (0x0010)  
	int32_t                                            CumulativeMatches;                                          // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	TArray<FKeyTupleBool>                              PageVisited;                                                // 0x00D0   (0x0010)  
	TArray<FKeyTupleBool>                              ChatVisible;                                                // 0x00E0   (0x0010)  
	int32_t                                            CumulativeMatchesAsSurvivor;                                // 0x00F0   (0x0004)  
	int32_t                                            CumulativeMatchesAsKiller;                                  // 0x00F4   (0x0004)  
	int32_t                                            CumulativeMatchesAsSurvivorNoFriends;                       // 0x00F8   (0x0004)  
	int32_t                                            CumulativeMatchesAsKillerNoFriends;                         // 0x00FC   (0x0004)  
	FDateTime                                          LastMatchTimestamp;                                         // 0x0100   (0x0008)  
	FDateTime                                          LastSessionTimestamp;                                       // 0x0108   (0x0008)  
	int32_t                                            CumulativeSessions;                                         // 0x0110   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x0114   (0x0004)  MISSED
	SDK_UNDEFINED(16,2778) /* FString */               __um(CumulativePlaytime);                                   // 0x0118   (0x0010)  
	TArray<FCharacterKeyTuple>                         CharacterData;                                              // 0x0128   (0x0010)  
	TArray<FName>                                      OwnedCharms;                                                // 0x0138   (0x0010)  
	FSavedDailyRitualContainerV7                       DailyRituals;                                               // 0x0148   (0x0040)  
	FSavedFearMarketOfferingInstanceV7                 FearMarket;                                                 // 0x0188   (0x0030)  
	FLegacySavedPlayerLoadoutData                      LastLoadout;                                                // 0x01B8   (0x0098)  
	FConsoleUserSettings                               ConsoleUserSettings;                                        // 0x0250   (0x00D8)  
	TArray<FSavedStatsDataV7>                          PlayerStatProgression;                                      // 0x0328   (0x0010)  
	SDK_UNDEFINED(16,2779) /* TArray<FString> */       __um(OwnedContent);                                         // 0x0338   (0x0010)  
	TArray<FSavedSpecialEventDataV7>                   SpecialEvent;                                               // 0x0348   (0x0010)  
	FLegacySavedBloodWebPersistentData                 BloodStoreKillers;                                          // 0x0358   (0x0040)  
	FLegacySavedBloodWebPersistentData                 BloodStoreSurvivors;                                        // 0x0398   (0x0040)  
	TArray<FKeyTupleBool>                              OnboardingCompleted;                                        // 0x03D8   (0x0010)  
	bool                                               IsCrossplayAllowed;                                         // 0x03E8   (0x0001)  
	bool                                               AutoDeclineFriendInvites;                                   // 0x03E9   (0x0001)  
	unsigned char                                      UnknownData06_6[0x6];                                       // 0x03EA   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.SavedSpecialEventDataV8
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSavedSpecialEventDataV8
{ 
	FName                                              eventID;                                                    // 0x0000   (0x000C)  
	bool                                               EventEntryScreenOpened;                                     // 0x000C   (0x0001)  
	bool                                               EventSplashScreenSeen;                                      // 0x000D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x000E   (0x0002)  MISSED
};

/// Struct /Script/DeadByDaylight.SavedReleaseDataV8
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSavedReleaseDataV8
{ 
	SDK_UNDEFINED(16,2780) /* FString */               __um(Version);                                              // 0x0000   (0x0010)  
	bool                                               NewChapterPopupSeen;                                        // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.SaveDataV8
/// Size: 0x0590 (0x000010 - 0x0005A0)
struct FSaveDataV8 : FSaveDataBase
{ 
	SDK_UNDEFINED(16,2781) /* FString */               __um(PlayerUID);                                            // 0x0010   (0x0010)  
	int32_t                                            SelectedCamperIndex;                                        // 0x0020   (0x0004)  
	int32_t                                            SelectedSlasherIndex;                                       // 0x0024   (0x0004)  
	TArray<FName>                                      offerings;                                                  // 0x0028   (0x0010)  
	bool                                               FirstTimePlaying;                                           // 0x0038   (0x0001)  
	bool                                               HasSeenLightSensitivity;                                    // 0x0039   (0x0001)  
	bool                                               HasSeenMainMenu;                                            // 0x003A   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x003B   (0x0001)  MISSED
	int32_t                                            ConsecutiveMatchStreak;                                     // 0x003C   (0x0004)  
	bool                                               HasBeenGivenKillerTutorialEndReward;                        // 0x0040   (0x0001)  
	bool                                               HasBeenGivenSurvivorTutorialEndReward;                      // 0x0041   (0x0001)  
	bool                                               HasSeenBloodpointsOnboardingCurrencyPopup;                  // 0x0042   (0x0001)  
	bool                                               HasSeenAuricCellsOnboardingCurrencyPopup;                   // 0x0043   (0x0001)  
	bool                                               HasSeenIridescentShardsOnboardingCurrencyPopup;             // 0x0044   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0045   (0x0003)  MISSED
	uint64_t                                           CurrentSeasonTicks;                                         // 0x0048   (0x0008)  
	int32_t                                            LastConnectedCharacterIndex;                                // 0x0050   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	SDK_UNDEFINED(16,2782) /* FString */               __um(DisconnectPenaltyTime);                                // 0x0058   (0x0010)  
	SDK_UNDEFINED(16,2783) /* FString */               __um(LastMatchEndTime);                                     // 0x0068   (0x0010)  
	SDK_UNDEFINED(16,2784) /* FString */               __um(LastMatchStartTime);                                   // 0x0078   (0x0010)  
	SDK_UNDEFINED(16,2785) /* FString */               __um(LastKillerMatchEndTime);                               // 0x0088   (0x0010)  
	SDK_UNDEFINED(16,2786) /* FString */               __um(LastSurvivorMatchEndTime);                             // 0x0098   (0x0010)  
	int32_t                                            CumulativeMatches;                                          // 0x00A8   (0x0004)  
	int32_t                                            CumulativeMatchesLeft;                                      // 0x00AC   (0x0004)  
	TArray<FKeyTupleBool>                              PageVisited;                                                // 0x00B0   (0x0010)  
	TArray<FKeyTupleBool>                              ChatVisible;                                                // 0x00C0   (0x0010)  
	int32_t                                            CumulativeMatchesAsSurvivor;                                // 0x00D0   (0x0004)  
	int32_t                                            CumulativeMatchesLeftAsSurvivor;                            // 0x00D4   (0x0004)  
	int32_t                                            CumulativeMatchesAsKiller;                                  // 0x00D8   (0x0004)  
	int32_t                                            CumulativeMatchesLeftAsKiller;                              // 0x00DC   (0x0004)  
	int32_t                                            CumulativeMatchesAsSurvivorNoFriends;                       // 0x00E0   (0x0004)  
	int32_t                                            CumulativeMatchesAsKillerNoFriends;                         // 0x00E4   (0x0004)  
	FDateTime                                          LastMatchTimestamp;                                         // 0x00E8   (0x0008)  
	FDateTime                                          LastSessionTimestamp;                                       // 0x00F0   (0x0008)  
	int32_t                                            CumulativeSessions;                                         // 0x00F8   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x00FC   (0x0004)  MISSED
	SDK_UNDEFINED(16,2787) /* FString */               __um(CumulativePlaytime);                                   // 0x0100   (0x0010)  
	TArray<FCharacterKeyTuple>                         CharacterData;                                              // 0x0110   (0x0010)  
	TArray<FName>                                      OwnedCharms;                                                // 0x0120   (0x0010)  
	FSavedDailyRitualContainerV7                       DailyRituals;                                               // 0x0130   (0x0040)  
	FSavedFearMarketOfferingInstanceV7                 FearMarket;                                                 // 0x0170   (0x0030)  
	FLegacySavedPlayerLoadoutData                      LastLoadout;                                                // 0x01A0   (0x0098)  
	FConsoleUserSettings                               ConsoleUserSettings;                                        // 0x0238   (0x00D8)  
	TArray<FSavedStatsDataV7>                          PlayerStatProgression;                                      // 0x0310   (0x0010)  
	SDK_UNDEFINED(16,2788) /* TArray<FString> */       __um(OwnedContent);                                         // 0x0320   (0x0010)  
	TArray<FSavedSpecialEventDataV8>                   SpecialEvent;                                               // 0x0330   (0x0010)  
	TArray<FSavedReleaseDataV8>                        Releases;                                                   // 0x0340   (0x0010)  
	SDK_UNDEFINED(80,2789) /* TSet<FName> */           __um(SeenCinematics);                                       // 0x0350   (0x0050)  
	SDK_UNDEFINED(80,2790) /* TSet<FName> */           __um(SeenFeatures);                                         // 0x03A0   (0x0050)  
	FLegacySavedBloodWebPersistentData                 BloodStoreKillers;                                          // 0x03F0   (0x0040)  
	FLegacySavedBloodWebPersistentData                 BloodStoreSurvivors;                                        // 0x0430   (0x0040)  
	TArray<FKeyTupleBool>                              OnboardingCompleted;                                        // 0x0470   (0x0010)  
	FDailyRitualSaveData                               DailyRitualSaveData;                                        // 0x0480   (0x0008)  
	FUIViewFlagSaveData                                UIViewFlags;                                                // 0x0488   (0x00F0)  
	bool                                               IsCrossplayAllowed;                                         // 0x0578   (0x0001)  
	bool                                               AutoDeclineFriendInvites;                                   // 0x0579   (0x0001)  
	bool                                               HasBeginnerTooltipsBeenDisabledAtLevel;                     // 0x057A   (0x0001)  
	bool                                               ShowPortraitBorder;                                         // 0x057B   (0x0001)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x057C   (0x0004)  MISSED
	TArray<FCharacterCustomizationPresetsList>         CharacterCustomizationPresets;                              // 0x0580   (0x0010)  
	TArray<FCharacterLoadoutPresetsList>               CharacterLoadoutPresets;                                    // 0x0590   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SaveValidationData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FSaveValidationData
{ 
	SDK_UNDEFINED(16,2791) /* FString */               __um(PlayerUID);                                            // 0x0000   (0x0010)  
	TArray<int32_t>                                    CharacterData;                                              // 0x0010   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0020   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.ScoreValue
/// Size: 0x0040 (0x000008 - 0x000048)
struct FScoreValue : FDBDTableRowBase
{ 
	FName                                              ID;                                                         // 0x0008   (0x000C)  
	EDBDScoreCategory                                  category;                                                   // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	int32_t                                            BloodpointValue;                                            // 0x0018   (0x0004)  
	int32_t                                            MaxBloodpointValue;                                         // 0x001C   (0x0004)  
	class UCurveFloat*                                 BloodpointDepreciationCurve;                                // 0x0020   (0x0008)  
	float                                              OngoingWaitTime;                                            // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	SDK_UNDEFINED(24,2792) /* FText */                 __um(DisplayName);                                          // 0x0030   (0x0018)  
};

/// Struct /Script/DeadByDaylight.ScoreCategoryData
/// Size: 0x0010 (0x000008 - 0x000018)
struct FScoreCategoryData : FDBDTableRowBase
{ 
	EDBDScoreCategory                                  category;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            ScoreCap;                                                   // 0x000C   (0x0004)  
	int32_t                                            ProgressionCap;                                             // 0x0010   (0x0004)  
	int32_t                                            AchievementCap;                                             // 0x0014   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PlayerstateDataCache
/// Size: 0x0058 (0x000000 - 0x000058)
struct FPlayerstateDataCache
{ 
	SDK_UNDEFINED(80,2793) /* TMap<FName, FAwardedScores> */ __um(awardedScoresByType);                            // 0x0000   (0x0050)  
	bool                                               IsDataCacheValid;                                           // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.AwardedScore
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAwardedScore
{ 
	FName                                              ScoreTypeId;                                                // 0x0000   (0x000C)  
	float                                              BloodpointsAwarded;                                         // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.AwardedScores
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAwardedScores
{ 
	TArray<FAwardedScore>                              Array;                                                      // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SurfaceTypeName
/// Size: 0x0010 (0x000008 - 0x000018)
struct FSurfaceTypeName : FDBDTableRowBase
{ 
	FName                                              Name;                                                       // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.Toast
/// Size: 0x00A8 (0x000008 - 0x0000B0)
struct FToast : FDBDTableRowBase
{ 
	float                                              DisplayDuration;                                            // 0x0008   (0x0004)  
	float                                              Lifetime;                                                   // 0x000C   (0x0004)  
	SDK_UNDEFINED(24,2794) /* FText */                 __um(ToastText);                                            // 0x0010   (0x0018)  
	SDK_UNDEFINED(80,2795) /* TMap<EToastInputType, FToastButton> */ __um(ButtonsData);                            // 0x0028   (0x0050)  
	float                                              DelayBeforeInteraction;                                     // 0x0078   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x007C   (0x0004)  MISSED
	SDK_UNDEFINED(48,2796) /* TWeakObjectPtr<UTexture2D*> */ __um(ToastIcon);                                      // 0x0080   (0x0030)  
};

/// Struct /Script/DeadByDaylight.ToastButton
/// Size: 0x0020 (0x000000 - 0x000020)
struct FToastButton
{ 
	SDK_UNDEFINED(24,2797) /* FText */                 __um(ButtonText);                                           // 0x0000   (0x0018)  
	bool                                               IsRegression;                                               // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.DDosGameConfigDS
/// Size: 0x0002 (0x000000 - 0x000002)
struct FDDosGameConfigDS
{ 
	bool                                               DDoSDetection;                                              // 0x0000   (0x0001)  
	bool                                               DDoSDetectionAnalytics;                                     // 0x0001   (0x0001)  
};

/// Struct /Script/DeadByDaylight.DedicatedServerGameConfig
/// Size: 0x0004 (0x000000 - 0x000004)
struct FDedicatedServerGameConfig
{ 
	int32_t                                            LatencyRetryCooldownSeconds;                                // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.DedicatedSessionSearchCompletedEventData
/// Size: 0x0068 (0x000000 - 0x000068)
struct FDedicatedSessionSearchCompletedEventData
{ 
	SDK_UNDEFINED(16,2798) /* FString */               __um(GameLiftSessionId);                                    // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2799) /* FString */               __um(MatchID);                                              // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2800) /* FString */               __um(FleetId);                                              // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2801) /* FString */               __um(IpAddress);                                            // 0x0030   (0x0010)  
	int32_t                                            Port;                                                       // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	SDK_UNDEFINED(16,2802) /* FString */               __um(DnsName);                                              // 0x0048   (0x0010)  
	SDK_UNDEFINED(16,2803) /* FString */               __um(Region);                                               // 0x0058   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ResolutionQualityPair
/// Size: 0x0018 (0x000008 - 0x000020)
struct FResolutionQualityPair : FDBDTableRowBase
{ 
	int32_t                                            ResX;                                                       // 0x0008   (0x0004)  
	int32_t                                            ResY;                                                       // 0x000C   (0x0004)  
	int32_t                                            Quality;                                                    // 0x0010   (0x0004)  
	bool                                               AutoAdjust;                                                 // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	int32_t                                            ScreenScaleForWindowedMode;                                 // 0x0018   (0x0004)  
	int32_t                                            ScreenResolution;                                           // 0x001C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PCDeviceProfiles
/// Size: 0x0028 (0x000008 - 0x000030)
struct FPCDeviceProfiles : FDBDTableRowBase
{ 
	FName                                              Cpu;                                                        // 0x0008   (0x000C)  
	FName                                              GPU;                                                        // 0x0014   (0x000C)  
	TArray<FResolutionQualityPair>                     Pairs;                                                      // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.DialogPlannedPlayback
/// Size: 0x0020 (0x000000 - 0x000020)
struct FDialogPlannedPlayback
{ 
	TArray<FAkEventWithSubtitle>                       PlannedClip;                                                // 0x0000   (0x0010)  
	FGameplayTag                                       GameEventTrigger;                                           // 0x0010   (0x000C)  
	bool                                               IsDeletingAfterTrigger;                                     // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x001D   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.DisplayStandControllerData
/// Size: 0x00A8 (0x000000 - 0x0000A8)
struct FDisplayStandControllerData
{ 
	unsigned char                                      UnknownData00_1[0xA8];                                      // 0x0000   (0x00A8)  MISSED
};

/// Struct /Script/DeadByDaylight.DisplayStandMeatHookOverride
/// Size: 0x0068 (0x000008 - 0x000070)
struct FDisplayStandMeatHookOverride : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,2804) /* FString */               __um(OverrideId);                                           // 0x0008   (0x0010)  
	EDisplayStandMeatHookOverrideType                  OverrideType;                                               // 0x0018   (0x0004)  
	int32_t                                            CharacterIndex;                                             // 0x001C   (0x0004)  
	FName                                              EventName;                                                  // 0x0020   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	SDK_UNDEFINED(48,2805) /* TWeakObjectPtr<UClass*> */ __um(HookToUse);                                          // 0x0030   (0x0030)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0060   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.DownloadProgression
/// Size: 0x0030 (0x000000 - 0x000030)
struct FDownloadProgression
{ 
	float                                              DownloadSize;                                               // 0x0000   (0x0004)  
	float                                              TotalDownloadedSize;                                        // 0x0004   (0x0004)  
	float                                              DownloadSpeed;                                              // 0x0008   (0x0004)  
	float                                              InstallProgress;                                            // 0x000C   (0x0004)  
	bool                                               IsDownloading;                                              // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	SDK_UNDEFINED(24,2806) /* FText */                 __um(DownloadStatus);                                       // 0x0018   (0x0018)  
};

/// Struct /Script/DeadByDaylight.SpawnConditions
/// Size: 0x0004 (0x000000 - 0x000004)
struct FSpawnConditions
{ 
	float                                              MinProximity;                                               // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.ElementSpawnConditionsData
/// Size: 0x00B8 (0x000008 - 0x0000C0)
struct FElementSpawnConditionsData : FDBDTableRowBase
{ 
	FName                                              Name;                                                       // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(80,2807) /* TMap<ETileSpawnPointType, FSpawnConditions> */ __um(DependencyElementConditions);    // 0x0018   (0x0050)  
	SDK_UNDEFINED(80,2808) /* TMap<EGameplayElementType, FSpawnConditions> */ __um(GameplayElementConditions);     // 0x0068   (0x0050)  
	FSpawnConditions                                   OtherSelvesConditions;                                      // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.EmblemTooltipData
/// Size: 0x0070 (0x000098 - 0x000108)
struct FEmblemTooltipData : FBaseTooltipData
{ 
	FEmblemSlotData                                    EmblemSlotData;                                             // 0x0098   (0x0070)  
};

/// Struct /Script/DeadByDaylight.EventSpawnablePositionData
/// Size: 0x0018 (0x000008 - 0x000020)
struct FEventSpawnablePositionData : FDBDTableRowBase
{ 
	FName                                              Name;                                                       // 0x0008   (0x000C)  
	FVector                                            BoundOffsetMultiplier;                                      // 0x0014   (0x000C)  
};

/// Struct /Script/DeadByDaylight.EventSpawnableShapePresetData
/// Size: 0x0028 (0x000008 - 0x000030)
struct FEventSpawnableShapePresetData : FDBDTableRowBase
{ 
	FName                                              Name;                                                       // 0x0008   (0x000C)  
	FVector                                            MinBound;                                                   // 0x0014   (0x000C)  
	FVector                                            MaxBound;                                                   // 0x0020   (0x000C)  
	int32_t                                            SpawnPriorityTier;                                          // 0x002C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.EventSpawnableSizeData
/// Size: 0x0018 (0x000008 - 0x000020)
struct FEventSpawnableSizeData : FDBDTableRowBase
{ 
	FName                                              SizeType;                                                   // 0x0008   (0x000C)  
	float                                              MinVolume;                                                  // 0x0014   (0x0004)  
	float                                              MaxVolume;                                                  // 0x0018   (0x0004)  
	float                                              Budget;                                                     // 0x001C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.ExperimentData
/// Size: 0x0010 (0x000008 - 0x000018)
struct FExperimentData : FDBDTableRowBase
{ 
	TArray<FName>                                      AdditionalIds;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.PathPosition
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPathPosition
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/DeadByDaylight.ExternalEffectData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FExternalEffectData
{ 
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Struct /Script/DeadByDaylight.MaterialMapForFade
/// Size: 0x00E0 (0x000008 - 0x0000E8)
struct FMaterialMapForFade : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,2809) /* FString */               __um(OriginalMaterialPath);                                 // 0x0008   (0x0010)  
	SDK_UNDEFINED(48,2810) /* TWeakObjectPtr<UMaterialInterface*> */ __um(GeneratedMaterial);                      // 0x0018   (0x0030)  
	SDK_UNDEFINED(80,2811) /* TMap<FGuid, bool> */     __um(StaticSwitches);                                       // 0x0048   (0x0050)  
	SDK_UNDEFINED(80,2812) /* TMap<FGuid, FName> */    __um(StaticSwitchesName);                                   // 0x0098   (0x0050)  
};

/// Struct /Script/DeadByDaylight.FakePalletData
/// Size: 0x00D0 (0x000008 - 0x0000D8)
struct FFakePalletData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(48,2813) /* TWeakObjectPtr<UClass*> */ __um(LevelPalletBP);                                      // 0x0008   (0x0030)  
	SDK_UNDEFINED(48,2814) /* TWeakObjectPtr<UClass*> */ __um(DreamPalletBP);                                      // 0x0038   (0x0030)  
	SDK_UNDEFINED(48,2815) /* TWeakObjectPtr<UClass*> */ __um(PalletTrackerBP);                                    // 0x0068   (0x0030)  
	SDK_UNDEFINED(48,2816) /* TWeakObjectPtr<UStaticMesh*> */ __um(IllusionaryPalletStaticMesh);                   // 0x0098   (0x0030)  
	FName                                              ID;                                                         // 0x00C8   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.FeatureLocksConditionData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FFeatureLocksConditionData
{ 
	SDK_UNDEFINED(16,2817) /* FString */               __um(Left);                                                 // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2818) /* FString */               __um(Operator);                                             // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2819) /* FString */               __um(Right);                                                // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.FeatureLocksContentData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FFeatureLocksContentData
{ 
	SDK_UNDEFINED(16,2820) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2821) /* FString */               __um(Role);                                                 // 0x0010   (0x0010)  
	bool                                               Role_IsSet;                                                 // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	TArray<FFeatureLocksConditionData>                 Condition;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/DeadByDaylight.FeatureLocksContent
/// Size: 0x0010 (0x000000 - 0x000010)
struct FFeatureLocksContent
{ 
	TArray<FFeatureLocksContentData>                   FeatureLocks;                                               // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.FilterLoadoutData
/// Size: 0x0070 (0x000008 - 0x000078)
struct FFilterLoadoutData : FDBDTableRowBase
{ 
	FName                                              ID;                                                         // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(48,2822) /* TWeakObjectPtr<UTexture2D*> */ __um(Icon);                                           // 0x0018   (0x0030)  
	SDK_UNDEFINED(24,2823) /* FText */                 __um(Title);                                                // 0x0048   (0x0018)  
	TArray<EPlayerRole>                                Role;                                                       // 0x0060   (0x0010)  
	ELoadoutType                                       LoadoutType;                                                // 0x0070   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0071   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.FreeToPlayData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FFreeToPlayData
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
	SDK_UNDEFINED(16,2824) /* FString */               __um(Start);                                                // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2825) /* FString */               __um(End);                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.FreeToPlayEventData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FFreeToPlayEventData
{ 
	FFreeToPlayData                                    Event;                                                      // 0x0000   (0x0030)  
};

/// Struct /Script/DeadByDaylight.Tile2Data
/// Size: 0x0068 (0x000008 - 0x000070)
struct FTile2Data : FTableRowBase
{ 
	SDK_UNDEFINED(16,2826) /* FString */               __um(TileName);                                             // 0x0008   (0x0010)  
	int32_t                                            MinimumSpacing;                                             // 0x0018   (0x0004)  
	int32_t                                            MaximumSpacing;                                             // 0x001C   (0x0004)  
	bool                                               DiagonalSpacing;                                            // 0x0020   (0x0001)  
	bool                                               TypeSpacing;                                                // 0x0021   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0022   (0x0002)  MISSED
	int32_t                                            MaximumCount;                                               // 0x0024   (0x0004)  
	FIntPoint                                          Dimension;                                                  // 0x0028   (0x0008)  
	TArray<EscapeStrategyType>                         AvailableEscapeTypes;                                       // 0x0030   (0x0010)  
	ETileType                                          Type;                                                       // 0x0040   (0x0001)  
	ETileClassType                                     TileClassType;                                              // 0x0041   (0x0001)  
	EDensity                                           Density;                                                    // 0x0042   (0x0001)  
	EPathType                                          Path;                                                       // 0x0043   (0x0001)  
	int32_t                                            Number;                                                     // 0x0044   (0x0004)  
	bool                                               PlaceHolder;                                                // 0x0048   (0x0001)  
	bool                                               Replacement;                                                // 0x0049   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x004A   (0x0002)  MISSED
	int32_t                                            SpawnPriorityTier;                                          // 0x004C   (0x0004)  
	float                                              Weight;                                                     // 0x0050   (0x0004)  
	FVector2D                                          Coord;                                                      // 0x0054   (0x0008)  
	EQuadrantSpawnType                                 QuadrantSpawnType;                                          // 0x005C   (0x0001)  
	EBasementType                                      BasementType;                                               // 0x005D   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x005E   (0x0002)  MISSED
	TArray<EGameplayElementType>                       AvailableGameplayElementTypes;                              // 0x0060   (0x0010)  
};

/// Struct /Script/DeadByDaylight.GameEventDispatcherHandleBP
/// Size: 0x0020 (0x000000 - 0x000020)
struct FGameEventDispatcherHandleBP
{ 
	FGameplayTag                                       Filter;                                                     // 0x0000   (0x000C)  
	SDK_UNDEFINED(20,2827) /* FDelegateProperty */     __um(GameEventDelegate);                                    // 0x000C   (0x0014)  
};

/// Struct /Script/DeadByDaylight.GameNotificationData
/// Size: 0x0020 (0x000008 - 0x000028)
struct FGameNotificationData : FDBDTableRowBase
{ 
	EPromptType                                        PromptType;                                                 // 0x0008   (0x0001)  
	EPromptPriority                                    Priority;                                                   // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x000A   (0x0006)  MISSED
	SDK_UNDEFINED(24,2828) /* FText */                 __um(Content);                                              // 0x0010   (0x0018)  
};

/// Struct /Script/DeadByDaylight.NotificationHistoryElement
/// Size: 0x0018 (0x000000 - 0x000018)
struct FNotificationHistoryElement
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/DeadByDaylight.GameplayNotificationData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FGameplayNotificationData
{ 
	FName                                              SourceID;                                                   // 0x0000   (0x000C)  
	EInventoryItemType                                 SourceType;                                                 // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	int32_t                                            SourceIconIndex;                                            // 0x0010   (0x0004)  
	int32_t                                            SourceLevel;                                                // 0x0014   (0x0004)  
	FName                                              EffectId;                                                   // 0x0018   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	SDK_UNDEFINED(16,2829) /* FString */               __um(EffectIconFilePath);                                   // 0x0028   (0x0010)  
	EStatusEffectType                                  EffectType;                                                 // 0x0038   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	SDK_UNDEFINED(24,2830) /* FText */                 __um(EffectDisplayName);                                    // 0x0040   (0x0018)  
};

/// Struct /Script/DeadByDaylight.GarantiedRarityRingDistributionValues
/// Size: 0x0090 (0x000008 - 0x000098)
struct FGarantiedRarityRingDistributionValues : FDBDTableRowBase
{ 
	int32_t                                            InnerRingCommonItemProbability;                             // 0x0008   (0x0004)  
	int32_t                                            MiddleRingCommonItemProbability;                            // 0x000C   (0x0004)  
	int32_t                                            OuterRingCommonItemProbability;                             // 0x0010   (0x0004)  
	int32_t                                            InnerRingUncommonItemProbability;                           // 0x0014   (0x0004)  
	int32_t                                            MiddleRingUncommonItemProbability;                          // 0x0018   (0x0004)  
	int32_t                                            OuterRingUncommonItemProbability;                           // 0x001C   (0x0004)  
	int32_t                                            InnerRingRareItemProbability;                               // 0x0020   (0x0004)  
	int32_t                                            MiddleRingRareItemProbability;                              // 0x0024   (0x0004)  
	int32_t                                            OuterRingRareItemProbability;                               // 0x0028   (0x0004)  
	int32_t                                            InnerRingVeryRareItemProbability;                           // 0x002C   (0x0004)  
	int32_t                                            MiddleRingVeryRareItemProbability;                          // 0x0030   (0x0004)  
	int32_t                                            OuterRingVeryRareItemProbability;                           // 0x0034   (0x0004)  
	int32_t                                            InnerRingUltraRareItemProbability;                          // 0x0038   (0x0004)  
	int32_t                                            MiddleRingUltraRareItemProbability;                         // 0x003C   (0x0004)  
	int32_t                                            OuterRingUltraRareItemProbability;                          // 0x0040   (0x0004)  
	int32_t                                            InnerRingArtifactItemProbability;                           // 0x0044   (0x0004)  
	int32_t                                            MiddleRingArtifactItemProbability;                          // 0x0048   (0x0004)  
	int32_t                                            OuterRingArtifactItemProbability;                           // 0x004C   (0x0004)  
	int32_t                                            InnerRingSpectralItemProbability;                           // 0x0050   (0x0004)  
	int32_t                                            MiddleRingSpectralItemProbability;                          // 0x0054   (0x0004)  
	int32_t                                            OuterRingSpectralItemProbability;                           // 0x0058   (0x0004)  
	int32_t                                            InnerRingSpecialEventItemProbability;                       // 0x005C   (0x0004)  
	int32_t                                            MiddleRingSpecialEventItemProbability;                      // 0x0060   (0x0004)  
	int32_t                                            OuterRingSpecialEventItemProbability;                       // 0x0064   (0x0004)  
	int32_t                                            InnerRingLegendaryItemProbability;                          // 0x0068   (0x0004)  
	int32_t                                            MiddleRingLegendaryItemProbability;                         // 0x006C   (0x0004)  
	int32_t                                            OuterRingLegendaryItemProbability;                          // 0x0070   (0x0004)  
	int32_t                                            InnerRingEpicItemProbability;                               // 0x0074   (0x0004)  
	int32_t                                            MiddleRingEpicItemProbability;                              // 0x0078   (0x0004)  
	int32_t                                            OuterRingEpicItemProbability;                               // 0x007C   (0x0004)  
	int32_t                                            InnerRingSuperEpicItemProbability;                          // 0x0080   (0x0004)  
	int32_t                                            MiddleRingSuperEpicItemProbability;                         // 0x0084   (0x0004)  
	int32_t                                            OuterRingSuperEpicItemProbability;                          // 0x0088   (0x0004)  
	int32_t                                            InnerRingUltraEpicItemProbability;                          // 0x008C   (0x0004)  
	int32_t                                            MiddleRingUltraEpicItemProbability;                         // 0x0090   (0x0004)  
	int32_t                                            OuterRingUltraEpicItemProbability;                          // 0x0094   (0x0004)  
};

/// Struct /Script/DeadByDaylight.HangTimesPerStep
/// Size: 0x0030 (0x000000 - 0x000030)
struct FHangTimesPerStep
{ 
	SDK_UNDEFINED(16,2831) /* FString */               __um(SourceName);                                           // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2832) /* FString */               __um(StepName);                                             // 0x0010   (0x0010)  
	float                                              PossibleHangTime;                                           // 0x0020   (0x0004)  
	float                                              HardCapTimeout;                                             // 0x0024   (0x0004)  
	float                                              TimeCapWithoutProgress;                                     // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.HintData
/// Size: 0x0058 (0x000008 - 0x000060)
struct FHintData : FDBDTableRowBase
{ 
	EHintCategory                                      category;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	SDK_UNDEFINED(24,2833) /* FText */                 __um(Title);                                                // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,2834) /* FText */                 __um(Description);                                          // 0x0028   (0x0018)  
	SDK_UNDEFINED(16,2835) /* FString */               __um(IconPath);                                             // 0x0040   (0x0010)  
	int32_t                                            levelMin;                                                   // 0x0050   (0x0004)  
	int32_t                                            levelMax;                                                   // 0x0054   (0x0004)  
	int32_t                                            relevantCharacterID;                                        // 0x0058   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x005C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.HitValidationEditorConfig
/// Size: 0x0010 (0x000008 - 0x000018)
struct FHitValidationEditorConfig : FTableRowBase
{ 
	EHitValidatorConfigName                            ConfigName;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              CapsuleInflation;                                           // 0x000C   (0x0004)  
	float                                              MaximumDistance;                                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.HitValidationRecorder
/// Size: 0x0004 (0x000000 - 0x000004)
struct FHitValidationRecorder
{ 
	float                                              CacheTimespan;                                              // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.HitValidationValidator
/// Size: 0x0018 (0x000000 - 0x000018)
struct FHitValidationValidator
{ 
	float                                              CapsuleInflation;                                           // 0x0000   (0x0004)  
	float                                              MaximumDistance;                                            // 0x0004   (0x0004)  
	SDK_UNDEFINED(16,2836) /* FString */               __um(Name);                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.HitValidationGameConfig
/// Size: 0x0018 (0x000000 - 0x000018)
struct FHitValidationGameConfig
{ 
	bool                                               enable;                                                     // 0x0000   (0x0001)  
	bool                                               EnableCollisionCheck;                                       // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	FHitValidationRecorder                             Recorder;                                                   // 0x0004   (0x0004)  
	TArray<FHitValidationValidator>                    Validators;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.HookLingerTimerHandleContainer
/// Size: 0x0010 (0x000000 - 0x000010)
struct FHookLingerTimerHandleContainer
{ 
	class AMeatHook*                                   Hook;                                                       // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.PlayerInfoCache
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPlayerInfoCache
{ 
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Struct /Script/DeadByDaylight.InteractionProficiencyProperties
/// Size: 0x0078 (0x000008 - 0x000080)
struct FInteractionProficiencyProperties : FDBDTableRowBase
{ 
	FName                                              ProficiencyID;                                              // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(48,2837) /* TWeakObjectPtr<UClass*> */ __um(ProficiencyBlueprint);                               // 0x0018   (0x0030)  
	TArray<float>                                      BuffLevelThresholds;                                        // 0x0048   (0x0010)  
	TArray<float>                                      DebuffLevelThresholds;                                      // 0x0058   (0x0010)  
	bool                                               HasLevels;                                                  // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0069   (0x0007)  MISSED
	SDK_UNDEFINED(16,2838) /* FString */               __um(IconFilePath);                                         // 0x0070   (0x0010)  
};

/// Struct /Script/DeadByDaylight.InteractionProficiencyData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FInteractionProficiencyData
{ 
	bool                                               IsActive;                                                   // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Level;                                                      // 0x0004   (0x0004)  
	EStatusEffectType                                  ProficiencyType;                                            // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              value;                                                      // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.InteractionRequest
/// Size: 0x0018 (0x000000 - 0x000018)
struct FInteractionRequest
{ 
	class UInteractionDefinition*                      _interaction;                                               // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	class ADBDPlayer*                                  _requester;                                                 // 0x0010   (0x0008)  
};

/// Struct /Script/DeadByDaylight.ParentItemIDs
/// Size: 0x0018 (0x000000 - 0x000018)
struct FParentItemIDs
{ 
	bool                                               MatchAnyItemID;                                             // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<FName>                                      itemIds;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ItemAddonProperties
/// Size: 0x0058 (0x000258 - 0x0002B0)
struct FItemAddonProperties : FItemData
{ 
	SDK_UNDEFINED(48,2839) /* TWeakObjectPtr<UClass*> */ __um(ItemAddonBlueprint);                                 // 0x0258   (0x0030)  
	FParentItemIDs                                     parentItem;                                                 // 0x0288   (0x0018)  
	TArray<FName>                                      PreLevelGenerationModifierID;                               // 0x02A0   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterFallbackData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCharacterFallbackData
{ 
	SDK_UNDEFINED(16,2840) /* FString */               __um(DefaultKiller);                                        // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2841) /* FString */               __um(DefaultSurvivor);                                      // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ItemCharacterKillswitchData
/// Size: 0x0078 (0x000000 - 0x000078)
struct FItemCharacterKillswitchData
{ 
	FCharacterFallbackData                             CharacterFallback;                                          // 0x0000   (0x0020)  
	SDK_UNDEFINED(80,2842) /* TMap<FString, FDisabledItemData> */ __um(DisabledItems);                             // 0x0020   (0x0050)  
	bool                                               DisabledItems_IsSet;                                        // 0x0070   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0071   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.DisabledItemData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FDisabledItemData
{ 
	SDK_UNDEFINED(16,2843) /* TArray<FString> */       __um(GameTypes);                                            // 0x0000   (0x0010)  
	bool                                               GameTypes_IsSet;                                            // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.ItemTooltipData
/// Size: 0x0088 (0x000098 - 0x000120)
struct FItemTooltipData : FBaseTooltipData
{ 
	unsigned char                                      UnknownData00_1[0x88];                                      // 0x0098   (0x0088)  MISSED
};

/// Struct /Script/DeadByDaylight.ItemTypeData
/// Size: 0x0128 (0x000008 - 0x000130)
struct FItemTypeData : FDBDTableRowBase
{ 
	ELoadoutItemType                                   ItemType;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	FItemUIData                                        UIData;                                                     // 0x0010   (0x0120)  
};

/// Struct /Script/DeadByDaylight.JwtGameConfig
/// Size: 0x0001 (0x000000 - 0x000001)
struct FJwtGameConfig
{ 
	bool                                               Enabled;                                                    // 0x0000   (0x0001)  
};

/// Struct /Script/DeadByDaylight.KillerPOVSurvivorAimOffsetOverrideData
/// Size: 0x0038 (0x000008 - 0x000040)
struct FKillerPOVSurvivorAimOffsetOverrideData : FDBDTableRowBase
{ 
	FGameplayTag                                       PresenceTag;                                                // 0x0008   (0x000C)  
	float                                              _heightOffset;                                              // 0x0014   (0x0004)  
	class UCurveFloat*                                 _offsetPercentagePerDotProductCurve;                        // 0x0018   (0x0008)  
	TArray<FGameplayTag>                               _conditionalTagsRequired;                                   // 0x0020   (0x0010)  
	TArray<FGameplayTag>                               ConditionalTagsPreventing;                                  // 0x0030   (0x0010)  
};

/// Struct /Script/DeadByDaylight.KillerSoundCueTracker
/// Size: 0x001C (0x000000 - 0x00001C)
struct FKillerSoundCueTracker
{ 
	unsigned char                                      UnknownData00_1[0x1C];                                      // 0x0000   (0x001C)  MISSED
};

/// Struct /Script/DeadByDaylight.KillerSpecificComponentsData
/// Size: 0x0040 (0x000008 - 0x000048)
struct FKillerSpecificComponentsData : FDBDTableRowBase
{ 
	FGameplayTag                                       KillerPresenceTag;                                          // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(48,2844) /* TWeakObjectPtr<UClass*> */ __um(KillerSpecificComponent);                            // 0x0018   (0x0030)  
};

/// Struct /Script/DeadByDaylight.KillerSpecificNavmeshesData
/// Size: 0x0020 (0x000008 - 0x000028)
struct FKillerSpecificNavmeshesData : FDBDTableRowBase
{ 
	FGameplayTag                                       KillerPresenceTag;                                          // 0x0008   (0x000C)  
	FName                                              NavmeshName;                                                // 0x0014   (0x000C)  
	int32_t                                            NavmeshIndex;                                               // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.LandingPageStorefrontTabData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FLandingPageStorefrontTabData
{ 
	SDK_UNDEFINED(16,2845) /* FString */               __um(Type);                                                 // 0x0000   (0x0010)  
	FDateTime                                          NewStartDate;                                               // 0x0010   (0x0008)  
	FDateTime                                          NewEndDate;                                                 // 0x0018   (0x0008)  
	class UTexture2DDynamic*                           Image;                                                      // 0x0020   (0x0008)  
	SDK_UNDEFINED(24,2846) /* FText */                 __um(Title);                                                // 0x0028   (0x0018)  
	SDK_UNDEFINED(24,2847) /* FText */                 __um(TagText);                                              // 0x0040   (0x0018)  
};

/// Struct /Script/DeadByDaylight.LandingPageTabData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FLandingPageTabData
{ 
	SDK_UNDEFINED(24,2848) /* FText */                 __um(DefaultText);                                          // 0x0000   (0x0018)  
	SDK_UNDEFINED(16,2849) /* TScriptInterface<Class> */ __um(DefaultImage);                                       // 0x0018   (0x0010)  
	FSlateColor                                        BannerBackgroudColor;                                       // 0x0028   (0x0028)  
	bool                                               IsButtonEnabled;                                            // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.DirectionalHeightFogInterpolationValues
/// Size: 0x0098 (0x000000 - 0x000098)
struct FDirectionalHeightFogInterpolationValues
{ 
	float                                              FogDensity;                                                 // 0x0000   (0x0004)  
	FLinearColor                                       FogInscatteringColor;                                       // 0x0004   (0x0010)  
	float                                              DirectionalInscatteringExponent;                            // 0x0014   (0x0004)  
	float                                              DirectionalInscatteringStartDistance;                       // 0x0018   (0x0004)  
	FLinearColor                                       DirectionalInscatteringColor;                               // 0x001C   (0x0010)  
	float                                              FogHeightFalloff;                                           // 0x002C   (0x0004)  
	float                                              FogMaxOpacity;                                              // 0x0030   (0x0004)  
	float                                              StartDistance;                                              // 0x0034   (0x0004)  
	float                                              SecondFogDensity;                                           // 0x0038   (0x0004)  
	float                                              SecondFogHeightFalloff;                                     // 0x003C   (0x0004)  
	float                                              SecondFogHeightOffset;                                      // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	TArray<FHeightFogGradientEntry>                    FogGradient;                                                // 0x0048   (0x0010)  
	bool                                               bReplaceVolumetricFogAlbedoWithColorGradient;               // 0x0058   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0059   (0x0003)  MISSED
	float                                              VolumetricFogGradientIntensityMultiplier;                   // 0x005C   (0x0004)  
	float                                              DistanceUntilFlatFog;                                       // 0x0060   (0x0004)  
	float                                              DistanceUntilNoFog;                                         // 0x0064   (0x0004)  
	bool                                               bEnableVolumetricFog;                                       // 0x0068   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0069   (0x0003)  MISSED
	float                                              VolumetricFogScatteringDistribution;                        // 0x006C   (0x0004)  
	FColor                                             VolumetricFogAlbedo;                                        // 0x0070   (0x0004)  
	FLinearColor                                       VolumetricFogEmissive;                                      // 0x0074   (0x0010)  
	float                                              VolumetricFogExtinctionScale;                               // 0x0084   (0x0004)  
	float                                              VolumetricFogDistance;                                      // 0x0088   (0x0004)  
	float                                              VolumetricFogStaticLightingScatteringIntensity;             // 0x008C   (0x0004)  
	bool                                               bOverrideLightColorsWithFogInscatteringColors;              // 0x0090   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0091   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.LoadingInfoData
/// Size: 0x0068 (0x000000 - 0x000068)
struct FLoadingInfoData
{ 
	SDK_UNDEFINED(24,2850) /* FText */                 __um(Title);                                                // 0x0000   (0x0018)  
	SDK_UNDEFINED(24,2851) /* FText */                 __um(Description);                                          // 0x0018   (0x0018)  
	SDK_UNDEFINED(48,2852) /* TWeakObjectPtr<UTexture2D*> */ __um(Icon);                                           // 0x0030   (0x0030)  
	bool                                               IsAvailableForKiller;                                       // 0x0060   (0x0001)  
	bool                                               IsAvailableForSurvivor;                                     // 0x0061   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0062   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.LoadingImagesData
/// Size: 0x0038 (0x000008 - 0x000040)
struct FLoadingImagesData : FDBDTableRowBase
{ 
	FName                                              ID;                                                         // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(16,2853) /* TArray<TWeakObjectPtr<UPaperSprite*>> */ __um(Images);                               // 0x0018   (0x0010)  
	TArray<FLoadingInfoData>                           InfoData;                                                   // 0x0028   (0x0010)  
	bool                                               IsAvailableForSurvivor;                                     // 0x0038   (0x0001)  
	bool                                               IsAvailableForKiller;                                       // 0x0039   (0x0001)  
	bool                                               IsGenericImages;                                            // 0x003A   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x003B   (0x0005)  MISSED
};

/// Struct /Script/DeadByDaylight.LoadoutSlotUnlockLevelValue
/// Size: 0x0008 (0x000008 - 0x000010)
struct FLoadoutSlotUnlockLevelValue : FDBDTableRowBase
{ 
	ELoadoutSlot                                       LoadoutSlot;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            BloodWebLevel;                                              // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PlayerLobbyOrderData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPlayerLobbyOrderData
{ 
	SDK_UNDEFINED(16,2854) /* FString */               __um(playerID);                                             // 0x0000   (0x0010)  
	int32_t                                            slotIndex;                                                  // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.LobbyPlayerData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FLobbyPlayerData
{ 
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0000   (0x0050)  MISSED
};

/// Struct /Script/DeadByDaylight.KillerClosetActorsTypes
/// Size: 0x0050 (0x000008 - 0x000058)
struct FKillerClosetActorsTypes : FDBDTableRowBase
{ 
	FGameplayTag                                       KillerPresenceTag;                                          // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(48,2855) /* TWeakObjectPtr<UClass*> */ __um(ClosetActorClass);                                   // 0x0018   (0x0030)  
	FName                                              SocketToSpawnOn;                                            // 0x0048   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.CustomLockerOutlineOverride
/// Size: 0x0050 (0x000000 - 0x000050)
struct FCustomLockerOutlineOverride
{ 
	int32_t                                            Priority;                                                   // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FGameplayTag>                               LockerStateTags;                                            // 0x0008   (0x0010)  
	TArray<FGameplayTag>                               PlayerStateTags;                                            // 0x0018   (0x0010)  
	TArray<FGameplayTag>                               PlayerPerkFlags;                                            // 0x0028   (0x0010)  
	FLinearColor                                       OutlineColor;                                               // 0x0038   (0x0010)  
	bool                                               IsAlwaysVisible;                                            // 0x0048   (0x0001)  
	bool                                               FadeOutAsClosingIn;                                         // 0x0049   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x004A   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.MainMenuButtonData
/// Size: 0x0058 (0x000008 - 0x000060)
struct FMainMenuButtonData : FDBDTableRowBase
{ 
	EMainMenuButton                                    ButtonType;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	SDK_UNDEFINED(24,2856) /* FText */                 __um(label);                                                // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,2857) /* FText */                 __um(InfoTitle);                                            // 0x0028   (0x0018)  
	SDK_UNDEFINED(24,2858) /* FText */                 __um(LockedInfoTitle);                                      // 0x0040   (0x0018)  
	bool                                               IsDisabled;                                                 // 0x0058   (0x0001)  
	bool                                               IsLocked;                                                   // 0x0059   (0x0001)  
	bool                                               IsHidden;                                                   // 0x005A   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x005B   (0x0005)  MISSED
};

/// Struct /Script/DeadByDaylight.GenerationParams
/// Size: 0x0004 (0x000000 - 0x000004)
struct FGenerationParams
{ 
	int32_t                                            Seed;                                                       // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.MapSpecificComponentsData
/// Size: 0x0040 (0x000008 - 0x000048)
struct FMapSpecificComponentsData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,2859) /* FString */               __um(MapName);                                              // 0x0008   (0x0010)  
	SDK_UNDEFINED(48,2860) /* TWeakObjectPtr<UClass*> */ __um(MapSpecificComponent);                               // 0x0018   (0x0030)  
};

/// Struct /Script/DeadByDaylight.MatchmakingContextData
/// Size: 0x0004 (0x000000 - 0x000004)
struct FMatchmakingContextData
{ 
	uint32_t                                           ContextId;                                                  // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.MenuCameraViewTargetWithLabel
/// Size: 0x0028 (0x000000 - 0x000028)
struct FMenuCameraViewTargetWithLabel
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FCharacterViewTarget                               Dropdown;                                                   // 0x0010   (0x0018)  
};

/// Struct /Script/DeadByDaylight.MenuCameraPreset
/// Size: 0x0060 (0x000008 - 0x000068)
struct FMenuCameraPreset : FDBDTableRowBase
{ 
	SDK_UNDEFINED(80,2861) /* TMap<EDBDCameraViewType, FMenuCameraView> */ __um(Views);                            // 0x0008   (0x0050)  
	TArray<FMenuCameraViewTargetWithLabel>             Targets;                                                    // 0x0058   (0x0010)  
};

/// Struct /Script/DeadByDaylight.MenuCameraViewSettings
/// Size: 0x000C (0x000000 - 0x00000C)
struct FMenuCameraViewSettings
{ 
	float                                              FieldOfView;                                                // 0x0000   (0x0004)  
	float                                              AspectRatio;                                                // 0x0004   (0x0004)  
	bool                                               ConstrainAspectRatio;                                       // 0x0008   (0x0001)  
	bool                                               UseFieldOfViewForLOD;                                       // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x000A   (0x0002)  MISSED
};

/// Struct /Script/DeadByDaylight.MenuCameraView
/// Size: 0x0028 (0x000000 - 0x000028)
struct FMenuCameraView
{ 
	FVector                                            Location;                                                   // 0x0000   (0x000C)  
	FRotator                                           Rotation;                                                   // 0x000C   (0x000C)  
	bool                                               Override_Settings;                                          // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0019   (0x0003)  MISSED
	FMenuCameraViewSettings                            Settings;                                                   // 0x001C   (0x000C)  
};

/// Struct /Script/DeadByDaylight.MenuCharacterUIData
/// Size: 0x0020 (0x000008 - 0x000028)
struct FMenuCharacterUIData : FDBDTableRowBase
{ 
	int32_t                                            CharacterIndex;                                             // 0x0008   (0x0004)  
	FVector                                            offsetMainMenuForwardPosition;                              // 0x000C   (0x000C)  
	FVector                                            offsetMainMenuBackwardPosition;                             // 0x0018   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.MenuIndexChangeEventData
/// Size: 0x0004 (0x000000 - 0x000004)
struct FMenuIndexChangeEventData
{ 
	int32_t                                            index;                                                      // 0x0000   (0x0004)  
};

/// Struct /Script/DeadByDaylight.MenuRoleChangeEventData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FMenuRoleChangeEventData
{ 
	EPlayerRole                                        PlayerRole;                                                 // 0x0000   (0x0001)  
};

/// Struct /Script/DeadByDaylight.GameInfoEventData
/// Size: 0x0002 (0x000000 - 0x000002)
struct FGameInfoEventData
{ 
	EPlayerRole                                        PlayerRole;                                                 // 0x0000   (0x0001)  
	EGameType                                          gameType;                                                   // 0x0001   (0x0001)  
};

/// Struct /Script/DeadByDaylight.NewsContentDetails
/// Size: 0x00B8 (0x000000 - 0x0000B8)
struct FNewsContentDetails
{ 
	int32_t                                            Weight;                                                     // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(16,2862) /* FString */               __um(Version);                                              // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,2863) /* FString */               __um(Title);                                                // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,2864) /* FString */               __um(Description);                                          // 0x0028   (0x0010)  
	SDK_UNDEFINED(16,2865) /* FString */               __um(ImagePath);                                            // 0x0038   (0x0010)  
	bool                                               ImagePath_IsSet;                                            // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	SDK_UNDEFINED(16,2866) /* FString */               __um(DwnImagePath);                                         // 0x0050   (0x0010)  
	bool                                               DwnImagePath_IsSet;                                         // 0x0060   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0061   (0x0003)  MISSED
	int32_t                                            ImageHeight;                                                // 0x0064   (0x0004)  
	bool                                               ImageHeight_IsSet;                                          // 0x0068   (0x0001)  
	bool                                               IsHidden;                                                   // 0x0069   (0x0001)  
	bool                                               IsHidden_IsSet;                                             // 0x006A   (0x0001)  
	unsigned char                                      UnknownData03_5[0x21];                                      // 0x006B   (0x0021)  MISSED
	int32_t                                            Type;                                                       // 0x008C   (0x0004)  
	bool                                               Type_IsSet;                                                 // 0x0090   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x0091   (0x0007)  MISSED
	SDK_UNDEFINED(16,2867) /* TArray<FString> */       __um(ContentTags);                                          // 0x0098   (0x0010)  
	SDK_UNDEFINED(16,2868) /* FString */               __um(StartDate);                                            // 0x00A8   (0x0010)  
};

/// Struct /Script/DeadByDaylight.NewsContentOnlineData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FNewsContentOnlineData
{ 
	TArray<FNewsContentDetails>                        News;                                                       // 0x0000   (0x0010)  
	bool                                               News_isset;                                                 // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.NodeContentDistributionValue
/// Size: 0x0058 (0x000008 - 0x000060)
struct FNodeContentDistributionValue : FDBDTableRowBase
{ 
	int32_t                                            Empty_Weight;                                               // 0x0008   (0x0004)  
	int32_t                                            Empty_MinCount;                                             // 0x000C   (0x0004)  
	int32_t                                            Empty_MaxCount;                                             // 0x0010   (0x0004)  
	int32_t                                            Perks_Weight;                                               // 0x0014   (0x0004)  
	int32_t                                            Perks_MinCount;                                             // 0x0018   (0x0004)  
	int32_t                                            Perks_MaxCount;                                             // 0x001C   (0x0004)  
	int32_t                                            PerksPacks_Weight;                                          // 0x0020   (0x0004)  
	int32_t                                            PerksPacks_MinCount;                                        // 0x0024   (0x0004)  
	int32_t                                            PerksPacks_MaxCount;                                        // 0x0028   (0x0004)  
	int32_t                                            Offerings_Weight;                                           // 0x002C   (0x0004)  
	int32_t                                            Offerings_MinCount;                                         // 0x0030   (0x0004)  
	int32_t                                            Offerings_MaxCount;                                         // 0x0034   (0x0004)  
	int32_t                                            Items_Weight;                                               // 0x0038   (0x0004)  
	int32_t                                            Items_MinCount;                                             // 0x003C   (0x0004)  
	int32_t                                            Items_MaxCount;                                             // 0x0040   (0x0004)  
	int32_t                                            AddOn_Weight;                                               // 0x0044   (0x0004)  
	int32_t                                            AddOn_MinCount;                                             // 0x0048   (0x0004)  
	int32_t                                            AddOn_MaxCount;                                             // 0x004C   (0x0004)  
	int32_t                                            Chests_Weight;                                              // 0x0050   (0x0004)  
	int32_t                                            Chests_MinCount;                                            // 0x0054   (0x0004)  
	int32_t                                            Chests_MaxCount;                                            // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x005C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.Offering
/// Size: 0x0290 (0x000000 - 0x000290)
struct FOffering
{ 
	unsigned char                                      UnknownData00_1[0x290];                                     // 0x0000   (0x0290)  MISSED
};

/// Struct /Script/DeadByDaylight.OfferingEffect
/// Size: 0x0028 (0x000000 - 0x000028)
struct FOfferingEffect
{ 
	EOfferingEffectType                                Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<FName>                                      Tags;                                                       // 0x0008   (0x0010)  
	FName                                              value;                                                      // 0x0018   (0x000C)  
	float                                              Modifier;                                                   // 0x0024   (0x0004)  
};

/// Struct /Script/DeadByDaylight.OfferingProperties
/// Size: 0x0038 (0x000258 - 0x000290)
struct FOfferingProperties : FItemData
{ 
	EOfferingType                                      OfferingType;                                               // 0x0258   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0259   (0x0007)  MISSED
	TArray<FName>                                      Tags;                                                       // 0x0260   (0x0010)  
	TArray<FOfferingEffect>                            Effects;                                                    // 0x0270   (0x0010)  
	SDK_UNDEFINED(16,2869) /* FString */               __um(BigIconFilePath);                                      // 0x0280   (0x0010)  
};

/// Struct /Script/DeadByDaylight.OfferingCategoryData
/// Size: 0x0138 (0x000008 - 0x000140)
struct FOfferingCategoryData : FDBDTableRowBase
{ 
	EOfferingCategory                                  OfferingCategory;                                           // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<EPlayerRole>                                Role;                                                       // 0x0010   (0x0010)  
	FItemUIData                                        UIData;                                                     // 0x0020   (0x0120)  
};

/// Struct /Script/DeadByDaylight.OfferingTriggerPositionData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FOfferingTriggerPositionData
{ 
	int32_t                                            index;                                                      // 0x0000   (0x0004)  
	float                                              PosX;                                                       // 0x0004   (0x0004)  
	float                                              PosY;                                                       // 0x0008   (0x0004)  
	int32_t                                            CardIndex;                                                  // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.DBDQueueTimeInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FDBDQueueTimeInfo
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/DeadByDaylight.DBDConnectionStatus
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDBDConnectionStatus
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	class UDBDGameInstance*                            _gameInstance;                                              // 0x0008   (0x0008)  
};

/// Struct /Script/DeadByDaylight.DBDSearchParams
/// Size: 0x0080 (0x000000 - 0x000080)
struct FDBDSearchParams
{ 
	unsigned char                                      UnknownData00_1[0x80];                                      // 0x0000   (0x0080)  MISSED
};

/// Struct /Script/DeadByDaylight.DBDJoinParams
/// Size: 0x0001 (0x000000 - 0x000001)
struct FDBDJoinParams
{ 
	EGameType                                          gameType;                                                   // 0x0000   (0x0001)  
};

/// Struct /Script/DeadByDaylight.OutfitData
/// Size: 0x01F0 (0x000008 - 0x0001F8)
struct FOutfitData : FDBDTableRowBase
{ 
	FName                                              ID;                                                         // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FItemUIData                                        UIData;                                                     // 0x0018   (0x0120)  
	FItemAvailability                                  Availability;                                               // 0x0138   (0x0040)  
	TArray<FName>                                      OutfitItems;                                                // 0x0178   (0x0010)  
	SDK_UNDEFINED(24,2870) /* FText */                 __um(CollectionName);                                       // 0x0188   (0x0018)  
	SDK_UNDEFINED(24,2871) /* FText */                 __um(CollectionDescription);                                // 0x01A0   (0x0018)  
	SDK_UNDEFINED(16,2872) /* FString */               __um(InclusionVersion);                                     // 0x01B8   (0x0010)  
	bool                                               IsAvailableInAtlantaBuild;                                  // 0x01C8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x01C9   (0x0003)  MISSED
	FName                                              CustomizedAudioStateCollection;                             // 0x01CC   (0x000C)  
	SDK_UNDEFINED(16,2873) /* FString */               __um(_outfitId);                                            // 0x01D8   (0x0010)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x01E8   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.OutfitDropdown
/// Size: 0x000C (0x000008 - 0x000014)
struct FOutfitDropdown : FCharacterDropdown
{ 
	FName                                              OutfitId;                                                   // 0x0008   (0x000C)  
};

/// Struct /Script/DeadByDaylight.RevealOptions
/// Size: 0x0028 (0x000000 - 0x000028)
struct FRevealOptions
{ 
	bool                                               IsUnaffectedByBlindness;                                    // 0x0000   (0x0001)  
	bool                                               IsOutlineAlwaysVisible;                                     // 0x0001   (0x0001)  
	bool                                               IsUnaffectedByFadeout;                                      // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0003   (0x0001)  MISSED
	float                                              Duration;                                                   // 0x0004   (0x0004)  
	float                                              Range;                                                      // 0x0008   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	class AActor*                                      ActorToTestRangeFrom;                                       // 0x0010   (0x0008)  
	FGameplayTag                                       OutlineMaterialOverride;                                    // 0x0018   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.SurvivorInfoData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FSurvivorInfoData
{ 
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Struct /Script/DeadByDaylight.PerkLevelText
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPerkLevelText
{ 
	SDK_UNDEFINED(16,2874) /* TArray<FString> */       __um(Tunables);                                             // 0x0000   (0x0010)  
	SDK_UNDEFINED(24,2875) /* FText */                 __um(TextOverride);                                         // 0x0010   (0x0018)  
};

/// Struct /Script/DeadByDaylight.PerkProperties
/// Size: 0x00F0 (0x000258 - 0x000348)
struct FPerkProperties : FItemData
{ 
	TArray<FName>                                      Tags;                                                       // 0x0258   (0x0010)  
	TArray<FOfferingEffect>                            Effects;                                                    // 0x0268   (0x0010)  
	int32_t                                            AssociatedPlayerIndex;                                      // 0x0278   (0x0004)  
	int32_t                                            MandatoryOnBloodweblevel;                                   // 0x027C   (0x0004)  
	int32_t                                            TeachableOnBloodweblevel;                                   // 0x0280   (0x0004)  
	int32_t                                            AtlantaTeachableLevel;                                      // 0x0284   (0x0004)  
	TArray<EPerkCategory>                              PerkCategory;                                               // 0x0288   (0x0010)  
	SDK_UNDEFINED(48,2876) /* TWeakObjectPtr<UClass*> */ __um(PerkBlueprint);                                      // 0x0298   (0x0030)  
	TArray<EItemRarity>                                PerkLevelRarity;                                            // 0x02C8   (0x0010)  
	TArray<FPerkLevelText>                             PerkLevelTunables;                                          // 0x02D8   (0x0010)  
	SDK_UNDEFINED(24,2877) /* FText */                 __um(PerkLevel1Description);                                // 0x02E8   (0x0018)  
	SDK_UNDEFINED(24,2878) /* FText */                 __um(PerkLevel2Description);                                // 0x0300   (0x0018)  
	SDK_UNDEFINED(24,2879) /* FText */                 __um(PerkLevel3Description);                                // 0x0318   (0x0018)  
	SDK_UNDEFINED(16,2880) /* TArray<FString> */       __um(AtlantaActivatableInteractionIDs);                     // 0x0330   (0x0010)  
	bool                                               AtlantaLowPriority;                                         // 0x0340   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0341   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.PerspectiveEffectData
/// Size: 0x001C (0x000000 - 0x00001C)
struct FPerspectiveEffectData
{ 
	bool                                               WantsActive;                                                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	SDK_UNDEFINED(20,2881) /* FDelegateProperty */     __um(ActivationEvent);                                      // 0x0004   (0x0014)  
	EPerspectiveActivationCondition                    Condition;                                                  // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0019   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.PlatformDlcData
/// Size: 0x0108 (0x000008 - 0x000110)
struct FPlatformDlcData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,2882) /* FString */               __um(ID);                                                   // 0x0008   (0x0010)  
	SDK_UNDEFINED(24,2883) /* FText */                 __um(UnlockDescription);                                    // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2884) /* FText */                 __um(DisplayName);                                          // 0x0030   (0x0018)  
	SDK_UNDEFINED(16,2885) /* FString */               __um(Description);                                          // 0x0048   (0x0010)  
	bool                                               IsHeritagePack;                                             // 0x0058   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0059   (0x0003)  MISSED
	int32_t                                            UISortOrder;                                                // 0x005C   (0x0004)  
	FSoftObjectPath                                    BannerImage;                                                // 0x0060   (0x0020)  
	SDK_UNDEFINED(16,2886) /* FString */               __um(HeritageId);                                           // 0x0080   (0x0010)  
	SDK_UNDEFINED(16,2887) /* FString */               __um(DlcIdSteam);                                           // 0x0090   (0x0010)  
	SDK_UNDEFINED(16,2888) /* FString */               __um(DlcIdEpic);                                            // 0x00A0   (0x0010)  
	SDK_UNDEFINED(16,2889) /* FString */               __um(DlcIdPS4);                                             // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,2890) /* FString */               __um(DlcId_XB1_XSX_GDK);                                    // 0x00C0   (0x0010)  
	SDK_UNDEFINED(16,2891) /* FString */               __um(DlcIdSwitch);                                          // 0x00D0   (0x0010)  
	SDK_UNDEFINED(16,2892) /* FString */               __um(DlcIdGRDK);                                            // 0x00E0   (0x0010)  
	SDK_UNDEFINED(16,2893) /* FString */               __um(DlcIdPS5);                                             // 0x00F0   (0x0010)  
	SDK_UNDEFINED(16,2894) /* FString */               __um(DlcIdStadia);                                          // 0x0100   (0x0010)  
};

/// Struct /Script/DeadByDaylight.PlayerCapsuleQueryParams
/// Size: 0x0078 (0x000000 - 0x000078)
struct FPlayerCapsuleQueryParams
{ 
	class ADBDPlayer*                                  Player;                                                     // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0008   (0x0010)  MISSED
	SDK_UNDEFINED(80,2895) /* TSet<AActor*> */         __um(ignoreActors);                                         // 0x0018   (0x0050)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0068   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.PlayerLevelData
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPlayerLevelData
{ 
	int32_t                                            LevelValue;                                                 // 0x0000   (0x0004)  
	int32_t                                            PrestigeValue;                                              // 0x0004   (0x0004)  
	int32_t                                            MaxXp;                                                      // 0x0008   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PlayerLevelTooltipData
/// Size: 0x0010 (0x000098 - 0x0000A8)
struct FPlayerLevelTooltipData : FBaseTooltipData
{ 
	int32_t                                            PlayerLevel;                                                // 0x0098   (0x0004)  
	int32_t                                            PlayerPrestige;                                             // 0x009C   (0x0004)  
	int32_t                                            CurrentExperience;                                          // 0x00A0   (0x0004)  
	int32_t                                            NextLevelExperience;                                        // 0x00A4   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PlayerReadyStatusData
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPlayerReadyStatusData
{ 
	int32_t                                            playerID;                                                   // 0x0000   (0x0004)  
	int32_t                                            slotIndex;                                                  // 0x0004   (0x0004)  
	bool                                               IsReady;                                                    // 0x0008   (0x0001)  
	bool                                               IsSlasher;                                                  // 0x0009   (0x0001)  
	bool                                               IsLocalPlayer;                                              // 0x000A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x000B   (0x0001)  MISSED
};

/// Struct /Script/DeadByDaylight.PlayerRoleRankData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPlayerRoleRankData
{ 
	EPlayerRole                                        PlayerRole;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Rank;                                                       // 0x0004   (0x0004)  
	int32_t                                            PipsRequiredForNextRank;                                    // 0x0008   (0x0004)  
	int32_t                                            ActivePips;                                                 // 0x000C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PlayerRankData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPlayerRankData
{ 
	SDK_UNDEFINED(16,2896) /* FString */               __um(MirrorsId);                                            // 0x0000   (0x0010)  
	EPlayerRole                                        PlayerRole;                                                 // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	int32_t                                            PlayerRankForRole;                                          // 0x0014   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PlayerRoundStartEventData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPlayerRoundStartEventData
{ 
	EPlayerRole                                        PlayerRole;                                                 // 0x0000   (0x0001)  
	bool                                               IsABot;                                                     // 0x0001   (0x0001)  
	EAIDifficultyLevel                                 BotDifficultyLevel;                                         // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x0003   (0x0005)  MISSED
	SDK_UNDEFINED(16,2897) /* FString */               __um(BotName);                                              // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,2898) /* FString */               __um(BotMirrorID);                                          // 0x0018   (0x0010)  
	int32_t                                            characterId;                                                // 0x0028   (0x0004)  
	int32_t                                            PlayerRankForRole;                                          // 0x002C   (0x0004)  
	int32_t                                            PrestigeLevel;                                              // 0x0030   (0x0004)  
	int32_t                                            BloodWebLevel;                                              // 0x0034   (0x0004)  
	int32_t                                            Pips;                                                       // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	TArray<FPlayerRankData>                            PlayerRankDataArray;                                        // 0x0040   (0x0010)  
};

/// Struct /Script/DeadByDaylight.PlayerScoreEmitterData
/// Size: 0x0078 (0x000008 - 0x000080)
struct FPlayerScoreEmitterData : FDBDTableRowBase
{ 
	FGameplayTagQuery                                  PawnSemanticTags;                                           // 0x0008   (0x0048)  
	SDK_UNDEFINED(48,2899) /* TWeakObjectPtr<UClass*> */ __um(Emitter);                                            // 0x0050   (0x0030)  
};

/// Struct /Script/DeadByDaylight.PostAttackData
/// Size: 0x0007 (0x000000 - 0x000007)
struct FPostAttackData
{ 
	bool                                               IsOblivious;                                                // 0x0000   (0x0001)  
	bool                                               IsKO;                                                       // 0x0001   (0x0001)  
	bool                                               IsExposed;                                                  // 0x0002   (0x0001)  
	bool                                               IsPostPhaseWalkAttack;                                      // 0x0003   (0x0001)  
	bool                                               IsDownedInDemonMode;                                        // 0x0004   (0x0001)  
	bool                                               IsLegionBleedOutAttack;                                     // 0x0005   (0x0001)  
	bool                                               IsDemogorgonPounceAttack;                                   // 0x0006   (0x0001)  
};

/// Struct /Script/DeadByDaylight.PreLevelGenerationModifierProperties
/// Size: 0x0018 (0x000008 - 0x000020)
struct FPreLevelGenerationModifierProperties : FDBDTableRowBase
{ 
	FName                                              modifierID;                                                 // 0x0008   (0x000C)  
	EPreLevelGenerationModifierType                    modifierType;                                               // 0x0014   (0x0001)  
	EKillerAbilities                                   KillerAbiliy;                                               // 0x0015   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0016   (0x0002)  MISSED
	float                                              ModifierValue;                                              // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.PrestigeIconData
/// Size: 0x0038 (0x000008 - 0x000040)
struct FPrestigeIconData : FDBDTableRowBase
{ 
	EPlayerRole                                        PlayerRole;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            PrestigeLevel;                                              // 0x000C   (0x0004)  
	SDK_UNDEFINED(48,2900) /* TWeakObjectPtr<UTexture2D*> */ __um(Icon);                                           // 0x0010   (0x0030)  
};

/// Struct /Script/DeadByDaylight.PrestigeRewardStruct
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPrestigeRewardStruct
{ 
	SDK_UNDEFINED(16,2901) /* FString */               __um(RewardId);                                             // 0x0000   (0x0010)  
	EPrestigeRewardType                                RewardType;                                                 // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	int32_t                                            RewardPerkLevel;                                            // 0x0014   (0x0004)  
};

/// Struct /Script/DeadByDaylight.PrestigeRewardData
/// Size: 0x0050 (0x000008 - 0x000058)
struct FPrestigeRewardData : FDBDTableRowBase
{ 
	int32_t                                            AssociatedCharacter;                                        // 0x0008   (0x0004)  
	int32_t                                            PrestigeLevel;                                              // 0x000C   (0x0004)  
	FPrestigeRewardStruct                              Rewards;                                                    // 0x0010   (0x0048)  
};

/// Struct /Script/DeadByDaylight.ArrayOfSceneComponent
/// Size: 0x0010 (0x000000 - 0x000010)
struct FArrayOfSceneComponent
{ 
	TArray<class USceneComponent*>                     sceneComp;                                                  // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.KillerProperties
/// Size: 0x0018 (0x000008 - 0x000020)
struct FKillerProperties : FDBDTableRowBase
{ 
	EKillerAbilities                                   killerAbility;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<FGameplayElementSubstitutions>              SubstitutionElements;                                       // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ProceduralMap
/// Size: 0x00B8 (0x000008 - 0x0000C0)
struct FProceduralMap : FDBDTableRowBase
{ 
	FName                                              MapId;                                                      // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(24,2902) /* FText */                 __um(Name);                                                 // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2903) /* FText */                 __um(ThemeName);                                            // 0x0030   (0x0018)  
	SDK_UNDEFINED(24,2904) /* FText */                 __um(Description);                                          // 0x0048   (0x0018)  
	float                                              HookMinDistance;                                            // 0x0060   (0x0004)  
	int32_t                                            HookMinCount;                                               // 0x0064   (0x0004)  
	int32_t                                            HookMaxCount;                                               // 0x0068   (0x0004)  
	float                                              BookShelvesMinDistance;                                     // 0x006C   (0x0004)  
	int32_t                                            BookShelvesMinCount;                                        // 0x0070   (0x0004)  
	int32_t                                            BookShelvesMaxCount;                                        // 0x0074   (0x0004)  
	int32_t                                            LivingWorldObjectsMinCount;                                 // 0x0078   (0x0004)  
	int32_t                                            LivingWorldObjectsMaxCount;                                 // 0x007C   (0x0004)  
	SDK_UNDEFINED(16,2905) /* FString */               __um(ThumbnailPath);                                        // 0x0080   (0x0010)  
	int32_t                                            SortingIndex;                                               // 0x0090   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0094   (0x0004)  MISSED
	SDK_UNDEFINED(16,2906) /* FString */               __um(DlcIDString);                                          // 0x0098   (0x0010)  
	TArray<int32_t>                                    FixedLayoutSeed;                                            // 0x00A8   (0x0010)  
	bool                                               IsInNonViolentBuild;                                        // 0x00B8   (0x0001)  
	bool                                               IsLicensed;                                                 // 0x00B9   (0x0001)  
	bool                                               AreEventSpawnersEnabled;                                    // 0x00BA   (0x0001)  
	unsigned char                                      UnknownData02_6[0x5];                                       // 0x00BB   (0x0005)  MISSED
};

/// Struct /Script/DeadByDaylight.ProfileLoadEventData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FProfileLoadEventData
{ 
	bool                                               FirstTimePlaying;                                           // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FDateTime                                          Timestamp;                                                  // 0x0008   (0x0008)  
};

/// Struct /Script/DeadByDaylight.PromoPackItemPayloadData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FPromoPackItemPayloadData
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/DeadByDaylight.PromoPackCharacterPayloadData
/// Size: 0x0000 (0x000001 - 0x000001)
struct FPromoPackCharacterPayloadData : FPromoPackItemPayloadData
{ 
};

/// Struct /Script/DeadByDaylight.PromoPackContentTypeData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPromoPackContentTypeData
{ 
	SDK_UNDEFINED(48,2907) /* TWeakObjectPtr<UClass*> */ __um(CorrespondingWidget);                                // 0x0000   (0x0030)  
	SDK_UNDEFINED(48,2908) /* TWeakObjectPtr<UTexture2D*> */ __um(ContentTypeIcon);                                // 0x0030   (0x0030)  
};

/// Struct /Script/DeadByDaylight.PromoPackCurrencyPayloadData
/// Size: 0x0003 (0x000001 - 0x000004)
struct FPromoPackCurrencyPayloadData : FPromoPackItemPayloadData
{ 
	unsigned char                                      UnknownData00_1[0x3];                                       // 0x0001   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.PromoPackData
/// Size: 0x0160 (0x000008 - 0x000168)
struct FPromoPackData : FDBDTableRowBase
{ 
	FName                                              ID;                                                         // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(48,2909) /* TWeakObjectPtr<UPaperSprite*> */ __um(PromoPackIcon);                                // 0x0018   (0x0030)  
	FItemUIData                                        UIData;                                                     // 0x0048   (0x0120)  
};

/// Struct /Script/DeadByDaylight.PromoPackItemData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPromoPackItemData
{ 
	class UTexture2D*                                  ItemIcon;                                                   // 0x0000   (0x0008)  
	FName                                              ItemId;                                                     // 0x0008   (0x000C)  
	EItemRarity                                        ItemRarity;                                                 // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	int32_t                                            Amount;                                                     // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x14];                                      // 0x001C   (0x0014)  MISSED
};

/// Struct /Script/DeadByDaylight.PromoPackPurchaseUIData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FPromoPackPurchaseUIData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	FPurchaseCurrencyData                              AuricCellsPurchaseData;                                     // 0x0008   (0x0020)  
	bool                                               HasAuricCellsData;                                          // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	FPurchaseCurrencyData                              IridescentShardsPurchaseData;                               // 0x0030   (0x0020)  
	bool                                               HasIridescentShards;                                        // 0x0050   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.PromoPackSelectedItemData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FPromoPackSelectedItemData
{ 
	class UTexture2D*                                  ItemTypeIcon;                                               // 0x0000   (0x0008)  
	SDK_UNDEFINED(24,2910) /* FText */                 __um(ItemName);                                             // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,2911) /* FText */                 __um(ItemSubTitle);                                         // 0x0020   (0x0018)  
	SDK_UNDEFINED(24,2912) /* FText */                 __um(ItemDescription);                                      // 0x0038   (0x0018)  
	class UUMGPromoPackItemWidget*                     Widget;                                                     // 0x0050   (0x0008)  
};

/// Struct /Script/DeadByDaylight.PurchaseItemUIData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPurchaseItemUIData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	FName                                              ItemId;                                                     // 0x0008   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(24,2913) /* FText */                 __um(DisplayName);                                          // 0x0018   (0x0018)  
	int32_t                                            Quantity;                                                   // 0x0030   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	SDK_UNDEFINED(16,2914) /* FString */               __um(IconPath);                                             // 0x0038   (0x0010)  
	EEventItemContentType                              ContentType;                                                // 0x0048   (0x0001)  
	EItemRarity                                        Rarity;                                                     // 0x0049   (0x0001)  
	unsigned char                                      UnknownData03_6[0x6];                                       // 0x004A   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.RandomRewardsData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FRandomRewardsData
{ 
	SDK_UNDEFINED(16,2915) /* FString */               __um(RewardId);                                             // 0x0000   (0x0010)  
	TArray<FRewardResponseItem>                        Rewards;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.RandomRewards
/// Size: 0x0018 (0x000000 - 0x000018)
struct FRandomRewards
{ 
	TArray<FRandomRewardsData>                         RandomRewards;                                              // 0x0000   (0x0010)  
	bool                                               RandomRewards_IsSet;                                        // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.RankNameData
/// Size: 0x0020 (0x000008 - 0x000028)
struct FRankNameData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(24,2916) /* FText */                 __um(RankName);                                             // 0x0008   (0x0018)  
	int32_t                                            SubRanks;                                                   // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.RankTooltipData
/// Size: 0x0028 (0x000098 - 0x0000C0)
struct FRankTooltipData : FBaseTooltipData
{ 
	EPlayerRole                                        CurrentPlayerRole;                                          // 0x0098   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0099   (0x0003)  MISSED
	FPlayerRoleRankData                                SurvivorRankData;                                           // 0x009C   (0x0010)  
	FPlayerRoleRankData                                KillerRankData;                                             // 0x00AC   (0x0010)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.RankUIData
/// Size: 0x0060 (0x000008 - 0x000068)
struct FRankUIData : FDBDTableRowBase
{ 
	int32_t                                            Rank;                                                       // 0x0008   (0x0004)  
	EPlayerRole                                        PlayerRole;                                                 // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	FSlateColor                                        Color;                                                      // 0x0010   (0x0028)  
	SDK_UNDEFINED(48,2917) /* TWeakObjectPtr<UTexture2D*> */ __um(Frame);                                          // 0x0038   (0x0030)  
};

/// Struct /Script/DeadByDaylight.RarityDistributionValue
/// Size: 0x0010 (0x000008 - 0x000018)
struct FRarityDistributionValue : FDBDTableRowBase
{ 
	int32_t                                            InnerRing;                                                  // 0x0008   (0x0004)  
	int32_t                                            MiddleRing;                                                 // 0x000C   (0x0004)  
	int32_t                                            OuterRing;                                                  // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.DBDRecentGameplayEvents
/// Size: 0x0050 (0x000000 - 0x000050)
struct FDBDRecentGameplayEvents
{ 
	SDK_UNDEFINED(80,2918) /* TMap<EDBDScoreTypes, FDateTime> */ __um(_recentGameplayEvents);                      // 0x0000   (0x0050)  
};

/// Struct /Script/DeadByDaylight.RefundUIData
/// Size: 0x0078 (0x000000 - 0x000078)
struct FRefundUIData
{ 
	TArray<FAtlantaRewardUIData>                       OriginalRewards;                                            // 0x0000   (0x0010)  
	FAtlantaRewardUIData                               Refund;                                                     // 0x0010   (0x0060)  
	int32_t                                            FragmentAmount;                                             // 0x0070   (0x0004)  
	int32_t                                            FragmentRequiredAmount;                                     // 0x0074   (0x0004)  
};

/// Struct /Script/DeadByDaylight.RefundKeyUIData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FRefundKeyUIData
{ 
	FName                                              ID;                                                         // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2919) /* FString */               __um(IconFilePath);                                         // 0x0010   (0x0010)  
	SDK_UNDEFINED(24,2920) /* FText */                 __um(DisplayName);                                          // 0x0020   (0x0018)  
	SDK_UNDEFINED(24,2921) /* FText */                 __um(Description);                                          // 0x0038   (0x0018)  
	ERefundSource                                      Source;                                                     // 0x0050   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.ReportData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FReportData
{ 
	SDK_UNDEFINED(16,2922) /* FString */               __um(Type);                                                 // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2923) /* FString */               __um(Reason);                                               // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2924) /* FString */               __um(Comment);                                              // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.RewardItemData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FRewardItemData
{ 
	SDK_UNDEFINED(16,2925) /* FString */               __um(IconPath);                                             // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2926) /* FString */               __um(Title);                                                // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2927) /* FString */               __um(Description);                                          // 0x0020   (0x0010)  
	EItemRarity                                        Rarity;                                                     // 0x0030   (0x0001)  
	EInventoryItemType                                 ItemType;                                                   // 0x0031   (0x0001)  
	bool                                               IsDuplicate;                                                // 0x0032   (0x0001)  
	ECurrencyType                                      CurrencyType;                                               // 0x0033   (0x0001)  
	int32_t                                            CurrencyAmount;                                             // 0x0034   (0x0004)  
};

/// Struct /Script/DeadByDaylight.S3AnalyticsConfig
/// Size: 0x00C0 (0x000000 - 0x0000C0)
struct FS3AnalyticsConfig
{ 
	bool                                               GameInitVerbose;                                            // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,2928) /* FString */               __um(GameConsoleLogMinimumVerbosity);                       // 0x0008   (0x0010)  
	uint32_t                                           MaxFramesUntilSend;                                         // 0x0018   (0x0004)  
	int32_t                                            MaxTrackedRecurrences;                                      // 0x001C   (0x0004)  
	SDK_UNDEFINED(16,2929) /* TArray<FString> */       __um(ScoreTypeWhitelist);                                   // 0x0020   (0x0010)  
	bool                                               ScoreTypeWhitelist_IsSet;                                   // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	SDK_UNDEFINED(16,2930) /* TArray<FString> */       __um(ScoreTypeBlacklist);                                   // 0x0038   (0x0010)  
	bool                                               ScoreTypeBlacklist_IsSet;                                   // 0x0048   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	SDK_UNDEFINED(16,2931) /* TArray<FString> */       __um(DetailedScoreTypeWhitelist);                           // 0x0050   (0x0010)  
	bool                                               DetailedScoreTypeWhitelist_IsSet;                           // 0x0060   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0061   (0x0007)  MISSED
	SDK_UNDEFINED(16,2932) /* TArray<FString> */       __um(DetailedScoreTypeBlacklist);                           // 0x0068   (0x0010)  
	bool                                               DetailedScoreTypeBlacklist_IsSet;                           // 0x0078   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0079   (0x0003)  MISSED
	uint32_t                                           PerformanceSamplingRate;                                    // 0x007C   (0x0004)  
	SDK_UNDEFINED(16,2933) /* TArray<FString> */       __um(PerformanceSamplingWhitelist);                         // 0x0080   (0x0010)  
	bool                                               PerformanceSamplingWhitelist_IsSet;                         // 0x0090   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x0091   (0x0007)  MISSED
	SDK_UNDEFINED(16,2934) /* TArray<FString> */       __um(PerformanceContextWhitelist);                          // 0x0098   (0x0010)  
	bool                                               PerformanceContextWhitelist_IsSet;                          // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData06_5[0x7];                                       // 0x00A9   (0x0007)  MISSED
	SDK_UNDEFINED(16,2935) /* FString */               __um(PerformanceSamplingRule);                              // 0x00B0   (0x0010)  
};

/// Struct /Script/DeadByDaylight.S3BeginnerTutorialLevelConfig
/// Size: 0x0008 (0x000000 - 0x000008)
struct FS3BeginnerTutorialLevelConfig
{ 
	int32_t                                            LevelToHideTutorial;                                        // 0x0000   (0x0004)  
	int32_t                                            PrestigeToHideTutorial;                                     // 0x0004   (0x0004)  
};

/// Struct /Script/DeadByDaylight.S3ContentVersionConfig
/// Size: 0x0010 (0x000000 - 0x000010)
struct FS3ContentVersionConfig
{ 
	bool                                               dsNewContentShutdown;                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              dsNewContentShutdownMinMinutes;                             // 0x0004   (0x0004)  
	float                                              dsNewContentShutdownMaxMinutes;                             // 0x0008   (0x0004)  
	bool                                               clientNewContentForceReboot;                                // 0x000C   (0x0001)  
	bool                                               dsNewContentCatalogItemValidation;                          // 0x000D   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x000E   (0x0002)  MISSED
};

/// Struct /Script/DeadByDaylight.S3DisconnectionBotReplacementConfig
/// Size: 0x000C (0x000000 - 0x00000C)
struct FS3DisconnectionBotReplacementConfig
{ 
	bool                                               EnableDisconnectionBotReplacement;                          // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            ReplacementBotRank;                                         // 0x0004   (0x0004)  
	bool                                               UsePlayerRankForReplacementBot;                             // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.S3DLCAdditionalInfoEntry
/// Size: 0x0040 (0x000000 - 0x000040)
struct FS3DLCAdditionalInfoEntry
{ 
	SDK_UNDEFINED(16,2936) /* FString */               __um(DLCId);                                                // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2937) /* FString */               __um(AvailableStartDate);                                   // 0x0010   (0x0010)  
	bool                                               AvailableStartDate_IsSet;                                   // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	SDK_UNDEFINED(16,2938) /* FString */               __um(AvailableEndDate);                                     // 0x0028   (0x0010)  
	bool                                               AvailableEndDate_IsSet;                                     // 0x0038   (0x0001)  
	bool                                               IsShownInGameStore;                                         // 0x0039   (0x0001)  
	bool                                               IsShownInGameStore_IsSet;                                   // 0x003A   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x003B   (0x0005)  MISSED
};

/// Struct /Script/DeadByDaylight.S3DLCConfig
/// Size: 0x0010 (0x000000 - 0x000010)
struct FS3DLCConfig
{ 
	TArray<FS3DLCAdditionalInfoEntry>                  DlcAdditionalInfo;                                          // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.S3FriendsListGameConfig
/// Size: 0x000C (0x000000 - 0x00000C)
struct FS3FriendsListGameConfig
{ 
	int32_t                                            MaxFriendSuggestionsFacebook;                               // 0x0000   (0x0004)  
	int32_t                                            MaxFriendSuggestionsGoogle;                                 // 0x0004   (0x0004)  
	int32_t                                            MaxFriendSuggestionsRecentlyPlayed;                         // 0x0008   (0x0004)  
};

/// Struct /Script/DeadByDaylight.S3MatchConfig
/// Size: 0x0008 (0x000000 - 0x000008)
struct FS3MatchConfig
{ 
	int32_t                                            MaxMatchSeconds;                                            // 0x0000   (0x0004)  
	int32_t                                            MaxEndGameCollapseSeconds;                                  // 0x0004   (0x0004)  
};

/// Struct /Script/DeadByDaylight.S3MirrorsDefaultRetryPolicyConfig
/// Size: 0x000C (0x000000 - 0x00000C)
struct FS3MirrorsDefaultRetryPolicyConfig
{ 
	bool                                               Enabled;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            RetryCount;                                                 // 0x0004   (0x0004)  
	int32_t                                            TIMEOUT;                                                    // 0x0008   (0x0004)  
};

/// Struct /Script/DeadByDaylight.S3OnlineConfig
/// Size: 0x0020 (0x000000 - 0x000020)
struct FS3OnlineConfig
{ 
	TArray<int32_t>                                    HiddenProgressiveQueueDelays;                               // 0x0000   (0x0010)  
	int32_t                                            HiddenQueueDelayResetThreshold;                             // 0x0010   (0x0004)  
	int32_t                                            RandomQueueDelayMin;                                        // 0x0014   (0x0004)  
	int32_t                                            RandomQueueDelayMax;                                        // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.S3SecurityConfig
/// Size: 0x0002 (0x000000 - 0x000002)
struct FS3SecurityConfig
{ 
	bool                                               AllowServerCheats;                                          // 0x0000   (0x0001)  
	bool                                               AllowClientGuestProviderOnServerLogin;                      // 0x0001   (0x0001)  
};

/// Struct /Script/DeadByDaylight.S3KrakenSdkValidationConfig
/// Size: 0x0020 (0x000000 - 0x000020)
struct FS3KrakenSdkValidationConfig
{ 
	bool                                               Enabled;                                                    // 0x0000   (0x0001)  
	bool                                               UseWhitelist;                                               // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	SDK_UNDEFINED(16,2939) /* TArray<FString> */       __um(Whitelist);                                            // 0x0008   (0x0010)  
	bool                                               Whitelist_IsSet;                                            // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.S3GameConfigsData
/// Size: 0x0368 (0x000000 - 0x000368)
struct FS3GameConfigsData
{ 
	FS3AnalyticsConfig                                 Analytics;                                                  // 0x0000   (0x00C0)  
	FArchivesConfig                                    Archives;                                                   // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00C4   (0x0004)  MISSED
	FBalanceToolGameConfig                             BalanceTool;                                                // 0x00C8   (0x0010)  
	bool                                               BalanceTool_IsSet;                                          // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x00D9   (0x0003)  MISSED
	FS3BeginnerTutorialLevelConfig                     BeginnerTutorialLevel;                                      // 0x00DC   (0x0008)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x00E4   (0x0004)  MISSED
	FBotMatchConfig                                    BotMatch;                                                   // 0x00E8   (0x0020)  
	FDedicatedServerGameConfig                         DedicatedServer;                                            // 0x0108   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x010C   (0x0004)  MISSED
	FS3DLCConfig                                       Dlc;                                                        // 0x0110   (0x0010)  
	bool                                               EnableNetAsyncLoading;                                      // 0x0120   (0x0001)  
	bool                                               EnablePlayersConnectionStatus;                              // 0x0121   (0x0001)  
	bool                                               EnablePlayerIdInSurvey;                                     // 0x0122   (0x0001)  
	bool                                               EnableBotsInCustomMatch;                                    // 0x0123   (0x0001)  
	bool                                               DisableNavigationDuringMatchmaking;                         // 0x0124   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0125   (0x0003)  MISSED
	float                                              RTMTimeoutThreshold;                                        // 0x0128   (0x0004)  
	float                                              GameLoadingTimeout;                                         // 0x012C   (0x0004)  
	bool                                               EnableHapticVibration;                                      // 0x0130   (0x0001)  
	bool                                               EnableWinGDKAccountMismatchPopup;                           // 0x0131   (0x0001)  
	bool                                               EnableAntiMoveHack;                                         // 0x0132   (0x0001)  
	bool                                               EnablePostIISCinematic;                                     // 0x0133   (0x0001)  
	bool                                               EnablePlayStationTrophiesIISSync;                           // 0x0134   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0135   (0x0003)  MISSED
	SDK_UNDEFINED(80,2940) /* TMap<FString, bool> */   __um(CrossPromoManagerPlatforms);                           // 0x0138   (0x0050)  
	bool                                               CrossPromoManagerPlatforms_IsSet;                           // 0x0188   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x0189   (0x0003)  MISSED
	FS3FriendsListGameConfig                           FriendsList;                                                // 0x018C   (0x000C)  
	FHitValidationGameConfig                           HitValidation;                                              // 0x0198   (0x0018)  
	FAnimBudgeterGameConfig                            AnimBudgeter;                                               // 0x01B0   (0x0028)  
	bool                                               AnimBudgeter_IsSet;                                         // 0x01D8   (0x0001)  
	FJwtGameConfig                                     Jwt;                                                        // 0x01D9   (0x0001)  
	unsigned char                                      UnknownData07_5[0x2];                                       // 0x01DA   (0x0002)  MISSED
	FS3MatchConfig                                     Match;                                                      // 0x01DC   (0x0008)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x01E4   (0x0004)  MISSED
	TArray<FHangTimesPerStep>                          HangTimes;                                                  // 0x01E8   (0x0010)  
	SDK_UNDEFINED(80,2941) /* TMap<FString, bool> */   __um(MatchmakingCrossplayPlatforms);                        // 0x01F8   (0x0050)  
	FS3MirrorsDefaultRetryPolicyConfig                 MirrorsDefaultRetryPolicy;                                  // 0x0248   (0x000C)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x0254   (0x0004)  MISSED
	FS3OnlineConfig                                    Online;                                                     // 0x0258   (0x0020)  
	FS3SecurityConfig                                  Security;                                                   // 0x0278   (0x0002)  
	unsigned char                                      UnknownData10_5[0x6];                                       // 0x027A   (0x0006)  MISSED
	FS3KrakenSdkValidationConfig                       KrakenSdkValidation;                                        // 0x0280   (0x0020)  
	FS3ContentVersionConfig                            ContentVersion;                                             // 0x02A0   (0x0010)  
	FS3DisconnectionBotReplacementConfig               DisconnectionBotReplacement;                                // 0x02B0   (0x000C)  
	unsigned char                                      UnknownData11_5[0x4];                                       // 0x02BC   (0x0004)  MISSED
	SDK_UNDEFINED(80,2942) /* TMap<FString, bool> */   __um(SocialCrossfriendsPlatforms);                          // 0x02C0   (0x0050)  
	SDK_UNDEFINED(80,2943) /* TMap<FString, bool> */   __um(SocialCrossprogressionPlatforms);                      // 0x0310   (0x0050)  
	bool                                               EnableMoriPreviewButton;                                    // 0x0360   (0x0001)  
	bool                                               EnableAntiCamping;                                          // 0x0361   (0x0001)  
	bool                                               EnableConsumableQueryFromKraken;                            // 0x0362   (0x0001)  
	bool                                               EnableLimitRegressionEvents;                                // 0x0363   (0x0001)  
	bool                                               EnableConsoleSuspendSave;                                   // 0x0364   (0x0001)  
	bool                                               EnableLobbyLeaveSave;                                       // 0x0365   (0x0001)  
	unsigned char                                      UnknownData12_6[0x2];                                       // 0x0366   (0x0002)  MISSED
};

/// Struct /Script/DeadByDaylight.S3GameConfigsDSData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FS3GameConfigsDSData
{ 
	FDDosGameConfigDS                                  Ddos;                                                       // 0x0000   (0x0002)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	SDK_UNDEFINED(80,2944) /* TMap<int32_t, float> */  __um(MapHistoryWeights);                                    // 0x0008   (0x0050)  
};

/// Struct /Script/DeadByDaylight.S3PrestigeConfig
/// Size: 0x0020 (0x000000 - 0x000020)
struct FS3PrestigeConfig
{ 
	int32_t                                            MaxPrestige;                                                // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<int32_t>                                    PerkThresholds;                                             // 0x0008   (0x0010)  
	int32_t                                            PrestigeCost;                                               // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.S3PrestigeData
/// Size: 0x0070 (0x000000 - 0x000070)
struct FS3PrestigeData
{ 
	FS3PrestigeConfig                                  Config;                                                     // 0x0000   (0x0020)  
	SDK_UNDEFINED(80,2945) /* TMap<FString, FS3PrestigeCharacterRewards> */ __um(RewardsByCharacters);             // 0x0020   (0x0050)  
};

/// Struct /Script/DeadByDaylight.S3PrestigeRewardItem
/// Size: 0x0028 (0x000000 - 0x000028)
struct FS3PrestigeRewardItem
{ 
	SDK_UNDEFINED(16,2946) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2947) /* FString */               __um(RewardType);                                           // 0x0010   (0x0010)  
	int32_t                                            PerkLevel;                                                  // 0x0020   (0x0004)  
	bool                                               PerkLevel_IsSet;                                            // 0x0024   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0025   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.S3PrestigeRewards
/// Size: 0x0018 (0x000000 - 0x000018)
struct FS3PrestigeRewards
{ 
	int32_t                                            PrestigeLevel;                                              // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FS3PrestigeRewardItem>                      Rewards;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.S3PrestigeCharacterRewards
/// Size: 0x0010 (0x000000 - 0x000010)
struct FS3PrestigeCharacterRewards
{ 
	TArray<FS3PrestigeRewards>                         RewardsByPrestigeLevel;                                     // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.S3RemoteContentManifestEntry
/// Size: 0x0050 (0x000000 - 0x000050)
struct FS3RemoteContentManifestEntry
{ 
	SDK_UNDEFINED(16,2948) /* FString */               __um(Schema);                                               // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2949) /* FString */               __um(Uri);                                                  // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2950) /* FString */               __um(ContentVersion);                                       // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2951) /* FString */               __um(PackagedPath);                                         // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,2952) /* FString */               __um(DownloadStrategy);                                     // 0x0040   (0x0010)  
};

/// Struct /Script/DeadByDaylight.S3RemoteContentManifest
/// Size: 0x0010 (0x000000 - 0x000010)
struct FS3RemoteContentManifest
{ 
	TArray<FS3RemoteContentManifestEntry>              Entries;                                                    // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ScreenshotToolTarget
/// Size: 0x0018 (0x000000 - 0x000018)
struct FScreenshotToolTarget
{ 
	EScreenshotToolTargetCategory                      category;                                                   // 0x0000   (0x0001)  
	EScreenshotToolTargetSubCategory                   Subcategory;                                                // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	SDK_UNDEFINED(16,2953) /* FString */               __um(RawData);                                              // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ScreenshotToolTargetWithLabel
/// Size: 0x0028 (0x000000 - 0x000028)
struct FScreenshotToolTargetWithLabel
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FScreenshotToolTarget                              Data;                                                       // 0x0010   (0x0018)  
};

/// Struct /Script/DeadByDaylight.ScreenshotToolViewOverridesData
/// Size: 0x0038 (0x000008 - 0x000040)
struct FScreenshotToolViewOverridesData : FTableRowBase
{ 
	FScreenshotViewSetting                             Settings;                                                   // 0x0008   (0x0028)  
	TArray<FScreenshotToolTargetWithLabel>             Targets;                                                    // 0x0030   (0x0010)  
};

/// Struct /Script/DeadByDaylight.CharacterAnimation
/// Size: 0x0040 (0x000000 - 0x000040)
struct FCharacterAnimation
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FCharacterAnimationDropdown                        Data;                                                       // 0x0010   (0x0020)  
	TArray<FCharacterAnimationAssetOutfitOverride>     OutfitOverrides;                                            // 0x0030   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ItemViewSetting
/// Size: 0x0044 (0x000000 - 0x000044)
struct FItemViewSetting
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	FCustomizationItemDropdown                         Item;                                                       // 0x000C   (0x0010)  
	FScreenshotViewSetting                             Settings;                                                   // 0x001C   (0x0028)  
};

/// Struct /Script/DeadByDaylight.CharacterItemCategoryViewSetting
/// Size: 0x0040 (0x000000 - 0x000040)
struct FCharacterItemCategoryViewSetting
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	FRoleItemCategoryDropdown                          CharacterDropdown;                                          // 0x000C   (0x000C)  
	FScreenshotViewSetting                             Settings;                                                   // 0x0018   (0x0028)  
};

/// Struct /Script/DeadByDaylight.CharmViewSetting
/// Size: 0x0044 (0x000000 - 0x000044)
struct FCharmViewSetting
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	FCharmDropdown                                     CharmId;                                                    // 0x000C   (0x0010)  
	FScreenshotViewSetting                             Settings;                                                   // 0x001C   (0x0028)  
};

/// Struct /Script/DeadByDaylight.CharmCategorySetting
/// Size: 0x0038 (0x000000 - 0x000038)
struct FCharmCategorySetting
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	ECharmCategory                                     CharmCategory;                                              // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	FScreenshotViewSetting                             Settings;                                                   // 0x0010   (0x0028)  
};

/// Struct /Script/DeadByDaylight.OutfitViewSetting
/// Size: 0x0048 (0x000000 - 0x000048)
struct FOutfitViewSetting
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	FOutfitDropdown                                    OutfitDropdown;                                             // 0x000C   (0x0014)  
	FScreenshotViewSetting                             Settings;                                                   // 0x0020   (0x0028)  
};

/// Struct /Script/DeadByDaylight.CharacterViewSetting
/// Size: 0x003C (0x000000 - 0x00003C)
struct FCharacterViewSetting
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	FCharacterDropdown                                 CharacterDropdown;                                          // 0x000C   (0x0008)  
	FScreenshotViewSetting                             Settings;                                                   // 0x0014   (0x0028)  
};

/// Struct /Script/DeadByDaylight.GenderViewSetting
/// Size: 0x0044 (0x000000 - 0x000044)
struct FGenderViewSetting
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	FRoleItemCategoryDropdown                          RoleItemCategory;                                           // 0x000C   (0x000C)  
	EGender                                            gender;                                                     // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0019   (0x0003)  MISSED
	FScreenshotViewSetting                             Settings;                                                   // 0x001C   (0x0028)  
};

/// Struct /Script/DeadByDaylight.RoleGenderViewSetting
/// Size: 0x0038 (0x000000 - 0x000038)
struct FRoleGenderViewSetting
{ 
	FName                                              label;                                                      // 0x0000   (0x000C)  
	FRoleDropdown                                      RoleDropdown;                                               // 0x000C   (0x0002)  
	EGender                                            gender;                                                     // 0x000E   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x000F   (0x0001)  MISSED
	FScreenshotViewSetting                             Settings;                                                   // 0x0010   (0x0028)  
};

/// Struct /Script/DeadByDaylight.ScreenshotToolOverrideInfo
/// Size: 0x001C (0x000000 - 0x00001C)
struct FScreenshotToolOverrideInfo
{ 
	int16_t                                            PriorityHit;                                                // 0x0000   (0x0002)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	FName                                              RowName;                                                    // 0x0004   (0x000C)  
	FName                                              TargetLabel;                                                // 0x0010   (0x000C)  
};

/// Struct /Script/DeadByDaylight.ScreenshotToolCustomizationInfo
/// Size: 0x0014 (0x000000 - 0x000014)
struct FScreenshotToolCustomizationInfo
{ 
	int32_t                                            characterId;                                                // 0x0000   (0x0004)  
	FName                                              ID;                                                         // 0x0004   (0x000C)  
	ECustomizationCategory                             category;                                                   // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.SeenStoreItemsSaved
/// Size: 0x0020 (0x000010 - 0x000030)
struct FSeenStoreItemsSaved : FSaveDataBase
{ 
	SDK_UNDEFINED(16,2954) /* FString */               __um(NewStoreItemsStartDate);                               // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2955) /* TArray<FString> */       __um(SeenNewStoreItems);                                    // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ShopTransactionVirtualCurrencyParameters
/// Size: 0x0028 (0x000000 - 0x000028)
struct FShopTransactionVirtualCurrencyParameters
{ 
	int32_t                                            virtualCurrencyAmount;                                      // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(16,2956) /* FString */               __um(virtualCurrencyName);                                  // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,2957) /* FString */               __um(virtualCurrencyType);                                  // 0x0018   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ShopTransactionVirtualCurrency
/// Size: 0x0028 (0x000000 - 0x000028)
struct FShopTransactionVirtualCurrency
{ 
	FShopTransactionVirtualCurrencyParameters          virtualCurrency;                                            // 0x0000   (0x0028)  
};

/// Struct /Script/DeadByDaylight.ShopTransactionItemParameters
/// Size: 0x0028 (0x000000 - 0x000028)
struct FShopTransactionItemParameters
{ 
	int32_t                                            itemAmount;                                                 // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(16,2958) /* FString */               __um(ItemName);                                             // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,2959) /* FString */               __um(ItemType);                                             // 0x0018   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ShopTransactionItem
/// Size: 0x0028 (0x000000 - 0x000028)
struct FShopTransactionItem
{ 
	FShopTransactionItemParameters                     Item;                                                       // 0x0000   (0x0028)  
};

/// Struct /Script/DeadByDaylight.ShopTransactionProducts
/// Size: 0x0020 (0x000000 - 0x000020)
struct FShopTransactionProducts
{ 
	TArray<FShopTransactionVirtualCurrency>            virtualCurrencies;                                          // 0x0000   (0x0010)  
	TArray<FShopTransactionItem>                       Items;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ShopTransactionCustomData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FShopTransactionCustomData
{ 
	FShopTransactionProducts                           productsReceived;                                           // 0x0000   (0x0020)  
	SDK_UNDEFINED(16,2960) /* FString */               __um(transactionName);                                      // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2961) /* FString */               __um(TransactionType);                                      // 0x0030   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ShopTransactionCurrencyProducts
/// Size: 0x0010 (0x000000 - 0x000010)
struct FShopTransactionCurrencyProducts
{ 
	TArray<FShopTransactionVirtualCurrency>            virtualCurrencies;                                          // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ShopTransactionCurrencyCustomData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FShopTransactionCurrencyCustomData
{ 
	FShopTransactionCurrencyProducts                   productsReceived;                                           // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2962) /* FString */               __um(transactionName);                                      // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2963) /* FString */               __um(TransactionType);                                      // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ShopTransactionItemProducts
/// Size: 0x0010 (0x000000 - 0x000010)
struct FShopTransactionItemProducts
{ 
	TArray<FShopTransactionItem>                       Items;                                                      // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ShopTransactionItemCustomData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FShopTransactionItemCustomData
{ 
	FShopTransactionItemProducts                       productsReceived;                                           // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2964) /* FString */               __um(transactionName);                                      // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2965) /* FString */               __um(TransactionType);                                      // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ShopWalletUpdate
/// Size: 0x0018 (0x000000 - 0x000018)
struct FShopWalletUpdate
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/DeadByDaylight.SkillCheckDefinition
/// Size: 0x0028 (0x000000 - 0x000028)
struct FSkillCheckDefinition
{ 
	float                                              SuccessZoneStart;                                           // 0x0000   (0x0004)  
	float                                              SuccessZoneEnd;                                             // 0x0004   (0x0004)  
	float                                              BonusZoneLength;                                            // 0x0008   (0x0004)  
	float                                              BonusZoneStart;                                             // 0x000C   (0x0004)  
	float                                              ProgressRate;                                               // 0x0010   (0x0004)  
	float                                              StartingTickerPosition;                                     // 0x0014   (0x0004)  
	bool                                               IsDeactivatedAfterResponse;                                 // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0019   (0x0003)  MISSED
	float                                              WarningSoundDelay;                                          // 0x001C   (0x0004)  
	bool                                               IsAudioMuted;                                               // 0x0020   (0x0001)  
	bool                                               IsJittering;                                                // 0x0021   (0x0001)  
	bool                                               IsOffCenter;                                                // 0x0022   (0x0001)  
	bool                                               IsSuccessZoneMirrorred;                                     // 0x0023   (0x0001)  
	bool                                               IsInsane;                                                   // 0x0024   (0x0001)  
	bool                                               IsLocallyPredicted;                                         // 0x0025   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x0026   (0x0002)  MISSED
};

/// Struct /Script/DeadByDaylight.SkillCheckResponse
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSkillCheckResponse
{ 
	float                                              ChargeChange;                                               // 0x0000   (0x0004)  
	bool                                               IsTriggeredByInput;                                         // 0x0004   (0x0001)  
	bool                                               IsSuccessful;                                               // 0x0005   (0x0001)  
	bool                                               IsBonus;                                                    // 0x0006   (0x0001)  
	bool                                               IsInsane;                                                   // 0x0007   (0x0001)  
	bool                                               IsTriggeringLoudNoise;                                      // 0x0008   (0x0001)  
	bool                                               FailedCountedAsGood;                                        // 0x0009   (0x0001)  
	ESkillCheckCustomType                              Type;                                                       // 0x000A   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x000B   (0x0005)  MISSED
	class UChargeableInteractionDefinition*            Interaction;                                                // 0x0010   (0x0008)  
	uint32_t                                           VerificationKey;                                            // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.SpawnPopulationHandler
/// Size: 0x0118 (0x000000 - 0x000118)
struct FSpawnPopulationHandler
{ 
	unsigned char                                      UnknownData00_2[0x108];                                     // 0x0000   (0x0108)  MISSED
	TArray<class USceneComponent*>                     _allAvailableSpawners;                                      // 0x0108   (0x0010)  
};

/// Struct /Script/DeadByDaylight.GiftSpecialActionData
/// Size: 0x0038 (0x000008 - 0x000040)
struct FGiftSpecialActionData : FDBDTableRowBase
{ 
	EGiftSpecialAction                                 ActionType;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	SDK_UNDEFINED(48,2966) /* TWeakObjectPtr<UMediaSource*> */ __um(VideoSource);                                  // 0x0010   (0x0030)  
};

/// Struct /Script/DeadByDaylight.SpecialEventObjectiveData
/// Size: 0x00E0 (0x000000 - 0x0000E0)
struct FSpecialEventObjectiveData
{ 
	FName                                              ObjectiveId;                                                // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(24,2967) /* FText */                 __um(Title);                                                // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,2968) /* FText */                 __um(Description);                                          // 0x0028   (0x0018)  
	SDK_UNDEFINED(16,2969) /* FString */               __um(IconPath);                                             // 0x0040   (0x0010)  
	SDK_UNDEFINED(16,2970) /* FString */               __um(ObjectiveFrameLabel);                                  // 0x0050   (0x0010)  
	SDK_UNDEFINED(24,2971) /* FText */                 __um(CompletedTitle);                                       // 0x0060   (0x0018)  
	SDK_UNDEFINED(24,2972) /* FText */                 __um(CompletedDescription);                                 // 0x0078   (0x0018)  
	FName                                              RewardId;                                                   // 0x0090   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x009C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2973) /* FString */               __um(LockedRewardGenericIconPath);                          // 0x00A0   (0x0010)  
	SDK_UNDEFINED(16,2974) /* FString */               __um(UnlockedRewardGenericIconPath);                        // 0x00B0   (0x0010)  
	EPlayerRole                                        PlayerRole;                                                 // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x00C1   (0x0007)  MISSED
	SDK_UNDEFINED(16,2975) /* FString */               __um(StatName);                                             // 0x00C8   (0x0010)  
	uint32_t                                           Sections;                                                   // 0x00D8   (0x0004)  
	uint32_t                                           MaxValue;                                                   // 0x00DC   (0x0004)  
};

/// Struct /Script/DeadByDaylight.SpecialEventEntryPopupData
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FSpecialEventEntryPopupData
{ 
	SDK_UNDEFINED(24,2976) /* FText */                 __um(Title);                                                // 0x0000   (0x0018)  
	SDK_UNDEFINED(24,2977) /* FText */                 __um(Description);                                          // 0x0018   (0x0018)  
	TArray<FName>                                      AdditionalStoreItemIds;                                     // 0x0030   (0x0010)  
	TArray<FName>                                      AdditionalStoreEventsIds;                                   // 0x0040   (0x0010)  
	TArray<FName>                                      StoreItemIdPriorityOrdering;                                // 0x0050   (0x0010)  
	bool                                               UseDetailsTab;                                              // 0x0060   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0061   (0x0007)  MISSED
	FSpecialEventDetailsTabData                        DetailsTabData;                                             // 0x0068   (0x0048)  
};

/// Struct /Script/DeadByDaylight.SpecialEventBloodwebData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FSpecialEventBloodwebData
{ 
	ESpecialEventBloodwebChestCondition                EventChestCondition;                                        // 0x0000   (0x0001)  
};

/// Struct /Script/DeadByDaylight.SpecialEventOfferingSequenceData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FSpecialEventOfferingSequenceData
{ 
	SDK_UNDEFINED(48,2978) /* TWeakObjectPtr<UClass*> */ __um(CardClass);                                          // 0x0000   (0x0030)  
	SDK_UNDEFINED(48,2979) /* TWeakObjectPtr<UClass*> */ __um(ManagerClass);                                       // 0x0030   (0x0030)  
};

/// Struct /Script/DeadByDaylight.SpecialEventSplashScreenData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FSpecialEventSplashScreenData
{ 
	bool                                               Enabled;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Delay;                                                      // 0x0004   (0x0004)  
	SDK_UNDEFINED(48,2980) /* TWeakObjectPtr<UClass*> */ __um(DBDLogoClass);                                       // 0x0008   (0x0030)  
};

/// Struct /Script/DeadByDaylight.SpecialEventUiTakeoverData
/// Size: 0x0005 (0x000000 - 0x000005)
struct FSpecialEventUiTakeoverData
{ 
	bool                                               UseMainMenuTakeover;                                        // 0x0000   (0x0001)  
	bool                                               UseEventEntryPopupTakeover;                                 // 0x0001   (0x0001)  
	bool                                               UseArchivesTakeover;                                        // 0x0002   (0x0001)  
	bool                                               UseStoreShrineTakeover;                                     // 0x0003   (0x0001)  
	bool                                               UseLobbyTakeover;                                           // 0x0004   (0x0001)  
};

/// Struct /Script/DeadByDaylight.SpecialEventData
/// Size: 0x0218 (0x000008 - 0x000220)
struct FSpecialEventData : FDBDTableRowBase
{ 
	FName                                              eventID;                                                    // 0x0008   (0x000C)  
	ECurrencyType                                      CurrencyType;                                               // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	SDK_UNDEFINED(24,2981) /* FText */                 __um(EventName);                                            // 0x0018   (0x0018)  
	SDK_UNDEFINED(16,2982) /* FString */               __um(EventBannerLabel);                                     // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,2983) /* FString */               __um(EventThemeLabel);                                      // 0x0040   (0x0010)  
	bool                                               IsTrackedOnline;                                            // 0x0050   (0x0001)  
	bool                                               UseSpecialEventLoadingScreen;                               // 0x0051   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x0052   (0x0006)  MISSED
	TArray<FSpecialEventObjectiveData>                 Objectives;                                                 // 0x0058   (0x0010)  
	SDK_UNDEFINED(16,2984) /* FString */               __um(LobbyName);                                            // 0x0068   (0x0010)  
	SDK_UNDEFINED(16,2985) /* FString */               __um(ShopName);                                             // 0x0078   (0x0010)  
	SDK_UNDEFINED(16,2986) /* TArray<FString> */       __um(AdditionalLobbyNames);                                 // 0x0088   (0x0010)  
	FName                                              AudioStateSpecialEvent;                                     // 0x0098   (0x000C)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x00A4   (0x0004)  MISSED
	TArray<FSpecialBehaviourSpawnableComponent>        SpawnableComponents;                                        // 0x00A8   (0x0010)  
	ESpecialEventGameMode                              GameMode;                                                   // 0x00B8   (0x0001)  
	bool                                               UseEventEntryScreen;                                        // 0x00B9   (0x0001)  
	unsigned char                                      UnknownData03_5[0x6];                                       // 0x00BA   (0x0006)  MISSED
	FSpecialEventEntryPopupData                        EventEntryData;                                             // 0x00C0   (0x00B0)  
	ESpecialEventDependency                            EventDependency;                                            // 0x0170   (0x0001)  
	bool                                               UseMarketDiscount;                                          // 0x0171   (0x0001)  
	FSpecialEventBloodwebData                          Bloodweb;                                                   // 0x0172   (0x0001)  
	unsigned char                                      UnknownData04_5[0x5];                                       // 0x0173   (0x0005)  MISSED
	FSpecialEventOfferingSequenceData                  OfferingSequence;                                           // 0x0178   (0x0060)  
	FSpecialEventSplashScreenData                      SplashScreen;                                               // 0x01D8   (0x0038)  
	FSpecialEventUiTakeoverData                        UiTakeoverData;                                             // 0x0210   (0x0005)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0215   (0x0003)  MISSED
	class UCommentatorAudioData*                       CommentatorAudioData;                                       // 0x0218   (0x0008)  
};

/// Struct /Script/DeadByDaylight.SpecialEventLoadingTextData
/// Size: 0x0068 (0x000000 - 0x000068)
struct FSpecialEventLoadingTextData
{ 
	FName                                              eventID;                                                    // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2987) /* FString */               __um(Title);                                                // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2988) /* FString */               __um(Description);                                          // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2989) /* FString */               __um(IconPath);                                             // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,2990) /* FString */               __um(SpecialBehaviourId);                                   // 0x0040   (0x0010)  
	SDK_UNDEFINED(16,2991) /* FString */               __um(ID);                                                   // 0x0050   (0x0010)  
	bool                                               isPreviousSpecial;                                          // 0x0060   (0x0001)  
	bool                                               isPreviousSpecial_IsSet;                                    // 0x0061   (0x0001)  
	bool                                               isNextSpecial;                                              // 0x0062   (0x0001)  
	bool                                               isNextSpecial_IsSet;                                        // 0x0063   (0x0001)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.LoadingTextContentData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FLoadingTextContentData
{ 
	TArray<FSpecialEventLoadingTextData>               LoadingText;                                                // 0x0000   (0x0010)  
	bool                                               LoadingText_isset;                                          // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.SpecialEventsContentData
/// Size: 0x0128 (0x000000 - 0x000128)
struct FSpecialEventsContentData
{ 
	SDK_UNDEFINED(16,2992) /* FString */               __um(eventID);                                              // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2993) /* FString */               __um(starttime);                                            // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,2994) /* FString */               __um(MainEndTime);                                          // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,2995) /* FString */               __um(PostEndTime);                                          // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0xE8];                                      // 0x0040   (0x00E8)  MISSED
};

/// Struct /Script/DeadByDaylight.LTEData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FLTEData
{ 
	SDK_UNDEFINED(16,2996) /* FString */               __um(gameType);                                             // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,2997) /* FString */               __um(GameModeQueue);                                        // 0x0010   (0x0010)  
	float                                              IncentiveBonus;                                             // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.SpecialEventMiscRewards
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSpecialEventMiscRewards
{ 
	SDK_UNDEFINED(16,2998) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	TArray<FRewardResponseItem>                        Rewards;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ScoreEventRewards
/// Size: 0x0018 (0x000000 - 0x000018)
struct FScoreEventRewards
{ 
	int32_t                                            Weight;                                                     // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FRewardResponseItem>                        Rewards;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SpecialEventMilestoneRewards
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSpecialEventMilestoneRewards
{ 
	int32_t                                            PointsCost;                                                 // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FRewardResponseItem>                        Rewards;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.EventPeriod
/// Size: 0x0040 (0x000000 - 0x000040)
struct FEventPeriod
{ 
	SDK_UNDEFINED(16,2999) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,3000) /* FString */               __um(StartDate);                                            // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,3001) /* FString */               __um(EndDate);                                              // 0x0020   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.SpecialEventsData
/// Size: 0x00B8 (0x000000 - 0x0000B8)
struct FSpecialEventsData
{ 
	SDK_UNDEFINED(16,3002) /* FString */               __um(eventID);                                              // 0x0000   (0x0010)  
	FLTEData                                           LTEData;                                                    // 0x0010   (0x0028)  
	bool                                               LteData_IsSet;                                              // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<FSpecialEventMiscRewards>                   MiscRewards;                                                // 0x0040   (0x0010)  
	bool                                               MiscRewards_IsSet;                                          // 0x0050   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0051   (0x0007)  MISSED
	TArray<FRewardResponseItem>                        OwnerRewards;                                               // 0x0058   (0x0010)  
	bool                                               OwnerRewards_IsSet;                                         // 0x0068   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0069   (0x0007)  MISSED
	TArray<FScoreEventRewards>                         ScoreEventRewards;                                          // 0x0070   (0x0010)  
	bool                                               ScoreEventRewards_IsSet;                                    // 0x0080   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0081   (0x0007)  MISSED
	TArray<FSpecialEventMilestoneRewards>              MilestoneRewards;                                           // 0x0088   (0x0010)  
	bool                                               MilestoneRewards_IsSet;                                     // 0x0098   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x0099   (0x0007)  MISSED
	TArray<FEventPeriod>                               EventPeriods;                                               // 0x00A0   (0x0010)  
	bool                                               EventPeriods_IsSet;                                         // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x00B1   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.SpecialEventContent
/// Size: 0x0028 (0x000000 - 0x000028)
struct FSpecialEventContent
{ 
	TArray<FSpecialEventsContentData>                  SpecialEvents;                                              // 0x0000   (0x0010)  
	TArray<FSpecialEventsData>                         SpecialEventsData;                                          // 0x0010   (0x0010)  
	bool                                               SpecialEventsData_IsSet;                                    // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.StatusEffectProperties
/// Size: 0x0048 (0x000258 - 0x0002A0)
struct FStatusEffectProperties : FItemData
{ 
	TArray<FName>                                      Tags;                                                       // 0x0258   (0x0010)  
	SDK_UNDEFINED(48,3003) /* TWeakObjectPtr<UClass*> */ __um(StatusEffectBlueprint);                              // 0x0268   (0x0030)  
	EStatusEffectType                                  StatusEffectType;                                           // 0x0298   (0x0001)  
	EExternalEffectSource                              ExternalEffectSource;                                       // 0x0299   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x029A   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.StatusViewProperties
/// Size: 0x00C0 (0x000008 - 0x0000C8)
struct FStatusViewProperties : FDBDTableRowBase
{ 
	FName                                              _statusViewID;                                              // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(24,3004) /* FText */                 __um(_description);                                         // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,3005) /* FText */                 __um(_displayName);                                         // 0x0030   (0x0018)  
	SDK_UNDEFINED(48,3006) /* TWeakObjectPtr<UClass*> */ __um(_statusViewBlueprint);                               // 0x0048   (0x0030)  
	EStatusEffectType                                  _statusType;                                                // 0x0078   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0079   (0x0007)  MISSED
	SDK_UNDEFINED(16,3007) /* FString */               __um(_iconFilePath);                                        // 0x0080   (0x0010)  
	SDK_UNDEFINED(48,3008) /* TWeakObjectPtr<UTexture2D*> */ __um(_iconAsset);                                     // 0x0090   (0x0030)  
	bool                                               _playIntroAnimation;                                        // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x00C1   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.StatusViewSource
/// Size: 0x002C (0x000000 - 0x00002C)
struct FStatusViewSource
{ 
	FName                                              _sourceID;                                                  // 0x0000   (0x000C)  
	bool                                               _isActive;                                                  // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	float                                              _remainingTime;                                             // 0x0010   (0x0004)  
	float                                              _percentageFill;                                            // 0x0014   (0x0004)  
	int32_t                                            _level;                                                     // 0x0018   (0x0004)  
	EInventoryItemType                                 _sourceType;                                                // 0x001C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x001D   (0x0003)  MISSED
	int32_t                                            _sourceIconIndex;                                           // 0x0020   (0x0004)  
	int32_t                                            _sourceLevel;                                               // 0x0024   (0x0004)  
	bool                                               _isVisuallyInfinite;                                        // 0x0028   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0029   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreFeaturedBannerData
/// Size: 0x0080 (0x000000 - 0x000080)
struct FStoreFeaturedBannerData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	SDK_UNDEFINED(24,3009) /* FText */                 __um(Title);                                                // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,3010) /* FText */                 __um(Subtitle);                                             // 0x0020   (0x0018)  
	SDK_UNDEFINED(16,3011) /* FString */               __um(ImagePath);                                            // 0x0038   (0x0010)  
	SDK_UNDEFINED(16,3012) /* FString */               __um(AssociatedDlcId);                                      // 0x0048   (0x0010)  
	SDK_UNDEFINED(16,3013) /* FString */               __um(AssociatedCombinedItemId);                             // 0x0058   (0x0010)  
	SDK_UNDEFINED(16,3014) /* FString */               __um(AssociatedCombinedOutfitId);                           // 0x0068   (0x0010)  
	ETextBannerPosition                                TextPosition;                                               // 0x0078   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0079   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreBannersData
/// Size: 0x0098 (0x000008 - 0x0000A0)
struct FStoreBannersData : FDBDTableRowBase
{ 
	FName                                              BannerId;                                                   // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FStoreFeaturedBannerData                           BannerData;                                                 // 0x0018   (0x0080)  
	bool                                               UseAsDefault;                                               // 0x0098   (0x0001)  
	EStoreBannerLocation                               DefaultLocation;                                            // 0x0099   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x009A   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreCollectionLimitedAvailabilityStart
/// Size: 0x0010 (0x000000 - 0x000010)
struct FStoreCollectionLimitedAvailabilityStart
{ 
	FDateTime                                          Date;                                                       // 0x0000   (0x0008)  
	bool                                               VisibleBeforeStartDate;                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreCollectionLimitedAvailabilityEnd
/// Size: 0x0010 (0x000000 - 0x000010)
struct FStoreCollectionLimitedAvailabilityEnd
{ 
	FDateTime                                          Date;                                                       // 0x0000   (0x0008)  
	bool                                               VisibleAfterEndDate;                                        // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreCollectionEditorData
/// Size: 0x0100 (0x000008 - 0x000108)
struct FStoreCollectionEditorData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,3015) /* FString */               __um(collectionId);                                         // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,3016) /* FString */               __um(InclusionVersion);                                     // 0x0018   (0x0010)  
	SDK_UNDEFINED(24,3017) /* FText */                 __um(CollectionTitle);                                      // 0x0028   (0x0018)  
	SDK_UNDEFINED(24,3018) /* FText */                 __um(CollectionSubtitle);                                   // 0x0040   (0x0018)  
	FDateTime                                          DateUpdated;                                                // 0x0058   (0x0008)  
	bool                                               IsEnabled;                                                  // 0x0060   (0x0001)  
	bool                                               HasLimitedAvailabilityStartDate;                            // 0x0061   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0062   (0x0006)  MISSED
	FStoreCollectionLimitedAvailabilityStart           LimitedAvailabilityStart;                                   // 0x0068   (0x0010)  
	bool                                               HasLimitedAvailabilityEndDate;                              // 0x0078   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0079   (0x0007)  MISSED
	FStoreCollectionLimitedAvailabilityEnd             LimitedAvailabilityEnd;                                     // 0x0080   (0x0010)  
	int32_t                                            SortOrder;                                                  // 0x0090   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0094   (0x0004)  MISSED
	FSoftObjectPath                                    HeroImage;                                                  // 0x0098   (0x0020)  
	FSoftObjectPath                                    HeroVideo;                                                  // 0x00B8   (0x0020)  
	TArray<FSoftObjectPath>                            AdditionalImages;                                           // 0x00D8   (0x0010)  
	SDK_UNDEFINED(16,3019) /* TArray<FString> */       __um(Items);                                                // 0x00E8   (0x0010)  
	unsigned char                                      UnknownData03_6[0x10];                                      // 0x00F8   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreCollectionMediaData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FStoreCollectionMediaData
{ 
	SDK_UNDEFINED(16,3020) /* FString */               __um(Path);                                                 // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.StoreCollectionRuntimeData
/// Size: 0x0128 (0x000000 - 0x000128)
struct FStoreCollectionRuntimeData
{ 
	SDK_UNDEFINED(16,3021) /* FString */               __um(collectionId);                                         // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,3022) /* FString */               __um(InclusionVersion);                                     // 0x0010   (0x0010)  
	FDateTime                                          UpdatedDate;                                                // 0x0020   (0x0008)  
	SDK_UNDEFINED(80,3023) /* TMap<FString, FString> */ __um(CollectionTitle);                                     // 0x0028   (0x0050)  
	SDK_UNDEFINED(80,3024) /* TMap<FString, FString> */ __um(CollectionSubtitle);                                  // 0x0078   (0x0050)  
	FDateTime                                          LimitedAvailabilityStartDate;                               // 0x00C8   (0x0008)  
	bool                                               LimitedAvailabilityStartDate_IsSet;                         // 0x00D0   (0x0001)  
	bool                                               VisibleBeforeStartDate;                                     // 0x00D1   (0x0001)  
	bool                                               VisibleBeforeStartDate_IsSet;                               // 0x00D2   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x00D3   (0x0005)  MISSED
	FDateTime                                          LimitedAvailabilityEndDate;                                 // 0x00D8   (0x0008)  
	bool                                               LimitedAvailabilityEndDate_IsSet;                           // 0x00E0   (0x0001)  
	bool                                               VisibleAfterEndDate;                                        // 0x00E1   (0x0001)  
	bool                                               VisibleAfterEndDate_IsSet;                                  // 0x00E2   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x00E3   (0x0001)  MISSED
	int32_t                                            SortOrder;                                                  // 0x00E4   (0x0004)  
	FStoreCollectionMediaData                          HeroImage;                                                  // 0x00E8   (0x0010)  
	FStoreCollectionMediaData                          HeroVideo;                                                  // 0x00F8   (0x0010)  
	TArray<FStoreCollectionMediaData>                  AdditionalImages;                                           // 0x0108   (0x0010)  
	SDK_UNDEFINED(16,3025) /* TArray<FString> */       __um(Items);                                                // 0x0118   (0x0010)  
};

/// Struct /Script/DeadByDaylight.StoredInteraction
/// Size: 0x0054 (0x000000 - 0x000054)
struct FStoredInteraction
{ 
	SDK_UNDEFINED(8,3026) /* TWeakObjectPtr<UInteractionDefinition*> */ __um(_interaction);                        // 0x0000   (0x0008)  
	EInputInteractionType                              _inputType;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	FInteractionPlayerProperties                       _playerProperties;                                          // 0x000C   (0x0044)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0050   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreFeaturedBannerUIData
/// Size: 0x00C0 (0x000000 - 0x0000C0)
struct FStoreFeaturedBannerUIData
{ 
	FName                                              BannerId;                                                   // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FStoreFeaturedBannerData                           BannerData;                                                 // 0x0010   (0x0080)  
	bool                                               IsNew;                                                      // 0x0090   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0091   (0x0007)  MISSED
	SDK_UNDEFINED(16,3027) /* FString */               __um(LimitedTimeBannerText);                                // 0x0098   (0x0010)  
	SDK_UNDEFINED(16,3028) /* FString */               __um(LimitedTimeDiscountText);                              // 0x00A8   (0x0010)  
	bool                                               IsOwned;                                                    // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x00B9   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreFeaturedChapterPackEditorData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FStoreFeaturedChapterPackEditorData
{ 
	SDK_UNDEFINED(16,3029) /* FString */               __um(AssociatedDlcId);                                      // 0x0000   (0x0010)  
	FSoftObjectPath                                    Image;                                                      // 0x0010   (0x0020)  
};

/// Struct /Script/DeadByDaylight.StoreFeaturedChapterPackRecommendationEditorData
/// Size: 0x0050 (0x000008 - 0x000058)
struct FStoreFeaturedChapterPackRecommendationEditorData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,3030) /* FString */               __um(ID);                                                   // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,3031) /* FString */               __um(InclusionVersion);                                     // 0x0018   (0x0010)  
	FDateTime                                          ActiveFrom;                                                 // 0x0028   (0x0008)  
	FDateTime                                          ActiveTo;                                                   // 0x0030   (0x0008)  
	TArray<FStoreFeaturedChapterPackEditorData>        ChapterPacks;                                               // 0x0038   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0048   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreFeaturedKillerEditorData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FStoreFeaturedKillerEditorData
{ 
	SDK_UNDEFINED(16,3032) /* FString */               __um(CharacterIndex);                                       // 0x0000   (0x0010)  
	FSoftObjectPath                                    Image;                                                      // 0x0010   (0x0020)  
};

/// Struct /Script/DeadByDaylight.StoreFeaturedSurvivorEditorData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FStoreFeaturedSurvivorEditorData
{ 
	SDK_UNDEFINED(16,3033) /* FString */               __um(CharacterIndex);                                       // 0x0000   (0x0010)  
	FSoftObjectPath                                    Image;                                                      // 0x0010   (0x0020)  
};

/// Struct /Script/DeadByDaylight.StoreFeaturedCharacterRecommendationEditorData
/// Size: 0x0070 (0x000008 - 0x000078)
struct FStoreFeaturedCharacterRecommendationEditorData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,3034) /* FString */               __um(ID);                                                   // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,3035) /* FString */               __um(InclusionVersion);                                     // 0x0018   (0x0010)  
	FDateTime                                          ActiveFrom;                                                 // 0x0028   (0x0008)  
	FDateTime                                          ActiveTo;                                                   // 0x0030   (0x0008)  
	TArray<EPlayerRole>                                Slots;                                                      // 0x0038   (0x0010)  
	TArray<FStoreFeaturedKillerEditorData>             Killers;                                                    // 0x0048   (0x0010)  
	TArray<FStoreFeaturedSurvivorEditorData>           Survivors;                                                  // 0x0058   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0068   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreFeaturedRecommendationImageData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FStoreFeaturedRecommendationImageData
{ 
	SDK_UNDEFINED(16,3036) /* FString */               __um(Path);                                                 // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.StoreFeaturedSingleChapterPackRecommendationData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FStoreFeaturedSingleChapterPackRecommendationData
{ 
	SDK_UNDEFINED(16,3037) /* FString */               __um(AssociatedDlcId);                                      // 0x0000   (0x0010)  
	FStoreFeaturedRecommendationImageData              Image;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.StoreFeaturedChapterPackRecommendationData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FStoreFeaturedChapterPackRecommendationData
{ 
	TArray<FStoreFeaturedSingleChapterPackRecommendationData> ChapterPacks;                                        // 0x0000   (0x0010)  
	FDateTime                                          ActiveFrom;                                                 // 0x0010   (0x0008)  
	FDateTime                                          ActiveTo;                                                   // 0x0018   (0x0008)  
};

/// Struct /Script/DeadByDaylight.StoreFeaturedCharacterSlotRecommendationData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FStoreFeaturedCharacterSlotRecommendationData
{ 
	SDK_UNDEFINED(16,3038) /* FString */               __um(Role);                                                 // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0010   (0x0008)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreFeaturedSingleCharacterRecommendationData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FStoreFeaturedSingleCharacterRecommendationData
{ 
	int32_t                                            CharacterIndex;                                             // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	FStoreFeaturedRecommendationImageData              Image;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/DeadByDaylight.StoreFeaturedCharacterRecommendationData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FStoreFeaturedCharacterRecommendationData
{ 
	TArray<FStoreFeaturedCharacterSlotRecommendationData> Slots;                                                   // 0x0000   (0x0010)  
	TArray<FStoreFeaturedSingleCharacterRecommendationData> killer;                                                // 0x0010   (0x0010)  
	TArray<FStoreFeaturedSingleCharacterRecommendationData> Survivor;                                              // 0x0020   (0x0010)  
	FDateTime                                          ActiveFrom;                                                 // 0x0030   (0x0008)  
	FDateTime                                          ActiveTo;                                                   // 0x0038   (0x0008)  
};

/// Struct /Script/DeadByDaylight.StorefrontCustomizationPayloadData
/// Size: 0x000B (0x000001 - 0x00000C)
struct FStorefrontCustomizationPayloadData : FPromoPackItemPayloadData
{ 
	unsigned char                                      UnknownData00_1[0xB];                                       // 0x0001   (0x000B)  MISSED
};

/// Struct /Script/DeadByDaylight.StorefrontStateData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FStorefrontStateData
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreSpecialsItemRecommendationsData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FStoreSpecialsItemRecommendationsData
{ 
	SDK_UNDEFINED(16,3039) /* FString */               __um(category);                                             // 0x0000   (0x0010)  
	TArray<FName>                                      IDs;                                                        // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.StoreSpecialsRecommendationData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FStoreSpecialsRecommendationData
{ 
	FDateTime                                          ActiveFrom;                                                 // 0x0000   (0x0008)  
	FDateTime                                          ActiveTo;                                                   // 0x0008   (0x0008)  
	SDK_UNDEFINED(16,3040) /* TArray<FString> */       __um(CategoryPriorities);                                   // 0x0010   (0x0010)  
	TArray<FStoreSpecialsItemRecommendationsData>      Recommendations;                                            // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.StoreRecommendationRuntimeData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FStoreRecommendationRuntimeData
{ 
	TArray<FStoreFeaturedCharacterRecommendationData>  FeaturedCharacterRecommendations;                           // 0x0000   (0x0010)  
	TArray<FStoreFeaturedChapterPackRecommendationData> FeaturedChapterPackRecommendations;                        // 0x0010   (0x0010)  
	TArray<FStoreSpecialsRecommendationData>           SpecialsRecommendations;                                    // 0x0020   (0x0010)  
};

/// Struct /Script/DeadByDaylight.StoreSpecialPackItem
/// Size: 0x0040 (0x000000 - 0x000040)
struct FStoreSpecialPackItem
{ 
	EStoreSpecialPackItemType                          Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,3041) /* FString */               __um(CustomizationId);                                      // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,3042) /* FString */               __um(characterId);                                          // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,3043) /* FString */               __um(tomeId);                                               // 0x0028   (0x0010)  
	int32_t                                            Amount;                                                     // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreSpecialPackActivation
/// Size: 0x0028 (0x000000 - 0x000028)
struct FStoreSpecialPackActivation
{ 
	EStoreSpecialPackActivationType                    Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,3044) /* FString */               __um(ID);                                                   // 0x0008   (0x0010)  
	FDateTime                                          StartDate;                                                  // 0x0018   (0x0008)  
	FDateTime                                          EndDate;                                                    // 0x0020   (0x0008)  
};

/// Struct /Script/DeadByDaylight.StoreSpecialPackEditorData
/// Size: 0x0110 (0x000008 - 0x000118)
struct FStoreSpecialPackEditorData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,3045) /* FString */               __um(ID);                                                   // 0x0008   (0x0010)  
	SDK_UNDEFINED(24,3046) /* FText */                 __um(Title);                                                // 0x0018   (0x0018)  
	FSoftObjectPath                                    Image;                                                      // 0x0030   (0x0020)  
	SDK_UNDEFINED(16,3047) /* FString */               __um(InclusionVersion);                                     // 0x0050   (0x0010)  
	bool                                               IsPurchasable;                                              // 0x0060   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0061   (0x0007)  MISSED
	SDK_UNDEFINED(80,3048) /* TSet<ECurrencyType> */   __um(AvailableCurrencies);                                  // 0x0068   (0x0050)  
	float                                              Discount;                                                   // 0x00B8   (0x0004)  
	int32_t                                            SortOrder;                                                  // 0x00BC   (0x0004)  
	SDK_UNDEFINED(16,3049) /* FString */               __um(DLCId);                                                // 0x00C0   (0x0010)  
	TArray<FStoreSpecialPackItem>                      Content;                                                    // 0x00D0   (0x0010)  
	FStoreSpecialPackActivation                        Activation;                                                 // 0x00E0   (0x0028)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0108   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreSpecialPackRuntimeItem
/// Size: 0x0070 (0x000000 - 0x000070)
struct FStoreSpecialPackRuntimeItem
{ 
	SDK_UNDEFINED(16,3050) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	EStoreSpecialPackItemType                          Type;                                                       // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	int32_t                                            Amount;                                                     // 0x0014   (0x0004)  
	SDK_UNDEFINED(80,3051) /* TMap<ECurrencyType, uint32_t> */ __um(OriginalCost);                                 // 0x0018   (0x0050)  
	bool                                               IsOwned;                                                    // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0069   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreSpecialPackRuntimeData
/// Size: 0x0140 (0x000000 - 0x000140)
struct FStoreSpecialPackRuntimeData
{ 
	SDK_UNDEFINED(16,3052) /* FString */               __um(ID);                                                   // 0x0000   (0x0010)  
	SDK_UNDEFINED(80,3053) /* TMap<FString, FString> */ __um(TitleByCulture);                                      // 0x0010   (0x0050)  
	TArray<FStoreSpecialPackRuntimeItem>               Content;                                                    // 0x0060   (0x0010)  
	SDK_UNDEFINED(80,3054) /* TMap<ECurrencyType, uint32_t> */ __um(OriginalCost);                                 // 0x0070   (0x0050)  
	SDK_UNDEFINED(80,3055) /* TMap<ECurrencyType, uint32_t> */ __um(DiscountedCost);                               // 0x00C0   (0x0050)  
	float                                              Discount;                                                   // 0x0110   (0x0004)  
	bool                                               IsOwned;                                                    // 0x0114   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0115   (0x0003)  MISSED
	SDK_UNDEFINED(16,3056) /* FString */               __um(Image);                                                // 0x0118   (0x0010)  
	SDK_UNDEFINED(16,3057) /* FString */               __um(DLCId);                                                // 0x0128   (0x0010)  
	int32_t                                            SortOrder;                                                  // 0x0138   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x013C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreSpecialPackCatalogPrice
/// Size: 0x0018 (0x000000 - 0x000018)
struct FStoreSpecialPackCatalogPrice
{ 
	SDK_UNDEFINED(16,3058) /* FString */               __um(currencyId);                                           // 0x0000   (0x0010)  
	uint32_t                                           Price;                                                      // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreSpecialPackCatalogActivationData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FStoreSpecialPackCatalogActivationData
{ 
	SDK_UNDEFINED(16,3059) /* FString */               __um(Type);                                                 // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.StoreSpecialPackCatalogItemMetaData
/// Size: 0x0090 (0x000000 - 0x000090)
struct FStoreSpecialPackCatalogItemMetaData
{ 
	TArray<FStoreSpecialPackCatalogPrice>              FullPrice;                                                  // 0x0000   (0x0010)  
	uint32_t                                           SortOrder;                                                  // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FStoreSpecialPackCatalogActivationData             Activation;                                                 // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,3060) /* FString */               __um(ImagePath);                                            // 0x0028   (0x0010)  
	SDK_UNDEFINED(80,3061) /* TMap<FString, FString> */ __um(SpecialPackTitle);                                    // 0x0038   (0x0050)  
	float                                              Discount;                                                   // 0x0088   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x008C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.StoreSpecialsRecommendationEditorData
/// Size: 0x0050 (0x000008 - 0x000058)
struct FStoreSpecialsRecommendationEditorData : FDBDTableRowBase
{ 
	FDateTime                                          ActiveFrom;                                                 // 0x0008   (0x0008)  
	FDateTime                                          ActiveTo;                                                   // 0x0010   (0x0008)  
	SDK_UNDEFINED(16,3062) /* FString */               __um(AuricCellOffer);                                       // 0x0018   (0x0010)  
	SDK_UNDEFINED(16,3063) /* TArray<FString> */       __um(Outfits);                                              // 0x0028   (0x0010)  
	SDK_UNDEFINED(16,3064) /* TArray<FString> */       __um(Items);                                                // 0x0038   (0x0010)  
	SDK_UNDEFINED(16,3065) /* TArray<FString> */       __um(RecommendedCategoriesPriority);                        // 0x0048   (0x0010)  
};

/// Struct /Script/DeadByDaylight.StreamVideoUIData
/// Size: 0x00E0 (0x000000 - 0x0000E0)
struct FStreamVideoUIData
{ 
	SDK_UNDEFINED(16,3066) /* FString */               __um(VideoURL);                                             // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,3067) /* FString */               __um(Language);                                             // 0x0010   (0x0010)  
	bool                                               HasAudio;                                                   // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0xB];                                       // 0x0021   (0x000B)  MISSED
	int32_t                                            ZOrderWidget;                                               // 0x002C   (0x0004)  
	SDK_UNDEFINED(48,3068) /* TWeakObjectPtr<UClass*> */ __um(StreamVideoWidgetAsset);                             // 0x0030   (0x0030)  
	SDK_UNDEFINED(48,3069) /* TWeakObjectPtr<UMediaPlayer*> */ __um(MediaPlayerAsset);                             // 0x0060   (0x0030)  
	unsigned char                                      UnknownData01_6[0x50];                                      // 0x0090   (0x0050)  MISSED
};

/// Struct /Script/DeadByDaylight.SubscriptionUIData
/// Size: 0x00E0 (0x000008 - 0x0000E8)
struct FSubscriptionUIData : FDBDTableRowBase
{ 
	SDK_UNDEFINED(24,3070) /* FText */                 __um(DisplayName);                                          // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,3071) /* FText */                 __um(Description);                                          // 0x0020   (0x0018)  
	SDK_UNDEFINED(80,3072) /* TMap<FName, FText> */    __um(PlatformDetails);                                      // 0x0038   (0x0050)  
	SDK_UNDEFINED(48,3073) /* TWeakObjectPtr<UTexture2D*> */ __um(TitleTexture);                                   // 0x0088   (0x0030)  
	SDK_UNDEFINED(48,3074) /* TWeakObjectPtr<UTexture2D*> */ __um(PortraitBorderTexture);                          // 0x00B8   (0x0030)  
};

/// Struct /Script/DeadByDaylight.SubscriptionRewardTypeData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FSubscriptionRewardTypeData
{ 
	SDK_UNDEFINED(48,3075) /* TWeakObjectPtr<UClass*> */ __um(RewardItemWidget);                                   // 0x0000   (0x0030)  
};

/// Struct /Script/DeadByDaylight.SubtitlesDescription
/// Size: 0x0058 (0x000008 - 0x000060)
struct FSubtitlesDescription : FDBDTableRowBase
{ 
	SDK_UNDEFINED(24,3076) /* FText */                 __um(subtitlesText);                                        // 0x0008   (0x0018)  
	SDK_UNDEFINED(48,3077) /* TWeakObjectPtr<UAkAudioEvent*> */ __um(AudioEvent);                                  // 0x0020   (0x0030)  
	TArray<float>                                      durationOverride;                                           // 0x0050   (0x0010)  
};

/// Struct /Script/DeadByDaylight.SurvivorActivityUIRowData
/// Size: 0x0040 (0x000008 - 0x000048)
struct FSurvivorActivityUIRowData : FDBDTunableRowBase
{ 
	FGameplayTag                                       ActivityType;                                               // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(48,3078) /* TWeakObjectPtr<UTexture2D*> */ __um(IconAsset);                                      // 0x0018   (0x0030)  
};

/// Struct /Script/DeadByDaylight.PlayerHitCosmeticParams
/// Size: 0x0014 (0x000000 - 0x000014)
struct FPlayerHitCosmeticParams
{ 
	SDK_UNDEFINED(8,3079) /* TWeakObjectPtr<APawn*> */ __um(Attacker);                                             // 0x0000   (0x0008)  
	SDK_UNDEFINED(8,3080) /* TWeakObjectPtr<ACamperPlayer*> */ __um(Target);                                       // 0x0008   (0x0008)  
	EAttackType                                        attackType;                                                 // 0x0010   (0x0001)  
	bool                                               CausedKO;                                                   // 0x0011   (0x0001)  
	bool                                               IsWeaponHit;                                                // 0x0012   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x0013   (0x0001)  MISSED
};

/// Struct /Script/DeadByDaylight.SurvivorHookTimer
/// Size: 0x0038 (0x000000 - 0x000038)
struct FSurvivorHookTimer
{ 
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Struct /Script/DeadByDaylight.TallyItemChangedData
/// Size: 0x0380 (0x000000 - 0x000380)
struct FTallyItemChangedData
{ 
	FInventorySlotData                                 Item;                                                       // 0x0000   (0x0128)  
	FInventorySlotData                                 addon1;                                                     // 0x0128   (0x0128)  
	FInventorySlotData                                 addon2;                                                     // 0x0250   (0x0128)  
	bool                                               isSet;                                                      // 0x0378   (0x0001)  
	EEnergyTypeEnum                                    EnergyType;                                                 // 0x0379   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x037A   (0x0002)  MISSED
	float                                              EnergyLevel;                                                // 0x037C   (0x0004)  
};

/// Struct /Script/DeadByDaylight.TeachableTooltipData
/// Size: 0x0040 (0x000098 - 0x0000D8)
struct FTeachableTooltipData : FBaseTooltipData
{ 
	EItemRarity                                        ItemRarity;                                                 // 0x0098   (0x0001)  
	EInventoryItemType                                 ItemType;                                                   // 0x0099   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x009A   (0x0006)  MISSED
	SDK_UNDEFINED(16,3081) /* FString */               __um(characterName);                                        // 0x00A0   (0x0010)  
	SDK_UNDEFINED(16,3082) /* FString */               __um(AvailabilityMessage);                                  // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,3083) /* FString */               __um(EffectMessage);                                        // 0x00C0   (0x0010)  
	bool                                               UseInCharacterSelectionScreen;                              // 0x00D0   (0x0001)  
	ETeachableStatus                                   TeachableStatus;                                            // 0x00D1   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x00D2   (0x0006)  MISSED
};

/// Struct /Script/DeadByDaylight.TransactionEventData
/// Size: 0x0088 (0x000000 - 0x000088)
struct FTransactionEventData
{ 
	SDK_UNDEFINED(16,3084) /* FString */               __um(TransactionType);                                      // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,3085) /* FString */               __um(TransactionSource);                                    // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,3086) /* FString */               __um(SourceID);                                             // 0x0020   (0x0010)  
	int32_t                                            SourceTier;                                                 // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	SDK_UNDEFINED(16,3087) /* FString */               __um(CurrencyType);                                         // 0x0038   (0x0010)  
	int32_t                                            CurrencyAmount;                                             // 0x0048   (0x0004)  
	int32_t                                            CurrencyBalance;                                            // 0x004C   (0x0004)  
	int32_t                                            LevelAchieved;                                              // 0x0050   (0x0004)  
	int32_t                                            Prestige;                                                   // 0x0054   (0x0004)  
	SDK_UNDEFINED(16,3088) /* FString */               __um(ItemIDAcquired);                                       // 0x0058   (0x0010)  
	int32_t                                            Rank;                                                       // 0x0068   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x006C   (0x0004)  MISSED
	SDK_UNDEFINED(16,3089) /* FString */               __um(SelectedCharacter);                                    // 0x0070   (0x0010)  
	bool                                               TransactionTriggeredLevelUp;                                // 0x0080   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0081   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.PerPlatformTunable
/// Size: 0x0018 (0x000008 - 0x000020)
struct FPerPlatformTunable : FDBDTableRowBase
{ 
	FPerPlatformFloat                                  value;                                                      // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(16,3090) /* FString */               __um(Description);                                          // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.TunableValue
/// Size: 0x0018 (0x000008 - 0x000020)
struct FTunableValue : FDBDTunableRowBase
{ 
	float                                              value;                                                      // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(16,3091) /* FString */               __um(Description);                                          // 0x0010   (0x0010)  
};

/// Struct /Script/DeadByDaylight.TutorialObjective
/// Size: 0x0020 (0x000008 - 0x000028)
struct FTutorialObjective : FDBDTableRowBase
{ 
	SDK_UNDEFINED(24,3092) /* FText */                 __um(Description);                                          // 0x0008   (0x0018)  
	bool                                               IsCompletionAnalyticEnabled;                                // 0x0020   (0x0001)  
	EInteractionPromptType                             InteractionPromptType;                                      // 0x0021   (0x0001)  
	ETutorialObjectivePlayerActionMapping              PlayerAction;                                               // 0x0022   (0x0001)  
	EInteractionPromptType                             SecondaryInteractionPromptType;                             // 0x0023   (0x0001)  
	ETutorialObjectivePlayerActionMapping              SecondaryPlayerAction;                                      // 0x0024   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0025   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.FriendWidgetList
/// Size: 0x0010 (0x000000 - 0x000010)
struct FFriendWidgetList
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/DeadByDaylight.WidgetFriendData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FWidgetFriendData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	class UUMGBaseFriendListElement*                   CorrespondingWidget;                                        // 0x0008   (0x0008)  
};

/// Struct /Script/DeadByDaylight.AtlantaSettingMenuData
/// Size: 0x0028 (0x000008 - 0x000030)
struct FAtlantaSettingMenuData : FDBDTableRowBase
{ 
	EOverlayTabs                                       OverlayTab;                                                 // 0x0008   (0x0001)  
	EOverlayMode                                       OverlayMode;                                                // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x000A   (0x0006)  MISSED
	SDK_UNDEFINED(24,3093) /* FText */                 __um(DisplayName);                                          // 0x0010   (0x0018)  
	EAtlantaSettingMenuType                            MenuType;                                                   // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/DeadByDaylight.HtmlTagConvertRow
/// Size: 0x0020 (0x000008 - 0x000028)
struct FHtmlTagConvertRow : FTableRowBase
{ 
	SDK_UNDEFINED(16,3094) /* FString */               __um(HtmlTag);                                              // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,3095) /* FString */               __um(RichTextTag);                                          // 0x0018   (0x0010)  
};

/// Struct /Script/DeadByDaylight.InteractButtonInfo
/// Size: 0x02F8 (0x000008 - 0x000300)
struct FInteractButtonInfo : FTableRowBase
{ 
	FName                                              InteractButtonID;                                           // 0x0008   (0x000C)  
	FName                                              InteractionID;                                              // 0x0014   (0x000C)  
	EPlayerRole                                        PlayerRole;                                                 // 0x0020   (0x0001)  
	EInputInteractionType                              interactionInputType;                                       // 0x0021   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0022   (0x0006)  MISSED
	FSlateBrush                                        Icon;                                                       // 0x0028   (0x0090)  
	EButtonType                                        CancelButtonType;                                           // 0x00B8   (0x0001)  
	EButtonType                                        SecondaryActionButtonType;                                  // 0x00B9   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x00BA   (0x0006)  MISSED
	FSlateBrush                                        AttackIcon;                                                 // 0x00C0   (0x0090)  
	FSlateBrush                                        AbilityIcon;                                                // 0x0150   (0x0090)  
	FSlateBrush                                        ThumbJoystickUnpressedIcon;                                 // 0x01E0   (0x0090)  
	FSlateBrush                                        ThumbJoystickPressedIcon;                                   // 0x0270   (0x0090)  
};

/// Struct /Script/DeadByDaylight.InboxMessageElapsedTime
/// Size: 0x0008 (0x000000 - 0x000008)
struct FInboxMessageElapsedTime
{ 
	int32_t                                            ElapsedTime;                                                // 0x0000   (0x0004)  
	EInboxMessageTimeUnit                              TimeUnit;                                                   // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0005   (0x0003)  MISSED
};

/// Struct /Script/DeadByDaylight.CustomizedHudPlayerWrapperIdMapContainer
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCustomizedHudPlayerWrapperIdMapContainer
{ 
	TArray<FGameplayTag>                               IDs;                                                        // 0x0000   (0x0010)  
};

/// Struct /Script/DeadByDaylight.RichTextRewardRow
/// Size: 0x0448 (0x000008 - 0x000450)
struct FRichTextRewardRow : FTableRowBase
{ 
	FTextBlockStyle                                    TextStyle;                                                  // 0x0008   (0x0288)  
	FMargin                                            TextMargin;                                                 // 0x0290   (0x0010)  
	FSlateBrush                                        Brush;                                                      // 0x02A0   (0x0090)  
	FSlateBrush                                        TintsBrush;                                                 // 0x0330   (0x0090)  
	FSlateBrush                                        BackgroundBrush;                                            // 0x03C0   (0x0090)  
};

/// Struct /Script/DeadByDaylight.PlayerInfoData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FPlayerInfoData
{ 
	SDK_UNDEFINED(16,3096) /* FString */               __um(characterName);                                        // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,3097) /* FString */               __um(CharacterIconPath);                                    // 0x0010   (0x0010)  
	int32_t                                            CharacterLevel;                                             // 0x0020   (0x0004)  
	int32_t                                            PrestigeLevel;                                              // 0x0024   (0x0004)  
	bool                                               CanPrestige;                                                // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	SDK_UNDEFINED(16,3098) /* FString */               __um(playerName);                                           // 0x0030   (0x0010)  
	int32_t                                            PlayerLevel;                                                // 0x0040   (0x0004)  
	int32_t                                            DevotionLevel;                                              // 0x0044   (0x0004)  
	int32_t                                            PlayerRank;                                                 // 0x0048   (0x0004)  
	int32_t                                            ActivePips;                                                 // 0x004C   (0x0004)  
	int32_t                                            NumPipsToNextRank;                                          // 0x0050   (0x0004)  
	bool                                               Ready;                                                      // 0x0054   (0x0001)  
	bool                                               IsSlasher;                                                  // 0x0055   (0x0001)  
	bool                                               ShowPortraitBorder;                                         // 0x0056   (0x0001)  
	bool                                               HasActiveSubscription;                                      // 0x0057   (0x0001)  
};

/// Struct /Script/DeadByDaylight.ScoreCategoryUIExtraData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FScoreCategoryUIExtraData
{ 
	SDK_UNDEFINED(24,3099) /* FText */                 __um(ScoreCategoryName);                                    // 0x0000   (0x0018)  
	class UTexture2D*                                  ScoreCategoryAsset;                                         // 0x0018   (0x0008)  
	int32_t                                            ScoreValue;                                                 // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.EmblemQualityImages
/// Size: 0x0120 (0x000000 - 0x000120)
struct FEmblemQualityImages
{ 
	FSlateBrush                                        HighlightImage;                                             // 0x0000   (0x0090)  
	FSlateBrush                                        DarkImage;                                                  // 0x0090   (0x0090)  
};

/// Struct /Script/DeadByDaylight.VariationData
/// Size: 0x0028 (0x000008 - 0x000030)
struct FVariationData : FDBDTableRowBase
{ 
	FGameplayTag                                       Tag;                                                        // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(24,3100) /* FText */                 __um(Name);                                                 // 0x0018   (0x0018)  
};

/// Struct /Script/DeadByDaylight.ArchivesVignetteEntry
/// Size: 0x0070 (0x000008 - 0x000078)
struct FArchivesVignetteEntry : FDBDTableRowBase
{ 
	SDK_UNDEFINED(24,3101) /* FText */                 __um(Title);                                                // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,3102) /* FText */                 __um(Text);                                                 // 0x0020   (0x0018)  
	bool                                               HasAudio;                                                   // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	SDK_UNDEFINED(48,3103) /* TWeakObjectPtr<UTexture2D*> */ __um(RewardImage);                                    // 0x0040   (0x0030)  
	float                                              PreviewTextureOffset;                                       // 0x0070   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0074   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.ArchivesVignettes
/// Size: 0x0060 (0x000008 - 0x000068)
struct FArchivesVignettes : FDBDTableRowBase
{ 
	SDK_UNDEFINED(16,3104) /* FString */               __um(VignetteId);                                           // 0x0008   (0x0010)  
	SDK_UNDEFINED(24,3105) /* FText */                 __um(Title);                                                // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,3106) /* FText */                 __um(Subtitle);                                             // 0x0030   (0x0018)  
	TArray<FArchivesVignetteEntry>                     Entries;                                                    // 0x0048   (0x0010)  
	SDK_UNDEFINED(16,3107) /* TArray<TWeakObjectPtr<UMediaSource*>> */ __um(CinematicPaths);                       // 0x0058   (0x0010)  
};

/// Struct /Script/DeadByDaylight.ArchivesJournal
/// Size: 0x0028 (0x000018 - 0x000040)
struct FArchivesJournal : FDBDTableRowBaseWithId
{ 
	SDK_UNDEFINED(24,3108) /* FText */                 __um(Title);                                                // 0x0018   (0x0018)  
	TArray<FArchivesVignettes>                         Vignettes;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/DeadByDaylight.WalesCypherEventData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FWalesCypherEventData
{ 
	SDK_UNDEFINED(16,3109) /* FString */               __um(EnteredSequence);                                      // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,3110) /* FString */               __um(ExpectedSequence);                                     // 0x0010   (0x0010)  
	int32_t                                            TimeoutThreshold;                                           // 0x0020   (0x0004)  
	bool                                               success;                                                    // 0x0024   (0x0001)  
	bool                                               TIMEOUT;                                                    // 0x0025   (0x0001)  
	bool                                               CharmGranted;                                               // 0x0026   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0027   (0x0001)  MISSED
	int32_t                                            ValidCharacterSelcted;                                      // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/DeadByDaylight.WalletUpdateTracker
/// Size: 0x0050 (0x000000 - 0x000050)
struct FWalletUpdateTracker
{ 
	SDK_UNDEFINED(80,3111) /* TMap<FString, int32_t> */ __um(_walletChangeMap);                                    // 0x0000   (0x0050)  
};

/// Struct /Script/DeadByDaylight.VaultData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FVaultData
{ 
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Struct /Script/DeadByDaylight.XpBonusData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FXpBonusData
{ 
	SDK_UNDEFINED(16,3112) /* FString */               __um(Name);                                                 // 0x0000   (0x0010)  
	int32_t                                            XpValue;                                                    // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

